Implementation smell,Namespace,Class,File,Method,Description
Long Method,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The method has 151 lines of code.
Long Method,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The method has 463 lines of code.
Long Method,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The method has 130 lines of code.
Complex Method,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,Cyclomatic complexity of the method is 21
Complex Method,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,Cyclomatic complexity of the method is 14
Complex Method,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,Cyclomatic complexity of the method is 9
Complex Method,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,Cyclomatic complexity of the method is 9
Complex Method,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,Cyclomatic complexity of the method is 9
Complex Method,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,Cyclomatic complexity of the method is 15
Long Parameter List,SparkleShare,SparkleMacWatcher,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Watcher.cs,DoCallback,The method has 6 parameters.
Long Parameter List,SparkleShare,SparkleMacWatcher,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Watcher.cs,FSEventStreamCreate,The method has 7 parameters.
Long Parameter List,SparkleShare,SparkleWebPolicyDelegate,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,DecidePolicyForNavigation,The method has 5 parameters.
Long Identifier,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,SparkleDataSource,The length of the parameter selected_description_dictionary is 31.
Long Identifier,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,SparkleDataSource,The length of the parameter selected_description_attributes is 31.
Long Statement,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The length of the statement  "	this.credits_text_field = new SparkleLabel (@"Copyright © 2010–" + DateTime.Now.Year + " Hylke Bons and others" + "\n\n" + "SparkleShare is Open Source. You are free to use' modify' and redistribute it " + "under the GNU GPLv3"' NSTextAlignment.Left) { " is 252.
Long Statement,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The length of the statement  "	this.credits_link.Frame = new RectangleF (new PointF (this.website_link.Frame.X + this.website_link.Frame.Width + 10' 25)' this.credits_link.Frame.Size); " is 153.
Long Statement,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The length of the statement  "	this.report_problem_link.Frame = new RectangleF (new PointF (this.credits_link.Frame.X + this.credits_link.Frame.Width + 10' 25)' this.report_problem_link.Frame.Size); " is 167.
Long Statement,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The length of the statement  "	this.debug_log_link.Frame = new RectangleF (new PointF (this.report_problem_link.Frame.X + this.report_problem_link.Frame.Width + 10' 25)' this.debug_log_link.Frame.Size); " is 171.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.web_view.Frame = new RectangleF (this.web_view.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 39)); " is 149.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.cover.Frame = new RectangleF (this.cover.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 39)); " is 143.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.background.Frame = new RectangleF (this.background.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 37)); " is 153.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.size_label.Frame = new RectangleF (new PointF (this.size_label.Frame.X' new_window_size.Height - TitlebarHeight - 30)' this.size_label.Frame.Size); " is 152.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.size_label_value.Frame = new RectangleF (new PointF (this.size_label_value.Frame.X' new_window_size.Height - TitlebarHeight - 27)' this.size_label_value.Frame.Size); " is 170.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.history_label.Frame = new RectangleF (new PointF (this.history_label.Frame.X' new_window_size.Height - TitlebarHeight - 30)' this.history_label.Frame.Size); " is 161.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.history_label_value.Frame = new RectangleF (new PointF (this.history_label_value.Frame.X' new_window_size.Height - TitlebarHeight - 27)' this.history_label_value.Frame.Size); " is 179.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.progress_indicator.Frame = new RectangleF (new PointF (new_window_size.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' this.progress_indicator.Frame.Size); " is 166.
Long Statement,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The length of the statement  "	this.popup_button.Frame = new RectangleF (new PointF (new_window_size.Width - this.popup_button.Frame.Width - 12' new_window_size.Height - TitlebarHeight - 33)' this.popup_button.Frame.Size); " is 191.
Long Statement,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The length of the statement  "			DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11); " is 140.
Long Statement,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The length of the statement  "		string html = "<style>" + "* {" + "  font-family: '" + UserInterface.FontName + "';" + "  font-size: 12px; cursor: default;" + "}" + "body {" + "  -webkit-user-select: none;" + "  margin: 0;" + "  padding: 3px;" + "}" + "li {" + "  margin-bottom: 16px;" + "  margin-left: 0;" + "  padding-left: 0;" + "  line-height: 20px;" + "  word-wrap: break-word;" + "}" + "ul {" + "  padding-left: 24px;" + "}" + "</style>" + "<ul>" + "  <li><b>" + Controller.PreviousUrl + "</b> is the address we’ve compiled. Does this look alright?</li>" + "  <li>Is this computer’s Client ID known by the host?</li>" + "</ul>"; " is 603.
Long Statement,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The length of the statement  "		Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1); " is 181.
Long Statement,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The length of the statement  "		WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) { " is 154.
Long Statement,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,objectValueForTableColumn,The length of the statement  "		if (table_view.SelectedRow == row_index && SparkleShare.UI.Setup.IsKeyWindow && SparkleShare.UI.Setup.FirstResponder == table_view) { " is 133.
Long Statement,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,objectValueForTableColumn,The length of the statement  "		string hi_path = String.Format ("{0}@{1}x{2}"' Path.Combine (Path.GetDirectoryName (image_path)' Path.GetFileNameWithoutExtension (image_path))' backing_scale_factor' Path.GetExtension (image_path)); " is 199.
Long Statement,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The length of the statement  "				button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32); " is 126.
Long Statement,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The length of the statement  "		if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Jpeg' StringComparison.InvariantCultureIgnoreCase)) { " is 126.
Long Statement,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The length of the statement  "		} else if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Gif' StringComparison.InvariantCultureIgnoreCase)) { " is 132.
Long Statement,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The length of the statement  "		if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Jpeg' StringComparison.InvariantCultureIgnoreCase)) { " is 126.
Long Statement,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The length of the statement  "		} else if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Gif' StringComparison.InvariantCultureIgnoreCase)) { " is 132.
Long Statement,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,SetFolderIcon,The length of the statement  "		NSWorkspace.SharedWorkspace.SetIconforFile (NSImage.ImageNamed ("sparkleshare-folder-yosemite.icns")' SparkleShare.Controller.FoldersPath' 0); " is 142.
Long Statement,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,SetFolderIcon,The length of the statement  "		NSWorkspace.SharedWorkspace.SetIconforFile (NSImage.ImageNamed ("sparkleshare-folder.icns")' SparkleShare.Controller.FoldersPath' 0); " is 133.
Long Statement,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,CreateStartupItem,The length of the statement  "	string args = "-e 'tell application \"System Events\" to " + "make login item at end with properties " + "{path:\"" + NSBundle.MainBundle.BundlePath + "\"' hidden:false}'"; " is 172.
Long Statement,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,OnFilesChanged,The length of the statement  "			FileActivityTask task = MacFileActivityTask (repo' new FileSystemEventArgs (WatcherChangeTypes.Changed' file_path' "Unknown")); " is 127.
Long Statement,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,UIHasLoaded,The length of the statement  "		SparkleShare.UI.Bubbles.Controller.ShowBubble ("Where's your SparkleShare folder?"' "Did you put it on a detached drive?"' null); " is 129.
Long Statement,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,AddRepository,The length of the statement  "		repo = (BaseRepository)Activator.CreateInstance (Type.GetType ("Sparkles." + backend + "." + backend + "Repository' Sparkles." + backend)' new object[] { " is 153.
Long Statement,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,StartFetcher,The length of the statement  "		this.fetcher = (BaseFetcher)Activator.CreateInstance (Type.GetType ("Sparkles." + backend + "." + backend + "Fetcher' Sparkles." + backend)' new object[] { " is 155.
Long Statement,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,FinishFetcher,The length of the statement  "		Config.SetFolderOptionalAttribute (target_folder_name' "storage_type"' this.fetcher.FetchedRepoStorageType.ToString ()); " is 120.
Long Statement,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,FinishFetcher,The length of the statement  "		Config.SetFolderOptionalAttribute (target_folder_name' "announcements_url"' this.fetcher.OriginalFetcherInfo.AnnouncementsUrl); " is 127.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The length of the statement  "			string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath); " is 193.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The length of the statement  "			string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath)); " is 147.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHistoryHTMLLog,The length of the statement  "		html += "<tr>" + "<td class='avatar'><img src='" + GetAvatarFilePath (change_set.User) + "'></td>" + "<td class='name'>" + change_set.User.Name + "</td>" + "<td class='date'>" + change_set.Timestamp.ToString ("d MMM yyyy"' CultureInfo.InvariantCulture) + "</td>" + "<td class='time'>" + change_set.Timestamp.ToString ("HH:mm") + "</td>" + "<td class='restore'>" + "<a href='restore://" + change_set.Folder.Name + "/" + change_set.Revision + "/" + change_set.User.Name + "/" + change_set.Timestamp.ToString ("MMM d H\\hmm"' CultureInfo.InvariantCulture) + "/" + file_path + "'>Restore&hellip;</a>" + "</td>" + "</tr>"; " is 617.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "		return SparkleShare.Controller.EventLogHTML.Replace ("<!-- $event-log-content -->"' "<div class='day-entry'><div class='day-entry-header'>This project does not keep a history.</div></div>"); " is 190.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "			if (stored_activity_day.Date.Year == change_set.Timestamp.Year && stored_activity_day.Date.Month == change_set.Timestamp.Month && stored_activity_day.Date.Day == change_set.Timestamp.Day) { " is 189.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "						event_entry += "<small><a href=\"history://" + change_set.Folder.Name + "/" + change.Path + "\" title=\"View revisions\">" + change.Timestamp.ToString ("HH:mm") + " &#x25BE;</a></small> &nbsp;"; " is 194.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "			if (!change_set.FirstTimestamp.Equals (new DateTime ()) && !change_set.Timestamp.ToString ("H:mm").Equals (change_set.FirstTimestamp.ToString ("H:mm"))) { " is 154.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "			event_entries += event_entry_html.Replace ("<!-- $event-entry-content -->"' event_entry).Replace ("<!-- $event-user-name -->"' change_set.User.Name).Replace ("<!-- $event-user-email -->"' change_set.User.Email).Replace ("<!-- $event-avatar-url -->"' GetAvatarFilePath (change_set.User)).Replace ("<!-- $event-url -->"' change_set.RemoteUrl.ToString ()).Replace ("<!-- $event-revision -->"' change_set.Revision); " is 411.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "		if (today.Day == activity_day.Date.Day && today.Month == activity_day.Date.Month && today.Year == activity_day.Date.Year) { " is 123.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "			day_entry = day_entry_html.Replace ("<!-- $day-entry-header -->"' "<span id='today' name='" + activity_day.Date.ToString ("dddd' MMMM d"' CultureInfo.InvariantCulture) + "'>" + "Today" + "</span>"); " is 198.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "		} else if (yesterday.Day == activity_day.Date.Day && yesterday.Month == activity_day.Date.Month && yesterday.Year == activity_day.Date.Year) { " is 142.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "			day_entry = day_entry_html.Replace ("<!-- $day-entry-header -->"' "<span id='yesterday' name='" + activity_day.Date.ToString ("dddd' MMMM d"' CultureInfo.InvariantCulture) + "'>" + "Yesterday" + "</span>"); " is 206.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "				day_entry = day_entry_html.Replace ("<!-- $day-entry-header -->"' activity_day.Date.ToString ("dddd' MMMM d' yyyy"' CultureInfo.InvariantCulture)); " is 147.
Long Statement,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetHTMLLog,The length of the statement  "				day_entry = day_entry_html.Replace ("<!-- $day-entry-header -->"' activity_day.Date.ToString ("dddd' MMMM d"' CultureInfo.InvariantCulture)); " is 141.
Long Statement,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,CheckAddPage,The length of the statement  "	bool fields_valid = (!string.IsNullOrEmpty (address) && !string.IsNullOrEmpty (remote_path) && !remote_path.Contains ("\"")); " is 125.
Long Statement,SparkleShare,SparkleShare,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SparkleShare.cs,Main,The length of the statement  "	if (args.Length != 0 && (args [0].Equals ("help") || args [0].Equals ("version")) && InstallationInfo.OperatingSystem != OS.Mac && InstallationInfo.OperatingSystem != OS.Windows) { " is 180.
Long Statement,SparkleShare,SparkleShare,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SparkleShare.cs,Main,The length of the statement  "		Console.WriteLine (n + "Share and collaborate by syncing with any Git repository instantly." + n + n + "Version: " + InstallationInfo.Version + n + "Copyright (C) 2010 Hylke Bons and others" + n + "This program comes with ABSOLUTELY NO WARRANTY." + n + n + "This is free software' and you are welcome to redistribute it" + n + "under certain conditions. Please read the GNU GPLv3 for details." + n); " is 399.
Complex Conditional,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,SetupController,The conditional expression  "this.current_page == PageType.Syncing || this.current_page == PageType.Finished || this.current_page == PageType.CryptoSetup || this.current_page == PageType.CryptoPassword"  is complex.
Complex Conditional,SparkleShare,SparkleShare,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SparkleShare.cs,Main,The conditional expression  "args.Length != 0 && (args [0].Equals ("help") || args [0].Equals ("version")) && InstallationInfo.OperatingSystem != OS.Mac && InstallationInfo.OperatingSystem != OS.Windows"  is complex.
Magic Number,SparkleShare,SparkleMacWatcher,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Watcher.cs,SparkleMacWatcher,The following statement contains a magic number: m_stream = FSEventStreamCreate (// note that the stream will always be valid  IntPtr.Zero' // allocator  m_callback' // callback  IntPtr.Zero' // context  path_p.Handle' // pathsToWatch  kFSEventStreamEventIdSinceNow' // sinceWhen  2' // latency (in seconds)  FSEventStreamCreateFlags.kFSEventStreamCreateFlagNone);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 640' 281)' true);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 640' 281)' true);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: MaxSize = new SizeF (640' 281);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: MaxSize = new SizeF (640' 281);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: MinSize = new SizeF (640' 281);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,About,The following statement contains a magic number: MinSize = new SizeF (640' 281);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.about_image.Size = new SizeF (720' 260);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.about_image.Size = new SizeF (720' 260);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.about_image_view = new NSImageView () {  	Image = this.about_image'  	Frame = new RectangleF (0' 0' 720' 260)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.about_image_view = new NSImageView () {  	Image = this.about_image'  	Frame = new RectangleF (0' 0' 720' 260)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.version_text_field = new SparkleLabel ("version " + Controller.RunningVersion' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' 140' 318' 22)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.version_text_field = new SparkleLabel ("version " + Controller.RunningVersion' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' 140' 318' 22)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.version_text_field = new SparkleLabel ("version " + Controller.RunningVersion' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' 140' 318' 22)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.version_text_field = new SparkleLabel ("version " + Controller.RunningVersion' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' 140' 318' 22)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.updates_text_field = new SparkleLabel ("Checking for updates..."' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 232' 318' 98)'  	TextColor = NSColor.FromCalibratedRgba (1.0f' 1.0f' 1.0f' 0.5f)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.updates_text_field = new SparkleLabel ("Checking for updates..."' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 232' 318' 98)'  	TextColor = NSColor.FromCalibratedRgba (1.0f' 1.0f' 1.0f' 0.5f)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.updates_text_field = new SparkleLabel ("Checking for updates..."' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 232' 318' 98)'  	TextColor = NSColor.FromCalibratedRgba (1.0f' 1.0f' 1.0f' 0.5f)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.updates_text_field = new SparkleLabel ("Checking for updates..."' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 232' 318' 98)'  	TextColor = NSColor.FromCalibratedRgba (1.0f' 1.0f' 1.0f' 0.5f)  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_text_field = new SparkleLabel (@"Copyright © 2010–" + DateTime.Now.Year + " Hylke Bons and others" + "\n\n" + "SparkleShare is Open Source. You are free to use' modify' and redistribute it " + "under the GNU GPLv3"' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 260' 318' 98)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_text_field = new SparkleLabel (@"Copyright © 2010–" + DateTime.Now.Year + " Hylke Bons and others" + "\n\n" + "SparkleShare is Open Source. You are free to use' modify' and redistribute it " + "under the GNU GPLv3"' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 260' 318' 98)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_text_field = new SparkleLabel (@"Copyright © 2010–" + DateTime.Now.Year + " Hylke Bons and others" + "\n\n" + "SparkleShare is Open Source. You are free to use' modify' and redistribute it " + "under the GNU GPLv3"' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 260' 318' 98)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_text_field = new SparkleLabel (@"Copyright © 2010–" + DateTime.Now.Year + " Hylke Bons and others" + "\n\n" + "SparkleShare is Open Source. You are free to use' modify' and redistribute it " + "under the GNU GPLv3"' NSTextAlignment.Left) {  	DrawsBackground = false'  	Frame = new RectangleF (295' Frame.Height - 260' 318' 98)'  	TextColor = NSColor.White  };  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.website_link.Frame = new RectangleF (new PointF (295' 25)' this.website_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.website_link.Frame = new RectangleF (new PointF (295' 25)' this.website_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_link.Frame = new RectangleF (new PointF (this.website_link.Frame.X + this.website_link.Frame.Width + 10' 25)' this.credits_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.credits_link.Frame = new RectangleF (new PointF (this.website_link.Frame.X + this.website_link.Frame.Width + 10' 25)' this.credits_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.report_problem_link.Frame = new RectangleF (new PointF (this.credits_link.Frame.X + this.credits_link.Frame.Width + 10' 25)' this.report_problem_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.report_problem_link.Frame = new RectangleF (new PointF (this.credits_link.Frame.X + this.credits_link.Frame.Width + 10' 25)' this.report_problem_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.debug_log_link.Frame = new RectangleF (new PointF (this.report_problem_link.Frame.X + this.report_problem_link.Frame.Width + 10' 25)' this.debug_log_link.Frame.Size);  
Magic Number,SparkleShare,About,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\About.cs,CreateAbout,The following statement contains a magic number: this.debug_log_link.Frame = new RectangleF (new PointF (this.report_problem_link.Frame.X + this.report_problem_link.Frame.Width + 10' 25)' this.debug_log_link.Frame.Size);  
Magic Number,SparkleShare,Bubbles,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Bubbles.cs,Bubbles,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 12)  	Controller.ShowBubbleEvent += ShowBubbleEvent;  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.cover = new NSBox () {  	Frame = new RectangleF (new PointF (-1' -1)' new SizeF (Frame.Width + 2' this.web_view.Frame.Height + 1))'  	FillColor = NSColor.White'  	BorderType = NSBorderType.NoBorder'  	BoxType = NSBoxType.NSBoxCustom  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (0' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "Size:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (0' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "Size:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (0' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "Size:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (60' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (60' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (60' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.size_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (60' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (130' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "History:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (130' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "History:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (130' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "History:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label = new NSTextField () {  	Alignment = NSTextAlignment.Right'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (130' ContentView.Frame.Height - 31)' new SizeF (60' 20))'  	StringValue = "History:"  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (190' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (190' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (190' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.history_label_value = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.WindowBackground'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (190' ContentView.Frame.Height - 27)' new SizeF (60' 20))'  	StringValue = "…"'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.popup_button = new NSPopUpButton () {  	Frame = new RectangleF (new PointF (ContentView.Frame.Width - 156 - 12' ContentView.Frame.Height - 33)' new SizeF (156' 26))'  	PullsDown = false  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.popup_button = new NSPopUpButton () {  	Frame = new RectangleF (new PointF (ContentView.Frame.Width - 156 - 12' ContentView.Frame.Height - 33)' new SizeF (156' 26))'  	PullsDown = false  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.popup_button = new NSPopUpButton () {  	Frame = new RectangleF (new PointF (ContentView.Frame.Width - 156 - 12' ContentView.Frame.Height - 33)' new SizeF (156' 26))'  	PullsDown = false  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.popup_button = new NSPopUpButton () {  	Frame = new RectangleF (new PointF (ContentView.Frame.Width - 156 - 12' ContentView.Frame.Height - 33)' new SizeF (156' 26))'  	PullsDown = false  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.popup_button = new NSPopUpButton () {  	Frame = new RectangleF (new PointF (ContentView.Frame.Width - 156 - 12' ContentView.Frame.Height - 33)' new SizeF (156' 26))'  	PullsDown = false  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.background = new NSBox () {  	Frame = new RectangleF (new PointF (-1' -1)' new SizeF (Frame.Width + 2' this.web_view.Frame.Height + 2))'  	FillColor = NSColor.White'  	BorderColor = NSColor.LightGray'  	BoxType = NSBoxType.NSBoxCustom  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.background = new NSBox () {  	Frame = new RectangleF (new PointF (-1' -1)' new SizeF (Frame.Width + 2' this.web_view.Frame.Height + 2))'  	FillColor = NSColor.White'  	BorderColor = NSColor.LightGray'  	BoxType = NSBoxType.NSBoxCustom  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,EventLog,The following statement contains a magic number: this.progress_indicator = new NSProgressIndicator () {  	Frame = new RectangleF (new PointF (Frame.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' new SizeF (20' 20))'  	Style = NSProgressIndicatorStyle.Spinning  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.web_view.Frame = new RectangleF (this.web_view.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 39));  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.cover.Frame = new RectangleF (this.cover.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 39));  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.background.Frame = new RectangleF (this.background.Frame.Location' new SizeF (new_window_size.Width' new_window_size.Height - TitlebarHeight - 37));  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.size_label.Frame = new RectangleF (new PointF (this.size_label.Frame.X' new_window_size.Height - TitlebarHeight - 30)' this.size_label.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.size_label_value.Frame = new RectangleF (new PointF (this.size_label_value.Frame.X' new_window_size.Height - TitlebarHeight - 27)' this.size_label_value.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.history_label.Frame = new RectangleF (new PointF (this.history_label.Frame.X' new_window_size.Height - TitlebarHeight - 30)' this.history_label.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.history_label_value.Frame = new RectangleF (new PointF (this.history_label_value.Frame.X' new_window_size.Height - TitlebarHeight - 27)' this.history_label_value.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.progress_indicator.Frame = new RectangleF (new PointF (new_window_size.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' this.progress_indicator.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.progress_indicator.Frame = new RectangleF (new PointF (new_window_size.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' this.progress_indicator.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.progress_indicator.Frame = new RectangleF (new PointF (new_window_size.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' this.progress_indicator.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.progress_indicator.Frame = new RectangleF (new PointF (new_window_size.Width / 2 - 10' this.web_view.Frame.Height / 2 + 10)' this.progress_indicator.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.popup_button.Frame = new RectangleF (new PointF (new_window_size.Width - this.popup_button.Frame.Width - 12' new_window_size.Height - TitlebarHeight - 33)' this.popup_button.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,Relayout,The following statement contains a magic number: this.popup_button.Frame = new RectangleF (new PointF (new_window_size.Width - this.popup_button.Frame.Width - 12' new_window_size.Height - TitlebarHeight - 33)' this.popup_button.Frame.Size);  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,UpdateContent,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,UpdateContent,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,EventLog,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\EventLog.cs,UpdateContent,The following statement contains a magic number: this.web_view = new WebView (new RectangleF (0' 0' 481' 579)' ""' "") {  	Frame = new RectangleF (new PointF (0' 0)' new SizeF (ContentView.Frame.Width' ContentView.Frame.Height - 39))  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 480' 240)' true);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 480' 240)' true);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: MaxSize = new SizeF (480' 240);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: MaxSize = new SizeF (480' 240);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: MinSize = new SizeF (480' 240);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,Note,The following statement contains a magic number: MinSize = new SizeF (480' 240);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cover = new NSBox () {  	Frame = new RectangleF (new PointF (-1' 58)' new SizeF (Frame.Width + 2' this.ContentView.Frame.Height + 1))'  	FillColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	BorderColor = NSColor.LightGray'  	BoxType = NSBoxType.NSBoxCustom  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cover = new NSBox () {  	Frame = new RectangleF (new PointF (-1' 58)' new SizeF (Frame.Width + 2' this.ContentView.Frame.Height + 1))'  	FillColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	BorderColor = NSColor.LightGray'  	BoxType = NSBoxType.NSBoxCustom  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_name_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 41)' new SizeF (320' 22))'  	StringValue = SparkleShare.Controller.CurrentUser.Name'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_name_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 41)' new SizeF (320' 22))'  	StringValue = SparkleShare.Controller.CurrentUser.Name'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_name_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 41)' new SizeF (320' 22))'  	StringValue = SparkleShare.Controller.CurrentUser.Name'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_name_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 41)' new SizeF (320' 22))'  	StringValue = SparkleShare.Controller.CurrentUser.Name'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_email_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	TextColor = NSColor.DisabledControlText'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 60)' new SizeF (320' 20))'  	StringValue = SparkleShare.Controller.CurrentUser.Email'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_email_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	TextColor = NSColor.DisabledControlText'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 60)' new SizeF (320' 20))'  	StringValue = SparkleShare.Controller.CurrentUser.Email'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_email_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	TextColor = NSColor.DisabledControlText'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 60)' new SizeF (320' 20))'  	StringValue = SparkleShare.Controller.CurrentUser.Email'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_email_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.FromCalibratedRgba (0.77f' 0.77f' 0.75f' 1.0f)'  	TextColor = NSColor.DisabledControlText'  	Bordered = false'  	Editable = false'  	Frame = new RectangleF (new PointF (85' ContentView.Frame.Height - 60)' new SizeF (320' 20))'  	StringValue = SparkleShare.Controller.CurrentUser.Email'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.White'  	Bordered = false'  	Editable = true'  	Frame = new RectangleF (new PointF (30' ContentView.Frame.Height - 137)' new SizeF (418' 48))  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.White'  	Bordered = false'  	Editable = true'  	Frame = new RectangleF (new PointF (30' ContentView.Frame.Height - 137)' new SizeF (418' 48))  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.White'  	Bordered = false'  	Editable = true'  	Frame = new RectangleF (new PointF (30' ContentView.Frame.Height - 137)' new SizeF (418' 48))  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_text_field = new NSTextField () {  	Alignment = NSTextAlignment.Left'  	BackgroundColor = NSColor.White'  	Bordered = false'  	Editable = true'  	Frame = new RectangleF (new PointF (30' ContentView.Frame.Height - 137)' new SizeF (418' 48))  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.cancel_button = new NSButton () {  	Title = "Cancel"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105 * 2' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.sync_button = new NSButton () {  	Title = "Sync"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.sync_button = new NSButton () {  	Title = "Sync"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.sync_button = new NSButton () {  	Title = "Sync"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.sync_button = new NSButton () {  	Title = "Sync"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.sync_button = new NSButton () {  	Title = "Sync"'  	BezelStyle = NSBezelStyle.Rounded'  	Frame = new RectangleF (Frame.Width - 15 - 105' 12' 105' 32)'  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: if (BackingScaleFactor >= 2)  	this.balloon_image = NSImage.ImageNamed ("text-balloon@2x");  else  	this.balloon_image = NSImage.ImageNamed ("text-balloon");  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image.Size = new SizeF (438' 72);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image.Size = new SizeF (438' 72);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image_view = new NSImageView () {  	Image = this.balloon_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 145' 438' 72)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image_view = new NSImageView () {  	Image = this.balloon_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 145' 438' 72)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image_view = new NSImageView () {  	Image = this.balloon_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 145' 438' 72)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.balloon_image_view = new NSImageView () {  	Image = this.balloon_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 145' 438' 72)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image.Size = new SizeF (48' 48);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image.Size = new SizeF (48' 48);  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image_view = new NSImageView () {  	Image = this.user_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 65' 48' 48)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image_view = new NSImageView () {  	Image = this.user_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 65' 48' 48)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image_view = new NSImageView () {  	Image = this.user_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 65' 48' 48)  };  
Magic Number,SparkleShare,Note,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Note.cs,CreateNote,The following statement contains a magic number: this.user_image_view = new NSImageView () {  	Image = this.user_image'  	Frame = new RectangleF (21' ContentView.Frame.Height - 65' 48' 48)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Setup) {  	Header = "Welcome to SparkleShare!";  	Description = "First off' what’s your name and email?\n(visible only to team members)";  	FullNameLabel = new SparkleLabel ("Full Name:"' NSTextAlignment.Right);  	FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  	FullNameTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  		StringValue = UnixUserInfo.GetRealUser ().RealName'  		Delegate = new SparkleTextFieldDelegate ()  	};  	EmailLabel = new SparkleLabel ("Email:"' NSTextAlignment.Right);  	EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  	EmailTextField = new NSTextField () {  		Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	(FullNameTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	(EmailTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		string full_name = FullNameTextField.StringValue.Trim ();  		string email = EmailTextField.StringValue.Trim ();  		Controller.SetupPageCompleted (full_name' email);  	};  	CancelButton.Activated += delegate {  		Controller.SetupPageCancelled ();  	};  	Controller.UpdateSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (FullNameLabel);  	ContentView.AddSubview (FullNameTextField);  	ContentView.AddSubview (EmailLabel);  	ContentView.AddSubview (EmailTextField);  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	Controller.CheckSetupPage (FullNameTextField.StringValue' EmailTextField.StringValue);  	if (FullNameTextField.StringValue.Equals (""))  		MakeFirstResponder ((NSResponder)FullNameTextField);  	else  		MakeFirstResponder ((NSResponder)EmailTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameLabel.Frame = new RectangleF (165' Frame.Height - 234' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  	StringValue = UnixUserInfo.GetRealUser ().RealName'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  	StringValue = UnixUserInfo.GetRealUser ().RealName'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  	StringValue = UnixUserInfo.GetRealUser ().RealName'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: FullNameTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 238' 196' 22)'  	StringValue = UnixUserInfo.GetRealUser ().RealName'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailLabel.Frame = new RectangleF (165' Frame.Height - 264' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: EmailTextField = new NSTextField () {  	Frame = new RectangleF (330' Frame.Height - 268' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Invite) {  	Header = "You’ve received an invite!";  	Description = "Do you want to add this project to SparkleShare?";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Right);  	AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  	AddressLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  	};  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Right);  	PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  	PathLabel.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  		Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	AddButton = new NSButton () {  		Title = "Add"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	AddButton.Activated += delegate {  		Controller.InvitePageCompleted ();  	};  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (PathTextField);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel.Frame = new RectangleF (165' Frame.Height - 238' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new SparkleLabel (Controller.PendingInvite.Address' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 240' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel.Frame = new RectangleF (165' Frame.Height - 262' 160' 17);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new SparkleLabel (Controller.PendingInvite.RemotePath' NSTextAlignment.Left) {  	Frame = new RectangleF (330' Frame.Height - 264' 260' 17)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Add) {  	Header = "Where’s your project hosted?";  	Description = "";  	AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	AddressTextField = new NSTextField () {  		Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Address == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousAddress  	};  	AddressTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PathTextField = new NSTextField () {  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  		Enabled = (Controller.SelectedPreset.Path == null)'  		Delegate = new SparkleTextFieldDelegate ()'  		StringValue = "" + Controller.PreviousPath  	};  	PathTextField.Cell.LineBreakMode = NSLineBreakMode.TruncatingTail;  	PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  	};  	AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  	};  	if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  		TableView = new NSTableView () {  			Frame = new RectangleF (0' 0' 0' 0)'  			RowHeight = 38'  			IntercellSpacing = new SizeF (8' 12)'  			HeaderView = null'  			Delegate = new SparkleTableViewDelegate ()  		};  		ScrollView = new NSScrollView () {  			Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  			DocumentView = TableView'  			HasVerticalScroller = true'  			BorderType = NSBorderType.BezelBorder  		};  		IconColumn = new NSTableColumn () {  			Width = 36'  			HeaderToolTip = "Icon"'  			DataCell = new NSImageCell () {  				ImageAlignment = NSImageAlignment.Right  			}  		};  		DescriptionColumn = new NSTableColumn () {  			Width = 350'  			HeaderToolTip = "Description"'  			Editable = false  		};  		DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  		TableView.AddColumn (IconColumn);  		TableView.AddColumn (DescriptionColumn);  		// Hi-res display support was added after Snow Leopard  		if (Environment.OSVersion.Version.Major < 11)  			DataSource = new SparkleDataSource (1' Controller.Presets);  		else  			DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  		TableView.DataSource = DataSource;  		TableView.ReloadData ();  		(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  			Controller.SelectedPresetChanged (TableView.SelectedRow);  			Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  		};  	}  	TableView.SelectRow (Controller.SelectedPresetIndex' false);  	TableView.ScrollRowToVisible (Controller.SelectedPresetIndex);  	MakeFirstResponder ((NSResponder)TableView);  	HistoryCheckButton = new NSButton () {  		Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  		Title = "Fetch prior revisions"  	};  	if (Controller.FetchPriorHistory)  		HistoryCheckButton.State = NSCellStateValue.On;  	HistoryCheckButton.SetButtonType (NSButtonType.Switch);  	AddButton = new NSButton () {  		Title = "Add"'  		Enabled = false  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	Controller.ChangeAddressFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			AddressTextField.StringValue = text;  			AddressTextField.Enabled = (state == FieldState.Enabled);  			AddressHelpLabel.StringValue = example_text;  		});  	};  	Controller.ChangePathFieldEvent += delegate (string text' string example_text' FieldState state) {  		SparkleShare.Controller.Invoke (() => {  			PathTextField.StringValue = text;  			PathTextField.Enabled = (state == FieldState.Enabled);  			PathHelpLabel.StringValue = example_text;  		});  	};  	(AddressTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	(PathTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  	HistoryCheckButton.Activated += delegate {  		Controller.HistoryItemChanged (HistoryCheckButton.State == NSCellStateValue.On);  	};  	AddButton.Activated += delegate {  		Controller.AddPageCompleted (AddressTextField.StringValue' PathTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	Controller.UpdateAddProjectButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			AddButton.Enabled = button_enabled;  		});  	};  	ContentView.AddSubview (ScrollView);  	ContentView.AddSubview (AddressLabel);  	ContentView.AddSubview (AddressTextField);  	ContentView.AddSubview (AddressHelpLabel);  	ContentView.AddSubview (PathLabel);  	ContentView.AddSubview (PathTextField);  	ContentView.AddSubview (PathHelpLabel);  	ContentView.AddSubview (HistoryCheckButton);  	Buttons.Add (AddButton);  	Buttons.Add (CancelButton);  	Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressLabel = new SparkleLabel ("Address:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new NSTextField () {  	Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Address == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousAddress  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new NSTextField () {  	Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Address == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousAddress  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new NSTextField () {  	Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Address == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousAddress  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressTextField = new NSTextField () {  	Frame = new RectangleF (190' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Address == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousAddress  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathLabel = new SparkleLabel ("Remote Path:"' NSTextAlignment.Left) {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 308' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathTextField = new NSTextField () {  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 336' 196' 22)'  	Enabled = (Controller.SelectedPreset.Path == null)'  	Delegate = new SparkleTextFieldDelegate ()'  	StringValue = "" + Controller.PreviousPath  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PathHelpLabel = new SparkleLabel (Controller.SelectedPreset.PathExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190 + 196 + 16' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: AddressHelpLabel = new SparkleLabel (Controller.SelectedPreset.AddressExample' NSTextAlignment.Left) {  	TextColor = NSColor.DisabledControlText'  	Frame = new RectangleF (190' Frame.Height - 358' 204' 19)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (TableView == null || TableView.RowCount != Controller.Presets.Count) {  	TableView = new NSTableView () {  		Frame = new RectangleF (0' 0' 0' 0)'  		RowHeight = 38'  		IntercellSpacing = new SizeF (8' 12)'  		HeaderView = null'  		Delegate = new SparkleTableViewDelegate ()  	};  	ScrollView = new NSScrollView () {  		Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  		DocumentView = TableView'  		HasVerticalScroller = true'  		BorderType = NSBorderType.BezelBorder  	};  	IconColumn = new NSTableColumn () {  		Width = 36'  		HeaderToolTip = "Icon"'  		DataCell = new NSImageCell () {  			ImageAlignment = NSImageAlignment.Right  		}  	};  	DescriptionColumn = new NSTableColumn () {  		Width = 350'  		HeaderToolTip = "Description"'  		Editable = false  	};  	DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  	TableView.AddColumn (IconColumn);  	TableView.AddColumn (DescriptionColumn);  	// Hi-res display support was added after Snow Leopard  	if (Environment.OSVersion.Version.Major < 11)  		DataSource = new SparkleDataSource (1' Controller.Presets);  	else  		DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  	TableView.DataSource = DataSource;  	TableView.ReloadData ();  	(TableView.Delegate as SparkleTableViewDelegate).SelectionChanged += delegate {  		Controller.SelectedPresetChanged (TableView.SelectedRow);  		Controller.CheckAddPage (AddressTextField.StringValue' PathTextField.StringValue' TableView.SelectedRow);  	};  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: TableView = new NSTableView () {  	Frame = new RectangleF (0' 0' 0' 0)'  	RowHeight = 38'  	IntercellSpacing = new SizeF (8' 12)'  	HeaderView = null'  	Delegate = new SparkleTableViewDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: TableView = new NSTableView () {  	Frame = new RectangleF (0' 0' 0' 0)'  	RowHeight = 38'  	IntercellSpacing = new SizeF (8' 12)'  	HeaderView = null'  	Delegate = new SparkleTableViewDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: TableView = new NSTableView () {  	Frame = new RectangleF (0' 0' 0' 0)'  	RowHeight = 38'  	IntercellSpacing = new SizeF (8' 12)'  	HeaderView = null'  	Delegate = new SparkleTableViewDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ScrollView = new NSScrollView () {  	Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  	DocumentView = TableView'  	HasVerticalScroller = true'  	BorderType = NSBorderType.BezelBorder  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ScrollView = new NSScrollView () {  	Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  	DocumentView = TableView'  	HasVerticalScroller = true'  	BorderType = NSBorderType.BezelBorder  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ScrollView = new NSScrollView () {  	Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  	DocumentView = TableView'  	HasVerticalScroller = true'  	BorderType = NSBorderType.BezelBorder  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ScrollView = new NSScrollView () {  	Frame = new RectangleF (190' Frame.Height - 280' 408' 185)'  	DocumentView = TableView'  	HasVerticalScroller = true'  	BorderType = NSBorderType.BezelBorder  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: IconColumn = new NSTableColumn () {  	Width = 36'  	HeaderToolTip = "Icon"'  	DataCell = new NSImageCell () {  		ImageAlignment = NSImageAlignment.Right  	}  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: DescriptionColumn = new NSTableColumn () {  	Width = 350'  	HeaderToolTip = "Description"'  	Editable = false  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: DescriptionColumn.DataCell.Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Condensed' 0' 11);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (Environment.OSVersion.Version.Major < 11)  	DataSource = new SparkleDataSource (1' Controller.Presets);  else  	DataSource = new SparkleDataSource (BackingScaleFactor' Controller.Presets);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: HistoryCheckButton = new NSButton () {  	Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  	Title = "Fetch prior revisions"  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: HistoryCheckButton = new NSButton () {  	Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  	Title = "Fetch prior revisions"  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: HistoryCheckButton = new NSButton () {  	Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  	Title = "Fetch prior revisions"  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: HistoryCheckButton = new NSButton () {  	Frame = new RectangleF (190' Frame.Height - 400' 300' 18)'  	Title = "Fetch prior revisions"  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Syncing) {  	Header = "Adding project ‘" + Controller.SyncingFolder + "’…";  	Description = "This may take a while for large projects.\nIsn’t it coffee-o’clock?";  	ProgressIndicator = new NSProgressIndicator () {  		Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  		Style = NSProgressIndicatorStyle.Bar'  		MinValue = 0.0'  		MaxValue = 100.0'  		Indeterminate = false'  		DoubleValue = Controller.ProgressBarPercentage  	};  	ProgressIndicator.StartAnimation (this);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	FinishButton = new NSButton () {  		Title = "Finish"'  		Enabled = false  	};  	ProgressLabel = new SparkleLabel ("Preparing to fetch files…"' NSTextAlignment.Right);  	ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  	Controller.UpdateProgressBarEvent += delegate (double percentage' string speed) {  		SparkleShare.Controller.Invoke (() => {  			ProgressIndicator.DoubleValue = percentage;  			ProgressLabel.StringValue = speed;  		});  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	ContentView.AddSubview (ProgressLabel);  	ContentView.AddSubview (ProgressIndicator);  	Buttons.Add (FinishButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressIndicator = new NSProgressIndicator () {  	Frame = new RectangleF (190' Frame.Height - 200' 640 - 150 - 80' 20)'  	Style = NSProgressIndicatorStyle.Bar'  	MinValue = 0.0'  	MaxValue = 100.0'  	Indeterminate = false'  	DoubleValue = Controller.ProgressBarPercentage  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ProgressLabel.Frame = new RectangleF (Frame.Width - 40 - 250' 185' 250' 25);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Error) {  	Header = "Oops! Something went wrong…";  	Description = "Please check the following:";  	// Displaying marked up text with Cocoa is  	// a pain' so we just use a webview instead  	WebView web_view = new WebView ();  	web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  	string html = "<style>" + "* {" + "  font-family: '" + UserInterface.FontName + "';" + "  font-size: 12px; cursor: default;" + "}" + "body {" + "  -webkit-user-select: none;" + "  margin: 0;" + "  padding: 3px;" + "}" + "li {" + "  margin-bottom: 16px;" + "  margin-left: 0;" + "  padding-left: 0;" + "  line-height: 20px;" + "  word-wrap: break-word;" + "}" + "ul {" + "  padding-left: 24px;" + "}" + "</style>" + "<ul>" + "  <li><b>" + Controller.PreviousUrl + "</b> is the address we’ve compiled. Does this look alright?</li>" + "  <li>Is this computer’s Client ID known by the host?</li>" + "</ul>";  	if (warnings.Length > 0) {  		string warnings_markup = "";  		foreach (string warning in warnings)  			warnings_markup += "<br><b>" + warning + "</b>";  		html = html.Replace ("</ul>"' "<li>Here’s the raw error message: " + warnings_markup + "</li></ul>");  	}  	web_view.MainFrame.LoadHtmlString (html' new NSUrl (""));  	web_view.DrawsBackground = false;  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	TryAgainButton = new NSButton () {  		Title = "Retry"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	TryAgainButton.Activated += delegate {  		Controller.ErrorPageCompleted ();  	};  	ContentView.AddSubview (web_view);  	Buttons.Add (TryAgainButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Error) {  	Header = "Oops! Something went wrong…";  	Description = "Please check the following:";  	// Displaying marked up text with Cocoa is  	// a pain' so we just use a webview instead  	WebView web_view = new WebView ();  	web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  	string html = "<style>" + "* {" + "  font-family: '" + UserInterface.FontName + "';" + "  font-size: 12px; cursor: default;" + "}" + "body {" + "  -webkit-user-select: none;" + "  margin: 0;" + "  padding: 3px;" + "}" + "li {" + "  margin-bottom: 16px;" + "  margin-left: 0;" + "  padding-left: 0;" + "  line-height: 20px;" + "  word-wrap: break-word;" + "}" + "ul {" + "  padding-left: 24px;" + "}" + "</style>" + "<ul>" + "  <li><b>" + Controller.PreviousUrl + "</b> is the address we’ve compiled. Does this look alright?</li>" + "  <li>Is this computer’s Client ID known by the host?</li>" + "</ul>";  	if (warnings.Length > 0) {  		string warnings_markup = "";  		foreach (string warning in warnings)  			warnings_markup += "<br><b>" + warning + "</b>";  		html = html.Replace ("</ul>"' "<li>Here’s the raw error message: " + warnings_markup + "</li></ul>");  	}  	web_view.MainFrame.LoadHtmlString (html' new NSUrl (""));  	web_view.DrawsBackground = false;  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	TryAgainButton = new NSButton () {  		Title = "Retry"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	TryAgainButton.Activated += delegate {  		Controller.ErrorPageCompleted ();  	};  	ContentView.AddSubview (web_view);  	Buttons.Add (TryAgainButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Error) {  	Header = "Oops! Something went wrong…";  	Description = "Please check the following:";  	// Displaying marked up text with Cocoa is  	// a pain' so we just use a webview instead  	WebView web_view = new WebView ();  	web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  	string html = "<style>" + "* {" + "  font-family: '" + UserInterface.FontName + "';" + "  font-size: 12px; cursor: default;" + "}" + "body {" + "  -webkit-user-select: none;" + "  margin: 0;" + "  padding: 3px;" + "}" + "li {" + "  margin-bottom: 16px;" + "  margin-left: 0;" + "  padding-left: 0;" + "  line-height: 20px;" + "  word-wrap: break-word;" + "}" + "ul {" + "  padding-left: 24px;" + "}" + "</style>" + "<ul>" + "  <li><b>" + Controller.PreviousUrl + "</b> is the address we’ve compiled. Does this look alright?</li>" + "  <li>Is this computer’s Client ID known by the host?</li>" + "</ul>";  	if (warnings.Length > 0) {  		string warnings_markup = "";  		foreach (string warning in warnings)  			warnings_markup += "<br><b>" + warning + "</b>";  		html = html.Replace ("</ul>"' "<li>Here’s the raw error message: " + warnings_markup + "</li></ul>");  	}  	web_view.MainFrame.LoadHtmlString (html' new NSUrl (""));  	web_view.DrawsBackground = false;  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	TryAgainButton = new NSButton () {  		Title = "Retry"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	TryAgainButton.Activated += delegate {  		Controller.ErrorPageCompleted ();  	};  	ContentView.AddSubview (web_view);  	Buttons.Add (TryAgainButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Error) {  	Header = "Oops! Something went wrong…";  	Description = "Please check the following:";  	// Displaying marked up text with Cocoa is  	// a pain' so we just use a webview instead  	WebView web_view = new WebView ();  	web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  	string html = "<style>" + "* {" + "  font-family: '" + UserInterface.FontName + "';" + "  font-size: 12px; cursor: default;" + "}" + "body {" + "  -webkit-user-select: none;" + "  margin: 0;" + "  padding: 3px;" + "}" + "li {" + "  margin-bottom: 16px;" + "  margin-left: 0;" + "  padding-left: 0;" + "  line-height: 20px;" + "  word-wrap: break-word;" + "}" + "ul {" + "  padding-left: 24px;" + "}" + "</style>" + "<ul>" + "  <li><b>" + Controller.PreviousUrl + "</b> is the address we’ve compiled. Does this look alright?</li>" + "  <li>Is this computer’s Client ID known by the host?</li>" + "</ul>";  	if (warnings.Length > 0) {  		string warnings_markup = "";  		foreach (string warning in warnings)  			warnings_markup += "<br><b>" + warning + "</b>";  		html = html.Replace ("</ul>"' "<li>Here’s the raw error message: " + warnings_markup + "</li></ul>");  	}  	web_view.MainFrame.LoadHtmlString (html' new NSUrl (""));  	web_view.DrawsBackground = false;  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	TryAgainButton = new NSButton () {  		Title = "Retry"  	};  	CancelButton.Activated += delegate {  		Controller.PageCancelled ();  	};  	TryAgainButton.Activated += delegate {  		Controller.ErrorPageCompleted ();  	};  	ContentView.AddSubview (web_view);  	Buttons.Add (TryAgainButton);  	Buttons.Add (CancelButton);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: web_view.Frame = new RectangleF (190' Frame.Height - 525' 375' 400);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.StorageSetup) {  	Header = string.Format ("Storage type for ‘{0}’"' Controller.SyncingFolder);  	Description = "What type of storage would you like to use?";  	storage_type_descriptions = new List<NSTextField> ();  	ButtonCellProto = new NSButtonCell ();  	ButtonCellProto.SetButtonType (NSButtonType.Radio);  	ButtonCellProto.Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize);  	Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  	Matrix.CellSize = new SizeF (256' 36);  	Matrix.IntercellSpacing = new SizeF (32' 32);  	int i = 0;  	foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  		Matrix.Cells [i].Title = " " + storage_type.Name;  		NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  			TextColor = NSColor.DisabledControlText'  			Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  		};  		storage_type_descriptions.Add (storage_type_description);  		ContentView.AddSubview (storage_type_description);  		i++;  	}  	ContentView.AddSubview (Matrix);  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"  	};  	ContinueButton.Activated += delegate {  		StorageTypeInfo selected_storage_type = SparkleShare.Controller.FetcherAvailableStorageTypes [Matrix.SelectedRow];  		Controller.StoragePageCompleted (selected_storage_type.Type);  	};  	CancelButton.Activated += delegate {  		Controller.SyncingCancelled ();  	};  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix = new NSMatrix (new RectangleF (202' Frame.Height - 256 - 128' 256' 256)' NSMatrixMode.Radio' ButtonCellProto' SparkleShare.Controller.FetcherAvailableStorageTypes.Count' 1);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix.CellSize = new SizeF (256' 36);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix.CellSize = new SizeF (256' 36);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix.IntercellSpacing = new SizeF (32' 32);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: Matrix.IntercellSpacing = new SizeF (32' 32);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  	Matrix.Cells [i].Title = " " + storage_type.Name;  	NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  	};  	storage_type_descriptions.Add (storage_type_description);  	ContentView.AddSubview (storage_type_description);  	i++;  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  	Matrix.Cells [i].Title = " " + storage_type.Name;  	NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  	};  	storage_type_descriptions.Add (storage_type_description);  	ContentView.AddSubview (storage_type_description);  	i++;  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  	Matrix.Cells [i].Title = " " + storage_type.Name;  	NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  	};  	storage_type_descriptions.Add (storage_type_description);  	ContentView.AddSubview (storage_type_description);  	i++;  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  	Matrix.Cells [i].Title = " " + storage_type.Name;  	NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  	};  	storage_type_descriptions.Add (storage_type_description);  	ContentView.AddSubview (storage_type_description);  	i++;  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: foreach (StorageTypeInfo storage_type in SparkleShare.Controller.FetcherAvailableStorageTypes) {  	Matrix.Cells [i].Title = " " + storage_type.Name;  	NSTextField storage_type_description = new SparkleLabel (storage_type.Description' NSTextAlignment.Left) {  		TextColor = NSColor.DisabledControlText'  		Frame = new RectangleF (223' Frame.Height - 190 - (68 * i)' 256' 32)  	};  	storage_type_descriptions.Add (storage_type_description);  	ContentView.AddSubview (storage_type_description);  	i++;  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoSetup || type == PageType.CryptoPassword) {  	if (type == PageType.CryptoSetup) {  		Header = "Set up file encryption";  		Description = "Please a provide a strong password that you don’t use elsewhere.";  	} else {  		Header = "This project contains encrypted files";  		Description = "Please enter the password to see their contents.";  	}  	int extra_pos_y = 0;  	if (type == PageType.CryptoPassword)  		extra_pos_y = 20;  	PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  		Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  		Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  	};  	PasswordTextField = new NSSecureTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	VisiblePasswordTextField = new NSTextField () {  		Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  		Delegate = new SparkleTextFieldDelegate ()  	};  	ShowPasswordCheckButton = new NSButton () {  		Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  		Title = "Show password"'  		State = NSCellStateValue.Off  	};  	ShowPasswordCheckButton.SetButtonType (NSButtonType.Switch);  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  	};  	WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  		Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  	};  	CancelButton = new NSButton () {  		Title = "Cancel"  	};  	ContinueButton = new NSButton () {  		Title = "Continue"'  		Enabled = false  	};  	Controller.UpdateCryptoPasswordContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	Controller.UpdateCryptoSetupContinueButtonEvent += delegate (bool button_enabled) {  		SparkleShare.Controller.Invoke (() => {  			ContinueButton.Enabled = button_enabled;  		});  	};  	ShowPasswordCheckButton.Activated += delegate {  		if (PasswordTextField.Superview == ContentView) {  			PasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (VisiblePasswordTextField);  		} else {  			VisiblePasswordTextField.RemoveFromSuperview ();  			ContentView.AddSubview (PasswordTextField);  		}  	};  	(PasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		VisiblePasswordTextField.StringValue = PasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	(VisiblePasswordTextField.Delegate as SparkleTextFieldDelegate).StringValueChanged += delegate {  		PasswordTextField.StringValue = VisiblePasswordTextField.StringValue;  		if (type == PageType.CryptoSetup)  			Controller.CheckCryptoSetupPage (PasswordTextField.StringValue);  		else  			Controller.CheckCryptoPasswordPage (PasswordTextField.StringValue);  	};  	ContinueButton.Activated += delegate {  		if (type == PageType.CryptoSetup)  			Controller.CryptoSetupPageCompleted (PasswordTextField.StringValue);  		else  			Controller.CryptoPasswordPageCompleted (PasswordTextField.StringValue);  	};  	CancelButton.Activated += delegate {  		Controller.CryptoPageCancelled ();  	};  	ContentView.AddSubview (PasswordLabel);  	ContentView.AddSubview (PasswordTextField);  	ContentView.AddSubview (ShowPasswordCheckButton);  	if (type == PageType.CryptoSetup) {  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	Buttons.Add (ContinueButton);  	Buttons.Add (CancelButton);  	MakeFirstResponder ((NSResponder)PasswordTextField);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.CryptoPassword)  	extra_pos_y = 20;  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: extra_pos_y = 20;  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  	Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  	Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  	Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordLabel = new SparkleLabel ("Password:"' NSTextAlignment.Right) {  	Frame = new RectangleF (155' Frame.Height - 202 - extra_pos_y' 160' 17)'  	Font = NSFont.FromFontName (UserInterface.FontName + " Bold"' NSFont.SystemFontSize)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordTextField = new NSSecureTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordTextField = new NSSecureTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordTextField = new NSSecureTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: PasswordTextField = new NSSecureTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: VisiblePasswordTextField = new NSTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: VisiblePasswordTextField = new NSTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: VisiblePasswordTextField = new NSTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: VisiblePasswordTextField = new NSTextField () {  	Frame = new RectangleF (320' Frame.Height - 208 - extra_pos_y' 196' 22)'  	Delegate = new SparkleTextFieldDelegate ()  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ShowPasswordCheckButton = new NSButton () {  	Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  	Title = "Show password"'  	State = NSCellStateValue.Off  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ShowPasswordCheckButton = new NSButton () {  	Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  	Title = "Show password"'  	State = NSCellStateValue.Off  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ShowPasswordCheckButton = new NSButton () {  	Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  	Title = "Show password"'  	State = NSCellStateValue.Off  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: ShowPasswordCheckButton = new NSButton () {  	Frame = new RectangleF (318' Frame.Height - 235 - extra_pos_y' 300' 18)'  	Title = "Show password"'  	State = NSCellStateValue.Off  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImage.Size = new SizeF (24' 24);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImage.Size = new SizeF (24' 24);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 320' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  	Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  	Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  	Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField = new SparkleLabel ("This password can’t be changed later' and your files can’t be recovered if it’s forgotten."' NSTextAlignment.Left) {  	Frame = new RectangleF (235' Frame.Height - 390' 325' 100)'  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (type == PageType.Finished) {  	Header = "Your shared project is ready!";  	Description = "You can find the files in your SparkleShare folder.";  	if (warnings.Length > 0) {  		WarningImage = NSImage.ImageNamed ("NSInfo");  		WarningImage.Size = new SizeF (24' 24);  		WarningImageView = new NSImageView () {  			Image = WarningImage'  			Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  		};  		WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  		WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  		ContentView.AddSubview (WarningImageView);  		ContentView.AddSubview (WarningTextField);  	}  	ShowFilesButton = new NSButton () {  		Title = "Show Files"  	};  	FinishButton = new NSButton () {  		Title = "Finish"  	};  	ShowFilesButton.Activated += delegate {  		Controller.ShowFilesClicked ();  	};  	FinishButton.Activated += delegate {  		Controller.FinishPageCompleted ();  	};  	Buttons.Add (FinishButton);  	Buttons.Add (ShowFilesButton);  	NSApplication.SharedApplication.RequestUserAttention (NSRequestUserAttentionType.CriticalRequest);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: if (warnings.Length > 0) {  	WarningImage = NSImage.ImageNamed ("NSInfo");  	WarningImage.Size = new SizeF (24' 24);  	WarningImageView = new NSImageView () {  		Image = WarningImage'  		Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  	};  	WarningTextField = new SparkleLabel (warnings [0]' NSTextAlignment.Left);  	WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  	ContentView.AddSubview (WarningImageView);  	ContentView.AddSubview (WarningTextField);  }  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImage.Size = new SizeF (24' 24);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImage.Size = new SizeF (24' 24);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningImageView = new NSImageView () {  	Image = WarningImage'  	Frame = new RectangleF (200' Frame.Height - 175' 24' 24)  };  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  
Magic Number,SparkleShare,Setup,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,ShowPage,The following statement contains a magic number: WarningTextField.Frame = new RectangleF (235' Frame.Height - 245' 325' 100);  
Magic Number,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,objectValueForTableColumn,The following statement contains a magic number: if (backing_scale_factor >= 2) {  	string hi_path = String.Format ("{0}@{1}x{2}"' Path.Combine (Path.GetDirectoryName (image_path)' Path.GetFileNameWithoutExtension (image_path))' backing_scale_factor' Path.GetExtension (image_path));  	if (File.Exists (hi_path))  		image_path = hi_path;  }  
Magic Number,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,objectValueForTableColumn,The following statement contains a magic number: return new NSImage (image_path) {  	Size = new SizeF (24' 24)  };  
Magic Number,SparkleShare,SparkleDataSource,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\Setup.cs,objectValueForTableColumn,The following statement contains a magic number: return new NSImage (image_path) {  	Size = new SizeF (24' 24)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 640' 420)' true);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: SetFrame (new RectangleF (0' 0' 640' 420)' true);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: MaxSize = new SizeF (640' 420);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: MaxSize = new SizeF (640' 420);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: MinSize = new SizeF (640' 420);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: MinSize = new SizeF (640' 420);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.side_splash.Size = new SizeF (150' 482);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.side_splash.Size = new SizeF (150' 482);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.side_splash_view = new NSImageView () {  	Image = this.side_splash'  	Frame = new RectangleF (0' 0' 150' 482)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.side_splash_view = new NSImageView () {  	Image = this.side_splash'  	Frame = new RectangleF (0' 0' 150' 482)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.header_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 80' Frame.Width' 24)'  	Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Bold' 0' 16)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.header_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 80' Frame.Width' 24)'  	Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Bold' 0' 16)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.header_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 80' Frame.Width' 24)'  	Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Bold' 0' 16)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.header_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 80' Frame.Width' 24)'  	Font = NSFontManager.SharedFontManager.FontWithFamily (UserInterface.FontName' NSFontTraitMask.Bold' 0' 16)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.description_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 130' 640 - 240' 44)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.description_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 130' 640 - 240' 44)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.description_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 130' 640 - 240' 44)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.description_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 130' 640 - 240' 44)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,SetupWindow,The following statement contains a magic number: this.description_text_field = new SparkleLabel (""' NSTextAlignment.Left) {  	Frame = new RectangleF (190' Frame.Height - 130' 640 - 240' 44)  };  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (Buttons.Count > 0) {  	DefaultButtonCell = Buttons [0].Cell;  	foreach (NSButton button in Buttons) {  		button.BezelStyle = NSBezelStyle.Rounded;  		button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  		// Make the button a bit wider if the text is likely to be longer  		if (button.Title.Contains (" ")) {  			button.SizeToFit ();  			button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  			x += 22;  		}  		ContentView.AddSubview (button);  		i++;  	}  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: foreach (NSButton button in Buttons) {  	button.BezelStyle = NSBezelStyle.Rounded;  	button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  	// Make the button a bit wider if the text is likely to be longer  	if (button.Title.Contains (" ")) {  		button.SizeToFit ();  		button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  		x += 22;  	}  	ContentView.AddSubview (button);  	i++;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 15 - x - (105 * i)' 12' 105' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: if (button.Title.Contains (" ")) {  	button.SizeToFit ();  	button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  	x += 22;  }  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: button.Frame = new RectangleF (Frame.Width - 30 - 15 - (105 * (i - 1)) - button.Frame.Width' 12' button.Frame.Width + 30' 32);  
Magic Number,SparkleShare,SetupWindow,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\SetupWindow.cs,ShowAll,The following statement contains a magic number: x += 22;  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,StatusIcon,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 14)  	this.sparkleshare_image = (NSImage)NSImage.ImageNamed ("sparkleshare-folder-yosemite.icns").Copy ();  else  	this.sparkleshare_image = (NSImage)NSImage.ImageNamed ("sparkleshare-folder.icns").Copy ();  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,StatusIcon,The following statement contains a magic number: Controller.UpdateMenuEvent += delegate {  	while (this.menu_delegate.MenuIsOpen)  		System.Threading.Thread.Sleep (100);  	SparkleShare.Controller.Invoke (() => CreateMenu ());  };  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,StatusIcon,The following statement contains a magic number: while (this.menu_delegate.MenuIsOpen)  	System.Threading.Thread.Sleep (100);  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,StatusIcon,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: this.folder_item.Image.Size = new SizeF (16' 16);  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: this.folder_item.Image.Size = new SizeF (16' 16);  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: if (Controller.LinkCodeItemEnabled) {  	this.link_code_submenu = new NSMenu ();  	this.code_item = new NSMenuItem ();  	this.code_item.Title = SparkleShare.Controller.UserAuthenticationInfo.PublicKey.Substring (0' 20) + "...";  	this.copy_item = new NSMenuItem ();  	this.copy_item.Title = "Copy to Clipboard";  	this.copy_item.Activated += delegate {  		Controller.CopyToClipboardClicked ();  	};  	this.link_code_submenu.AddItem (this.code_item);  	this.link_code_submenu.AddItem (NSMenuItem.SeparatorItem);  	this.link_code_submenu.AddItem (this.copy_item);  	this.link_code_item.Submenu = this.link_code_submenu;  }  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: this.code_item.Title = SparkleShare.Controller.UserAuthenticationInfo.PublicKey.Substring (0' 20) + "...";  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: if (Controller.Projects.Length > 0) {  	int i = 0;  	foreach (ProjectInfo project in Controller.Projects) {  		NSMenuItem item = new NSMenuItem () {  			Title = project.Name  		};  		this.folder_menu_items [i] = item;  		item.Submenu = new NSMenu ();  		item.Image = this.folder_image;  		this.state_menu_items [i] = new NSMenuItem (project.StatusMessage);  		item.Submenu.AddItem (this.state_menu_items [i]);  		item.Submenu.AddItem (NSMenuItem.SeparatorItem);  		if (project.IsPaused) {  			if (project.UnsyncedChangesInfo.Count > 0) {  				foreach (KeyValuePair<string' string> pair in project.UnsyncedChangesInfo)  					item.Submenu.AddItem (new NSMenuItem (pair.Key) {  						Image = NSImage.ImageNamed (pair.Value)  					});  				if (!string.IsNullOrEmpty (project.MoreUnsyncedChanges))  					item.Submenu.AddItem (new NSMenuItem (project.MoreUnsyncedChanges));  				item.Submenu.AddItem (NSMenuItem.SeparatorItem);  				this.resume_menu_items [i] = new NSMenuItem ("Sync and Resume…");  			} else {  				this.resume_menu_items [i] = new NSMenuItem ("Resume");  			}  			this.resume_menu_items [i].Activated += Controller.ResumeDelegate (project.Name);  			item.Submenu.AddItem (this.resume_menu_items [i]);  		} else {  			if (Controller.Projects [i].HasError) {  				item.Image = this.caution_image;  				this.try_again_menu_items [i] = new NSMenuItem ();  				this.try_again_menu_items [i].Title = "Retry Sync";  				this.try_again_menu_items [i].Activated += Controller.TryAgainDelegate (project.Name);  				item.Submenu.AddItem (this.try_again_menu_items [i]);  			} else {  				this.pause_menu_items [i] = new NSMenuItem ("Pause");  				this.pause_menu_items [i].Activated += Controller.PauseDelegate (project.Name);  				item.Submenu.AddItem (this.pause_menu_items [i]);  			}  		}  		if (!Controller.Projects [i].HasError)  			this.folder_menu_items [i].Activated += Controller.OpenFolderDelegate (project.Name);  		item.Image.Size = new SizeF (16' 16);  		i++;  	}  	;  }  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: if (Controller.Projects.Length > 0) {  	int i = 0;  	foreach (ProjectInfo project in Controller.Projects) {  		NSMenuItem item = new NSMenuItem () {  			Title = project.Name  		};  		this.folder_menu_items [i] = item;  		item.Submenu = new NSMenu ();  		item.Image = this.folder_image;  		this.state_menu_items [i] = new NSMenuItem (project.StatusMessage);  		item.Submenu.AddItem (this.state_menu_items [i]);  		item.Submenu.AddItem (NSMenuItem.SeparatorItem);  		if (project.IsPaused) {  			if (project.UnsyncedChangesInfo.Count > 0) {  				foreach (KeyValuePair<string' string> pair in project.UnsyncedChangesInfo)  					item.Submenu.AddItem (new NSMenuItem (pair.Key) {  						Image = NSImage.ImageNamed (pair.Value)  					});  				if (!string.IsNullOrEmpty (project.MoreUnsyncedChanges))  					item.Submenu.AddItem (new NSMenuItem (project.MoreUnsyncedChanges));  				item.Submenu.AddItem (NSMenuItem.SeparatorItem);  				this.resume_menu_items [i] = new NSMenuItem ("Sync and Resume…");  			} else {  				this.resume_menu_items [i] = new NSMenuItem ("Resume");  			}  			this.resume_menu_items [i].Activated += Controller.ResumeDelegate (project.Name);  			item.Submenu.AddItem (this.resume_menu_items [i]);  		} else {  			if (Controller.Projects [i].HasError) {  				item.Image = this.caution_image;  				this.try_again_menu_items [i] = new NSMenuItem ();  				this.try_again_menu_items [i].Title = "Retry Sync";  				this.try_again_menu_items [i].Activated += Controller.TryAgainDelegate (project.Name);  				item.Submenu.AddItem (this.try_again_menu_items [i]);  			} else {  				this.pause_menu_items [i] = new NSMenuItem ("Pause");  				this.pause_menu_items [i].Activated += Controller.PauseDelegate (project.Name);  				item.Submenu.AddItem (this.pause_menu_items [i]);  			}  		}  		if (!Controller.Projects [i].HasError)  			this.folder_menu_items [i].Activated += Controller.OpenFolderDelegate (project.Name);  		item.Image.Size = new SizeF (16' 16);  		i++;  	}  	;  }  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: foreach (ProjectInfo project in Controller.Projects) {  	NSMenuItem item = new NSMenuItem () {  		Title = project.Name  	};  	this.folder_menu_items [i] = item;  	item.Submenu = new NSMenu ();  	item.Image = this.folder_image;  	this.state_menu_items [i] = new NSMenuItem (project.StatusMessage);  	item.Submenu.AddItem (this.state_menu_items [i]);  	item.Submenu.AddItem (NSMenuItem.SeparatorItem);  	if (project.IsPaused) {  		if (project.UnsyncedChangesInfo.Count > 0) {  			foreach (KeyValuePair<string' string> pair in project.UnsyncedChangesInfo)  				item.Submenu.AddItem (new NSMenuItem (pair.Key) {  					Image = NSImage.ImageNamed (pair.Value)  				});  			if (!string.IsNullOrEmpty (project.MoreUnsyncedChanges))  				item.Submenu.AddItem (new NSMenuItem (project.MoreUnsyncedChanges));  			item.Submenu.AddItem (NSMenuItem.SeparatorItem);  			this.resume_menu_items [i] = new NSMenuItem ("Sync and Resume…");  		} else {  			this.resume_menu_items [i] = new NSMenuItem ("Resume");  		}  		this.resume_menu_items [i].Activated += Controller.ResumeDelegate (project.Name);  		item.Submenu.AddItem (this.resume_menu_items [i]);  	} else {  		if (Controller.Projects [i].HasError) {  			item.Image = this.caution_image;  			this.try_again_menu_items [i] = new NSMenuItem ();  			this.try_again_menu_items [i].Title = "Retry Sync";  			this.try_again_menu_items [i].Activated += Controller.TryAgainDelegate (project.Name);  			item.Submenu.AddItem (this.try_again_menu_items [i]);  		} else {  			this.pause_menu_items [i] = new NSMenuItem ("Pause");  			this.pause_menu_items [i].Activated += Controller.PauseDelegate (project.Name);  			item.Submenu.AddItem (this.pause_menu_items [i]);  		}  	}  	if (!Controller.Projects [i].HasError)  		this.folder_menu_items [i].Activated += Controller.OpenFolderDelegate (project.Name);  	item.Image.Size = new SizeF (16' 16);  	i++;  }  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: foreach (ProjectInfo project in Controller.Projects) {  	NSMenuItem item = new NSMenuItem () {  		Title = project.Name  	};  	this.folder_menu_items [i] = item;  	item.Submenu = new NSMenu ();  	item.Image = this.folder_image;  	this.state_menu_items [i] = new NSMenuItem (project.StatusMessage);  	item.Submenu.AddItem (this.state_menu_items [i]);  	item.Submenu.AddItem (NSMenuItem.SeparatorItem);  	if (project.IsPaused) {  		if (project.UnsyncedChangesInfo.Count > 0) {  			foreach (KeyValuePair<string' string> pair in project.UnsyncedChangesInfo)  				item.Submenu.AddItem (new NSMenuItem (pair.Key) {  					Image = NSImage.ImageNamed (pair.Value)  				});  			if (!string.IsNullOrEmpty (project.MoreUnsyncedChanges))  				item.Submenu.AddItem (new NSMenuItem (project.MoreUnsyncedChanges));  			item.Submenu.AddItem (NSMenuItem.SeparatorItem);  			this.resume_menu_items [i] = new NSMenuItem ("Sync and Resume…");  		} else {  			this.resume_menu_items [i] = new NSMenuItem ("Resume");  		}  		this.resume_menu_items [i].Activated += Controller.ResumeDelegate (project.Name);  		item.Submenu.AddItem (this.resume_menu_items [i]);  	} else {  		if (Controller.Projects [i].HasError) {  			item.Image = this.caution_image;  			this.try_again_menu_items [i] = new NSMenuItem ();  			this.try_again_menu_items [i].Title = "Retry Sync";  			this.try_again_menu_items [i].Activated += Controller.TryAgainDelegate (project.Name);  			item.Submenu.AddItem (this.try_again_menu_items [i]);  		} else {  			this.pause_menu_items [i] = new NSMenuItem ("Pause");  			this.pause_menu_items [i].Activated += Controller.PauseDelegate (project.Name);  			item.Submenu.AddItem (this.pause_menu_items [i]);  		}  	}  	if (!Controller.Projects [i].HasError)  		this.folder_menu_items [i].Activated += Controller.OpenFolderDelegate (project.Name);  	item.Image.Size = new SizeF (16' 16);  	i++;  }  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: item.Image.Size = new SizeF (16' 16);  
Magic Number,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,CreateMenu,The following statement contains a magic number: item.Image.Size = new SizeF (16' 16);  
Magic Number,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The following statement contains a magic number: try {  	byte[] buffer = client.DownloadData (url);  	if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Jpeg' StringComparison.InvariantCultureIgnoreCase)) {  		avatar_file_path += ".jpg";  	} else if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Gif' StringComparison.InvariantCultureIgnoreCase)) {  		avatar_file_path += ".gif";  	} else {  		avatar_file_path += ".png";  	}  	if (buffer.Length > 255) {  		if (!Directory.Exists (avatars_path)) {  			Directory.CreateDirectory (avatars_path);  			Logger.LogInfo ("Avatars"' "Created '" + avatars_path + "'");  		}  		File.WriteAllBytes (avatar_file_path' buffer);  		Logger.LogInfo ("Avatars"' "Fetched " + size + "x" + size + " avatar for " + email);  		return avatar_file_path;  	} else {  		return null;  	}  } catch (Exception e) {  	Logger.LogInfo ("Avatars"' "Error fetching avatar for " + email' e);  	skipped_avatars.Add (email);  	return null;  }  
Magic Number,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The following statement contains a magic number: if (buffer.Length > 255) {  	if (!Directory.Exists (avatars_path)) {  		Directory.CreateDirectory (avatars_path);  		Logger.LogInfo ("Avatars"' "Created '" + avatars_path + "'");  	}  	File.WriteAllBytes (avatar_file_path' buffer);  	Logger.LogInfo ("Avatars"' "Fetched " + size + "x" + size + " avatar for " + email);  	return avatar_file_path;  } else {  	return null;  }  
Magic Number,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The following statement contains a magic number: try {  	byte[] buffer = client.DownloadData (url);  	if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Jpeg' StringComparison.InvariantCultureIgnoreCase)) {  		avatar_file_path += ".jpg";  	} else if (client.ResponseHeaders ["content-type"].Equals (MediaTypeNames.Image.Gif' StringComparison.InvariantCultureIgnoreCase)) {  		avatar_file_path += ".gif";  	} else {  		avatar_file_path += ".png";  	}  	if (buffer.Length > 255) {  		if (!Directory.Exists (avatars_path)) {  			Directory.CreateDirectory (avatars_path);  			Logger.LogInfo ("Avatars"' "Created '" + avatars_path + "'");  		}  		File.WriteAllBytes (avatar_file_path' buffer);  		Logger.LogInfo ("Avatars"' "Fetched " + size + "x" + size + " avatar for " + email);  		return avatar_file_path;  	} else {  		return null;  	}  } catch (Exception e) {  	Logger.LogInfo ("Avatars"' "Error fetching avatar for " + email' e);  	skipped_avatars.Add (email);  	return null;  }  
Magic Number,SparkleShare,Avatars,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\..\Common\Avatars.cs,GetAvatar,The following statement contains a magic number: if (buffer.Length > 255) {  	if (!Directory.Exists (avatars_path)) {  		Directory.CreateDirectory (avatars_path);  		Logger.LogInfo ("Avatars"' "Created '" + avatars_path + "'");  	}  	File.WriteAllBytes (avatar_file_path' buffer);  	Logger.LogInfo ("Avatars"' "Fetched " + size + "x" + size + " avatar for " + email);  	return avatar_file_path;  } else {  	return null;  }  
Magic Number,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,CreateSparkleShareFolder,The following statement contains a magic number: if (!Directory.Exists (SparkleShare.Controller.FoldersPath)) {  	Directory.CreateDirectory (SparkleShare.Controller.FoldersPath);  	Syscall.chmod (SparkleShare.Controller.FoldersPath' (FilePermissions)448);  	// 448 -> 700  }  
Magic Number,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,CreateSparkleShareFolder,The following statement contains a magic number: Syscall.chmod (SparkleShare.Controller.FoldersPath' (FilePermissions)448);  
Magic Number,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,SetFolderIcon,The following statement contains a magic number: if (Environment.OSVersion.Version.Major >= 14) {  	NSWorkspace.SharedWorkspace.SetIconforFile (NSImage.ImageNamed ("sparkleshare-folder-yosemite.icns")' SparkleShare.Controller.FoldersPath' 0);  } else {  	NSWorkspace.SharedWorkspace.SetIconforFile (NSImage.ImageNamed ("sparkleshare-folder.icns")' SparkleShare.Controller.FoldersPath' 0);  }  
Magic Number,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,OnFilesChanged,The following statement contains a magic number: foreach (string file_path in changed_files_in_basedir) {  	string[] paths = file_path.Split (Path.DirectorySeparatorChar);  	if (paths.Length < 2)  		continue;  	BaseRepository repo = GetRepoByName (paths [1]);  	if (repo != null && !triggered_repos.Contains (repo.Name)) {  		FileActivityTask task = MacFileActivityTask (repo' new FileSystemEventArgs (WatcherChangeTypes.Changed' file_path' "Unknown"));  		task ();  		triggered_repos.Add (repo.Name);  	}  }  
Magic Number,SparkleShare,Controller,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\Controller.cs,OnFilesChanged,The following statement contains a magic number: if (paths.Length < 2)  	continue;  
Magic Number,SparkleShare,AboutController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\AboutController.cs,CheckForNewVersion,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,AddRepository,The following statement contains a magic number: repo.NewChangeSet += delegate (ChangeSet change_set) {  	if (AvatarsEnabled)  		change_set.User.AvatarFilePath = Avatars.GetAvatar (change_set.User.Email' 48' Config.DirectoryPath);  	NotificationRaised (change_set);  };  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,AddRepository,The following statement contains a magic number: if (AvatarsEnabled)  	change_set.User.AvatarFilePath = Avatars.GetAvatar (change_set.User.Email' 48' Config.DirectoryPath);  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,AddRepository,The following statement contains a magic number: change_set.User.AvatarFilePath = Avatars.GetAvatar (change_set.User.Email' 48' Config.DirectoryPath);  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: if (this.fetcher != null && this.fetcher.IsActive) {  	AlertNotificationRaised ("SparkleShare Setup seems busy"' "Please wait for it to finish");  } else {  	SparkleInvite invite = new SparkleInvite (path);  	// It may be that the invite we received a path to isn't  	// fully downloaded yet' so we try to read it several times  	int tries = 0;  	while (!invite.IsValid) {  		Thread.Sleep (100);  		invite = new SparkleInvite (path);  		tries++;  		if (tries > 10) {  			AlertNotificationRaised ("Oh noes!"' "This invite seems screwed up...");  			break;  		}  	}  	if (invite.IsValid)  		InviteReceived (invite);  	File.Delete (path);  }  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: if (this.fetcher != null && this.fetcher.IsActive) {  	AlertNotificationRaised ("SparkleShare Setup seems busy"' "Please wait for it to finish");  } else {  	SparkleInvite invite = new SparkleInvite (path);  	// It may be that the invite we received a path to isn't  	// fully downloaded yet' so we try to read it several times  	int tries = 0;  	while (!invite.IsValid) {  		Thread.Sleep (100);  		invite = new SparkleInvite (path);  		tries++;  		if (tries > 10) {  			AlertNotificationRaised ("Oh noes!"' "This invite seems screwed up...");  			break;  		}  	}  	if (invite.IsValid)  		InviteReceived (invite);  	File.Delete (path);  }  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: while (!invite.IsValid) {  	Thread.Sleep (100);  	invite = new SparkleInvite (path);  	tries++;  	if (tries > 10) {  		AlertNotificationRaised ("Oh noes!"' "This invite seems screwed up...");  		break;  	}  }  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: while (!invite.IsValid) {  	Thread.Sleep (100);  	invite = new SparkleInvite (path);  	tries++;  	if (tries > 10) {  		AlertNotificationRaised ("Oh noes!"' "This invite seems screwed up...");  		break;  	}  }  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,SparkleShare,BaseController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\BaseController.cs,HandleInvite,The following statement contains a magic number: if (tries > 10) {  	AlertNotificationRaised ("Oh noes!"' "This invite seems screwed up...");  	break;  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("http")) {  	SparkleShare.Controller.OpenWebsite (href);  } else if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("http")) {  	SparkleShare.Controller.OpenWebsite (href);  } else if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("http")) {  	SparkleShare.Controller.OpenWebsite (href);  } else if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("http")) {  	SparkleShare.Controller.OpenWebsite (href);  } else if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("http")) {  	SparkleShare.Controller.OpenWebsite (href);  } else if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("restore://") && this.restore_revision_info == null) {  	Regex regex = new Regex ("restore://(.+)/([a-f0-9]+)/(.+)/(.{3} [0-9]+ [0-9]+h[0-9]+)/(.+)");  	Match match = regex.Match (href);  	if (match.Success) {  		string author_name = match.Groups [3].Value;  		string timestamp = match.Groups [4].Value;  		this.restore_revision_info = new RevisionInfo () {  			Folder = new SparkleFolder (match.Groups [1].Value)'  			Revision = match.Groups [2].Value'  			FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  		};  		string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  		string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  		ShowSaveDialogEvent (file_name' target_folder_path);  	}  } else if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (match.Success) {  	string author_name = match.Groups [3].Value;  	string timestamp = match.Groups [4].Value;  	this.restore_revision_info = new RevisionInfo () {  		Folder = new SparkleFolder (match.Groups [1].Value)'  		Revision = match.Groups [2].Value'  		FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  	};  	string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  	string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  	ShowSaveDialogEvent (file_name' target_folder_path);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (match.Success) {  	string author_name = match.Groups [3].Value;  	string timestamp = match.Groups [4].Value;  	this.restore_revision_info = new RevisionInfo () {  		Folder = new SparkleFolder (match.Groups [1].Value)'  		Revision = match.Groups [2].Value'  		FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  	};  	string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  	string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  	ShowSaveDialogEvent (file_name' target_folder_path);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (match.Success) {  	string author_name = match.Groups [3].Value;  	string timestamp = match.Groups [4].Value;  	this.restore_revision_info = new RevisionInfo () {  		Folder = new SparkleFolder (match.Groups [1].Value)'  		Revision = match.Groups [2].Value'  		FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  	};  	string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  	string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  	ShowSaveDialogEvent (file_name' target_folder_path);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (match.Success) {  	string author_name = match.Groups [3].Value;  	string timestamp = match.Groups [4].Value;  	this.restore_revision_info = new RevisionInfo () {  		Folder = new SparkleFolder (match.Groups [1].Value)'  		Revision = match.Groups [2].Value'  		FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  	};  	string file_name = Path.GetFileNameWithoutExtension (this.restore_revision_info.FilePath) + " (" + author_name + " " + timestamp + ")" + Path.GetExtension (this.restore_revision_info.FilePath);  	string target_folder_path = Path.Combine (this.restore_revision_info.Folder.FullPath' Path.GetDirectoryName (this.restore_revision_info.FilePath));  	ShowSaveDialogEvent (file_name' target_folder_path);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: this.restore_revision_info = new RevisionInfo () {  	Folder = new SparkleFolder (match.Groups [1].Value)'  	Revision = match.Groups [2].Value'  	FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  };  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: this.restore_revision_info = new RevisionInfo () {  	Folder = new SparkleFolder (match.Groups [1].Value)'  	Revision = match.Groups [2].Value'  	FilePath = Uri.UnescapeDataString (match.Groups [5].Value)  };  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("back://")) {  	this.history_view_active = false;  	SelectedFolder = this.selected_folder;  	// TODO: Return to the same position on the page  	UpdateChooserEnablementEvent (true);  } else if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("history://")) {  	this.history_view_active = true;  	ContentLoadingEvent ();  	UpdateSizeInfoEvent ("…"' "…");  	UpdateChooserEnablementEvent (false);  	string folder = href.Replace ("history://"' "").Split ("/".ToCharArray ()) [0];  	string file_path = href.Replace ("history://" + folder + "/"' "");  	byte[] file_path_bytes = Encoding.Default.GetBytes (file_path);  	file_path = Encoding.UTF8.GetString (file_path_bytes);  	file_path = Uri.UnescapeDataString (file_path);  	foreach (BaseRepository repo in SparkleShare.Controller.Repositories) {  		if (!repo.Name.Equals (folder))  			continue;  		new Thread (() => {  			SparkleDelay delay = new SparkleDelay ();  			List<ChangeSet> change_sets = repo.GetChangeSets (file_path);  			string html = GetHistoryHTMLLog (change_sets' file_path);  			delay.Stop ();  			if (!string.IsNullOrEmpty (html))  				UpdateContentEvent (html);  		}).Start ();  		break;  	}  } else {  	if (href.StartsWith ("file:///"))  		href = href.Substring (7);  	SparkleShare.Controller.OpenFile (href);  }  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: if (href.StartsWith ("file:///"))  	href = href.Substring (7);  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,LinkClicked,The following statement contains a magic number: href = href.Substring (7);  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetLog,The following statement contains a magic number: if (list.Count > 100)  	return list.GetRange (0' 100);  else  	return list.GetRange (0' list.Count);  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetLog,The following statement contains a magic number: if (list.Count > 100)  	return list.GetRange (0' 100);  else  	return list.GetRange (0' list.Count);  
Magic Number,SparkleShare,EventLogController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\EventLogController.cs,GetLog,The following statement contains a magic number: return list.GetRange (0' 100);  
Magic Number,SparkleShare,NoteController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\NoteController.cs,NoteController,The following statement contains a magic number: if (SparkleShare.Controller.AvatarsEnabled && !SparkleShare.Controller.FirstRun)  	AvatarFilePath = Avatars.GetAvatar (SparkleShare.Controller.CurrentUser.Email' 48' SparkleShare.Controller.Config.DirectoryPath);  
Magic Number,SparkleShare,NoteController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\NoteController.cs,NoteController,The following statement contains a magic number: AvatarFilePath = Avatars.GetAvatar (SparkleShare.Controller.CurrentUser.Email' 48' SparkleShare.Controller.Config.DirectoryPath);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,AddPageCompleted,The following statement contains a magic number: if (remote_path.EndsWith (".git"))  	SyncingFolder = remote_path.Substring (0' remote_path.Length - 4);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,AddPageCompleted,The following statement contains a magic number: SyncingFolder = remote_path.Substring (0' remote_path.Length - 4);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,InvitePageCompleted,The following statement contains a magic number: if (PendingInvite.RemotePath.EndsWith (".git"))  	SyncingFolder = PendingInvite.RemotePath.Substring (0' PendingInvite.RemotePath.Length - 4);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,InvitePageCompleted,The following statement contains a magic number: SyncingFolder = PendingInvite.RemotePath.Substring (0' PendingInvite.RemotePath.Length - 4);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,StoragePageCompleted,The following statement contains a magic number: ProgressBarPercentage = 100.0;  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,StoragePageCompleted,The following statement contains a magic number: new Thread (() => {  	Thread.Sleep (1000);  	SparkleShare.Controller.FinishFetcher (storage_type);  }).Start ();  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,StoragePageCompleted,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,CryptoPasswordPageCompleted,The following statement contains a magic number: ProgressBarPercentage = 100.0;  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,CryptoPasswordPageCompleted,The following statement contains a magic number: new Thread (() => {  	Thread.Sleep (1000);  	SparkleShare.Controller.FinishFetcher (StorageType.Encrypted' password);  }).Start ();  
Magic Number,SparkleShare,SetupController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\SetupController.cs,CryptoPasswordPageCompleted,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,SparkleShare,StatusIconController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\StatusIconController.cs,RecentEventsClicked,The following statement contains a magic number: new Thread (() => {  	while (!SparkleShare.Controller.RepositoriesLoaded)  		Thread.Sleep (100);  	SparkleShare.Controller.ShowEventLogWindow ();  }).Start ();  
Magic Number,SparkleShare,StatusIconController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\StatusIconController.cs,RecentEventsClicked,The following statement contains a magic number: while (!SparkleShare.Controller.RepositoriesLoaded)  	Thread.Sleep (100);  
Magic Number,SparkleShare,StatusIconController,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Common\StatusIconController.cs,RecentEventsClicked,The following statement contains a magic number: Thread.Sleep (100);  
Missing Default,SparkleShare,StatusIcon,F:\newReposMay17\hbons_SparkleShare\SparkleShare\Mac\UserInterface\StatusIcon.cs,StatusIcon,The following switch statement is missing a default case: switch (state) {  case IconState.Idle: {  	this.status_item.Image = this.syncing_idle_image;  	break;  }  case IconState.SyncingUp: {  	this.status_item.Image = this.syncing_up_image;  	break;  }  case IconState.SyncingDown: {  	this.status_item.Image = this.syncing_down_image;  	break;  }  case IconState.Syncing: {  	this.status_item.Image = this.syncing_image;  	break;  }  case IconState.Error: {  	this.status_item.Image = this.syncing_error_image;  	break;  }  }  
