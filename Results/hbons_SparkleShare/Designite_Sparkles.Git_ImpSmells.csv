Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,The method has 109 lines of code.
Complex Method,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,Fetch,Cyclomatic complexity of the method is 9
Complex Method,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,Cyclomatic complexity of the method is 11
Complex Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,SyncDown,Cyclomatic complexity of the method is 8
Complex Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,Cyclomatic complexity of the method is 15
Complex Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,GetChangeSetsInternal,Cyclomatic complexity of the method is 16
Complex Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseChange,Cyclomatic complexity of the method is 8
Complex Method,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,PrepareDirectories,Cyclomatic complexity of the method is 8
Long Statement,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,EnableFetchedRepoCrypto,The length of the statement  "                string.Format ("\"openssl enc -d -aes-256-cbc -base64 -S {0} -pass file:{1} -md sha256\""' password_salt' password_file)); " is 122.
Long Statement,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,EnableFetchedRepoCrypto,The length of the statement  "                string.Format ("\"openssl enc -e -aes-256-cbc -base64 -S {0} -pass file:{1} -md sha256\""' password_salt' password_file)); " is 122.
Long Statement,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,The length of the statement  "                    string file_name_A = Path.GetFileNameWithoutExtension (conflicting_file_path) + clue_A + Path.GetExtension (conflicting_file_path); " is 131.
Long Statement,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,The length of the statement  "                    string file_name_B = Path.GetFileNameWithoutExtension (conflicting_file_path) + clue_B + Path.GetExtension (conflicting_file_path); " is 131.
Long Statement,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseChangeSet,The length of the statement  "                int.Parse (match.Groups ["year"].Value)' int.Parse (match.Groups ["month"].Value)' int.Parse (match.Groups ["day"].Value)' " is 122.
Long Statement,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseChangeSet,The length of the statement  "                int.Parse (match.Groups ["hour"].Value)' int.Parse (match.Groups ["minute"].Value)' int.Parse (match.Groups ["second"].Value)); " is 127.
Complex Conditional,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,The conditional expression  "line.StartsWith ("UU") || line.StartsWith ("AA") ||                      line.StartsWith ("AU") || line.StartsWith ("UA")"  is complex.
Complex Conditional,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,GetChangeSetsInternal,The conditional expression  "change_set.Timestamp.Year == last_change_set.Timestamp.Year &&                          change_set.Timestamp.Month == last_change_set.Timestamp.Month &&                          change_set.Timestamp.Day == last_change_set.Timestamp.Day &&                          change_set.User.Name.Equals (last_change_set.User.Name)"  is complex.
Complex Conditional,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseChange,The conditional expression  "!line.StartsWith ("A\t") &&                  !line.StartsWith ("M\t") &&                  !line.StartsWith ("D\t") &&                  !line.StartsWith ("R100\t")"  is complex.
Magic Number,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,Fetch,The following statement contains a magic number: Thread.Sleep (500);
Magic Number,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,Fetch,The following statement contains a magic number: OnProgressChanged (100' 0' "");
Magic Number,Sparkles.Git,GitFetcher,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Fetcher.cs,Fetch,The following statement contains a magic number: Thread.Sleep (500);
Magic Number,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,The following statement contains a magic number: skipped_file_count = int.Parse (match.Groups [3].Value);
Magic Number,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,The following statement contains a magic number: total_file_count = int.Parse (match.Groups [2].Value) - skipped_file_count;
Magic Number,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,The following statement contains a magic number: percentage = Math.Round ((double) current_file / total_file_count * 100' 0);
Magic Number,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,The following statement contains a magic number: percentage = (number / 100 * 20);
Magic Number,Sparkles.Git,GitCommand,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Command.cs,ParseProgress,The following statement contains a magic number: percentage = (number / 100 * 20);
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ResolveConflict,The following statement contains a magic number: string conflicting_file_path = line.Substring (3);
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,GetChangeSetsInternal,The following statement contains a magic number: count++ == 256
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseChangeSet,The following statement contains a magic number: int their_offset = int.Parse (time_zone.Substring (0' 3));
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseStatus,The following statement contains a magic number: string path = line.Substring (3' line.IndexOf (" -> ") - 3).Trim ("\" ".ToCharArray ());
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseStatus,The following statement contains a magic number: string path = line.Substring (3' line.IndexOf (" -> ") - 3).Trim ("\" ".ToCharArray ());
Magic Number,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,ParseStatus,The following statement contains a magic number: string moved_to_path = line.Substring (line.IndexOf (" -> ") + 4).Trim ("\" ".ToCharArray ());
Missing Default,Sparkles.Git,GitRepository,D:\research\architectureSmells\repos\hbons_SparkleShare\Sparkles\Git\Git.Repository.cs,FormatCommitMessage,The following switch statement is missing a default case: switch (change.Type) {                      case ChangeType.Edited:                          message += "/";                          break;                      case ChangeType.Deleted:                          message += "-";                          break;                      case ChangeType.Added:                          message += "+";                          break;                      }
