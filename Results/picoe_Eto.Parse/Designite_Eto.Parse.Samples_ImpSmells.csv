Implementation smell,Namespace,Class,File,Method,Description
Long Method,Eto.Parse.Samples.Markdown,HtmlElementParser,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\HtmlElementParser.cs,InnerParse,The method has 135 lines of code.
Complex Method,Eto.Parse.Samples.Markdown,HtmlElementParser,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\HtmlElementParser.cs,InnerParse,Cyclomatic complexity of the method is 24
Complex Method,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Transform,Cyclomatic complexity of the method is 11
Long Parameter List,Eto.Parse.Samples.Markdown,MarkdownEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\MarkdownEncoding.cs,ReplaceEncoding,The method has 5 parameters. Parameters: index' end' scanner' matches' args
Long Statement,Eto.Parse.Samples.Markdown.Encodings,CodeEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\CodeEncoding.cs,Initialize,The length of the statement  "			Add(new BalancedParser { Surrounding = parens }/*' (parens & new RepeatParser().Until(Terminals.Literal("`")' true) & parens)*/); " is 129.
Long Statement,Eto.Parse.Samples.Markdown.Encodings,CodeEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\CodeEncoding.cs,Encode,The length of the statement  "			return code.Replace("&"' "&amp;").Replace(">"' "&gt;").Replace("<"' "&lt;").Replace("\""' "&quot;").Replace("\t"' "    "); " is 122.
Long Statement,Eto.Parse.Samples.Markdown.Encodings,EscapeEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\EscapeEncoding.cs,Initialize,The length of the statement  "			this.Add("&" & ~(+Terminals.Letter & ";")' Terminals.Set("<>\"")' Terminals.Literal("\\") & Terminals.Set("&><\\`*_{}[]()#+-.!")); " is 130.
Long Statement,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Initialize,The length of the statement  "			var title = new StringParser { Name = "title"' BeginQuoteCharacters = "\"'(".ToCharArray()' EndQuoteCharacters = "\"')".ToCharArray() }; " is 136.
Long Statement,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Initialize,The length of the statement  "			var enclosedLink = Terminals.Literal("\\").Not() & "<" & (Terminals.Set(">\r\n ").Inverse().Except("\\>").Repeat(1)).WithName("link") & ">"; " is 140.
Long Statement,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Initialize,The length of the statement  "			var link = "(" & Terms.ows & (enclosedLink | openLink | new EmptyParser().WithName("link")) & ~((Terms.ws | (Terms.ows & Terms.eol & Terms.ows)) & title) & Terms.ows & ")"; " is 172.
Long Statement,Eto.Parse.Samples.Markdown.Sections,ParagraphSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ParagraphSection.cs,Initialize,The length of the statement  "			var lines = content.Repeat(1).SeparatedBy(Terms.eol).Until((Terms.eol & finish.NonCaptured()) | Terms.EndOfSection(minLines: 2)' true); " is 135.
Long Statement,Eto.Parse.Samples.Markdown.Sections,ReferenceSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ReferenceSection.cs,Initialize,The length of the statement  "			var title = new StringParser { Name = "title"' BeginQuoteCharacters = "\"'(".ToCharArray()' EndQuoteCharacters = "\"')".ToCharArray() }; " is 136.
Long Statement,Eto.Parse.Samples.Markdown.Sections,ListSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ListSection.cs,Initialize,The length of the statement  "			var content = grammar.Encoding.ReplacementsWithAnyChar().Repeat().Until(Terms.blankLine & (Terms.blankLine | Terms.ows & start)); " is 129.
Long Statement,Eto.Parse.Samples.Markdown.Sections,DoubleLineHeaderSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\DoubleLineHeaderSection.cs,Initialize,The length of the statement  "			var suffix = Terminals.Eol & ((+Terminals.Literal("=")).Named("h1") | (+Terminals.Literal("-")).Named("h2")) & Terms.ows & Terminals.Eol; " is 137.
Magic Number,Eto.Parse.Samples.Markdown,HtmlElementParser,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\HtmlElementParser.cs,InnerParse,The following statement contains a magic number: if (ch == '<')  			{  				ch = scanner.ReadChar();  				length++;  				if (ch == '!')  				{  					length = 7;  					// read comment  					if (scanner.ReadString("--"' true))  					{  						while (!scanner.ReadString("-->"' true))  						{  							if (scanner.ReadChar() == -1)  							{  								scanner.Position = pos;  								return -1;  							}  							length++;  						}  						return length;  					}  					scanner.Position = pos;  					return -1;  				}  				tagNameBuilder.Clear();  				var first = true;  				while (ch != -1 && char.IsLetter((char)ch))  				{  					if (first && !char.IsLetter((char)ch))  					{  						scanner.Position = pos;  						return -1;  					}  					first = false;  					tagNameBuilder.Append((char)ch);  					ch = scanner.ReadChar();  					length++;  				}  				if (ch == ' ' || ch == '>' || ch == '/')  				{  					var isVoid = voidTags.Contains(tagNameBuilder.ToString());  					int prev = ch;  					while (ch != '>' && ch != -1)  					{  						prev = ch;  						if (ch == '\'' || ch == '"')  						{  							var quote = ch;  							ch = scanner.ReadChar();  							length++;  							while (ch != quote && ch != -1)  							{  								if (ch == '\n')  								{  									scanner.Position = pos;  									return -1;  								}  								ch = scanner.ReadChar();  								length++;  							}  						}  						ch = scanner.ReadChar();  						length++;  					}  					if (ch != '>')  					{  						scanner.Position = pos;  						return -1;  					}  					if (isVoid || prev == '/') // self closing' or a tag with no content  					{  						return length;  					}    					// now' read till the end tag  					if (MatchContent && Name != null)  						args.Push();  					var start = pos + length;  					var contentLength = 0;  					tagNameBuilder.Insert(0' "</");  					tagNameBuilder.Append(">");  					var tagName = tagNameBuilder.ToString();  					while (!scanner.ReadString(tagName' true))  					{  						ch = scanner.Peek();  						if (ch == '<')  						{  							if (MatchContent && contentLength > 0)  							{  								args.AddMatch(this' start' contentLength' "content");  							}  							var inner = Parse(args);  							if (inner < 0)  							{  								scanner.Position = pos;  								return -1;  							}  							length += inner;  							start = pos + length;  							contentLength = 0;  							continue;  						}  							if (scanner.Advance(1) >= 0)  						{  							length++;  							contentLength++;  						}  						else  						{  							scanner.Position = pos;  							return -1;  						}  					}  					length += tagName.Length;  					if (MatchContent)  					{  						if (contentLength > 0)  						{  							args.AddMatch(this' start' contentLength' "content");  						}  						if (Name != null)  							args.PopMatch(this' pos' length);  					}  					return length;  				}  			}
Magic Number,Eto.Parse.Samples.Markdown,Terms,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Terms.cs,EndOfSection,The following statement contains a magic number: if (suffix != null)  				return (blankLine.Repeat(minLines ?? 1) & suffix) | eol & eof | eof;  			else  				return blankLine.Repeat(minLines ?? 2) | eol & eof | eof;
Magic Number,Eto.Parse.Samples.Markdown.Encodings,BoldEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\BoldEncoding.cs,Transform,The following statement contains a magic number: if (match.HasMatches)  				args.Encoding.ReplaceEncoding(match.Index + 2' match.Index + match.Length - 2' match.Scanner' match.Matches' args);  			else  				args.Output.Append(match.Scanner.Substring(match.Index + 2' match.Length - 4));
Magic Number,Eto.Parse.Samples.Markdown.Encodings,BoldEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\BoldEncoding.cs,Transform,The following statement contains a magic number: if (match.HasMatches)  				args.Encoding.ReplaceEncoding(match.Index + 2' match.Index + match.Length - 2' match.Scanner' match.Matches' args);  			else  				args.Output.Append(match.Scanner.Substring(match.Index + 2' match.Length - 4));
Magic Number,Eto.Parse.Samples.Markdown.Encodings,BoldEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\BoldEncoding.cs,Transform,The following statement contains a magic number: if (match.HasMatches)  				args.Encoding.ReplaceEncoding(match.Index + 2' match.Index + match.Length - 2' match.Scanner' match.Matches' args);  			else  				args.Output.Append(match.Scanner.Substring(match.Index + 2' match.Length - 4));
Magic Number,Eto.Parse.Samples.Markdown.Encodings,BoldEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\BoldEncoding.cs,Transform,The following statement contains a magic number: if (match.HasMatches)  				args.Encoding.ReplaceEncoding(match.Index + 2' match.Index + match.Length - 2' match.Scanner' match.Matches' args);  			else  				args.Output.Append(match.Scanner.Substring(match.Index + 2' match.Length - 4));
Magic Number,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Transform,The following statement contains a magic number: if (link.Name == "ref" || link.Name == "name")  			{  				if (string.IsNullOrEmpty(linkValue))  					linkValue = nameValue;  				if (args.References.TryGetValue(linkValue' out reference))  				{  					url = reference.Url;  					title = reference.Title;  				}  				else  					url = title = null;  			}  			else  			{  				url = linkValue;  				if (count > 2)  					title = match.Matches[2].StringValue;  				else  					title = null;  			}
Magic Number,Eto.Parse.Samples.Markdown.Encodings,LinkEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\LinkEncoding.cs,Transform,The following statement contains a magic number: if (link.Name == "ref" || link.Name == "name")  			{  				if (string.IsNullOrEmpty(linkValue))  					linkValue = nameValue;  				if (args.References.TryGetValue(linkValue' out reference))  				{  					url = reference.Url;  					title = reference.Title;  				}  				else  					url = title = null;  			}  			else  			{  				url = linkValue;  				if (count > 2)  					title = match.Matches[2].StringValue;  				else  					title = null;  			}
Magic Number,Eto.Parse.Samples.Markdown.Encodings,ItalicEncoding,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Encodings\ItalicEncoding.cs,Transform,The following statement contains a magic number: if (match.HasMatches)  				args.Encoding.ReplaceEncoding(match.Index + 1' match.Index + match.Length - 1' match.Scanner' match.Matches' args);  			else  				args.Output.Append(match.Scanner.Substring(match.Index + 1' match.Length - 2));
Magic Number,Eto.Parse.Samples.Markdown.Sections,ParagraphSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ParagraphSection.cs,Initialize,The following statement contains a magic number: var prefix = Terms.sp.Repeat(0' 3);
Magic Number,Eto.Parse.Samples.Markdown.Sections,ParagraphSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ParagraphSection.cs,Initialize,The following statement contains a magic number: var lines = content.Repeat(1).SeparatedBy(Terms.eol).Until((Terms.eol & finish.NonCaptured()) | Terms.EndOfSection(minLines: 2)' true);
Magic Number,Eto.Parse.Samples.Markdown.Sections,HeaderSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\HeaderSection.cs,Transform,The following statement contains a magic number: var level = Math.Min(match.Matches[0].Length' 6);
Magic Number,Eto.Parse.Samples.Markdown.Sections,ReferenceSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ReferenceSection.cs,Initialize,The following statement contains a magic number: Add(Terms.sp.Repeat(0' 3)' prefix' Terms.ows' link' Terms.ows' ~title' +Terms.blankLine | Terms.eof);
Magic Number,Eto.Parse.Samples.Markdown.Sections,ReferenceSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ReferenceSection.cs,AddReference,The following statement contains a magic number: if (match.Matches.Count > 2)  				reference.Title = match.Matches[2].StringValue;
Magic Number,Eto.Parse.Samples.Markdown.Sections,ReferenceSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ReferenceSection.cs,AddReference,The following statement contains a magic number: if (match.Matches.Count > 2)  				reference.Title = match.Matches[2].StringValue;
Magic Number,Eto.Parse.Samples.Markdown.Sections,ListSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\ListSection.cs,Initialize,The following statement contains a magic number: var prefix = Terms.sp.Repeat(0' 3);
Magic Number,Eto.Parse.Samples.Markdown.Sections,BlockQuoteSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\BlockQuoteSection.cs,Transform,The following statement contains a magic number: for (int i = 0; i < match.Matches.Count - 1; i += 2)  			{  				var prefix = match.Matches[i];  				var line = match.Matches[i+1];  				str.AppendUnixLine(line.Text);  				//args.Encoding.Replace(line.Text' args);  			}
Magic Number,Eto.Parse.Samples.Markdown.Sections,HrSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\HrSection.cs,Initialize,The following statement contains a magic number: var prefix = Terminals.Repeat(c => c == ' ' || c == '\t'' 0' 3);
Magic Number,Eto.Parse.Samples.Markdown.Sections,HrSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\HrSection.cs,Initialize,The following statement contains a magic number: var dash = Terminals.Literal("-").Repeat(3).SeparatedBy(Terms.ows).Until(Terms.eolorf);
Magic Number,Eto.Parse.Samples.Markdown.Sections,HrSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\HrSection.cs,Initialize,The following statement contains a magic number: var star = Terminals.Literal("*").Repeat(3).SeparatedBy(Terms.ows).Until(Terms.eolorf);
Magic Number,Eto.Parse.Samples.Markdown.Sections,HrSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\HrSection.cs,Initialize,The following statement contains a magic number: var underscore = Terminals.Literal("_").Repeat(3).SeparatedBy(Terms.ows).Until(Terms.eolorf);
Magic Number,Eto.Parse.Samples.Markdown.Sections,DoubleLineHeaderSection,C:\repos\picoe_Eto.Parse\Eto.Parse.Samples\Markdown\Sections\DoubleLineHeaderSection.cs,Initialize,The following statement contains a magic number: var prefix = Terms.sp.Repeat(0' 3);
