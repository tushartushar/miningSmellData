Implementation smell,Namespace,Class,File,Method,Description
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_connection_request_was_successful,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => _api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {(IntPtr) 123' SCardProtocol.T1});
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_connection_request_was_successful,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,It_should_have_a_valid_handle,The following statement contains a magic number: _sut.Handle                  .Should()                  .Be((IntPtr) 123);
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_disposes_a_reader_connection,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => _api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {(IntPtr) 123' SCardProtocol.T1});
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_disposes_a_reader_connection,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,It_should_have_disconnected_the_reader,The following statement contains a magic number: A.CallTo(() => _api.Disconnect((IntPtr) 123' A<SCardReaderDisposition>.Ignored))                  .MustHaveHappenedOnceExactly();
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_disconnects,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => _api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {(IntPtr) 123' SCardProtocol.T1});
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_disconnects,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,It_should_have_disconnected_the_reader,The following statement contains a magic number: A.CallTo(() => _api.Disconnect((IntPtr) 123' SCardReaderDisposition.Reset))                  .MustHaveHappenedOnceExactly();
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_reconnects,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => _api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {(IntPtr) 123' SCardProtocol.T1});
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_reconnects,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => _api.Reconnect((IntPtr) 123' SCardShareMode.Direct' SCardProtocol.Any'                      SCardReaderDisposition.Reset' out protocol))                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {SCardProtocol.T15});
Magic Number,PCSC.Tests.CardHandleSpecs,If_the_user_reconnects,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardHandleSpecs\CardHandleSpecs.cs,It_should_have_a_valid_handle,The following statement contains a magic number: _sut.Handle                  .Should()                  .Be((IntPtr) 123);
Magic Number,PCSC.Tests.CardReaderSpecs,CardReaderSpec,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,CardReaderSpec,The following statement contains a magic number: A.CallTo(() => CardHandle.Handle).Returns((IntPtr) 123);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: var recvBufferLength = 10;
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Transmit(CardHandle.Handle' SCardPCI.Raw' _sendBuffer' 3' _receivePci.MemoryPtr'                      _receiveBuffer' ref recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {3});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Transmit(CardHandle.Handle' SCardPCI.Raw' _sendBuffer' 3' _receivePci.MemoryPtr'                      _receiveBuffer' ref recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {3});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Transmit(CardHandle.Handle' SCardPCI.Raw' _sendBuffer' 3' _receivePci.MemoryPtr'                      _receiveBuffer' ref recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {3});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: _bytesReceived = Sut.Transmit(                  sendPci: SCardPCI.Raw'                  sendBuffer: _sendBuffer'                  sendBufferLength: 3'                  receivePci: _receivePci'                  receiveBuffer: _receiveBuffer'                  receiveBufferLength: 10);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: _bytesReceived = Sut.Transmit(                  sendPci: SCardPCI.Raw'                  sendBuffer: _sendBuffer'                  sendBufferLength: 3'                  receivePci: _receivePci'                  receiveBuffer: _receiveBuffer'                  receiveBufferLength: 10);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_call_the_Transmit_API,The following statement contains a magic number: var recvBufferLength = 10;
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_call_the_Transmit_API,The following statement contains a magic number: A.CallTo(() => Api.Transmit(CardHandle.Handle' SCardPCI.Raw' _sendBuffer' 3' _receivePci.MemoryPtr'                      _receiveBuffer' ref recvBufferLength))                  .MustHaveHappenedOnceExactly();
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_transmits_data_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_receive_3_bytes,The following statement contains a magic number: _bytesReceived.Should().Be(3);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: var recvBufferLength = 10;
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Control(CardHandle.Handle' _controlCode' _sendBuffer' 3' _receiveBuffer'                      recvBufferLength' out recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Control(CardHandle.Handle' _controlCode' _sendBuffer' 3' _receiveBuffer'                      recvBufferLength' out recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Control(CardHandle.Handle' _controlCode' _sendBuffer' 3' _receiveBuffer'                      recvBufferLength' out recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Control(CardHandle.Handle' _controlCode' _sendBuffer' 3' _receiveBuffer'                      recvBufferLength' out recvBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: _bytesReceived = Sut.Control(_controlCode' _sendBuffer' 3' _receiveBuffer' 10);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: _bytesReceived = Sut.Control(_controlCode' _sendBuffer' 3' _receiveBuffer' 10);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_call_the_Control_API,The following statement contains a magic number: var recvBufferLength = 10;
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_call_the_Control_API,The following statement contains a magic number: A.CallTo(() => Api.Control(CardHandle.Handle' _controlCode' _sendBuffer' 3' _receiveBuffer'                      recvBufferLength' out recvBufferLength))                  .MustHaveHappenedOnceExactly();
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sends_an_IO_control_to_the_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_receive_4_bytes,The following statement contains a magic number: _bytesReceived.Should().Be(4);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.GetAttrib(CardHandle.Handle' _attributeId' _receiveBuffer' 10' out receiveBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.GetAttrib(CardHandle.Handle' _attributeId' _receiveBuffer' 10' out receiveBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.GetAttrib(CardHandle.Handle' _attributeId' _receiveBuffer' 10' out receiveBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.GetAttrib(CardHandle.Handle' _attributeId' _receiveBuffer' 10' out receiveBufferLength))                  .Invokes(_ => {                      _receiveBuffer[0] = 0xA;                      _receiveBuffer[1] = 0xB;                      _receiveBuffer[2] = 0xC;                      _receiveBuffer[3] = 0xD;                  })                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {4});
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: _bytesReceived = Sut.GetAttrib(_attributeId' _receiveBuffer' 10);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_receives_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_receive_4_bytes,The following statement contains a magic number: _bytesReceived.Should().Be(4);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sets_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.SetAttrib(CardHandle.Handle' _attributeId' _sendBuffer' 4))                  .Returns(SCardError.Success);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sets_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,BecauseOf,The following statement contains a magic number: Sut.SetAttrib(_attributeId' _sendBuffer' 4);
Magic Number,PCSC.Tests.CardReaderSpecs,If_the_user_sets_a_reader_attribute,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\CardReaderSpecs\CardReaderSpecs.cs,Should_it_call_the_SetAttrib_API,The following statement contains a magic number: A.CallTo(() => Api.SetAttrib(CardHandle.Handle' _attributeId' _sendBuffer' 4))                  .MustHaveHappenedOnceExactly();
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_new_reader_has_been_attached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchFirstCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (1 << 16) // only one connected reader                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_new_reader_has_been_attached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchSecondCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (2 << 16) // two connected readers                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_new_reader_has_been_attached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchSecondCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (2 << 16) // two connected readers                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_new_reader_has_been_attached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,BecauseOf,The following statement contains a magic number: _getStatusChangeCall.WaitOne(TimeSpan.FromSeconds(5));
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_new_reader_has_been_attached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,BecauseOf,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(100));
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_reader_has_been_detached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchFirstCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (2 << 16) // two connected readers                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_reader_has_been_detached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchFirstCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (2 << 16) // two connected readers                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_reader_has_been_detached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,MatchSecondCall,The following statement contains a magic number: return state.ReaderName == "\\\\?PnP?\\Notification"                     && state.CurrentStateValue == (IntPtr) (1 << 16) // one connected reader                     && state.EventStateValue == (IntPtr) SCRState.Unknown;
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_reader_has_been_detached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,BecauseOf,The following statement contains a magic number: _getStatusChangeCall.WaitOne(TimeSpan.FromSeconds(5));
Magic Number,PCSC.Tests.Monitoring.DeviceMonitorSpecs,If_a_reader_has_been_detached,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\Monitoring\DeviceMonitorSpecs\DeviceMonitorSpecs.cs,BecauseOf,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromMilliseconds(100));
Magic Number,PCSC.Tests.SCardContextSpecs,If_the_user_connects_to_a_card_handle,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardContextSpecs\SCardContextSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] {(IntPtr) 123' SCardProtocol.T1});
Magic Number,PCSC.Tests.SCardContextSpecs,If_the_user_connects_to_a_card_handle,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardContextSpecs\SCardContextSpecs.cs,It_should_have_the_API_returned_handle_value_of_123,The following statement contains a magic number: _cardHandle.Handle.Should().Be((IntPtr) 123);
Magic Number,PCSC.Tests.SCardContextSpecs,If_the_user_connects_to_a_smartcard_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardContextSpecs\SCardContextSpecs.cs,EstablishContext,The following statement contains a magic number: A.CallTo(() => Api.Connect(A<IntPtr>._' A<string>._' A<SCardShareMode>._' A<SCardProtocol>._' out handle'                      out protocol))                  .WithAnyArguments()                  .Returns(SCardError.Success)                  .AssignsOutAndRefParametersLazily(_ => new object[] { (IntPtr)123' SCardProtocol.T1 });
Magic Number,PCSC.Tests.SCardContextSpecs,If_the_user_connects_to_a_smartcard_reader,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardContextSpecs\SCardContextSpecs.cs,It_should_have_the_card_handle_set,The following statement contains a magic number: _reader.CardHandle.Handle.Should().Be((IntPtr) 123);
Magic Number,PCSC.Tests,SCardReaderStateTest,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardReaderStateTest.cs,CardChangeEventCntSetTest,The following statement contains a magic number: state.CardChangeEventCnt = 65535;
Magic Number,PCSC.Tests,SCardReaderStateTest,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardReaderStateTest.cs,CardChangeEventCntSetTest,The following statement contains a magic number: state.CardChangeEventCnt                  .Should()                  .Be(65535);
Magic Number,PCSC.Tests,SCardReaderStateTest,D:\research\architectureSmells\repos\danm-de_pcsc-sharp\Tests\PCSC.Tests\SCardReaderStateTest.cs,CardChangeEventCntSetTest,The following statement contains a magic number: ((Action) (() => state.CardChangeEventCnt = 65536))                  .Should().Throw<ArgumentException>();
