Implementation smell,Namespace,Class,File,Method,Description
Long Method,iCarouselSample,AsyncImageViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AsyncImageViewController.cs,InitListOfImages,The method has 305 lines of code.
Long Statement,iCarouselSample,AutoScrollViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,StartScrolling,The length of the statement  "			scrollTimer = NSTimer.CreateScheduledTimer (1.0/30.0' this' new MonoTouch.ObjCRuntime.Selector ("scrollStep")' null' true); " is 123.
Magic Number,iCarouselSample,SimpleSampleViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\SimpleSampleViewController.cs,ViewDidLoad,The following statement contains a magic number: items = Enumerable.Range (1' 100).ToList();
Magic Number,iCarouselSample,SimpleDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\SimpleSampleViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};    					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,SimpleDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\SimpleSampleViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};    					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,SimpleDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\SimpleSampleViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};    					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,ControlsViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewDidLoad,The following statement contains a magic number: Label = new UILabel (new RectangleF (20' 362' 280' 21)) {  				BackgroundColor = UIColor.Clear'  				Text = string.Empty'  				TextAlignment = UITextAlignment.Center  			};
Magic Number,iCarouselSample,ControlsViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewDidLoad,The following statement contains a magic number: Label = new UILabel (new RectangleF (20' 362' 280' 21)) {  				BackgroundColor = UIColor.Clear'  				Text = string.Empty'  				TextAlignment = UITextAlignment.Center  			};
Magic Number,iCarouselSample,ControlsViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewDidLoad,The following statement contains a magic number: Label = new UILabel (new RectangleF (20' 362' 280' 21)) {  				BackgroundColor = UIColor.Clear'  				Text = string.Empty'  				TextAlignment = UITextAlignment.Center  			};
Magic Number,iCarouselSample,ControlsViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewDidLoad,The following statement contains a magic number: Label = new UILabel (new RectangleF (20' 362' 280' 21)) {  				BackgroundColor = UIColor.Clear'  				Text = string.Empty'  				TextAlignment = UITextAlignment.Center  			};
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,NumberOfItems,The following statement contains a magic number: return 100;
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ControlsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ControlsViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null) {    					var itemView = new UIView (new RectangleF (0' 0' 200' 200)) {  						AutoresizingMask = UIViewAutoresizing.All  					};    					// Creating the background  					var imgView = new UIImageView (new RectangleF (-20' -90' 240' 380)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					itemView.AddSubview (imgView);    					// We create and add some controls  					// UIButton  					var button = UIButton.FromType (UIButtonType.RoundedRect);  					button.Frame = new RectangleF (20' 20' 160' 37);  					button.SetTitle ("Press me!"' UIControlState.Normal);  					button.TouchUpInside += (sender' e) => {  						vc.Label.Text = string.Format ("Button {0} tapped"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (button))  						vc.ObjCache.Add (button);    					itemView.AddSubview (button);    					// UISwitch  					var switchbtn = new UISwitch (new RectangleF (62' 86' 79' 27));  					switchbtn.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Switch {0} toggled"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (switchbtn))  						vc.ObjCache.Add (switchbtn);    					itemView.AddSubview (switchbtn);    					// UISlider  					var slider = new UISlider (new RectangleF (41' 146' 118' 23)) {  						MinValue = 0'  						MaxValue = 100'  						Value = 50  					};  					slider.ValueChanged += (sender' e) => {  						vc.Label.Text = string.Format ("Slider {0} changed"' vc.Carousel.IndexOfItemViewOrSubview (sender as UIView));  					};    					if (!vc.ObjCache.Contains (slider))  						vc.ObjCache.Add (slider);    					itemView.AddSubview (slider);    					reusingView = itemView;  				}
Magic Number,iCarouselSample,ButtonsViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ButtonsViewController.cs,ViewDidLoad,The following statement contains a magic number: items = Enumerable.Range (1' 100).ToList();
Magic Number,iCarouselSample,ButtonsDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\ButtonsViewController.cs,ViewForItem,The following statement contains a magic number: if (button == null) {  					//no button available to recycle' so create new one  					var image = UIImage.FromBundle ("page.png");  					button = UIButton.FromType (UIButtonType.Custom);  					button.Frame = new RectangleF (0' 0' image.Size.Width' image.Size.Height);  					button.SetTitleColor (UIColor.Black' UIControlState.Normal);  					button.SetBackgroundImage (image' UIControlState.Normal);  					button.TitleLabel.Font = button.TitleLabel.Font.WithSize (50);  					button.TouchUpInside += (sender' e) => {  						var idx = vc.carousel.IndexOfItemViewOrSubview (sender as UIView);  						new UIAlertView ("Hello"' "You tapped button number " + idx' null' "Ok"' null).Show ();  					};  				}
Magic Number,iCarouselSample,AutoScrollViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,ViewDidLoad,The following statement contains a magic number: items = Enumerable.Range (1' 100).ToList();
Magic Number,iCarouselSample,AutoScrollViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,StartScrolling,The following statement contains a magic number: scrollTimer = NSTimer.CreateScheduledTimer (1.0/30.0' this' new MonoTouch.ObjCRuntime.Selector ("scrollStep")' null' true);
Magic Number,iCarouselSample,AutoScrollDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					  					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,AutoScrollDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					  					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,AutoScrollDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AutoScrollViewController.cs,ViewForItem,The following statement contains a magic number: if (reusingView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					var imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						Image = UIImage.FromBundle ("page")'  						ContentMode = UIViewContentMode.Center  					};  					  					label = new UILabel (imgView.Bounds) {  						BackgroundColor = UIColor.Clear'  						TextAlignment = UITextAlignment.Center'  						Tag = 1  					};  					label.Font = label.Font.WithSize (50);  					imgView.AddSubview (label);  					reusingView = imgView;  				}  				else  				{  					// get a reference to the label in the recycled view  					label = (UILabel) reusingView.ViewWithTag (1);  				}
Magic Number,iCarouselSample,AsyncImageDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AsyncImageViewController.cs,ViewForItem,The following statement contains a magic number: if (imgView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						ContentMode = UIViewContentMode.ScaleAspectFit  					};  				}
Magic Number,iCarouselSample,AsyncImageDataSource,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AsyncImageViewController.cs,ViewForItem,The following statement contains a magic number: if (imgView == null)  				{  					// don't do anything specific to the index within  					// this `if (view == null) {...}` statement because the view will be  					// recycled and used with other index values later  					imgView = new UIImageView (new RectangleF (0' 0' 200' 200)) {  						ContentMode = UIViewContentMode.ScaleAspectFit  					};  				}
Duplicate Code,iCarouselSample,AsyncImageViewController,C:\repos\mono_monotouch-bindings\iCarousel\samples\iCarouselSample\ViewControllers\AsyncImageViewController.cs,InitListOfImages,The method contains a code clone-set at the following line numbers (starting from the method definition): ((158' 187)' (204' 233))
