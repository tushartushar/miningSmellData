Implementation smell,Namespace,Class,File,Method,Description
Magic Number,GoogleAdmobSample,AppDelegate,C:\repos\mono_monotouch-bindings\GoogleAdMobAds\samples\GoogleAdmobSample\GoogleAdmobSample\AppDelegate.cs,AddToTableView,The following statement contains a magic number: if (adViewTableView == null) {    				// Setup your GADBannerView' review GADAdSizeCons class for more Ad sizes.   				adViewTableView = new GADBannerView (size: GADAdSizeCons.Banner' origin: new PointF (-10' 0)) {  					AdUnitID = admobId'  					RootViewController = navController  				};    				// Wire DidReceiveAd event to know when the Ad is ready to be displayed  				adViewTableView.DidReceiveAd += (object sender' EventArgs e) => {  					if (!adOnTable) {  						dvcDialog.Root.Add( new Section (caption: "Ad Section") {  							new UIViewElement(caption: "Ad"' view: adViewTableView' transparent: true)  						});  						adOnTable = true;  					}  				};  			}
Magic Number,GoogleAdmobSample,AppDelegate,C:\repos\mono_monotouch-bindings\GoogleAdMobAds\samples\GoogleAdmobSample\GoogleAdmobSample\AppDelegate.cs,RemoveAdFromTableView,The following statement contains a magic number: if (adViewTableView != null) {  				if (adOnTable) {  					dvcDialog.Root.RemoveAt (idx: 2' anim: UITableViewRowAnimation.Fade);  				}  				adOnTable = false;    				// You need to explicitly Dispose GADBannerView when you dont need it anymore  				// to avoid crashes if pending request are in progress  				adViewTableView.Dispose();  				adViewTableView = null;  			}
Magic Number,GoogleAdmobSample,AppDelegate,C:\repos\mono_monotouch-bindings\GoogleAdMobAds\samples\GoogleAdmobSample\GoogleAdmobSample\AppDelegate.cs,AddToWindow,The following statement contains a magic number: if (adViewWindow == null) {    				// Setup your GADBannerView' review GADAdSizeCons class for more Ad sizes.   				adViewWindow = new GADBannerView (size: GADAdSizeCons.Banner'   				                                  origin: new PointF (0' window.Bounds.Size.Height - GADAdSizeCons.Banner.size.Height)) {  					AdUnitID = admobId'  					RootViewController = navController  				};    				// Wire DidReceiveAd event to know when the Ad is ready to be displayed  				adViewWindow.DidReceiveAd += (object sender' EventArgs e) => {  					if (!adOnWindow) {  						navController.View.Subviews.First().Frame = new RectangleF(0' 0' 320' UIScreen.MainScreen.Bounds.Height - 50);  						navController.View.AddSubview(adViewWindow);  						adOnWindow = true;  					}  				};  			}
Magic Number,GoogleAdmobSample,AppDelegate,C:\repos\mono_monotouch-bindings\GoogleAdMobAds\samples\GoogleAdmobSample\GoogleAdmobSample\AppDelegate.cs,AddToWindow,The following statement contains a magic number: if (adViewWindow == null) {    				// Setup your GADBannerView' review GADAdSizeCons class for more Ad sizes.   				adViewWindow = new GADBannerView (size: GADAdSizeCons.Banner'   				                                  origin: new PointF (0' window.Bounds.Size.Height - GADAdSizeCons.Banner.size.Height)) {  					AdUnitID = admobId'  					RootViewController = navController  				};    				// Wire DidReceiveAd event to know when the Ad is ready to be displayed  				adViewWindow.DidReceiveAd += (object sender' EventArgs e) => {  					if (!adOnWindow) {  						navController.View.Subviews.First().Frame = new RectangleF(0' 0' 320' UIScreen.MainScreen.Bounds.Height - 50);  						navController.View.AddSubview(adViewWindow);  						adOnWindow = true;  					}  				};  			}
Magic Number,GoogleAdmobSample,AppDelegate,C:\repos\mono_monotouch-bindings\GoogleAdMobAds\samples\GoogleAdmobSample\GoogleAdmobSample\AppDelegate.cs,RemoveAdFromWindow,The following statement contains a magic number: if (adViewWindow != null) {  				if (adOnWindow) {  					navController.View.Subviews.First().Frame = new RectangleF(0' 0' 320' UIScreen.MainScreen.Bounds.Height);  					adViewWindow.RemoveFromSuperview();  				}  				adOnWindow = false;    				// You need to explicitly Dispose GADBannerView when you dont need it anymore  				// to avoid crashes if pending request are in progress  				adViewWindow.Dispose();  				adViewWindow = null;  			}
