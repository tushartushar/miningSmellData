Implementation smell,Namespace,Class,File,Method,Description
Long Method,Pinta.ImageManipulation,SurfaceDiff,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SurfaceDiff.cs,Create,The method has 134 lines of code.
Long Method,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,RenderLine,The method has 103 lines of code.
Long Method,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The method has 101 lines of code.
Long Method,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The method has 187 lines of code.
Long Method,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The method has 181 lines of code.
Long Method,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The method has 185 lines of code.
Complex Method,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,Cyclomatic complexity of the method is 9
Complex Method,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBlendModeOp,Cyclomatic complexity of the method is 14
Complex Method,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,Cyclomatic complexity of the method is 8
Complex Method,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,Cyclomatic complexity of the method is 15
Complex Method,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,Cyclomatic complexity of the method is 12
Complex Method,Pinta.ImageManipulation.Effects,WarpEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\WarpEffect.cs,RenderLine,Cyclomatic complexity of the method is 12
Complex Method,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,Cyclomatic complexity of the method is 8
Complex Method,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,Cyclomatic complexity of the method is 13
Complex Method,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,RenderLine,Cyclomatic complexity of the method is 11
Complex Method,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,Cyclomatic complexity of the method is 8
Complex Method,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,Cyclomatic complexity of the method is 12
Complex Method,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,Cyclomatic complexity of the method is 11
Complex Method,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,Cyclomatic complexity of the method is 16
Complex Method,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,Cyclomatic complexity of the method is 10
Complex Method,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,Cyclomatic complexity of the method is 9
Complex Method,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,Cyclomatic complexity of the method is 21
Complex Method,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,Cyclomatic complexity of the method is 21
Complex Method,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,Render,Cyclomatic complexity of the method is 9
Complex Method,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,ProcessGradientLine,Cyclomatic complexity of the method is 8
Long Parameter List,Pinta.ImageManipulation,BaseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BaseEffect.cs,RenderAsync,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,BaseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BaseEffect.cs,RenderLoop,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,BinaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\BinaryPixelOp.cs,ApplyAsync,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,BinaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\BinaryPixelOp.cs,ApplyAsync,The method has 5 parameters. Parameters: lhs' rhs' dst' roi' token
Long Parameter List,Pinta.ImageManipulation,BinaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\BinaryPixelOp.cs,ApplyAsync,The method has 6 parameters. Parameters: lhs' rhs' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,BinaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\BinaryPixelOp.cs,ApplyLoop,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,BinaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\BinaryPixelOp.cs,ApplyLoop,The method has 6 parameters. Parameters: lhs' rhs' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,ApplyAsync,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,ApplyLoop,The method has 5 parameters. Parameters: src' dst' roi' token' progress
Long Parameter List,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,Min,The method has 5 parameters. Parameters: n1' d1' n2' d2' lastResort
Long Parameter List,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,Max,The method has 5 parameters. Parameters: n1' d1' n2' d2' lastResort
Long Parameter List,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The method has 8 parameters. Parameters: c1' w1' c2' w2' c3' w3' c4' w4
Long Parameter List,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleWrapped,The method has 6 parameters. Parameters: src' srcDataPtr' srcWidth' srcHeight' x' y
Long Parameter List,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The method has 6 parameters. Parameters: scale' power' seed' fromColor' toColor' blendMode
Long Parameter List,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Noise,The method has 5 parameters. Parameters: ix' iy' x' y' seed
Long Parameter List,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The method has 7 parameters. Parameters: surface' rect' scale' seed' power' colorFrom' colorTo
Long Parameter List,Pinta.ImageManipulation.Effects,PolarInversionEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PolarInversionEffect.cs,PolarInversionEffect,The method has 6 parameters. Parameters: amount' quality' centerOffset' edgeBehavior' primaryColor' secondaryColor
Long Parameter List,Pinta.ImageManipulation.Effects,WarpEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\WarpEffect.cs,WarpEffect,The method has 5 parameters. Parameters: quality' centerOffset' edgeBehavior' primaryColor' secondaryColor
Long Parameter List,Pinta.ImageManipulation.Effects,UnfocusEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\UnfocusEffect.cs,ApplyWithAlpha,The method has 6 parameters. Parameters: src' area' sum' hb' hg' hr
Long Parameter List,Pinta.ImageManipulation.Effects,SharpenEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SharpenEffect.cs,Apply,The method has 6 parameters. Parameters: src' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,Apply,The method has 6 parameters. Parameters: color' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,GetPercentileOfColor,The method has 6 parameters. Parameters: color' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The method has 5 parameters. Parameters: x' y' src' cellSize' srcBounds
Long Parameter List,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The method has 6 parameters. Parameters: src' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,MedianEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MedianEffect.cs,Apply,The method has 6 parameters. Parameters: src' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,MandelbrotFractalEffect,The method has 5 parameters. Parameters: factor' quality' zoom' angle' invertColors
Long Parameter List,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,Apply,The method has 6 parameters. Parameters: src' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,ApplyWithAlpha,The method has 6 parameters. Parameters: src' area' sum' hb' hg' hr
Long Parameter List,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The method has 6 parameters. Parameters: percentile' area' hb' hg' hr' ha
Long Parameter List,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,ProcessGradientLine,The method has 5 parameters. Parameters: startAlpha' endAlpha' y' rect' surface
Long Parameter List,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,LevelOp,The method has 5 parameters. Parameters: in_lo' in_hi' gamma' out_lo' out_hi
Long Statement,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,Apply,The length of the statement  "				throw new InvalidOperationException ("Source and destination surfaces must be the same size or use an overload with a specified bounds.");" is 138.
Long Statement,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,ApplyAsync,The length of the statement  "				throw new InvalidOperationException ("Source and destination surfaces must be the same size or use an overload with a specified bounds.");" is 138.
Long Statement,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,ApplyAsync,The length of the statement  "				throw new InvalidOperationException ("Source and destination surfaces must be the same size or use an overload with a specified bounds.");" is 138.
Long Statement,Pinta.ImageManipulation,UnaryPixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UnaryPixelOp.cs,ApplyAsync,The length of the statement  "				throw new InvalidOperationException ("Source and destination surfaces must be the same size or use an overload with a specified bounds.");" is 138.
Long Statement,Pinta.ImageManipulation,UserBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelOperations\UserBlendOp.cs,ToString,The length of the statement  "			PropertyInfo pi = this.GetType ().GetProperty ("StaticName"' BindingFlags.Static | BindingFlags.Public | BindingFlags.GetProperty);" is 131.
Long Statement,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The length of the statement  "                b = (uint)((((long)c1.A * c1.B * w1) + ((long)c2.A * c2.B * w2) + ((long)c3.A * c3.B * w3) + ((long)c4.A * c4.B * w4)) / af);" is 125.
Long Statement,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The length of the statement  "                g = (uint)((((long)c1.A * c1.G * w1) + ((long)c2.A * c2.G * w2) + ((long)c3.A * c3.G * w3) + ((long)c4.A * c4.G * w4)) / af);" is 125.
Long Statement,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The length of the statement  "                r = (uint)((((long)c1.A * c1.R * w1) + ((long)c2.A * c2.R * w2) + ((long)c3.A * c3.R * w3) + ((long)c4.A * c4.R * w4)) / af);" is 125.
Long Statement,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The length of the statement  "			var c = ColorBgra.BlendColors4W16IP (colorTopLeft' 16384' colorTopRight' 16384' colorBottomLeft' 16384' colorBottomRight' 16384);" is 129.
Long Statement,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The length of the statement  "					*dstPtr = ColorBgra.FromBgra (Utility.ClampToByte (b / count)' Utility.ClampToByte (g / count)' Utility.ClampToByte (r / count)' Utility.ClampToByte (a / count));" is 162.
Long Statement,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The length of the statement  "					*dstPtr = ColorBgra.FromBgra (Utility.ClampToByte (b / count)' Utility.ClampToByte (g / count)' Utility.ClampToByte (r / count)' Utility.ClampToByte (a / count));" is 162.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((lhs).B) + ((rhs).B)); }; { fG = Math.Min (255' ((lhs).G) + ((rhs).G)); }; { fR = Math.Min (255' ((lhs).R) + ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1092.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((*dst).B) + ((*src).B)); }; { fG = Math.Min (255' ((*dst).G) + ((*src).G)); }; { fR = Math.Min (255' ((*dst).R) + ((*src).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1135.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((*lhs).B) + ((*rhs).B)); }; { fG = Math.Min (255' ((*lhs).G) + ((*rhs).G)); }; { fR = Math.Min (255' ((*lhs).R) + ((*rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1142.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((lhs).B) + ((rhs).B)); }; { fG = Math.Min (255' ((lhs).G) + ((rhs).G)); }; { fR = Math.Min (255' ((lhs).R) + ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1092.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((lhs).B) + ((rhs).B)); }; { fG = Math.Min (255' ((lhs).G) + ((rhs).G)); }; { fR = Math.Min (255' ((lhs).R) + ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1105.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((*dst).B) + ((*src).B)); }; { fG = Math.Min (255' ((*dst).G) + ((*src).G)); }; { fR = Math.Min (255' ((*dst).R) + ((*src).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1148.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min (255' ((*lhs).B) + ((*rhs).B)); }; { fG = Math.Min (255' ((*lhs).G) + ((*rhs).G)); }; { fR = Math.Min (255' ((*lhs).R) + ((*rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1155.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 0) { fB = 0; } else { { int i = (((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((lhs).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((rhs).G) == 0) { fG = 0; } else { { int i = (((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((lhs).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((rhs).R) == 0) { fR = 0; } else { { int i = (((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((lhs).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1692.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 0) { fB = 0; } else { { int i = (((*src).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((*dst).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((*src).G) == 0) { fG = 0; } else { { int i = (((*src).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((*dst).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((*src).R) == 0) { fR = 0; } else { { int i = (((*src).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((*dst).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1738.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 0) { fB = 0; } else { { int i = (((*rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((*lhs).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((*rhs).G) == 0) { fG = 0; } else { { int i = (((*rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((*lhs).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((*rhs).R) == 0) { fR = 0; } else { { int i = (((*rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((*lhs).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1745.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 0) { fB = 0; } else { { int i = (((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((lhs).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((rhs).G) == 0) { fG = 0; } else { { int i = (((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((lhs).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((rhs).R) == 0) { fR = 0; } else { { int i = (((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((lhs).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1692.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 0) { fB = 0; } else { { int i = (((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((lhs).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((rhs).G) == 0) { fG = 0; } else { { int i = (((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((lhs).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((rhs).R) == 0) { fR = 0; } else { { int i = (((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((lhs).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1705.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 0) { fB = 0; } else { { int i = (((*src).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((*dst).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((*src).G) == 0) { fG = 0; } else { { int i = (((*src).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((*dst).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((*src).R) == 0) { fR = 0; } else { { int i = (((*src).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((*dst).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1751.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 0) { fB = 0; } else { { int i = (((*rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((255 - ((*lhs).B)) * 255) * M) + A) >> (int)S); }; fB = 255 - fB; fB = Math.Max (0' fB); } }; { if (((*rhs).G) == 0) { fG = 0; } else { { int i = (((*rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((255 - ((*lhs).G)) * 255) * M) + A) >> (int)S); }; fG = 255 - fG; fG = Math.Max (0' fG); } }; { if (((*rhs).R) == 0) { fR = 0; } else { { int i = (((*rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((255 - ((*lhs).R)) * 255) * M) + A) >> (int)S); }; fR = 255 - fR; fR = Math.Max (0' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1758.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = ((255 - ((rhs).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((lhs).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = ((255 - ((rhs).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((lhs).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = ((255 - ((rhs).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((lhs).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1665.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 255) { fB = 255; } else { { int i = ((255 - ((*src).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((*dst).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*src).G) == 255) { fG = 255; } else { { int i = ((255 - ((*src).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((*dst).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*src).R) == 255) { fR = 255; } else { { int i = ((255 - ((*src).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((*dst).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1711.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 255) { fB = 255; } else { { int i = ((255 - ((*rhs).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((*lhs).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*rhs).G) == 255) { fG = 255; } else { { int i = ((255 - ((*rhs).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((*lhs).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*rhs).R) == 255) { fR = 255; } else { { int i = ((255 - ((*rhs).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((*lhs).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1718.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = ((255 - ((rhs).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((lhs).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = ((255 - ((rhs).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((lhs).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = ((255 - ((rhs).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((lhs).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1665.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = ((255 - ((rhs).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((lhs).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = ((255 - ((rhs).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((lhs).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = ((255 - ((rhs).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((lhs).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1678.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 255) { fB = 255; } else { { int i = ((255 - ((*src).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((*dst).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*src).G) == 255) { fG = 255; } else { { int i = ((255 - ((*src).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((*dst).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*src).R) == 255) { fR = 255; } else { { int i = ((255 - ((*src).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((*dst).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1724.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 255) { fB = 255; } else { { int i = ((255 - ((*rhs).B))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)((((((*lhs).B) * 255) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*rhs).G) == 255) { fG = 255; } else { { int i = ((255 - ((*rhs).G))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)((((((*lhs).G) * 255) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*rhs).R) == 255) { fR = 255; } else { { int i = ((255 - ((*rhs).R))) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)((((((*lhs).R) * 255) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1731.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((rhs).B)) * (((lhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((rhs).B) + ((lhs).B) - fB; }; { { fG = ((((rhs).G)) * (((lhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((rhs).G) + ((lhs).G) - fG; }; { { fR = ((((rhs).R)) * (((lhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((rhs).R) + ((lhs).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1299.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*src).B)) * (((*dst).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((*src).B) + ((*dst).B) - fB; }; { { fG = ((((*src).G)) * (((*dst).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((*src).G) + ((*dst).G) - fG; }; { { fR = ((((*src).R)) * (((*dst).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((*src).R) + ((*dst).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1348.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*rhs).B)) * (((*lhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((*rhs).B) + ((*lhs).B) - fB; }; { { fG = ((((*rhs).G)) * (((*lhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((*rhs).G) + ((*lhs).G) - fG; }; { { fR = ((((*rhs).R)) * (((*lhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((*rhs).R) + ((*lhs).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1355.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((rhs).B)) * (((lhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((rhs).B) + ((lhs).B) - fB; }; { { fG = ((((rhs).G)) * (((lhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((rhs).G) + ((lhs).G) - fG; }; { { fR = ((((rhs).R)) * (((lhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((rhs).R) + ((lhs).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1299.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((rhs).B)) * (((lhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((rhs).B) + ((lhs).B) - fB; }; { { fG = ((((rhs).G)) * (((lhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((rhs).G) + ((lhs).G) - fG; }; { { fR = ((((rhs).R)) * (((lhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((rhs).R) + ((lhs).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1312.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*src).B)) * (((*dst).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((*src).B) + ((*dst).B) - fB; }; { { fG = ((((*src).G)) * (((*dst).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((*src).G) + ((*dst).G) - fG; }; { { fR = ((((*src).R)) * (((*dst).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((*src).R) + ((*dst).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1361.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*rhs).B)) * (((*lhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = ((*rhs).B) + ((*lhs).B) - fB; }; { { fG = ((((*rhs).G)) * (((*lhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = ((*rhs).G) + ((*lhs).G) - fG; }; { { fR = ((((*rhs).R)) * (((*lhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = ((*rhs).R) + ((*lhs).R) - fR; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1368.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((lhs).B' (rhs).B); }; { fG = Math.Min ((lhs).G' (rhs).G); }; { fR = Math.Min ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1062.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((*dst).B' (*src).B); }; { fG = Math.Min ((*dst).G' (*src).G); }; { fR = Math.Min ((*dst).R' (*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1105.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((*lhs).B' (*rhs).B); }; { fG = Math.Min ((*lhs).G' (*rhs).G); }; { fR = Math.Min ((*lhs).R' (*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1112.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((lhs).B' (rhs).B); }; { fG = Math.Min ((lhs).G' (rhs).G); }; { fR = Math.Min ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1062.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((lhs).B' (rhs).B); }; { fG = Math.Min ((lhs).G' (rhs).G); }; { fR = Math.Min ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1075.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((*dst).B' (*src).B); }; { fG = Math.Min ((*dst).G' (*src).G); }; { fR = Math.Min ((*dst).R' (*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1118.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Min ((*lhs).B' (*rhs).B); }; { fG = Math.Min ((*lhs).G' (*rhs).G); }; { fR = Math.Min ((*lhs).R' (*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1125.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((lhs).B' (rhs).B); }; { fG = Math.Max ((lhs).G' (rhs).G); }; { fR = Math.Max ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1062.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((*dst).B' (*src).B); }; { fG = Math.Max ((*dst).G' (*src).G); }; { fR = Math.Max ((*dst).R' (*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1105.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((*lhs).B' (*rhs).B); }; { fG = Math.Max ((*lhs).G' (*rhs).G); }; { fR = Math.Max ((*lhs).R' (*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1112.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((lhs).B' (rhs).B); }; { fG = Math.Max ((lhs).G' (rhs).G); }; { fR = Math.Max ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1062.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((lhs).B' (rhs).B); }; { fG = Math.Max ((lhs).G' (rhs).G); }; { fR = Math.Max ((lhs).R' (rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1075.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((*dst).B' (*src).B); }; { fG = Math.Max ((*dst).G' (*src).G); }; { fR = Math.Max ((*dst).R' (*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1118.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Max ((*lhs).B' (*rhs).B); }; { fG = Math.Max ((*lhs).G' (*rhs).G); }; { fR = Math.Max ((*lhs).R' (*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1125.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((lhs).B) - ((rhs).B))); }; { fG = (255 - Math.Abs (255 - ((lhs).G) - ((rhs).G))); }; { fR = (255 - Math.Abs (255 - ((lhs).R) - ((rhs).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1119.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((*dst).B) - ((*src).B))); }; { fG = (255 - Math.Abs (255 - ((*dst).G) - ((*src).G))); }; { fR = (255 - Math.Abs (255 - ((*dst).R) - ((*src).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1162.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((*lhs).B) - ((*rhs).B))); }; { fG = (255 - Math.Abs (255 - ((*lhs).G) - ((*rhs).G))); }; { fR = (255 - Math.Abs (255 - ((*lhs).R) - ((*rhs).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1169.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((lhs).B) - ((rhs).B))); }; { fG = (255 - Math.Abs (255 - ((lhs).G) - ((rhs).G))); }; { fR = (255 - Math.Abs (255 - ((lhs).R) - ((rhs).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1119.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((lhs).B) - ((rhs).B))); }; { fG = (255 - Math.Abs (255 - ((lhs).G) - ((rhs).G))); }; { fR = (255 - Math.Abs (255 - ((lhs).R) - ((rhs).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1132.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((*dst).B) - ((*src).B))); }; { fG = (255 - Math.Abs (255 - ((*dst).G) - ((*src).G))); }; { fR = (255 - Math.Abs (255 - ((*dst).R) - ((*src).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1175.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (255 - Math.Abs (255 - ((*lhs).B) - ((*rhs).B))); }; { fG = (255 - Math.Abs (255 - ((*lhs).G) - ((*rhs).G))); }; { fR = (255 - Math.Abs (255 - ((*lhs).R) - ((*rhs).R))); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1182.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((rhs).B) - ((lhs).B)); }; { fG = Math.Abs (((rhs).G) - ((lhs).G)); }; { fR = Math.Abs (((rhs).R) - ((lhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1077.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((*src).B) - ((*dst).B)); }; { fG = Math.Abs (((*src).G) - ((*dst).G)); }; { fR = Math.Abs (((*src).R) - ((*dst).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1120.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((*rhs).B) - ((*lhs).B)); }; { fG = Math.Abs (((*rhs).G) - ((*lhs).G)); }; { fR = Math.Abs (((*rhs).R) - ((*lhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1127.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((rhs).B) - ((lhs).B)); }; { fG = Math.Abs (((rhs).G) - ((lhs).G)); }; { fR = Math.Abs (((rhs).R) - ((lhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1077.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((rhs).B) - ((lhs).B)); }; { fG = Math.Abs (((rhs).G) - ((lhs).G)); }; { fR = Math.Abs (((rhs).R) - ((lhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1090.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((*src).B) - ((*dst).B)); }; { fG = Math.Abs (((*src).G) - ((*dst).G)); }; { fR = Math.Abs (((*src).R) - ((*dst).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1133.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = Math.Abs (((*rhs).B) - ((*lhs).B)); }; { fG = Math.Abs (((*rhs).G) - ((*lhs).G)); }; { fR = Math.Abs (((*rhs).R) - ((*lhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1140.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) < 128) { { fB = ((2 * ((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((lhs).B))) * (255 - ((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((lhs).G) < 128) { { fG = ((2 * ((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((lhs).G))) * (255 - ((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((lhs).R) < 128) { { fR = ((2 * ((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((lhs).R))) * (255 - ((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1653.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*dst).B) < 128) { { fB = ((2 * ((*dst).B)) * (((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((*dst).B))) * (255 - ((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((*dst).G) < 128) { { fG = ((2 * ((*dst).G)) * (((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((*dst).G))) * (255 - ((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((*dst).R) < 128) { { fR = ((2 * ((*dst).R)) * (((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((*dst).R))) * (255 - ((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1705.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*lhs).B) < 128) { { fB = ((2 * ((*lhs).B)) * (((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((*lhs).B))) * (255 - ((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((*lhs).G) < 128) { { fG = ((2 * ((*lhs).G)) * (((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((*lhs).G))) * (255 - ((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((*lhs).R) < 128) { { fR = ((2 * ((*lhs).R)) * (((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((*lhs).R))) * (255 - ((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1712.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) < 128) { { fB = ((2 * ((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((lhs).B))) * (255 - ((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((lhs).G) < 128) { { fG = ((2 * ((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((lhs).G))) * (255 - ((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((lhs).R) < 128) { { fR = ((2 * ((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((lhs).R))) * (255 - ((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1653.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) < 128) { { fB = ((2 * ((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((lhs).B))) * (255 - ((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((lhs).G) < 128) { { fG = ((2 * ((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((lhs).G))) * (255 - ((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((lhs).R) < 128) { { fR = ((2 * ((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((lhs).R))) * (255 - ((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1666.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*dst).B) < 128) { { fB = ((2 * ((*dst).B)) * (((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((*dst).B))) * (255 - ((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((*dst).G) < 128) { { fG = ((2 * ((*dst).G)) * (((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((*dst).G))) * (255 - ((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((*dst).R) < 128) { { fR = ((2 * ((*dst).R)) * (((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((*dst).R))) * (255 - ((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1718.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*lhs).B) < 128) { { fB = ((2 * ((*lhs).B)) * (((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; } else { { fB = ((2 * (255 - ((*lhs).B))) * (255 - ((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; fB = 255 - fB; } }; { if (((*lhs).G) < 128) { { fG = ((2 * ((*lhs).G)) * (((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; } else { { fG = ((2 * (255 - ((*lhs).G))) * (255 - ((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; fG = 255 - fG; } }; { if (((*lhs).R) < 128) { { fR = ((2 * ((*lhs).R)) * (((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; } else { { fR = ((2 * (255 - ((*lhs).R))) * (255 - ((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; fR = 255 - fR; } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1725.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) == 255) { fB = 255; } else { { int i = (255 - ((lhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((rhs).B) * ((rhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((lhs).G) == 255) { fG = 255; } else { { int i = (255 - ((lhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((rhs).G) * ((rhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((lhs).R) == 255) { fR = 255; } else { { int i = (255 - ((lhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((rhs).R) * ((rhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1671.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*dst).B) == 255) { fB = 255; } else { { int i = (255 - ((*dst).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*src).B) * ((*src).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*dst).G) == 255) { fG = 255; } else { { int i = (255 - ((*dst).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*src).G) * ((*src).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*dst).R) == 255) { fR = 255; } else { { int i = (255 - ((*dst).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*src).R) * ((*src).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1720.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*lhs).B) == 255) { fB = 255; } else { { int i = (255 - ((*lhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*rhs).B) * ((*rhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*lhs).G) == 255) { fG = 255; } else { { int i = (255 - ((*lhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*rhs).G) * ((*rhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*lhs).R) == 255) { fR = 255; } else { { int i = (255 - ((*lhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*rhs).R) * ((*rhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1727.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) == 255) { fB = 255; } else { { int i = (255 - ((lhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((rhs).B) * ((rhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((lhs).G) == 255) { fG = 255; } else { { int i = (255 - ((lhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((rhs).G) * ((rhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((lhs).R) == 255) { fR = 255; } else { { int i = (255 - ((lhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((rhs).R) * ((rhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1671.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((lhs).B) == 255) { fB = 255; } else { { int i = (255 - ((lhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((rhs).B) * ((rhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((lhs).G) == 255) { fG = 255; } else { { int i = (255 - ((lhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((rhs).G) * ((rhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((lhs).R) == 255) { fR = 255; } else { { int i = (255 - ((lhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((rhs).R) * ((rhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1684.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*dst).B) == 255) { fB = 255; } else { { int i = (255 - ((*dst).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*src).B) * ((*src).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*dst).G) == 255) { fG = 255; } else { { int i = (255 - ((*dst).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*src).G) * ((*src).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*dst).R) == 255) { fR = 255; } else { { int i = (255 - ((*dst).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*src).R) * ((*src).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1733.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*lhs).B) == 255) { fB = 255; } else { { int i = (255 - ((*lhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*rhs).B) * ((*rhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*lhs).G) == 255) { fG = 255; } else { { int i = (255 - ((*lhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*rhs).G) * ((*rhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*lhs).R) == 255) { fR = 255; } else { { int i = (255 - ((*lhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*rhs).R) * ((*rhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1740.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = (255 - ((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((lhs).B) * ((lhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = (255 - ((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((lhs).G) * ((lhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = (255 - ((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((lhs).R) * ((lhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1671.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 255) { fB = 255; } else { { int i = (255 - ((*src).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*dst).B) * ((*dst).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*src).G) == 255) { fG = 255; } else { { int i = (255 - ((*src).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*dst).G) * ((*dst).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*src).R) == 255) { fR = 255; } else { { int i = (255 - ((*src).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*dst).R) * ((*dst).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1720.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 255) { fB = 255; } else { { int i = (255 - ((*rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*lhs).B) * ((*lhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*rhs).G) == 255) { fG = 255; } else { { int i = (255 - ((*rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*lhs).G) * ((*lhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*rhs).R) == 255) { fR = 255; } else { { int i = (255 - ((*rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*lhs).R) * ((*lhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1727.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = (255 - ((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((lhs).B) * ((lhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = (255 - ((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((lhs).G) * ((lhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = (255 - ((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((lhs).R) * ((lhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1671.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((rhs).B) == 255) { fB = 255; } else { { int i = (255 - ((rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((lhs).B) * ((lhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((rhs).G) == 255) { fG = 255; } else { { int i = (255 - ((rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((lhs).G) * ((lhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((rhs).R) == 255) { fR = 255; } else { { int i = (255 - ((rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((lhs).R) * ((lhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1684.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*src).B) == 255) { fB = 255; } else { { int i = (255 - ((*src).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*dst).B) * ((*dst).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*src).G) == 255) { fG = 255; } else { { int i = (255 - ((*src).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*dst).G) * ((*dst).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*src).R) == 255) { fR = 255; } else { { int i = (255 - ((*src).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*dst).R) * ((*dst).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1733.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { if (((*rhs).B) == 255) { fB = 255; } else { { int i = (255 - ((*rhs).B)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fB = (int)(((((*lhs).B) * ((*lhs).B) * M) + A) >> (int)S); }; fB = Math.Min (255' fB); } }; { if (((*rhs).G) == 255) { fG = 255; } else { { int i = (255 - ((*rhs).G)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fG = (int)(((((*lhs).G) * ((*lhs).G) * M) + A) >> (int)S); }; fG = Math.Min (255' fG); } }; { if (((*rhs).R) == 255) { fR = 255; } else { { int i = (255 - ((*rhs).R)) * 3; uint M = masTable[i]; uint A = masTable[i + 1]; uint S = masTable[i + 2]; fR = (int)(((((*lhs).R) * ((*lhs).R) * M) + A) >> (int)S); }; fR = Math.Min (255' fR); } }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1740.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1200.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*dst).B)) * (((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((*dst).G)) * (((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((*dst).R)) * (((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1243.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*lhs).B)) * (((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((*lhs).G)) * (((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((*lhs).R)) * (((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1250.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1200.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((lhs).B)) * (((rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((lhs).G)) * (((rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((lhs).R)) * (((rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1213.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*dst).B)) * (((*src).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((*dst).G)) * (((*src).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((*dst).R)) * (((*src).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1256.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { { fB = ((((*lhs).B)) * (((*rhs).B)) + 0x80); fB = ((((fB) >> 8) + (fB)) >> 8); }; }; { { fG = ((((*lhs).G)) * (((*rhs).G)) + 0x80); fG = ((((fG) >> 8) + (fG)) >> 8); }; }; { { fR = ((((*lhs).R)) * (((*rhs).R)) + 0x80); fR = ((((fR) >> 8) + (fR)) >> 8); }; }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1263.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((lhs).B) ^ ((rhs).B)); }; { fG = (((lhs).G) ^ ((rhs).G)); }; { fR = (((lhs).R) ^ ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1050.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((*dst).B) ^ ((*src).B)); }; { fG = (((*dst).G) ^ ((*src).G)); }; { fR = (((*dst).R) ^ ((*src).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1093.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((*lhs).B) ^ ((*rhs).B)); }; { fG = (((*lhs).G) ^ ((*rhs).G)); }; { fR = (((*lhs).R) ^ ((*rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1100.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((lhs).B) ^ ((rhs).B)); }; { fG = (((lhs).G) ^ ((rhs).G)); }; { fR = (((lhs).R) ^ ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1050.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((lhs).B) ^ ((rhs).B)); }; { fG = (((lhs).G) ^ ((rhs).G)); }; { fR = (((lhs).R) ^ ((rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1063.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((*dst).B) ^ ((*src).B)); }; { fG = (((*dst).G) ^ ((*src).G)); }; { fR = (((*dst).R) ^ ((*src).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1106.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = (((*lhs).B) ^ ((*rhs).B)); }; { fG = (((*lhs).G) ^ ((*rhs).G)); }; { fR = (((*lhs).R) ^ ((*rhs).R)); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1113.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The length of the statement  "				int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((*src).B); }; { fG = ((*src).G); }; { fR = ((*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length;" is 953.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((*rhs).B); }; { fG = ((*rhs).G); }; { fR = ((*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1055.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyStatic,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((rhs).B); }; { fG = ((rhs).G); }; { fR = ((rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1008.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The length of the statement  "{ int lhsA; { lhsA = ((lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((rhs).B); }; { fG = ((rhs).G); }; { fR = ((rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((lhs).B * y) + ((rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((lhs).G * y) + ((rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((lhs).R * y) + ((rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; return ColorBgra.FromUInt32 (ret); }" is 1021.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*dst).A); }; int rhsA; { rhsA = ApplyOpacity ((*src).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((*src).B); }; { fG = ((*src).G); }; { fR = ((*src).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*dst).B * y) + ((*src).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*dst).G * y) + ((*src).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*dst).R * y) + ((*src).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++src; --length; } }" is 1061.
Long Statement,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The length of the statement  "{ while (length > 0) { int lhsA; { lhsA = ((*lhs).A); }; int rhsA; { rhsA = ApplyOpacity ((*rhs).A); }; int y; { y = ((lhsA) * (255 - rhsA) + 0x80); y = ((((y) >> 8) + (y)) >> 8); }; int totalA = y + rhsA; uint ret; if (totalA == 0) { ret = 0; } else { int fB; int fG; int fR; { fB = ((*rhs).B); }; { fG = ((*rhs).G); }; { fR = ((*rhs).R); }; int x; { x = ((lhsA) * (rhsA) + 0x80); x = ((((x) >> 8) + (x)) >> 8); }; int z = rhsA - x; int masIndex = totalA * 3; uint taM = masTable[masIndex]; uint taA = masTable[masIndex + 1]; uint taS = masTable[masIndex + 2]; uint b = (uint)(((((long)((((*lhs).B * y) + ((*rhs).B * z) + (fB * x)))) * taM) + taA) >> (int)taS); uint g = (uint)(((((long)((((*lhs).G * y) + ((*rhs).G * z) + (fG * x)))) * taM) + taA) >> (int)taS); uint r = (uint)(((((long)((((*lhs).R * y) + ((*rhs).R * z) + (fR * x)))) * taM) + taA) >> (int)taS); int a; { { a = ((lhsA) * (255 - (rhsA)) + 0x80); a = ((((a) >> 8) + (a)) >> 8); }; a += (rhsA); }; ret = b + (g << 8) + (r << 16) + ((uint)a << 24); }; dst->Bgra = ret; ++dst; ++lhs; ++rhs; --length; } }" is 1068.
Complex Conditional,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The conditional expression  "after[c] > upo.ColorOutHigh[c] 					    || after[c] < upo.ColorOutLow[c] 					    || (int)Math.Floor (before[c]) < 0 					    || (int)Math.Ceiling (before[c]) > 255 					    || float.IsNaN (before[c])"  is complex.
Complex Conditional,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The conditional expression  "u1 > 0 && v1 > 0 && u1 < w && v1 < h"  is complex.
Complex Conditional,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The conditional expression  "u2 > 0 && v2 > 0 && u2 < w && v2 < h"  is complex.
Complex Conditional,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The conditional expression  "pt.X >= 0 && pt.Y >= 0 && pt.X <= (src_width - 1) && pt.Y <= (src_height - 1)"  is complex.
Complex Conditional,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,RenderLine,The conditional expression  "u >= 0 && u < src_width && v >= 0 && v < src_height"  is complex.
Complex Conditional,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,ProcessGradientLine,The conditional expression  "!AlphaOnly && (AlphaBlending && (startAlpha != 255 || endAlpha != 255))"  is complex.
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,Clear,The following statement contains a magic number: int w = (this.Width + 31) / 32;
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,Clear,The following statement contains a magic number: int w = (this.Width + 31) / 32;
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,GetUnchecked,The following statement contains a magic number: int cx = x / 32;
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,GetUnchecked,The following statement contains a magic number: int sx = x % 32;
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,SetUnchecked,The following statement contains a magic number: int cx = x / 32;
Magic Number,Pinta.ImageManipulation,BitVector2DSurfaceAdapter,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\BitVector2DSurfaceAdapter.cs,SetUnchecked,The following statement contains a magic number: int sx = x % 32;
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,GetMeanColor,The following statement contains a magic number: return ColorBgra.FromBgr ((byte)(mean[0] + 0.5f)' (byte)(mean[1] + 0.5f)' (byte)(mean[2] + 0.5f));
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,GetMeanColor,The following statement contains a magic number: return ColorBgra.FromBgr ((byte)(mean[0] + 0.5f)' (byte)(mean[1] + 0.5f)' (byte)(mean[2] + 0.5f));
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,GetMeanColor,The following statement contains a magic number: return ColorBgra.FromBgr ((byte)(mean[0] + 0.5f)' (byte)(mean[1] + 0.5f)' (byte)(mean[2] + 0.5f));
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,GetMeanColor,The following statement contains a magic number: return ColorBgra.FromBgr ((byte)(mean[0] + 0.5f)' (byte)(mean[1] + 0.5f)' (byte)(mean[2] + 0.5f));
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,GetPercentileColor,The following statement contains a magic number: return ColorBgra.FromBgr ((byte)(perc[0])' (byte)(perc[1])' (byte)(perc[2]));
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,AddSurfaceRectangleToHistogram,The following statement contains a magic number: long[] histogramR = histogram[2];
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The following statement contains a magic number: float[] before = new float[3];
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The following statement contains a magic number: float[] slopes = new float[3];
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The following statement contains a magic number: after[c] > upo.ColorOutHigh[c] 					    || after[c] < upo.ColorOutLow[c] 					    || (int)Math.Floor (before[c]) < 0 					    || (int)Math.Ceiling (before[c]) > 255 					    || float.IsNaN (before[c])
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The following statement contains a magic number: v <= 255
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,SetFromLeveledHistogram,The following statement contains a magic number: c < 3
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,MakeLevelsAuto,The following statement contains a magic number: ColorBgra lo = GetPercentileColor (0.005f);
Magic Number,Pinta.ImageManipulation,HistogramRgb,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\HistogramRGB.cs,MakeLevelsAuto,The following statement contains a magic number: ColorBgra hi = GetPercentileColor (0.995f);
Magic Number,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,GetNextLarger,The following statement contains a magic number: double ratio = Ratio + 0.005;
Magic Number,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,GetNextSmaller,The following statement contains a magic number: double ratio = Ratio - 0.005;
Magic Number,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,Reduce,The following statement contains a magic number: int factor = 2;
Magic Number,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,FromDouble,The following statement contains a magic number: int numerator = (int)(Math.Floor (scalar * 1000.0));
Magic Number,Pinta.ImageManipulation,ScaleFactor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\ScaleFactor.cs,FromDouble,The following statement contains a magic number: int denominator = 1000;
Magic Number,Pinta.ImageManipulation,SplineInterpolator,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SplineInterpolator.cs,Interpolate,The following statement contains a magic number: return a * ya[klo] + b * ya[khi] +                  ((a * a * a - a) * y2[klo] + (b * b * b - b) * y2[khi]) * (h * h) / 6.0;
Magic Number,Pinta.ImageManipulation,SplineInterpolator,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SplineInterpolator.cs,PreCompute,The following statement contains a magic number: double p = sig * y2[i - 1] + 2.0;
Magic Number,Pinta.ImageManipulation,SplineInterpolator,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SplineInterpolator.cs,PreCompute,The following statement contains a magic number: u[i] = (6.0 * ddydx / wx - sig * u[i - 1]) / p;
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,GetHashCode,The following statement contains a magic number: return (Hue + (Saturation << 8) + (Value << 16)).GetHashCode();
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,GetHashCode,The following statement contains a magic number: return (Hue + (Saturation << 8) + (Value << 16)).GetHashCode();
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,HsvColor,The following statement contains a magic number: hue < 0 || hue > 360
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,HsvColor,The following statement contains a magic number: saturation < 0 || saturation > 100
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,HsvColor,The following statement contains a magic number: value < 0 || value > 100
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: h = (double) Hue % 360;
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: s = (double) Saturation / 100;
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: v = (double) Value / 100;
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: return new RgbColor((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: return new RgbColor((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following statement contains a magic number: return new RgbColor((int)(r * 255)' (int)(g * 255)' (int)(b * 255));
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,RgbColor,The following statement contains a magic number: R < 0 || R > 255
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,RgbColor,The following statement contains a magic number: G < 0 || G > 255
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,RgbColor,The following statement contains a magic number: B < 0 || B > 255
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: double r = (double) Red / 255;
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: double g = (double) Green / 255;
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: double b = (double) Blue / 255;
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: h *= 60;
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: h += 360;
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: return new HsvColor((int)h' (int)(s * 100)' (int)(v * 100));
Magic Number,Pinta.ImageManipulation,RgbColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\RgbColor.cs,ToHsv,The following statement contains a magic number: return new HsvColor((int)h' (int)(s * 100)' (int)(v * 100));
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ParseHexString,The following statement contains a magic number: uint value = Convert.ToUInt32(hexString' 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: int rgbNumber = (this.R << 16) | (this.G << 8) | this.B;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: int rgbNumber = (this.R << 16) | (this.G << 8) | this.B;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: string colorString = Convert.ToString(rgbNumber' 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: colorString.Length < 6
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: string alphaString = System.Convert.ToString(this.A' 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ToHexString,The following statement contains a magic number: alphaString.Length < 2
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensity,The following statement contains a magic number: return ((0.114 * (double)B) + (0.587 * (double)G) + (0.299 * (double)R)) / 255.0;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensity,The following statement contains a magic number: return ((0.114 * (double)B) + (0.587 * (double)G) + (0.299 * (double)R)) / 255.0;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensity,The following statement contains a magic number: return ((0.114 * (double)B) + (0.587 * (double)G) + (0.299 * (double)R)) / 255.0;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensity,The following statement contains a magic number: return ((0.114 * (double)B) + (0.587 * (double)G) + (0.299 * (double)R)) / 255.0;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensityByte,The following statement contains a magic number: return (byte)((7471 * B + 38470 * G + 19595 * R) >> 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensityByte,The following statement contains a magic number: return (byte)((7471 * B + 38470 * G + 19595 * R) >> 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensityByte,The following statement contains a magic number: return (byte)((7471 * B + 38470 * G + 19595 * R) >> 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetIntensityByte,The following statement contains a magic number: return (byte)((7471 * B + 38470 * G + 19595 * R) >> 16);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,GetAverageColorChannelValue,The following statement contains a magic number: return (byte)((this.B + this.G + this.R) / 3);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BgraToUInt32,The following statement contains a magic number: return (uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,FromBgr,The following statement contains a magic number: return FromBgra(b' g' r' 255);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,Blend,The following statement contains a magic number: uint caA = (uint)Utility.FastScaleByteByByte ((byte)(255 - cbAlpha)' ca.A);
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The following statement contains a magic number: (w1 + w2 + w3 + w4) != 65536
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The following statement contains a magic number: const uint ww = 32768;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColors4W16IP,The following statement contains a magic number: uint a = (af + ww) >> 16;
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColorsWAIP,The following statement contains a magic number: return ColorBgra.FromUInt32((uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24));
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColorsWAIP,The following statement contains a magic number: return ColorBgra.FromUInt32((uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24));
Magic Number,Pinta.ImageManipulation,ColorBgra,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\ColorBgra.cs,BlendColorsWAIP,The following statement contains a magic number: return ColorBgra.FromUInt32((uint)b + ((uint)g << 8) + ((uint)r << 16) + ((uint)a << 24));
Magic Number,Pinta.ImageManipulation,SurfaceDiff,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SurfaceDiff.cs,Create,The following statement contains a magic number: var savings = 100 - (float)num_changed / (float)(orig_width * orig_height) * 100;
Magic Number,Pinta.ImageManipulation,SurfaceDiff,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\SurfaceDiff.cs,Create,The following statement contains a magic number: var savings = 100 - (float)num_changed / (float)(orig_width * orig_height) * 100;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: return 255;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,ClampToByte,The following statement contains a magic number: x > 255
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,FastDivideShortByByte,The following statement contains a magic number: int i = d * 3;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,FastDivideShortByByte,The following statement contains a magic number: uint s = masTable[i + 2];
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleClamped,The following statement contains a magic number: uint sxfrac = (uint)(256 * (u - (float)iu));
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleClamped,The following statement contains a magic number: uint sxfracinv = 256 - sxfrac;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleClamped,The following statement contains a magic number: uint syfrac = (uint)(256 * (v - (float)iv));
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleClamped,The following statement contains a magic number: uint syfracinv = 256 - syfrac;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleWrapped,The following statement contains a magic number: uint sxfrac = (uint)(256 * (u - (float)iu));
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleWrapped,The following statement contains a magic number: uint sxfracinv = 256 - sxfrac;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleWrapped,The following statement contains a magic number: uint syfrac = (uint)(256 * (v - (float)iv));
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBilinearSampleWrapped,The following statement contains a magic number: uint syfracinv = 256 - syfrac;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,FastScaleByteByByte,The following statement contains a magic number: int r2 = ((r1 >> 8) + r1) >> 8;
Magic Number,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,FastScaleByteByByte,The following statement contains a magic number: int r2 = ((r1 >> 8) + r1) >> 8;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: intensity < 0 || intensity > 100
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: colorSaturation < 0 || colorSaturation > 400
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: coverage < 0 || coverage > 100
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: this.coverage = coverage * 0.01;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: dev = this.intensity * this.intensity / 4;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: sat = this.color_saturation * 4096 / 100;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,AddNoiseEffect,The following statement contains a magic number: sat = this.color_saturation * 4096 / 100;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,NormalCurve,The following statement contains a magic number: return scale * Math.Exp (-x * x / 2);
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: double l = 5;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: double r = 10;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: double scale = 50;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: scale = (l + r) * 0.5;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: sum += NormalCurve (16.0 * ((double)i - tableSize / 2) / tableSize' scale);
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: sum += NormalCurve (16.0 * ((double)i - tableSize / 2) / tableSize' scale);
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: sum > 1000000
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: r - l > 0.0000001
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: sum += NormalCurve (16.0 * ((double)i - tableSize / 2) / tableSize' scale);
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: sum += NormalCurve (16.0 * ((double)i - tableSize / 2) / tableSize' scale);
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: lookup[j] = (i - tableSize / 2) * 65536 / tableSize;
Magic Number,Pinta.ImageManipulation.Effects,AddNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\AddNoiseEffect.cs,InitLookup,The following statement contains a magic number: lookup[j] = (i - tableSize / 2) * 65536 / tableSize;
Magic Number,Pinta.ImageManipulation.Effects,BulgeEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BulgeEffect.cs,BulgeEffect,The following statement contains a magic number: amount < -200 || amount > 100
Magic Number,Pinta.ImageManipulation.Effects,BulgeEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BulgeEffect.cs,BulgeEffect,The following statement contains a magic number: amount < -200 || amount > 100
Magic Number,Pinta.ImageManipulation.Effects,BulgeEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BulgeEffect.cs,RenderLine,The following statement contains a magic number: var hw = dst.Width / 2f;
Magic Number,Pinta.ImageManipulation.Effects,BulgeEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BulgeEffect.cs,RenderLine,The following statement contains a magic number: var hh = dst.Height / 2f;
Magic Number,Pinta.ImageManipulation.Effects,BulgeEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BulgeEffect.cs,RenderLine,The following statement contains a magic number: var amt = bulge / 100f;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The following statement contains a magic number: scale < 2 || scale > 1000
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The following statement contains a magic number: scale < 2 || scale > 1000
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The following statement contains a magic number: power < 0 || power > 100
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The following statement contains a magic number: permuteLookup[256 + i] = permutationTable[i];
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,CloudsEffect,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderLine,The following statement contains a magic number: RenderClouds (dst' roi' scale' (byte)(seed)' power / 100.0' from_color' to_color);
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: int h = hash & 15;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: double u = h < 8 ? x : y;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: double v = h < 4 ? y : h == 12 || h == 14 ? x : 0;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: double v = h < 4 ? y : h == 12 || h == 14 ? x : 0;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: double v = h < 4 ? y : h == 12 || h == 14 ? x : 0;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,Grad,The following statement contains a magic number: return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: int dy = 2 * y - h;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: int dx = 2 * x - w;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: double dxr = 65536 + (double)dx / (double)div;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: double dyr = 65536 + (double)dy / (double)div;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: div /= 2;
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: i < 12 && mult > 0.03 && div > 0
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: i < 12 && mult > 0.03 && div > 0
Magic Number,Pinta.ImageManipulation.Effects,CloudsEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CloudsEffect.cs,RenderClouds,The following statement contains a magic number: *ptr = ColorBgra.Lerp (colorFrom' colorTo' (val + 1) / 2);
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: int fyEnd = 3;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: fyEnd = 2;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: int fxEnd = 3;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: fxEnd = 2;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iRsum = 255;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iRsum > 255
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iGsum = 255;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iGsum > 255
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iBsum = 255;
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: iBsum > 255
Magic Number,Pinta.ImageManipulation.Effects,ColorDifferenceEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ColorDifferenceEffect.cs,RenderColorDifferenceEffect,The following statement contains a magic number: *dstPtr = ColorBgra.FromBgra ((byte)iBsum' (byte)iGsum' (byte)iRsum' 255);
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,BrightnessContrastEffect,The following statement contains a magic number: brightness < -100 || brightness > 100
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,BrightnessContrastEffect,The following statement contains a magic number: brightness < -100 || brightness > 100
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,BrightnessContrastEffect,The following statement contains a magic number: contrast < -100 || contrast > 100
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,BrightnessContrastEffect,The following statement contains a magic number: contrast < -100 || contrast > 100
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Render,The following statement contains a magic number: dstRowPtr->Bgra = (col.Bgra & 0xff000000) | c | (c << 8) | (c << 16);
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Render,The following statement contains a magic number: dstRowPtr->Bgra = (col.Bgra & 0xff000000) | c | (c << 8) | (c << 16);
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,The following statement contains a magic number: multiply = contrast + 100;
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,The following statement contains a magic number: divide = 100;
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,The following statement contains a magic number: rgbTable = new byte[65536];
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,The following statement contains a magic number: intensity + brightness < 128
Magic Number,Pinta.ImageManipulation.Effects,BrightnessContrastEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\BrightnessContrastEffect.cs,Calculate,The following statement contains a magic number: intensity < 256
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: hue < -180 || hue > 180
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: hue < -180 || hue > 180
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: saturation < 0 || saturation > 200
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: lightness < -100 || lightness > 100
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: lightness < -100 || lightness > 100
Magic Number,Pinta.ImageManipulation.Effects,HueSaturationEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\HueSaturationEffect.cs,HueSaturationEffect,The following statement contains a magic number: hue == 0 && saturation == 100 && lightness == 0
Magic Number,Pinta.ImageManipulation.Effects,CurvesEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CurvesEffect.cs,MakeUop,The following statement contains a magic number: switch (mode) { 				case ColorTransferMode.Rgb: 					var cc = new ChannelCurveOp (); 					transferCurves = new byte[][] { cc.CurveR' cc.CurveG' cc.CurveB }; 					entries = 256; 					op = cc; 					break;  				case ColorTransferMode.Luminosity: 					var lc = new LuminosityCurveOp (); 					transferCurves = new byte[][] { lc.Curve }; 					entries = 256; 					op = lc; 					break;  				default: 					throw new InvalidEnumArgumentException (); 			}
Magic Number,Pinta.ImageManipulation.Effects,CurvesEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\CurvesEffect.cs,MakeUop,The following statement contains a magic number: switch (mode) { 				case ColorTransferMode.Rgb: 					var cc = new ChannelCurveOp (); 					transferCurves = new byte[][] { cc.CurveR' cc.CurveG' cc.CurveB }; 					entries = 256; 					op = cc; 					break;  				case ColorTransferMode.Luminosity: 					var lc = new LuminosityCurveOp (); 					transferCurves = new byte[][] { lc.Curve }; 					entries = 256; 					op = lc; 					break;  				default: 					throw new InvalidEnumArgumentException (); 			}
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: weights = new double[3][];
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[i] = new double[3];
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: double r = (double)angle * 2.0 * Math.PI / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: double r = (double)angle * 2.0 * Math.PI / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: double dr = Math.PI / 4.0;
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[0][1] = Math.Cos (r + 2.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[0][2] = Math.Cos (r + 3.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[0][2] = Math.Cos (r + 3.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[1][2] = Math.Cos (r + 4.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[1][2] = Math.Cos (r + 4.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][0] = Math.Cos (r - dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][1] = Math.Cos (r - 2.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][1] = Math.Cos (r - 2.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][2] = Math.Cos (r - 3.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][2] = Math.Cos (r - 3.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,EdgeDetectEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EdgeDetectEffect.cs,SetWeights,The following statement contains a magic number: this.weights[2][2] = Math.Cos (r - 3.0 * dr);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,ZoomBlurEffect,The following statement contains a magic number: amount < 0 || amount > 200
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long fox = (long)(dst.Width * offset.X * 32768.0);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long foy = (long)(dst.Height * offset.Y * 32768.0);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long fcx = fox + (w << 15);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long fcy = foy + (h << 15);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: const int n = 64;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long fx = (x << 16) - fcx;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: long fy = (y << 16) - fcy;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: fx -= ((fx >> 4) * fz) >> 10;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: fx -= ((fx >> 4) * fz) >> 10;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: fy -= ((fy >> 4) * fz) >> 10;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: fy -= ((fy >> 4) * fz) >> 10;
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: int u = (int)(fx + fcx + 32768 >> 16);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: int u = (int)(fx + fcx + 32768 >> 16);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: int v = (int)(fy + fcy + 32768 >> 16);
Magic Number,Pinta.ImageManipulation.Effects,ZoomBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ZoomBlurEffect.cs,RenderLine,The following statement contains a magic number: int v = (int)(fy + fcy + 32768 >> 16);
Magic Number,Pinta.ImageManipulation.Effects,PolarInversionEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PolarInversionEffect.cs,PolarInversionEffect,The following statement contains a magic number: amount < -4 || amount > 4
Magic Number,Pinta.ImageManipulation.Effects,PolarInversionEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PolarInversionEffect.cs,PolarInversionEffect,The following statement contains a magic number: amount < -4 || amount > 4
Magic Number,Pinta.ImageManipulation.Effects,WarpEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\WarpEffect.cs,WarpEffect,The following statement contains a magic number: quality < 1 || quality > 5
Magic Number,Pinta.ImageManipulation.Effects,UnfocusEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\UnfocusEffect.cs,UnfocusEffect,The following statement contains a magic number: radius < 1 || radius > 200
Magic Number,Pinta.ImageManipulation.Effects,UnfocusEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\UnfocusEffect.cs,ApplyWithAlpha,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.Effects,UnfocusEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\UnfocusEffect.cs,ApplyWithAlpha,The following statement contains a magic number: int div = area * 255;
Magic Number,Pinta.ImageManipulation.Effects,UnfocusEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\UnfocusEffect.cs,ApplyWithAlpha,The following statement contains a magic number: area < 32768
Magic Number,Pinta.ImageManipulation.Effects,TwistEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TwistEffect.cs,TwistEffect,The following statement contains a magic number: amount < -100 || amount > 100
Magic Number,Pinta.ImageManipulation.Effects,TwistEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TwistEffect.cs,TwistEffect,The following statement contains a magic number: amount < -100 || amount > 100
Magic Number,Pinta.ImageManipulation.Effects,TwistEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TwistEffect.cs,TwistEffect,The following statement contains a magic number: antialias < 0 || antialias > 5
Magic Number,Pinta.ImageManipulation.Effects,TwistEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TwistEffect.cs,RenderLine,The following statement contains a magic number: float hw = dst.Width / 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,TwistEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TwistEffect.cs,RenderLine,The following statement contains a magic number: float hh = dst.Height / 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,TileEffect,The following statement contains a magic number: tileSize < 2 || tileSize > 200
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,TileEffect,The following statement contains a magic number: tileSize < 2 || tileSize > 200
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,TileEffect,The following statement contains a magic number: intensity < -20 || intensity > 20
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,TileEffect,The following statement contains a magic number: intensity < -20 || intensity > 20
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: float hw = width / 2f;
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: float hh = height / 2f;
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: float sin = (float)Math.Sin (rotation * Math.PI / 180.0);
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: float cos = (float)Math.Cos (rotation * Math.PI / 180.0);
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: intensity = intensity * intensity / 10 * Math.Sign (intensity);
Magic Number,Pinta.ImageManipulation.Effects,TileEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\TileEffect.cs,RenderLine,The following statement contains a magic number: int aaLevel = 4;
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,SoftenPortraitEffect,The following statement contains a magic number: softness < 0 || softness > 10
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,SoftenPortraitEffect,The following statement contains a magic number: lighting < -20 || lighting > 20
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,SoftenPortraitEffect,The following statement contains a magic number: lighting < -20 || lighting > 20
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,SoftenPortraitEffect,The following statement contains a magic number: warmth < 0 || warmth > 20
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,SoftenPortraitEffect,The following statement contains a magic number: blur_effect = new GaussianBlurEffect (2);
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,RenderLine,The following statement contains a magic number: float redAdjust = 1.0f + (warmth / 100.0f);
Magic Number,Pinta.ImageManipulation.Effects,SoftenPortraitEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SoftenPortraitEffect.cs,RenderLine,The following statement contains a magic number: float blueAdjust = 1.0f - (warmth / 100.0f);
Magic Number,Pinta.ImageManipulation.Effects,SharpenEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SharpenEffect.cs,SharpenEffect,The following statement contains a magic number: amount < 1 || amount > 20
Magic Number,Pinta.ImageManipulation.Effects,SharpenEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SharpenEffect.cs,Apply,The following statement contains a magic number: var median = GetPercentile (50' area' hb' hg' hr' ha);
Magic Number,Pinta.ImageManipulation.Effects,SharpenEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\SharpenEffect.cs,Apply,The following statement contains a magic number: return ColorBgra.Lerp (src' median' -0.5f);
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,ReduceNoiseEffect,The following statement contains a magic number: radius < 1 || radius > 200
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,ReduceNoiseEffect,The following statement contains a magic number: this.strength = -0.2 * strength;
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,Apply,The following statement contains a magic number: var lerp = strength * (1 - 0.75 * color.GetIntensity ());
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,GetPercentileOfColor,The following statement contains a magic number: rc = (rc * 255) / area;
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,GetPercentileOfColor,The following statement contains a magic number: gc = (gc * 255) / area;
Magic Number,Pinta.ImageManipulation.Effects,ReduceNoiseEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\ReduceNoiseEffect.cs,GetPercentileOfColor,The following statement contains a magic number: bc = (bc * 255) / area;
Magic Number,Pinta.ImageManipulation.Effects,RedEyeRemoveEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RedEyeRemoveEffect.cs,RedEyeRemoveEffect,The following statement contains a magic number: tolerance < 0 || tolerance > 100
Magic Number,Pinta.ImageManipulation.Effects,RedEyeRemoveEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RedEyeRemoveEffect.cs,RedEyeRemoveEffect,The following statement contains a magic number: saturation < 0 || saturation > 100
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RadialBlurEffect,The following statement contains a magic number: quality < 1 || quality > 5
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fcx = (w << 15) + (int)(offset.X * (w << 15));
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fcx = (w << 15) + (int)(offset.X * (w << 15));
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fcy = (h << 15) + (int)(offset.Y * (h << 15));
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fcy = (h << 15) + (int)(offset.Y * (h << 15));
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int n = (quality * quality) * (30 + quality * quality);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fr = (int)(angle * Math.PI * 65536.0 / 181.0);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fr = (int)(angle * Math.PI * 65536.0 / 181.0);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fx = (x << 16) - fcx;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int fy = (y << 16) - fcy;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int u1 = ox1 + fcx + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int u1 = ox1 + fcx + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int v1 = oy1 + fcy + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int v1 = oy1 + fcy + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int u2 = ox2 + fcx + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int u2 = ox2 + fcx + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int v2 = oy2 + fcy + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,RenderLine,The following statement contains a magic number: int v2 = oy2 + fcy + 32768 >> 16;
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fx = cx - ((cy >> 8) * fr >> 8) - ((cx >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fx = cx - ((cy >> 8) * fr >> 8) - ((cx >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fx = cx - ((cy >> 8) * fr >> 8) - ((cx >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fx = cx - ((cy >> 8) * fr >> 8) - ((cx >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fx = cx - ((cy >> 8) * fr >> 8) - ((cx >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fy = cy + ((cx >> 8) * fr >> 8) - ((cy >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fy = cy + ((cx >> 8) * fr >> 8) - ((cy >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fy = cy + ((cx >> 8) * fr >> 8) - ((cy >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fy = cy + ((cx >> 8) * fr >> 8) - ((cy >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,RadialBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\RadialBlurEffect.cs,Rotate,The following statement contains a magic number: fy = cy + ((cx >> 8) * fr >> 8) - ((cy >> 14) * (fr * fr >> 11) >> 8);
Magic Number,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,PixelateEffect,The following statement contains a magic number: cellSize < 0 || cellSize > 100
Magic Number,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The following statement contains a magic number: var c = ColorBgra.BlendColors4W16IP (colorTopLeft' 16384' colorTopRight' 16384' colorBottomLeft' 16384' colorBottomRight' 16384);
Magic Number,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The following statement contains a magic number: var c = ColorBgra.BlendColors4W16IP (colorTopLeft' 16384' colorTopRight' 16384' colorBottomLeft' 16384' colorBottomRight' 16384);
Magic Number,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The following statement contains a magic number: var c = ColorBgra.BlendColors4W16IP (colorTopLeft' 16384' colorTopRight' 16384' colorBottomLeft' 16384' colorBottomRight' 16384);
Magic Number,Pinta.ImageManipulation.Effects,PixelateEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PixelateEffect.cs,ComputeCellColor,The following statement contains a magic number: var c = ColorBgra.BlendColors4W16IP (colorTopLeft' 16384' colorTopRight' 16384' colorBottomLeft' 16384' colorBottomRight' 16384);
Magic Number,Pinta.ImageManipulation.Effects,PencilSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PencilSketchEffect.cs,PencilSketchEffect,The following statement contains a magic number: pencilSize < 1 || pencilSize > 20
Magic Number,Pinta.ImageManipulation.Effects,PencilSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PencilSketchEffect.cs,PencilSketchEffect,The following statement contains a magic number: colorRange < -20 || colorRange > 20
Magic Number,Pinta.ImageManipulation.Effects,PencilSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\PencilSketchEffect.cs,PencilSketchEffect,The following statement contains a magic number: colorRange < -20 || colorRange > 20
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,OutlineEffect,The following statement contains a magic number: thickness < 1 || thickness > 200
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,OutlineEffect,The following statement contains a magic number: intensity < 0 || intensity > 100
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: int minCount1 = area * (100 - this.intensity) / 200;
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: int minCount1 = area * (100 - this.intensity) / 200;
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: int minCount2 = area * (100 + this.intensity) / 200;
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: int minCount2 = area * (100 + this.intensity) / 200;
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: b1 < 255 && hb[b1] == 0
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: b1 < 255 && bCount < minCount1
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: b2 < 255 && bCount < minCount2
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: g1 < 255 && hg[g1] == 0
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: g1 < 255 && gCount < minCount1
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: g2 < 255 && gCount < minCount2
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: r1 < 255 && hr[r1] == 0
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: r1 < 255 && rCount < minCount1
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: r2 < 255 && rCount < minCount2
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: a1 < 255 && hb[a1] == 0
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: a1 < 255 && aCount < minCount1
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: a2 < 255 && aCount < minCount2
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ( 				(byte)(255 - (b2 - b1))' 				(byte)(255 - (g2 - g1))' 				(byte)(255 - (r2 - r1))' 				(byte)(a2));
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ( 				(byte)(255 - (b2 - b1))' 				(byte)(255 - (g2 - g1))' 				(byte)(255 - (r2 - r1))' 				(byte)(a2));
Magic Number,Pinta.ImageManipulation.Effects,OutlineEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OutlineEffect.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ( 				(byte)(255 - (b2 - b1))' 				(byte)(255 - (g2 - g1))' 				(byte)(255 - (r2 - r1))' 				(byte)(a2));
Magic Number,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,OilPaintingEffect,The following statement contains a magic number: brushSize < 1 || brushSize > 8
Magic Number,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,OilPaintingEffect,The following statement contains a magic number: coarseness < 3 || coarseness > 255
Magic Number,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,OilPaintingEffect,The following statement contains a magic number: coarseness < 3 || coarseness > 255
Magic Number,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,RenderLine,The following statement contains a magic number: int localStoreSize = arrayLens * 5 * sizeof (int);
Magic Number,Pinta.ImageManipulation.Effects,OilPaintingEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\OilPaintingEffect.cs,SetToZero,The following statement contains a magic number: i < length / 4
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,MotionBlurEffect,The following statement contains a magic number: distance < 1 || distance > 200
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: double theta = ((double)(angle + 180) * 2 * Math.PI) / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: double theta = ((double)(angle + 180) * 2 * Math.PI) / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: double theta = ((double)(angle + 180) * 2 * Math.PI) / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: start.X = -end.X / 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: start.Y = -end.Y / 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: end.X /= 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: end.Y /= 2.0f;
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: PointD[] points = new PointD[((1 + distance) * 3) / 2];
Magic Number,Pinta.ImageManipulation.Effects,MotionBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MotionBlurEffect.cs,RenderLine,The following statement contains a magic number: PointD[] points = new PointD[((1 + distance) * 3) / 2];
Magic Number,Pinta.ImageManipulation.Effects,MedianEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MedianEffect.cs,MedianEffect,The following statement contains a magic number: radius < 1 || radius > 200
Magic Number,Pinta.ImageManipulation.Effects,MedianEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MedianEffect.cs,MedianEffect,The following statement contains a magic number: percentile < 0 || percentile > 100
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,MandelbrotFractalEffect,The following statement contains a magic number: factor < 1 || factor > 10
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,MandelbrotFractalEffect,The following statement contains a magic number: quality < 1 || quality > 5
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,MandelbrotFractalEffect,The following statement contains a magic number: zoom < 0 || zoom > 100
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: double angleTheta = (angle * 2 * Math.PI) / 360;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: double angleTheta = (angle * 2 * Math.PI) / 360;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: double u = (2.0 * x - w + (i * invCount)) * invH;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: double v = (2.0 * y - h + ((i * invQuality) % 1)) * invH;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: double c = 64 + factor * m;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: r += Utility.ClampToByte (c - 768);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: g += Utility.ClampToByte (c - 512);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: b += Utility.ClampToByte (c - 256);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: c.B = (byte)(255 - c.B);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: c.G = (byte)(255 - c.G);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,RenderLine,The following statement contains a magic number: c.R = (byte)(255 - c.R);
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,Mandelbrot,The following statement contains a magic number: y = 2 * t * y + i;
Magic Number,Pinta.ImageManipulation.Effects,MandelbrotFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\MandelbrotFractalEffect.cs,Mandelbrot,The following statement contains a magic number: (c * factor) < 1024 && ((x * x) + (y * y)) < max
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,JuliaFractalEffect,The following statement contains a magic number: factor < 1 || factor > 10
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,JuliaFractalEffect,The following statement contains a magic number: quality < 1 || quality > 5
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,JuliaFractalEffect,The following statement contains a magic number: zoom < 0 || zoom > 50
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: const double jr = 0.3125;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: const double ji = 0.03;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: double angleTheta = (angle * Math.PI * 2) / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: double angleTheta = (angle * Math.PI * 2) / 360.0;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: double u = (2.0 * x - w + (i * invCount)) * invH;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: double v = (2.0 * y - h + ((i * invQuality) % 1)) * invH;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: b += Utility.ClampToByte (c - 768);
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: g += Utility.ClampToByte (c - 512);
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,RenderLine,The following statement contains a magic number: r += Utility.ClampToByte (c - 256);
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,Julia,The following statement contains a magic number: y = 2 * t * y + i;
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,Julia,The following statement contains a magic number: c < 256 && x * x + y * y < 10000
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,Julia,The following statement contains a magic number: c < 256 && x * x + y * y < 10000
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,Julia,The following statement contains a magic number: c -= 2 - 2 * log2_10000 / Math.Log (x * x + y * y);
Magic Number,Pinta.ImageManipulation.Effects,JuliaFractalEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\JuliaFractalEffect.cs,Julia,The following statement contains a magic number: c -= 2 - 2 * log2_10000 / Math.Log (x * x + y * y);
Magic Number,Pinta.ImageManipulation.Effects,GlowEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GlowEffect.cs,GlowEffect,The following statement contains a magic number: radius < 1 || radius > 20
Magic Number,Pinta.ImageManipulation.Effects,GlowEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GlowEffect.cs,GlowEffect,The following statement contains a magic number: brightness < -100 || brightness > 100
Magic Number,Pinta.ImageManipulation.Effects,GlowEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GlowEffect.cs,GlowEffect,The following statement contains a magic number: brightness < -100 || brightness > 100
Magic Number,Pinta.ImageManipulation.Effects,GlowEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GlowEffect.cs,GlowEffect,The following statement contains a magic number: contrast < -100 || contrast > 100
Magic Number,Pinta.ImageManipulation.Effects,GlowEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GlowEffect.cs,GlowEffect,The following statement contains a magic number: contrast < -100 || contrast > 100
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,FrostedGlassEffect,The following statement contains a magic number: amount < 1 || amount > 10
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: int* intensityCount = stackalloc int[256];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: uint* avgRed = stackalloc uint[256];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: uint* avgGreen = stackalloc uint[256];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: uint* avgBlue = stackalloc uint[256];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: uint* avgAlpha = stackalloc uint[256];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: byte* intensityChoices = stackalloc byte[(1 + (r * 2)) * (1 + (r * 2))];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: byte* intensityChoices = stackalloc byte[(1 + (r * 2)) * (1 + (r * 2))];
Magic Number,Pinta.ImageManipulation.Effects,FrostedGlassEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FrostedGlassEffect.cs,RenderLine,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,FragmentEffect,The following statement contains a magic number: fragments < 2 || fragments > 50
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,FragmentEffect,The following statement contains a magic number: fragments < 2 || fragments > 50
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,FragmentEffect,The following statement contains a magic number: distance < 0 || distance > 100
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,RecalcPointOffsets,The following statement contains a magic number: double pointStep = 2 * Math.PI / (double)fragments;
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,RecalcPointOffsets,The following statement contains a magic number: double rotationRadians = ((rotationAngle - 90.0) * Math.PI) / 180.0;
Magic Number,Pinta.ImageManipulation.Effects,FragmentEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\FragmentEffect.cs,RecalcPointOffsets,The following statement contains a magic number: double rotationRadians = ((rotationAngle - 90.0) * Math.PI) / 180.0;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,EmbossEffect,The following statement contains a magic number: angle < 0 || angle > 360
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: int fyEnd = 3;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: fyEnd = 2;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: int fxEnd = 3;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: fxEnd = 2;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: iSum += 128;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: iSum = 255;
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: iSum > 255
Magic Number,Pinta.ImageManipulation.Effects,EmbossEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\EmbossEffect.cs,RenderLine,The following statement contains a magic number: *dstPtr = ColorBgra.FromBgra ((byte)iSum' (byte)iSum' (byte)iSum' 255);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,GaussianBlurEffect,The following statement contains a magic number: radius < 0 || radius > 200
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,CreateGaussianBlurRow,The following statement contains a magic number: int size = 1 + (amount * 2);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,CreateGaussianBlurRow,The following statement contains a magic number: weights[i] = 16 * (i + 1);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: int localStoreSize = wlen * 6 * sizeof (long);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wp *= c.A + (c.A >> 7);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wp >>= 8;
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wcSum >>= 8;
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wp *= c.A + (c.A >> 7);
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wp >>= 8;
Magic Number,Pinta.ImageManipulation.Effects,GaussianBlurEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\GaussianBlurEffect.cs,RenderLine,The following statement contains a magic number: wcSum >>= 8;
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv = new int[5][];
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[i] = new int[5];
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[2] = new int[] { -1' -1' 30' -1' -1 };
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[2] = new int[] { -1' -1' 30' -1' -1 };
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[3] = new int[] { -1' -1' -1' -1' -1 };
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[4] = new int[] { -1' -1' -5' -1' -1 };
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: conv[4] = new int[] { -1' -1' -5' -1' -1 };
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: inkOutline < 0 || inkOutline > 99
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: coloring < 0 || coloring > 100
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: glow_effect = new GlowEffect (6' -(coloring - 50) * 2' -(coloring - 50) * 2);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: glow_effect = new GlowEffect (6' -(coloring - 50) * 2' -(coloring - 50) * 2);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: glow_effect = new GlowEffect (6' -(coloring - 50) * 2' -(coloring - 50) * 2);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: glow_effect = new GlowEffect (6' -(coloring - 50) * 2' -(coloring - 50) * 2);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,InkSketchEffect,The following statement contains a magic number: glow_effect = new GlowEffect (6' -(coloring - 50) * 2' -(coloring - 50) * 2);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,The following statement contains a magic number: topLayer = ColorBgra.FromBgra (255' 255' 255' topLayer.A);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,The following statement contains a magic number: topLayer = ColorBgra.FromBgra (255' 255' 255' topLayer.A);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,The following statement contains a magic number: topLayer = ColorBgra.FromBgra (255' 255' 255' topLayer.A);
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,The following statement contains a magic number: topLayer.R > (ink_outline * 255 / 100)
Magic Number,Pinta.ImageManipulation.Effects,InkSketchEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\InkSketchEffect.cs,RenderLine,The following statement contains a magic number: topLayer.R > (ink_outline * 255 / 100)
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetMaxAreaForRadius,The following statement contains a magic number: int cutoff = ((radius * 2 + 1) * (radius * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetMaxAreaForRadius,The following statement contains a magic number: int cutoff = ((radius * 2 + 1) * (radius * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetMaxAreaForRadius,The following statement contains a magic number: int cutoff = ((radius * 2 + 1) * (radius * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetMaxAreaForRadius,The following statement contains a magic number: int cutoff = ((radius * 2 + 1) * (radius * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: int minCount = area * percentile / 100;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: b < 255 && hb[b] == 0
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: b < 255 && bCount < minCount
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: g < 255 && hg[g] == 0
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: g < 255 && gCount < minCount
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: r < 255 && hr[r] == 0
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: r < 255 && rCount < minCount
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: a < 255 && ha[a] == 0
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,GetPercentile,The following statement contains a magic number: a < 255 && aCount < minCount
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRect,The following statement contains a magic number: const int hLength = 256;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The following statement contains a magic number: int cutoff = ((rad * 2 + 1) * (rad * 2 + 1) + 2) / 4;
Magic Number,Pinta.ImageManipulation.Effects,LocalHistogramEffect,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Effects\LocalHistogramEffect.cs,RenderRectWithAlpha,The following statement contains a magic number: const int hLength = 256;
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,BeforeRender,The following statement contains a magic number: this.lerpAlphas = new byte[256];
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,BeforeRender,The following statement contains a magic number: this.lerpColors = new ColorBgra[256];
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,BeforeRender,The following statement contains a magic number: this.lerpAlphas[a] = (byte)(startAlpha + ((endAlpha - startAlpha) * a) / 255);
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,BeforeRender,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,Render,The following statement contains a magic number: byte resultAlpha = (byte)Utility.FastDivideShortByByte ((ushort)(pixelPtr->A * endAlpha)' 255);
Magic Number,Pinta.ImageManipulation.Gradients,BaseGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseGradientRenderer.cs,ComputeAlphaOnlyValuesFromColors,The following statement contains a magic number: endAlpha = (byte)(255 - endColor.A);
Magic Number,Pinta.ImageManipulation.Gradients,BaseLinearStraightGradientRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\BaseLinearStraightGradientRenderer.cs,BoundLerp,The following statement contains a magic number: return (byte)(Utility.Clamp (Math.Abs (t)' 0' 1) * 255f);
Magic Number,Pinta.ImageManipulation.Gradients,ConicalRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\ConicalRenderer.cs,ComputeByteLerp,The following statement contains a magic number: return (byte)(BoundLerp (t + tOffset) * 255f);
Magic Number,Pinta.ImageManipulation.Gradients,ConicalRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\ConicalRenderer.cs,BoundLerp,The following statement contains a magic number: t -= 2;
Magic Number,Pinta.ImageManipulation.Gradients,RadialRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\RadialRenderer.cs,ComputeByteLerp,The following statement contains a magic number: return result > 1.0 ? (byte)255 : (byte)(result * 255f);
Magic Number,Pinta.ImageManipulation.Gradients,RadialRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\RadialRenderer.cs,ComputeByteLerp,The following statement contains a magic number: return result > 1.0 ? (byte)255 : (byte)(result * 255f);
Magic Number,Pinta.ImageManipulation.Gradients,LinearDiamondRenderer,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Gradients\LinearDiamondRenderer.cs,BoundLerp,The following statement contains a magic number: return (byte)(Utility.Clamp (t' 0' 1) * 255f);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,AdditiveBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\AdditiveBlendOp.cs,AdditiveBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorBurnBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorBurnBlendOp.cs,ColorBurnBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ColorDodgeBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ColorDodgeBlendOp.cs,ColorDodgeBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ScreenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ScreenBlendOp.cs,ScreenBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DarkenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DarkenBlendOp.cs,DarkenBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,LightenBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\LightenBlendOp.cs,LightenBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NegationBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NegationBlendOp.cs,NegationBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,DifferenceBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\DifferenceBlendOp.cs,DifferenceBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,OverlayBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\OverlayBlendOp.cs,OverlayBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,GlowBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\GlowBlendOp.cs,GlowBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,ReflectBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\ReflectBlendOp.cs,ReflectBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,MultiplyBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\MultiplyBlendOp.cs,MultiplyBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,XorBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\XorBlendOp.cs,XorBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: int y = lhsA * (255 - rhsA) + 0x80;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((y >> 8) + y) >> 8;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((y >> 8) + y) >> 8;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: x = ((x >> 8) + x) >> 8;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: x = ((x >> 8) + x) >> 8;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: int masIndex = totalA * 3;
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: uint taS = masTable[masIndex + 2];
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: int a = (lhsA * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: a = (((a >> 8) + a) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: a = (((a >> 8) + a) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: ret = b + (g << 8) + (r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: ret = b + (g << 8) + (r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: ret = b + (g << 8) + (r << 16) + ((uint)a << 24);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyStatic,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,ApplyOpacity,The following statement contains a magic number: r = ((((r) >> 8) + (r)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((lhsA) * (255 - rhsA) + 0x80);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,Apply,The following statement contains a magic number: y = ((((y) >> 8) + (y)) >> 8);
Magic Number,Pinta.ImageManipulation.PixelBlendOperations,NormalBlendOpWithOpacity,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\PixelBlendOperations\NormalBlendOp.cs,NormalBlendOpWithOpacity,The following statement contains a magic number: this.opacity < 0 || this.opacity > 255
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,Apply,The following statement contains a magic number: int invA = 255 - a;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,Apply,The following statement contains a magic number: int r = ((color.R * invA) + (blend_color.R * a)) / 256;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,Apply,The following statement contains a magic number: int g = ((color.G * invA) + (blend_color.G * a)) / 256;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,Apply,The following statement contains a magic number: int b = ((color.B * invA) + (blend_color.B * a)) / 256;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,ComputeAlpha,The following statement contains a magic number: return (byte)(((la * (256 - (ra + (ra >> 7)))) >> 8) + ra);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,ComputeAlpha,The following statement contains a magic number: return (byte)(((la * (256 - (ra + (ra >> 7)))) >> 8) + ra);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,BlendConstantOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\BlendConstantOp.cs,ComputeAlpha,The following statement contains a magic number: return (byte)(((la * (256 - (ra + (ra >> 7)))) >> 8) + ra);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,AverageChannelsOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\AverageChannelsOp.cs,Apply,The following statement contains a magic number: var average = (byte)(((int)color.R + (int)color.G + (int)color.B) / 3);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,ChannelCurveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\ChannelCurveOp.cs,ChannelCurveOp,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,PosterizePixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\PosterizePixelOp.cs,CalcLevels,The following statement contains a magic number: t1[i] = (byte)((255 * i) / (levelCount - 1));
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,PosterizePixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\PosterizePixelOp.cs,CalcLevels,The following statement contains a magic number: var levels = new byte[256];
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,PosterizePixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\PosterizePixelOp.cs,CalcLevels,The following statement contains a magic number: k -= 255;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,PosterizePixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\PosterizePixelOp.cs,CalcLevels,The following statement contains a magic number: k > 255
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,PosterizePixelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\PosterizePixelOp.cs,CalcLevels,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,HueSaturationLightnessOp,The following statement contains a magic number: sat_factor = (satDelta * 1024) / 100;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,HueSaturationLightnessOp,The following statement contains a magic number: sat_factor = (satDelta * 1024) / 100;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.R = Utility.ClampToByte ((intensity * 1024 + (color.R - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.R = Utility.ClampToByte ((intensity * 1024 + (color.R - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.G = Utility.ClampToByte ((intensity * 1024 + (color.G - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.G = Utility.ClampToByte ((intensity * 1024 + (color.G - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.B = Utility.ClampToByte ((intensity * 1024 + (color.B - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: color.B = Utility.ClampToByte ((intensity * 1024 + (color.B - intensity) * sat_factor) >> 10);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: hue += 360;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: hue -= 360;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,HueSaturationLightnessOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\HueSaturationLightnessOp.cs,Apply,The following statement contains a magic number: hue > 360
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,LevelOp,The following statement contains a magic number: gamma.Length != 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,Apply,The following statement contains a magic number: i < 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,GetGamma,The following statement contains a magic number: index < 0 || index >= 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,SetGamma,The following statement contains a magic number: index < 0 || index >= 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,SetGamma,The following statement contains a magic number: gamma[index] = Utility.Clamp (val' 0.1f' 10.0f);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,SetGamma,The following statement contains a magic number: gamma[index] = Utility.Clamp (val' 0.1f' 10.0f);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,AutoFromLoMdHi,The following statement contains a magic number: float[] gamma = new float[3];
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,AutoFromLoMdHi,The following statement contains a magic number: gamma[i] = (float)Utility.Clamp (Math.Log (0.5' (float)(md[i] - lo[i]) / (float)(hi[i] - lo[i]))' 0.1' 10.0);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,AutoFromLoMdHi,The following statement contains a magic number: gamma[i] = (float)Utility.Clamp (Math.Log (0.5' (float)(md[i] - lo[i]) / (float)(hi[i] - lo[i]))' 0.1' 10.0);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,AutoFromLoMdHi,The following statement contains a magic number: gamma[i] = (float)Utility.Clamp (Math.Log (0.5' (float)(md[i] - lo[i]) / (float)(hi[i] - lo[i]))' 0.1' 10.0);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,AutoFromLoMdHi,The following statement contains a magic number: i < 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,UpdateLookupTable,The following statement contains a magic number: j < 256
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,UpdateLookupTable,The following statement contains a magic number: i < 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,UnApply,The following statement contains a magic number: beforeOut.Length != 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,UnApply,The following statement contains a magic number: slopesOut.Length != 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LevelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LevelOp.cs,UnApply,The following statement contains a magic number: i < 3
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,LuminosityCurveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\LuminosityCurveOp.cs,LuminosityCurveOp,The following statement contains a magic number: i < 256
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertWithAlphaOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertWithAlphaOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' (byte)(255 - color.A));
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertWithAlphaOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertWithAlphaOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' (byte)(255 - color.A));
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertWithAlphaOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertWithAlphaOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' (byte)(255 - color.A));
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertWithAlphaOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertWithAlphaOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' (byte)(255 - color.A));
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,RedEyeRemoveOp,The following statement contains a magic number: set_saturation = (double)sat / 100;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,Apply,The following statement contains a magic number: var i = 255.0 * color.GetIntensity ();
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,Apply,The following statement contains a magic number: (difference > tolerence) && (saturation > 100)
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,GetSaturation,The following statement contains a magic number: var r = (double)color.R / 255;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,GetSaturation,The following statement contains a magic number: var g = (double)color.G / 255;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,GetSaturation,The following statement contains a magic number: var b = (double)color.B / 255;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,RedEyeRemoveOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\RedEyeRemoveOp.cs,GetSaturation,The following statement contains a magic number: return (int)(s * 255);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,SetAlphaChannelOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\SetAlphaChannelOp.cs,SetAlphaChannelOp,The following statement contains a magic number: add_value = (uint)alphaValue << 24;
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' color.A);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' color.A);
Magic Number,Pinta.ImageManipulation.UnaryPixelOperations,InvertOp,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\UnaryPixelOperations\InvertOp.cs,Apply,The following statement contains a magic number: return ColorBgra.FromBgra ((byte)(255 - color.B)' (byte)(255 - color.G)' (byte)(255 - color.R)' color.A);
Missing Default,Pinta.ImageManipulation,HsvColor,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Structs\HsvColor.cs,ToRgb,The following switch statement is missing a default case: switch (sectorNumber)                  {                     case 0:                         r = v;                         g = t;                         b = p;                         break;                      case 1:                         r = q;                         g = v;                         b = p;                         break;                      case 2:                         r = p;                         g = v;                         b = t;                         break;                      case 3:                         r = p;                         g = q;                         b = v;                         break;                      case 4:                         r = t;                         g = p;                         b = v;                         break;                      case 5:                         r = v;                         g = p;                         b = q;                         break;                 }
Missing Default,Pinta.ImageManipulation,Utility,C:\research\architectureSmells\repos\PintaProject_Pinta.ImageManipulation\Pinta.ImageManipulation\Utility.cs,GetBlendModeOp,The following switch statement is missing a default case: switch (mode) { 				case BlendMode.Normal: 					return new NormalBlendOp (); 				case BlendMode.Multiply: 					return new MultiplyBlendOp (); 				case BlendMode.Additive: 					return new AdditiveBlendOp (); 				case BlendMode.ColorBurn: 					return new ColorBurnBlendOp (); 				case BlendMode.ColorDodge: 					return new ColorDodgeBlendOp (); 				case BlendMode.Reflect: 					return new ReflectBlendOp (); 				case BlendMode.Glow: 					return new GlowBlendOp (); 				case BlendMode.Overlay: 					return new OverlayBlendOp (); 				case BlendMode.Difference: 					return new DifferenceBlendOp (); 				case BlendMode.Negation: 					return new NegationBlendOp (); 				case BlendMode.Lighten: 					return new LightenBlendOp (); 				case BlendMode.Darken: 					return new DarkenBlendOp (); 				case BlendMode.Screen: 					return new ScreenBlendOp (); 				case BlendMode.Xor: 					return new XorBlendOp (); 			}
