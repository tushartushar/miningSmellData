Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MidiPlugin.Utilities,LinkChangedHandler,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\LinkChangedHandler.cs,Update,Cyclomatic complexity of the method is 24
Long Parameter List,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,AttachInputChannel,The method has 11 parameters.
Long Parameter List,MidiPlugin.Utilities,LinkChangedHandler,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\LinkChangedHandler.cs,Update,The method has 6 parameters.
Long Statement,MidiPlugin,MidiPlugin,C:\repos\martin31821_midi4dmxc3\MidiPlugin\MidiPlugin.cs,startupPlugin,The length of the statement  "			var res = ResourceManager.getInstance ().loadResource (EResourceAccess.READ_WRITE' EResourceType.APPLICATION' metadata2); " is 121.
Long Statement,MidiPlugin,MidiPlugin,C:\repos\martin31821_midi4dmxc3\MidiPlugin\MidiPlugin.cs,saveProject,The length of the statement  "	ResourceManager.getInstance ().saveResource (EResourceType.APPLICATION' new LumosResource ("MPlugin"' ewHelper.SaveExecutors ())); " is 130.
Long Statement,MidiPlugin,MidiPlugin,C:\repos\martin31821_midi4dmxc3\MidiPlugin\MidiPlugin.cs,Load,The length of the statement  "		LumosResource r = ResourceManager.getInstance ().loadResource (EResourceAccess.READ_WRITE' EResourceType.PROJECT' MidiPlugin.myMetaData); " is 137.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,Establish,The length of the statement  "	/* Einklinken in ExecutorWindow */ExecutorWindow = WindowManager.getInstance ().GuiWindows.First (j => j.GetType () == typeof(ExecutorView)) as ExecutorView; " is 157.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,Establish,The length of the statement  "	ExecutorWindowListBox = ewType.GetField ("lstPages"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (ExecutorWindow) as System.Windows.Forms.ListBox; " is 159.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,HandleCurrentExecutorPageChanged,The length of the statement  "			dynExecutors [i].assignedExecutor = i < CurrentExecutorPage.GUIExecutors.Count ? connMgr.GetExecutorByID (CurrentExecutorPage.GUIExecutors [i].ID) : null; " is 154.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,ExecutorWindowPgUp,The length of the statement  "			ExecutorWindowListBox.SelectedIndex = Math.Min (ExecutorWindowListBox.SelectedIndex + 1' ExecutorWindowListBox.Items.Count - 1); " is 128.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CanAttachInputChannel,The length of the statement  "	/* Meta should be one of Fader' Go'Stop'GoStop'Pause'Back'PauseBack'Select'Flash */if (meta.ID.MetadataID == ExecutorWindow_PGDn || meta.ID.MetadataID == ExecutorWindow_PGUp) " is 174.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "	InputListenerMetadata roote = new InputListenerMetadata (new InputListenerMetadataID (lId' ExecutorWindow_ListenerId)' "Dynamic Executors"' null' false); " is 153.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Fader")' "Fader"' executorRoot)); " is 128.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Go")' "Go"' executorRoot)); " is 122.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Stop")' "Stop"' executorRoot)); " is 126.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "GoStop")' "Go / Stop"' executorRoot)); " is 133.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Pause")' "Pause"' executorRoot)); " is 128.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Back")' "Back"' executorRoot)); " is 126.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "PauseBack")' "Pause / Back"' executorRoot)); " is 139.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Select")' "Select"' executorRoot)); " is 130.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "		executorRoot.AddChild (new InputListenerMetadata (new InputListenerMetadataID (id.ListenerID' "Flash")' "Flash"' executorRoot)); " is 128.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "	roote.AddChild (new InputListenerMetadata (new InputListenerMetadataID (lId' ExecutorWindow_PGDn)' "Page Down"' roote' true)); " is 126.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "	roote.AddChild (new InputListenerMetadata (new InputListenerMetadataID (lId' ExecutorWindow_PGUp)' "Page Up"' roote' true)); " is 124.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "	roote.AddChild (new InputListenerMetadata (new InputListenerMetadataID (lId' GrandMasterValue)' "Grandmaster"' roote' true)); " is 125.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,CreateDynamicExecutorInfo,The length of the statement  "	roote.AddChild (new InputListenerMetadata (new InputListenerMetadataID (lId' ModifierKeyValue)' "Modifier Key"' roote' true)); " is 126.
Long Statement,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,RegisterSettings,The length of the statement  "		settings.registerGuiSetting (new SettingsMetadata (ESettingsRegisterType.APPLICATION' "Executor"' null' "Dynamic Executor " + (i + 1) + ": Tolerance"' "MPL.EXECFG" + i' ""' null) { " is 180.
Long Statement,MidiPlugin.Utilities,LinkChangedHandler,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\LinkChangedHandler.cs,Update,The length of the statement  "	var layer = midiInf.RuleSets.Select (j => j.InputLayer).FirstOrDefault (j => j.Metadata.ID.Equals (ilcMsg.ID.ParentLayer)); " is 123.
Long Statement,MidiPlugin.Utilities,LinkChangedHandler,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\LinkChangedHandler.cs,Update,The length of the statement  "		var executor = Lumos.GUI.Connection.ConnectionManager.getInstance ().GuiSession.Executors.First (j => j.ID == listener.Parent.ID.MetadataID); " is 141.
Magic Number,MidiPlugin.Utilities,ExecutorWindowHelper,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\ExecutorWindowHelper.cs,ExecutorWindowHelper,The following statement contains a magic number: dynExecutors = executorIds.Select (j => new DynamicExecutor {  	GUID = j'  	Tolerance = 0.07'  	IsModifierKeyPressed = () =>  {  		return modifierKey;  	}  }).ToArray ();  
Missing Default,MidiPlugin.Utilities,LinkChangedHandler,C:\repos\martin31821_midi4dmxc3\MidiPlugin\Utilities\LinkChangedHandler.cs,Update,The following switch statement is missing a default case: switch (ilcMsg.Listener.ListenerID.ID) {  case "ExecutorManager":  	var executor = Lumos.GUI.Connection.ConnectionManager.getInstance ().GuiSession.Executors.First (j => j.ID == listener.Parent.ID.MetadataID);  	if (executor == null) {  		MidiPlugin.log.Warn ("Executor {0} does not exist' but is linked."' listener.Parent.ID.MetadataID);  		return;  	}  	if (listener.Name == "Fader") {  		//Link to executor fader  		if (ilcMsg.Type == AbstractChangedMessage.EChangeType.ADDED) {  			try {  				var mbh = new MidiBacktrackHelper (channel as MidiInputChannel' executor);  				helperList.Add (channelId' mbh);  				mbh.Register ();  			}  			catch (Exception e) {  				MidiPlugin.log.Warn ("There is already a helper for channel {0} registered."' e' channelId);  			}  		}  		else if (ilcMsg.Type == AbstractChangedMessage.EChangeType.REMOVED) {  			MidiBacktrackHelper mbh;  			if (!helperList.TryGetValue (channelId' out mbh)) {  				MidiPlugin.log.Warn ("Could not fetch helper for ChannelID {0}"' channelId);  				return;  			}  			mbh.Unregister ();  			helperList.Remove (channelId);  		}  	}  	break;  case "DynamicExecutor":  	var dynamicExecutor = ewHelper.GetDynamicExecutorByMetadata (listener);  	if (dynamicExecutor == null) {  		MidiPlugin.log.Warn ("DynamicExecutor {0} does not exist' but is linked."' listener.Parent.ID.MetadataID);  		return;  	}  	if (listener.Name == "Fader") {  		//Link to executor fader  		if (ilcMsg.Type == AbstractChangedMessage.EChangeType.ADDED) {  			try {  				var mbh = new MidiBacktrackHelper (channel as MidiInputChannel' dynamicExecutor);  				helperList.Add (channelId' mbh);  				mbh.Register ();  			}  			catch (Exception e) {  				MidiPlugin.log.Warn ("There is already a helper for channel {0} registered."' e' channelId);  			}  		}  		else if (ilcMsg.Type == AbstractChangedMessage.EChangeType.REMOVED) {  			MidiBacktrackHelper mbh;  			if (!helperList.TryGetValue (channelId' out mbh)) {  				MidiPlugin.log.Warn ("Could not fetch helper for ChannelID {0}"' channelId);  				return;  			}  			mbh.Unregister ();  			helperList.Remove (channelId);  		}  	}  	break;  }  
