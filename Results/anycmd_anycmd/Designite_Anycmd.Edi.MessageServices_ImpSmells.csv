Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Anycmd.Edi.MessageServices,OntologyDescriptorExtension,C:\repos\anycmd_anycmd\src\Examples\Default\Edi\Anycmd.Edi.MessageServices\OntologyDescriptorExtension.cs,ToOntologyData,Cyclomatic complexity of the method is 8
Long Statement,Anycmd.Edi.MessageServices,EdiContextService,C:\repos\anycmd_anycmd\src\Examples\Default\Edi\Anycmd.Edi.MessageServices\EdiContextService.cs,Any,The length of the statement  "            if (!acDomain.NodeHost.Ontologies.TryGetOntology(request.OntologyCode' out ontology) || ontology.Ontology.IsEnabled != 1) " is 121.
Magic Number,Anycmd.Edi.MessageServices,MessageService,C:\repos\anycmd_anycmd\src\Examples\Default\Edi\Anycmd.Edi.MessageServices\MessageService.cs,Any,The following statement contains a magic number: try              {                  var context = new HecpContext(acDomain' HecpRequest.Create(acDomain' request));                  acDomain.NodeHost.HecpHandler.Process(context);                    return context.Response.ToMessage();              }              catch (Exception ex)              {                  acDomain.LoggingService.Error(ex);                  var r = new Message                  {                      MessageType = MessageType.Event.ToName()'                      MessageId = string.Empty                  };                  r.Body.Event.Description = "服务器内部逻辑异常";                  r.Body.Event.Status = 500;                  r.Body.Event.ReasonPhrase = Status.InternalServerError.ToString();// 不使用ToName扩展方法以避免造成新的异常                    return r;              }
