Implementation smell,Namespace,Class,File,Method,Description
Long Method,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The method has 111 lines of code.
Long Method,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The method has 134 lines of code.
Long Method,Anycmd.Xacml.Runtime,ApplyBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\ApplyBase.cs,ProcessArguments,The method has 172 lines of code.
Long Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Evaluate,The method has 178 lines of code.
Long Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The method has 258 lines of code.
Long Method,Anycmd.Xacml.Runtime,VariableDefinition,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\VariableDefinition.cs,Evaluate,The method has 146 lines of code.
Complex Method,Anycmd.Xacml.Configuration,ConfigurationRoot,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Configuration\ConfigurationRoot.cs,ConfigurationRoot,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml,XacmlElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\XacmlElement.cs,ValidateSchema,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Context,ContextDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ContextDocumentReadWrite.cs,ContextDocumentReadWrite,Cyclomatic complexity of the method is 13
Complex Method,Anycmd.Xacml.Context,RequestElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Context,ResultElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResultElement.cs,ResultElement,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Context,TargetItemBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\TargetItemBase.cs,TargetItemBase,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Extensions,DefaultPolicyRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultPolicyRepository.cs,Match,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,Cyclomatic complexity of the method is 14
Complex Method,Anycmd.Xacml.Policy,CombinerParameterElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\CombinerParameterElement.cs,CombinerParameterElement,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,PolicyDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyDocumentReadWrite.cs,PolicyDocumentReadWrite,Cyclomatic complexity of the method is 12
Complex Method,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,Cyclomatic complexity of the method is 21
Complex Method,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,PolicyIdReferenceElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyIdReferenceElementReadWrite.cs,PolicyIdReferenceElementReadWrite,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,Cyclomatic complexity of the method is 26
Complex Method,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 11
Complex Method,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,PolicySetIdReferenceElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetIdReferenceElementReadWrite.cs,PolicySetIdReferenceElementReadWrite,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Policy,TargetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElementReadWrite.cs,TargetElementReadWrite,Cyclomatic complexity of the method is 13
Complex Method,Anycmd.Xacml.Policy,TargetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElementReadWrite.cs,WriteDocument,Cyclomatic complexity of the method is 15
Complex Method,Anycmd.Xacml.Policy,VariableDefinitionElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\VariableDefinitionElement.cs,VariableDefinitionElement,Cyclomatic complexity of the method is 15
Complex Method,Anycmd.Xacml.Policy.TargetItems,TargetMatchBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetMatchBaseReadWrite.cs,TargetMatchBaseReadWrite,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime,ApplyBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\ApplyBase.cs,ProcessArguments,Cyclomatic complexity of the method is 22
Complex Method,Anycmd.Xacml.Runtime,Condition,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Condition.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Runtime,Condition2,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Condition2.cs,Evaluate,Cyclomatic complexity of the method is 10
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,CreatePolicyCombiningAlgorithm,Cyclomatic complexity of the method is 10
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,CreateRuleCombiningAlgorithm,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Evaluate,Cyclomatic complexity of the method is 27
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Resolve,Cyclomatic complexity of the method is 12
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Resolve,Cyclomatic complexity of the method is 11
Complex Method,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,EvaluateFunction,Cyclomatic complexity of the method is 14
Complex Method,Anycmd.Xacml.Runtime,Policy,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Policy.cs,Policy,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Runtime,Policy,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Policy.cs,Evaluate,Cyclomatic complexity of the method is 11
Complex Method,Anycmd.Xacml.Runtime,PolicyCombiningAlgorithmDenyOverrides,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicyCombiningAlgorithmDenyOverrides.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,Anycmd.Xacml.Runtime,PolicyCombiningAlgorithmOnlyOneApplicable,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicyCombiningAlgorithmOnlyOneApplicable.cs,Evaluate,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime,PolicyCombiningAlgorithmPermitOverrides,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicyCombiningAlgorithmPermitOverrides.cs,Evaluate,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime,PolicySet,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicySet.cs,PolicySet,Cyclomatic complexity of the method is 22
Complex Method,Anycmd.Xacml.Runtime,PolicySet,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicySet.cs,ProcessObligations,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime,Rule,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Rule.cs,Rule,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime,RuleCombiningAlgorithmDenyOverrides,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\RuleCombiningAlgorithmDenyOverrides.cs,Evaluate,Cyclomatic complexity of the method is 10
Complex Method,Anycmd.Xacml.Runtime,RuleCombiningAlgorithmPermitOverrides,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\RuleCombiningAlgorithmPermitOverrides.cs,Evaluate,Cyclomatic complexity of the method is 12
Complex Method,Anycmd.Xacml.Runtime,TargetItems,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\TargetItems.cs,Evaluate,Cyclomatic complexity of the method is 14
Complex Method,Anycmd.Xacml.Runtime,VariableDefinition,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\VariableDefinition.cs,Evaluate,Cyclomatic complexity of the method is 20
Complex Method,Anycmd.Xacml.Runtime.DataTypes,AnyUri,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\AnyUri.cs,IsChildrenOf,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime.Functions,AnyOfAll,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOfAll.cs,Evaluate,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime.Functions,NofFunction,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\NofFunction.cs,Evaluate,Cyclomatic complexity of the method is 8
Complex Method,Anycmd.Xacml.Runtime.Functions,XPathNodeMatch,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\XPath\XPathNodeMatch.cs,Evaluate,Cyclomatic complexity of the method is 12
Long Parameter List,Anycmd.Xacml.Context,AttributeElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElement.cs,AttributeElement,The method has 6 parameters. Parameters: attributeId' dataType' issuer' issueInstant' value' schemaVersion
Long Parameter List,Anycmd.Xacml.Context,AttributeElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElementReadWrite.cs,AttributeElementReadWrite,The method has 6 parameters. Parameters: attributeId' dataType' issuer' issueInstant' value' schemaVersion
Long Parameter List,Anycmd.Xacml.Context,RequestElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElement.cs,RequestElement,The method has 5 parameters. Parameters: subjects' resources' action' environment' schemaVersion
Long Parameter List,Anycmd.Xacml.Context,RequestElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElementReadWrite.cs,RequestElementReadWrite,The method has 5 parameters. Parameters: subjects' resources' action' environment' schemaVersion
Long Parameter List,Anycmd.Xacml.Context,ResultElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResultElement.cs,ResultElement,The method has 5 parameters. Parameters: resourceId' decision' status' obligations' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,AttributeDesignatorBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\AttributeDesignatorBase.cs,AttributeDesignatorBase,The method has 5 parameters. Parameters: dataType' mustBePresent' attributeId' issuer' version
Long Parameter List,Anycmd.Xacml.Policy,PolicyElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElement.cs,PolicyElement,The method has 11 parameters. Parameters: id' description' target' rules' ruleCombiningAlgorithm' obligations' xpathVersion' combinerParameters' ruleCombinerParameters' variableDefinitions' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The method has 11 parameters. Parameters: id' description' target' rules' ruleCombiningAlgorithm' obligations' xpathVersion' combinerParameters' ruleCombinerParameters' variableDefinitions' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicyIdReferenceElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyIdReferenceElement.cs,PolicyIdReferenceElement,The method has 5 parameters. Parameters: policyIdReference' version' earliestVersion' latestVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicyIdReferenceElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyIdReferenceElementReadWrite.cs,PolicyIdReferenceElementReadWrite,The method has 5 parameters. Parameters: policyIdReference' version' earliestVersion' latestVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicySetElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElement.cs,PolicySetElement,The method has 8 parameters. Parameters: id' description' target' policies' policyCombiningAlgorithm' obligations' xpathVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The method has 8 parameters. Parameters: id' description' target' policies' policyCombiningAlgorithm' obligations' xpathVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicySetIdReferenceElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetIdReferenceElement.cs,PolicySetIdReferenceElement,The method has 5 parameters. Parameters: policySetIdReference' version' earliestVersion' latestVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,PolicySetIdReferenceElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetIdReferenceElementReadWrite.cs,PolicySetIdReferenceElementReadWrite,The method has 5 parameters. Parameters: policySetIdReference' version' earliestVersion' latestVersion' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,RuleElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\RuleElement.cs,RuleElement,The method has 6 parameters. Parameters: id' description' target' condition' effect' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,RuleElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\RuleElementReadWrite.cs,RuleElementReadWrite,The method has 6 parameters. Parameters: id' description' target' condition' effect' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,TargetElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElement.cs,TargetElement,The method has 5 parameters. Parameters: resources' subjects' actions' environments' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy,TargetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElementReadWrite.cs,TargetElementReadWrite,The method has 5 parameters. Parameters: resources' subjects' actions' environments' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,ActionAttributeDesignatorElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\ActionAttributeDesignatorElement.cs,ActionAttributeDesignatorElement,The method has 5 parameters. Parameters: dataType' mustBePresent' attributeId' issuer' version
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,EnvironmentAttributeDesignatorElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\EnvironmentAttributeDesignatorElement.cs,EnvironmentAttributeDesignatorElement,The method has 5 parameters. Parameters: dataType' mustBePresent' attributeId' issuer' version
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,ResourceAttributeDesignatorElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\ResourceAttributeDesignatorElement.cs,ResourceAttributeDesignatorElement,The method has 5 parameters. Parameters: dataType' mustBePresent' attributeId' issuer' version
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,SubjectAttributeDesignatorElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\SubjectAttributeDesignatorElement.cs,SubjectAttributeDesignatorElement,The method has 6 parameters. Parameters: dataType' mustBePresent' attributeId' issuer' subjectCategory' version
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,TargetItemsBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBase.cs,TargetItemsBase,The method has 5 parameters. Parameters: reader' itemsNodeName' anyItemNodeName' itemNodeName' schemaVersion
Long Parameter List,Anycmd.Xacml.Policy.TargetItems,TargetItemsBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBaseReadWrite.cs,TargetItemsBaseReadWrite,The method has 5 parameters. Parameters: reader' itemsNodeName' anyItemNodeName' itemNodeName' schemaVersion
Long Identifier,Anycmd.Xacml.Consts,SubjectElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.ContextSchema.SubjectElement.cs,,The length of the parameter AuthLocalityAuthenticationMethod is 32.
Long Identifier,Anycmd.Xacml.Consts,EnvironmentAttributeDesignatorElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.EnvironmentAttributeDesignatorElement.cs,,The length of the parameter EnvironmentAttributeDesignator is 30.
Long Identifier,Anycmd.Xacml.Consts,InternalFunctions,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.InternalFunctions.cs,,The length of the parameter Base64BinaryAtLeastOneMemberOf is 30.
Long Identifier,Anycmd.Xacml.Consts,InternalFunctions,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.InternalFunctions.cs,,The length of the parameter DateTimeSubtractDaytimeDuration is 31.
Long Identifier,Anycmd.Xacml.Consts,InternalFunctions,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.InternalFunctions.cs,,The length of the parameter DateTimeSubtractYearMonthDuration is 33.
Long Identifier,Anycmd.Xacml.Consts,InternalFunctions,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.InternalFunctions.cs,,The length of the parameter DaytimeDurationAtLeastOneMemberOf is 33.
Long Identifier,Anycmd.Xacml.Consts,InternalFunctions,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Consts\Consts.Schema1.InternalFunctions.cs,,The length of the parameter YearMonthDurationAtLeastOneMemberOf is 35.
Long Identifier,Anycmd.Xacml.Context,ContextDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ContextDocumentReadWrite.cs,,The length of the parameter Xacml10ContextSchemaResourceName is 32.
Long Identifier,Anycmd.Xacml.Context,ContextDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ContextDocumentReadWrite.cs,,The length of the parameter Xacml20ContextSchemaResourceName is 32.
Long Identifier,Anycmd.Xacml.Policy,PolicyDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyDocumentReadWrite.cs,,The length of the parameter Xacml10PolicySchemaResourceName is 31.
Long Identifier,Anycmd.Xacml.Policy,PolicyDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyDocumentReadWrite.cs,,The length of the parameter Xacml20PolicySchemaResourceName is 31.
Long Statement,Anycmd.Xacml.Context,ResourceCollection,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResourceCollection.cs,Add,The length of the statement  "            return (List.Add(new ResourceElement(resourceContent' value.ResourceScopeValue' new AttributeCollection(value.Attributes)' value.SchemaVersion))); " is 146.
Long Statement,Anycmd.Xacml.Context,SubjectCollection,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\SubjectCollection.cs,Add,The length of the statement  "            return (List.Add(new SubjectElement(value.SubjectCategory' new AttributeCollection(value.Attributes)' value.SchemaVersion))); " is 125.
Long Statement,Anycmd.Xacml.Extensions,DefaultAttributeRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultAttributeRepository.cs,GetAttribute,The length of the statement  "            foreach (var attrib in _attributes.Cast<AttributeElement>().Where(attrib => attrib.AttributeId == designator.AttributeId)) " is 122.
Long Statement,Anycmd.Xacml.Extensions,DefaultDataTypeRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultDataTypeRepository.cs,Init,The length of the statement  "                if (node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)) " is 134.
Long Statement,Anycmd.Xacml.Extensions,DefaultFunctionRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultFunctionRepository.cs,Init,The length of the statement  "                if (node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)) " is 134.
Long Statement,Anycmd.Xacml.Extensions,DefaultPolicyCombiningAlgorithmRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultPolicyCombiningAlgorithmRepository.cs,Init,The length of the statement  "                if (node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)) " is 134.
Long Statement,Anycmd.Xacml.Extensions,DefaultRuleCombiningAlgorithmRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultRuleCombiningAlgorithmRepository.cs,Init,The length of the statement  "                if (node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)) " is 134.
Long Statement,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,WriteDocument,The length of the statement  "                writer.WriteAttributeString(Consts.Schema1.Namespaces.Xmlns' name.Key.ToString(CultureInfo.InvariantCulture)' null' name.Value.ToString(CultureInfo.InvariantCulture)); " is 167.
Long Statement,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,WriteDocument,The length of the statement  "            writer.WriteAttributeString(Consts.Schema1.PolicySetElement.PolicyCombiningAlgorithmId' this._policyCombiningAlgorithm); " is 120.
Long Statement,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,WriteDocument,The length of the statement  "            writer.WriteAttributeString(Consts.Schema1.PolicySetElement.PolicyCombiningAlgorithmId' this._policyCombiningAlgorithm); " is 120.
Long Statement,Anycmd.Xacml.Policy,StringValueBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\StringValueBase.cs,GetTypedValue,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeValue)); " is 124.
Long Statement,Anycmd.Xacml.Policy,StringValueBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\StringValueBase.cs,GetFunction,The length of the statement  "            throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeValue)); " is 124.
Long Statement,Anycmd.Xacml.Runtime,ApplyBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\ApplyBase.cs,Evaluate,The length of the statement  "            FunctionParameterCollection arguments = ProcessArguments(context' new ExpressionCollection((ExpressionReadWriteCollection)_applyBase.Arguments)); " is 145.
Long Statement,Anycmd.Xacml.Runtime,BagValue,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\BagValue.cs,GetFunction,The length of the statement  "            throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' "BagValue")); " is 121.
Long Statement,Anycmd.Xacml.Runtime,Condition2,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Condition2.cs,Evaluate,The length of the statement  "                        var attributeValue = new AttributeValueElement(((AttributeValueElementReadWrite)arg).DataType' ((AttributeValueElementReadWrite)arg).Contents' ((AttributeValueElementReadWrite)arg).SchemaVersion); " is 196.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Evaluate,The length of the statement  "				(pol.PolicyDocument)PolicyLoader.LoadPolicyDocument(new FileStream(policyDocument' FileMode.Open)' schemaVersion' DocumentAccess.ReadOnly)' " is 139.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Resolve,The length of the statement  "				return new Context.AttributeElement(attribute.AttributeId' attribute.DataType' attribute.Issuer' attribute.IssueInstant' " is 120.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,EvaluateFunction,The length of the statement  "						((functionInstance.Arguments[functionArgumentIdx] != DataTypeDescriptor.Bag) && (arguments[functionArgumentIdx] is BagValue)))) " is 127.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,EvaluateFunction,The length of the statement  "							((arguments[argumentValueIdx] is BagValue) && (functionInstance.Arguments[functionArgumentIdx] != DataTypeDescriptor.Bag))) " is 123.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeGreaterThanOrEqual' new Functions.DateTimeDataType.GreaterThanOrEqual()); " is 129.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeLessThanOrEqual' new Functions.DateTimeDataType.LessThanOrEqual()); " is 123.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeAddDaytimeDuration' new Functions.DateTimeDataType.AddDaytimeDuration()); " is 129.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeAddYearMonthDuration' new Functions.DateTimeDataType.AddYearMonthDuration()); " is 133.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeSubtractDaytimeDuration' new Functions.DateTimeDataType.SubtractDaytimeDuration()); " is 139.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeSubtractYearMonthDuration' new Functions.DateTimeDataType.SubtractYearMonthDuration()); " is 143.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DateTimeAtLeastOneMemberOf' new Functions.DateTimeDataType.AtLeastOneMemberOf()); " is 129.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.DaytimeDurationAtLeastOneMemberOf' new DaytimeDurationAtLeastOneMemberOf()); " is 124.
Long Statement,Anycmd.Xacml.Runtime,EvaluationEngine,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationEngine.cs,Prepare,The length of the statement  "			_functions.Add(Consts.Schema1.InternalFunctions.YearMonthDurationAtLeastOneMemberOf' new YearMonthDurationAtLeastOneMemberOf()); " is 128.
Long Statement,Anycmd.Xacml.Runtime,TargetItems,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\TargetItems.cs,Evaluate,The length of the statement  "                                EvaluationValue returnValue = EvaluationEngine.EvaluateFunction(context' matchFunction' match.AttributeValue' attribute); " is 121.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,AnyUri,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\AnyUri.cs,Parse,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeName)' e); " is 126.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,DaytimeDuration,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\DayTimeDuration.cs,Equals,The length of the statement  "            return _days == compareTo._days && _hours == compareTo._hours && _minutes == compareTo._minutes && _seconds == compareTo._seconds && _negative == compareTo._negative; " is 166.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,DoubleDataType,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\DoubleDataType.cs,Parse,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeName)' e); " is 126.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,IntegerDataType,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\IntegerDataType.cs,Parse,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeName)' e); " is 126.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,Rfc822Name,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\Rfc822Name.cs,Parse,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeName)' e); " is 126.
Long Statement,Anycmd.Xacml.Runtime.DataTypes,X500Name,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\X500Name.cs,Parse,The length of the statement  "                throw new EvaluationException(string.Format(Properties.Resource.exc_invalid_datatype_in_stringvalue' parNo' DataTypeName)' e); " is 126.
Long Statement,Anycmd.Xacml.Runtime.Functions,BaseSetEquals,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\BaseSetEquals.cs,Evaluate,The length of the statement  "                new EvaluationValue(args[0]' args[0].GetType(context))' new EvaluationValue(args[1]' args[1].GetType(context))) == EvaluationValue.True) && " is 139.
Long Statement,Anycmd.Xacml.Runtime.Functions,BaseSetEquals,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\BaseSetEquals.cs,Evaluate,The length of the statement  "                new EvaluationValue(args[1]' args[1].GetType(context))' new EvaluationValue(args[0]' args[0].GetType(context))) == EvaluationValue.True)) " is 137.
Long Statement,Anycmd.Xacml.Runtime.Functions,BaseSubset,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\BaseSubset.cs,Evaluate,The length of the statement  "                    EvaluationValue retVal = function.Evaluate(context' new EvaluationValue(par1' args[0].GetType(context))' new EvaluationValue(par2' args[1].GetType(context))); " is 158.
Long Statement,Anycmd.Xacml.Runtime.Functions,StringNormalizeToLowercase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\String\StringNormalizeToLowerCase.cs,Evaluate,The length of the statement  "            return new EvaluationValue(GetStringArgument(args' 0).ToLower(CultureInfo.InvariantCulture)' DataTypeDescriptor.String); " is 120.
Long Statement,Anycmd.Xacml.Runtime.Functions,X500NameMatch,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\X500Name\X500NameMatch.cs,Evaluate,The length of the statement  "            if (((typ.X500Name)args[0].GetTypedValue(DataTypeDescriptor.X500Name' 0)).Matches((typ.X500Name)args[1].GetTypedValue(DataTypeDescriptor.X500Name' 1))) " is 151.
Complex Conditional,Anycmd.Xacml.Extensions,DefaultDataTypeRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultDataTypeRepository.cs,Init,The conditional expression  "node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)"  is complex.
Complex Conditional,Anycmd.Xacml.Extensions,DefaultFunctionRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultFunctionRepository.cs,Init,The conditional expression  "node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)"  is complex.
Complex Conditional,Anycmd.Xacml.Extensions,DefaultPolicyCombiningAlgorithmRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultPolicyCombiningAlgorithmRepository.cs,Init,The conditional expression  "node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)"  is complex.
Complex Conditional,Anycmd.Xacml.Extensions,DefaultRuleCombiningAlgorithmRepository,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Extensions\DefaultRuleCombiningAlgorithmRepository.cs,Init,The conditional expression  "node == null || node.Attributes == null || node.Attributes["type"] == null || string.IsNullOrEmpty(node.Attributes["type"].Value)"  is complex.
Complex Conditional,Anycmd.Xacml.Runtime,Policy,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Policy.cs,Evaluate,The conditional expression  "_evaluationValue != Decision.Indeterminate &&                      _evaluationValue != Decision.NotApplicable &&                      _policy.Obligations != null && _policy.Obligations.Count != 0"  is complex.
Complex Conditional,Anycmd.Xacml.Runtime,Policy,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Policy.cs,Evaluate,The conditional expression  "(obl.FulfillOn == pol.Effect.Deny && _evaluationValue == Decision.Deny) ||                              (obl.FulfillOn == pol.Effect.Permit && _evaluationValue == Decision.Permit)"  is complex.
Complex Conditional,Anycmd.Xacml.Runtime,PolicySet,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicySet.cs,ProcessObligations,The conditional expression  "_evaluationValue != Decision.Indeterminate &&                  _evaluationValue != Decision.NotApplicable &&                  _policySet.Obligations != null &&                  _policySet.Obligations.Count != 0"  is complex.
Complex Conditional,Anycmd.Xacml.Runtime,PolicySet,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicySet.cs,ProcessObligations,The conditional expression  "(obl.FulfillOn == Effect.Deny && _evaluationValue == Decision.Deny) ||                          (obl.FulfillOn == Effect.Permit && _evaluationValue == Decision.Permit)"  is complex.
Complex Conditional,Anycmd.Xacml.Runtime,PolicySet,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\PolicySet.cs,ProcessObligations,The conditional expression  "(childObligation.FulfillOn == Effect.Deny && _evaluationValue == Decision.Deny) ||                                  (childObligation.FulfillOn == Effect.Permit && _evaluationValue == Decision.Permit)"  is complex.
Virtual Method Call from Constructor,Anycmd.Xacml.Context,AttributeElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElementReadWrite.cs,AttributeElementReadWrite,The constructor "AttributeElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,AttributeElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElementReadWrite.cs,AttributeElementReadWrite,The constructor "AttributeElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,AttributeElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElementReadWrite.cs,AttributeElementReadWrite,The constructor "AttributeElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,RequestElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElementReadWrite.cs,RequestElementReadWrite,The constructor "RequestElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,RequestElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElementReadWrite.cs,RequestElementReadWrite,The constructor "RequestElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,ResultElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResultElement.cs,ResultElement,The constructor "ResultElement" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,TargetItemBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\TargetItemBase.cs,TargetItemBase,The constructor "TargetItemBase" calls a virtual method "AttributeFound".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,TargetItemBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\TargetItemBase.cs,TargetItemBase,The constructor "TargetItemBase" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Context,TargetItemBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\TargetItemBase.cs,TargetItemBase,The constructor "TargetItemBase" calls a virtual method "NodeFound".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The constructor "ApplyBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,CombinerParameterElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\CombinerParameterElement.cs,CombinerParameterElement,The constructor "CombinerParameterElement" calls a virtual method "AttributeFound".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,ObligationCollection,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ObligationCollection.cs,ObligationCollection,The constructor "ObligationCollection" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The constructor "PolicyElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The constructor "PolicyElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The constructor "PolicySetElementReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemBaseReadWrite.cs,TargetItemBaseReadWrite,The constructor "TargetItemBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemBaseReadWrite.cs,TargetItemBaseReadWrite,The constructor "TargetItemBaseReadWrite" calls a virtual method "CreateMatch".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemsBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBase.cs,TargetItemsBase,The constructor "TargetItemsBase" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemsBase,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBase.cs,TargetItemsBase,The constructor "TargetItemsBase" calls a virtual method "CreateTargetItem".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemsBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBaseReadWrite.cs,TargetItemsBaseReadWrite,The constructor "TargetItemsBaseReadWrite" calls a virtual method "Add".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetItemsBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetItemsBaseReadWrite.cs,TargetItemsBaseReadWrite,The constructor "TargetItemsBaseReadWrite" calls a virtual method "CreateTargetItem".
Virtual Method Call from Constructor,Anycmd.Xacml.Policy.TargetItems,TargetMatchBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetItems\TargetMatchBaseReadWrite.cs,TargetMatchBaseReadWrite,The constructor "TargetMatchBaseReadWrite" calls a virtual method "CreateAttributeDesignator".
Virtual Method Call from Constructor,Anycmd.Xacml.Runtime,EvaluationContext,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\EvaluationContext.cs,EvaluationContext,The constructor "EvaluationContext" calls a virtual method "Add".
Magic Number,Anycmd.Xacml.Runtime.DataTypes,HexBinary,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\HexBinary.cs,Parse,The following statement contains a magic number: byte[] buff = new byte[ value.Length / 2 ];
Magic Number,Anycmd.Xacml.Runtime.DataTypes,HexBinary,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\HexBinary.cs,Parse,The following statement contains a magic number: buff[ idx ] = Byte.Parse( value.Substring( (idx*2)' 2 )' NumberStyles.HexNumber' CultureInfo.InvariantCulture );
Magic Number,Anycmd.Xacml.Runtime.DataTypes,HexBinary,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\DataTypes\HexBinary.cs,Parse,The following statement contains a magic number: buff[ idx ] = Byte.Parse( value.Substring( (idx*2)' 2 )' NumberStyles.HexNumber' CultureInfo.InvariantCulture );
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOf,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOf.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(context' value' new EvaluationValue(par' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOf,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOf.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOfAll,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOfAll.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(                          context'                          new EvaluationValue(par1' args[1].GetType(context))' new EvaluationValue(par2' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOfAll,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOfAll.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOfAny,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOfAny.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(                          context'                          new EvaluationValue(par1' args[1].GetType(context))'                          new EvaluationValue(par2' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AllOfAny,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AllOfAny.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOf,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOf.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(                      context' value'                      new EvaluationValue(par' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOf,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOf.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOfAll,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOfAll.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(                          context'                          new EvaluationValue(par1' args[1].GetType(context))'                          new EvaluationValue(par2' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOfAll,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOfAll.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOfAny,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOfAny.cs,Evaluate,The following statement contains a magic number: EvaluationValue retVal = function.Evaluate(                          context'                          new EvaluationValue(par1' args[1].GetType(context))'                          new EvaluationValue(par2' args[2].GetType(context)));
Magic Number,Anycmd.Xacml.Runtime.Functions,AnyOfAny,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Runtime\Functions\AllTypes\AnyOfAny.cs,Evaluate,The following statement contains a magic number: args[2].Elements
Missing Default,Anycmd.Xacml,ContextLoader,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\ContextLoader.cs,GetXacmlVersion,The following switch statement is missing a default case: switch (reader.LocalName)                  {                      case Consts.ContextSchema.ResponseElement.Response:                      case Consts.ContextSchema.RequestElement.Request:                          switch (reader.NamespaceURI)                          {                              case Consts.Schema1.Namespaces.Context:                                  return XacmlVersion.Version11;                              case Consts.Schema2.Namespaces.Context:                                  return XacmlVersion.Version20;                          }                          break;                  }
Missing Default,Anycmd.Xacml,ContextLoader,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\ContextLoader.cs,GetXacmlVersion,The following switch statement is missing a default case: switch (reader.NamespaceURI)                          {                              case Consts.Schema1.Namespaces.Context:                                  return XacmlVersion.Version11;                              case Consts.Schema2.Namespaces.Context:                                  return XacmlVersion.Version20;                          }
Missing Default,Anycmd.Xacml,PolicyLoader,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\PolicyLoader.cs,GetXacmlVersion,The following switch statement is missing a default case: switch (reader.LocalName)                  {                      case Consts.Schema1.PolicyElement.Policy:                      case Consts.Schema1.PolicySetElement.PolicySet:                          switch (reader.NamespaceURI)                          {                              case Consts.Schema1.Namespaces.Policy:                                  return XacmlVersion.Version11;                              case Consts.Schema2.Namespaces.Policy:                                  return XacmlVersion.Version20;                          }                          break;                  }
Missing Default,Anycmd.Xacml,PolicyLoader,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\PolicyLoader.cs,GetXacmlVersion,The following switch statement is missing a default case: switch (reader.NamespaceURI)                          {                              case Consts.Schema1.Namespaces.Policy:                                  return XacmlVersion.Version11;                              case Consts.Schema2.Namespaces.Policy:                                  return XacmlVersion.Version20;                          }
Missing Default,Anycmd.Xacml.Context,AttributeElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\AttributeElementReadWrite.cs,AttributeElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.ContextSchema.AttributeElement.AttributeValue:                              _attributeValues.Add(new AttributeValueElementReadWrite(reader' schemaVersion));                              break;                      }
Missing Default,Anycmd.Xacml.Context,ContextDocument,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ContextDocument.cs,Create,The following switch statement is missing a default case: switch (access)              {                  case DocumentAccess.ReadOnly:                      return new ContextDocument(reader' schemaVersion);                  case DocumentAccess.ReadWrite:                      return new ContextDocumentReadWrite(reader' schemaVersion);              }
Missing Default,Anycmd.Xacml.Context,ContextDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ContextDocumentReadWrite.cs,ContextDocumentReadWrite,The following switch statement is missing a default case: switch (vreader.LocalName)                      {                          case Consts.ContextSchema.RequestElement.Request:                              _request = new RequestElementReadWrite(vreader' schemaVersion);                              break;                          case Consts.ContextSchema.ResponseElement.Response:                              Response = new ResponseElement(vreader' schemaVersion);                              break;                      }
Missing Default,Anycmd.Xacml.Context,RequestElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\RequestElementReadWrite.cs,RequestElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.ContextSchema.RequestElement.Subject:                              _subjects.Add(new SubjectElementReadWrite(reader' schemaVersion));                              break;                          case Consts.ContextSchema.RequestElement.Resource:                              _resources.Add(new ResourceElementReadWrite(reader' schemaVersion));                              break;                          case Consts.ContextSchema.RequestElement.Action:                              _action = new ActionElementReadWrite(reader' schemaVersion);                              break;                          case Consts.ContextSchema.RequestElement.Environment:                              _environment = new EnvironmentElementReadWrite(reader' schemaVersion);                              break;                      }
Missing Default,Anycmd.Xacml.Context,ResponseElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResponseElement.cs,ResponseElement,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.ContextSchema.ResultElement.Result:                              _results.Add(new ResultElement(reader' schemaVersion));                              break;                      }
Missing Default,Anycmd.Xacml.Context,ResultElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResultElement.cs,ResultElement,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.ContextSchema.ResultElement.Decision:                              // The parsing should be safe because the document was validated using a Xsd Shcema                              Decision = (Decision)Enum.Parse(typeof(Decision)' reader.ReadElementString()' false);                              break;                          case Consts.ContextSchema.StatusElement.Status:                              Status = new StatusElement(reader' schemaVersion);                              break;                          case Consts.Schema1.ObligationsElement.Obligations:                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElement(reader' schemaVersion));                                          break;                                  }                                  // Trick to support multiple nodes of the same name.                                  if (reader.LocalName == Consts.Schema1.ObligationsElement.Obligations &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                                break;                      }
Missing Default,Anycmd.Xacml.Context,ResultElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\ResultElement.cs,ResultElement,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Context,StatusCodeElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\StatusCodeElement.cs,StatusCodeElement,The following switch statement is missing a default case: switch (reader.LocalName)                          {                              case Consts.ContextSchema.StatusElement.StatusCode:                                  _statusCode = new StatusCodeElement(reader' schemaVersion);                                  break;                          }
Missing Default,Anycmd.Xacml.Context,StatusElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Context\StatusElement.cs,StatusElement,The following switch statement is missing a default case: switch (reader.LocalName)                  {                      case Consts.ContextSchema.StatusElement.StatusCode:                          StatusCode = new StatusCodeElement(reader' schemaVersion);                          break;                      case Consts.ContextSchema.StatusElement.StatusMessage:                          _statusMessage = reader.ReadElementString();                          break;                      case Consts.ContextSchema.StatusElement.StatusDetail:                          _statusDetail = reader.ReadElementString();                          break;                  }
Missing Default,Anycmd.Xacml.Policy,ApplyBaseReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ApplyBaseReadWrite.cs,ApplyBaseReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema1.ApplyElement.Apply:                              // Must validate if the Apply node is not an EndElement because there is a child node                              // with the same name as the parent node.                              if (!reader.IsEmptyElement && reader.NodeType != XmlNodeType.EndElement)                              {                                  _arguments.Add(new ApplyElement(reader' schemaVersion));                              }                              break;                          case Consts.Schema1.FunctionElement.Function:                              _arguments.Add(new FunctionElementReadWrite(reader' schemaVersion));                              break;                          case Consts.Schema1.AttributeValueElement.AttributeValue:                              _arguments.Add(new AttributeValueElementReadWrite(reader' schemaVersion));                              break;                          case Consts.Schema1.SubjectAttributeDesignatorElement.SubjectAttributeDesignator:                              _arguments.Add(new SubjectAttributeDesignatorElement(reader' schemaVersion));                              break;                          case Consts.Schema1.ResourceAttributeDesignatorElement.ResourceAttributeDesignator:                              _arguments.Add(new ResourceAttributeDesignatorElement(reader' schemaVersion));                              break;                          case Consts.Schema1.ActionAttributeDesignatorElement.ActionAttributeDesignator:                              _arguments.Add(new ActionAttributeDesignatorElement(reader' schemaVersion));                              break;                          case Consts.Schema1.EnvironmentAttributeDesignatorElement.EnvironmentAttributeDesignator:                              _arguments.Add(new EnvironmentAttributeDesignatorElement(reader' schemaVersion));                              break;                          case Consts.Schema1.AttributeSelectorElement.AttributeSelector:                              _arguments.Add(new AttributeSelectorElement(reader' schemaVersion));                              break;                          case Consts.Schema2.VariableReferenceElement.VariableReference:                              _arguments.Add(new VariableReferenceElement(reader' schemaVersion));                              break;                      }
Missing Default,Anycmd.Xacml.Policy,CombinerParameterElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\CombinerParameterElement.cs,CombinerParameterElement,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema2.CombinerParameterElement.AttributeValue:                              _attributeValue = new AttributeValueElement(reader' schemaVersion);                              break;                      }
Missing Default,Anycmd.Xacml.Policy,ObligationElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\ObligationElementReadWrite.cs,ObligationElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                          {                              case Consts.Schema1.ObligationElement.AttributeAssignment:                                  _attributeAssignment.Add(new AttributeAssignmentElementReadWrite(reader' schemaVersion));                                  break;                          }
Missing Default,Anycmd.Xacml.Policy,PolicyDocumentReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyDocumentReadWrite.cs,PolicyDocumentReadWrite,The following switch statement is missing a default case: switch (vreader.LocalName)                      {                          case Consts.Schema1.PolicySetElement.PolicySet:                              {                                  _policySet = new PolicySetElementReadWrite(vreader' schemaVersion);                                  return;                              }                          case Consts.Schema1.PolicyElement.Policy:                              {                                  _policy = new PolicyElementReadWrite(vreader' schemaVersion);                                  return;                              }                      }
Missing Default,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema1.PolicyElement.Description:                              _description = reader.ReadElementString();                              break;                          case Consts.Schema1.PolicyElement.PolicyDefaults:                              // Read all the policy defaults.                              if (reader.Read() && reader.Read())                              {                                  if (reader.LocalName == Consts.Schema1.PolicyDefaultsElement.XPathVersion &&                                      ValidateSchema(reader' schemaVersion))                                  {                                      _xpathVersion = reader.ReadElementString();                                      if (!string.IsNullOrEmpty(_xpathVersion) && _xpathVersion != Consts.Schema1.Namespaces.XPath10)                                      {                                          throw new Exception(string.Format(Properties.Resource.exc_unsupported_xpath_version' _xpathVersion));                                      }                                  }                                  reader.Read();                              }                              break;                          case Consts.Schema1.TargetElement.Target:                              _target = new TargetElementReadWrite(reader' schemaVersion);                              break;                          case Consts.Schema1.RuleElement.Rule:                              _rules.Add(new RuleElementReadWrite(reader' schemaVersion));                              break;                          case Consts.Schema1.PolicyElement.Obligations:                              // Read all the obligations                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElementReadWrite(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema1.ObligationsElement.Obligations &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicyElement.CombinerParameters:                              // Read all the combiner parameters                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema2.CombinerParameterElement.CombinerParameter:                                          _combinerParameters.Add(new CombinerParameterElement(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema2.PolicyElement.CombinerParameters &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicyElement.RuleCombinerParameters:                              // Read all the rule parameters                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema2.RuleCombinerParameterElement.RuleCombinerParameter:                                          _ruleCombinerParameters.Add(new RuleCombinerParameterElement(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema2.PolicyElement.RuleCombinerParameters &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicyElement.VariableDefinition:                              var variable = new VariableDefinitionElement(reader' schemaVersion);                              _variableDefinitions.Add(variable.Id' variable);                              break;                      }
Missing Default,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElementReadWrite(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema2.CombinerParameterElement.CombinerParameter:                                          _combinerParameters.Add(new CombinerParameterElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicyElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicyElementReadWrite.cs,PolicyElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema2.RuleCombinerParameterElement.RuleCombinerParameter:                                          _ruleCombinerParameters.Add(new RuleCombinerParameterElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema1.PolicySetElement.Description:                              _description = reader.ReadElementString();                              break;                          case Consts.Schema1.PolicySetElement.PolicySetDefaults:                              if (reader.Read() && reader.Read())                              {                                  if (reader.LocalName == Consts.Schema1.PolicySetDefaultsElement.XPathVersion &&                                      ValidateSchema(reader' schemaVersion))                                  {                                      _xpathVersion = reader.ReadElementString();                                      if (!string.IsNullOrEmpty(_xpathVersion) && _xpathVersion != Consts.Schema1.Namespaces.XPath10)                                      {                                          throw new Exception(string.Format(Properties.Resource.exc_unsupported_xpath_version' _xpathVersion));                                      }                                  }                                  reader.Read();                              }                              break;                          case Consts.Schema1.TargetElement.Target:                              _target = new TargetElementReadWrite(reader' schemaVersion);                              break;                          case Consts.Schema1.PolicySetElement.PolicySet:                              if (!reader.IsEmptyElement && reader.NodeType != XmlNodeType.EndElement)                              {                                  _policies.Add(new PolicySetElementReadWrite(reader' schemaVersion));                              }                              break;                          case Consts.Schema1.PolicyElement.Policy:                              _policies.Add(new PolicyElementReadWrite(reader' schemaVersion));                              break;                          case Consts.Schema1.PolicySetIdReferenceElement.PolicySetIdReference:                              _policies.Add(new PolicySetIdReferenceElementReadWrite(reader' schemaVersion));                              break;                          case Consts.Schema1.PolicyIdReferenceElement.PolicyIdReference:                              _policies.Add(new PolicyIdReferenceElement(reader' schemaVersion));                              break;                          case Consts.Schema1.PolicySetElement.Obligations:                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElementReadWrite(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema1.ObligationsElement.Obligations &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicySetElement.CombinerParameters:                              // Read all the combiner parameters                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema2.CombinerParameterElement.CombinerParameter:                                          _combinerParameters.Add(new CombinerParameterElement(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema2.PolicySetElement.CombinerParameters &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicySetElement.PolicyCombinerParameters:                              // Read all the policy combiner parameters                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema2.PolicyCombinerParameterElement.PolicyCombinerParameter:                                          _policyCombinerParameters.Add(new PolicyCombinerParameterElement(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema2.PolicySetElement.PolicyCombinerParameters &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                          case Consts.Schema2.PolicySetElement.PolicySetCombinerParameters:                              // Read all the policy set combiner parameters                              while (reader.Read())                              {                                  switch (reader.LocalName)                                  {                                      case Consts.Schema2.PolicySetCombinerParameterElement.PolicySetCombinerParameter:                                          _policySetCombinerParameters.Add(new PolicySetCombinerParameterElement(reader' schemaVersion));                                          break;                                  }                                  if (reader.LocalName == Consts.Schema2.PolicySetElement.PolicySetCombinerParameters &&                                      reader.NodeType == XmlNodeType.EndElement)                                  {                                      reader.Read();                                      break;                                  }                              }                              break;                      }
Missing Default,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema1.ObligationElement.Obligation:                                          _obligations.Add(new ObligationElementReadWrite(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema2.CombinerParameterElement.CombinerParameter:                                          _combinerParameters.Add(new CombinerParameterElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema2.PolicyCombinerParameterElement.PolicyCombinerParameter:                                          _policyCombinerParameters.Add(new PolicyCombinerParameterElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,PolicySetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\PolicySetElementReadWrite.cs,PolicySetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                                  {                                      case Consts.Schema2.PolicySetCombinerParameterElement.PolicySetCombinerParameter:                                          _policySetCombinerParameters.Add(new PolicySetCombinerParameterElement(reader' schemaVersion));                                          break;                                  }
Missing Default,Anycmd.Xacml.Policy,RuleElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\RuleElementReadWrite.cs,RuleElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema1.RuleElement.Description:                              _description = reader.ReadElementString();                              break;                          case Consts.Schema1.RuleElement.Target:                              _target = new TargetElementReadWrite(reader' schemaVersion);                              break;                          case Consts.Schema1.RuleElement.Condition:                              _condition = new ConditionElementReadWrite(reader' schemaVersion);                              break;                      }
Missing Default,Anycmd.Xacml.Policy,TargetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElementReadWrite.cs,TargetElementReadWrite,The following switch statement is missing a default case: switch (reader.LocalName)                          {                              case Consts.Schema1.TargetElement.Subjects:                                  _subjects = new SubjectsElementReadWrite(reader' schemaVersion);                                  break;                              case Consts.Schema1.TargetElement.Resources:                                  _resources = new ResourcesElementReadWrite(reader' schemaVersion);                                  break;                              case Consts.Schema1.TargetElement.Actions:                                  _actions = new ActionsElementReadWrite(reader' schemaVersion);                                  break;                              case Consts.Schema2.TargetElement.Environments:                                  _environments = new EnvironmentsElementReadWrite(reader' schemaVersion);                                  break;                          }
Missing Default,Anycmd.Xacml.Policy,TargetElementReadWrite,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\TargetElementReadWrite.cs,WriteDocument,The following switch statement is missing a default case: switch (this.SchemaVersion)              {                  case XacmlVersion.Version10:                  case XacmlVersion.Version11:                      {                          if (this._subjects != null)                          {                              this._subjects.WriteDocument(writer);                          }                          if (this._resources != null)                          {                              this._resources.WriteDocument(writer);                          }                          if (this._actions != null)                          {                              this._actions.WriteDocument(writer);                          }                          if (this._environments != null)                          {                              this._environments.WriteDocument(writer);                          }                          break;                      }                  case XacmlVersion.Version20:                      {                          if (this._subjects != null)                          {                              if (!this._subjects.IsAny)                              {                                  this._subjects.WriteDocument(writer);                              }                          }                          if (this._resources != null)                          {                              if (!this._resources.IsAny)                              {                                  this._resources.WriteDocument(writer);                              }                          }                          if (this._actions != null)                          {                              if (!this._actions.IsAny)                              {                                  this._actions.WriteDocument(writer);                              }                          }                          if (this._environments != null)                          {                              if (!this._environments.IsAny)                              {                                  this._environments.WriteDocument(writer);                              }                          }                          break;                      }              }
Missing Default,Anycmd.Xacml.Policy,VariableDefinitionElement,D:\research\architectureSmells\repos\anycmd_anycmd\src\Anycmd.Xacml\Policy\VariableDefinitionElement.cs,VariableDefinitionElement,The following switch statement is missing a default case: switch (reader.LocalName)                      {                          case Consts.Schema1.AttributeSelectorElement.AttributeSelector:                              _expression = new AttributeSelectorElement(reader' schemaVersion);                              break;                          case Consts.Schema1.SubjectAttributeDesignatorElement.SubjectAttributeDesignator:                              _expression = new SubjectAttributeDesignatorElement(reader' schemaVersion);                              break;                          case Consts.Schema1.ActionAttributeDesignatorElement.ActionAttributeDesignator:                              _expression = new ActionAttributeDesignatorElement(reader' schemaVersion);                              break;                          case Consts.Schema1.ResourceAttributeDesignatorElement.ResourceAttributeDesignator:                              _expression = new ResourceAttributeDesignatorElement(reader' schemaVersion);                              break;                          case Consts.Schema1.EnvironmentAttributeDesignatorElement.EnvironmentAttributeDesignator:                              _expression = new EnvironmentAttributeDesignatorElement(reader' schemaVersion);                              break;                          case Consts.Schema1.AttributeValueElement.AttributeValue:                              _expression = new AttributeValueElementReadWrite(reader' schemaVersion);                              break;                          case Consts.Schema1.FunctionElement.Function:                              _expression = new FunctionElementReadWrite(reader' schemaVersion);                              break;                          case Consts.Schema1.ApplyElement.Apply:                              _expression = new ApplyElement(reader' schemaVersion);                              break;                          case Consts.Schema2.VariableReferenceElement.VariableReference:                              _expression = new VariableReferenceElement(reader' schemaVersion);                              break;                      }
