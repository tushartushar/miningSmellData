Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SortingByInvalidProperty,The length of the parameter sortedCarsByInvalidPropertyModel is 32.
Long Statement,Cars.Tests.JustMock.Mocks,JustMockCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\JustMockCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            Mock.Arrange(() => this.CarsData.Search(Arg.AnyString)).Returns(this.FakeCarCollection.Where(c => c.Make == "BMW").ToList()); " is 125.
Long Statement,Cars.Tests.JustMock.Mocks,JustMockCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\JustMockCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            Mock.Arrange(() => this.CarsData.GetById(Arg.IsInRange<int>(1' int.MaxValue' RangeKind.Inclusive))).Returns(this.FakeCarCollection.First()); " is 140.
Long Statement,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            mockedCarsRepository.Setup(r => r.Search(It.IsAny<string>())).Returns(this.FakeCarCollection.Where(c => c.Make == "BMW").ToList()); " is 131.
Long Statement,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            mockedCarsRepository.Setup(r => r.SortedByMake()).Returns(this.FakeCarCollection.OrderBy(c => c.Make).Take(2).ToList()); " is 120.
Long Statement,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            mockedCarsRepository.Setup(r => r.SortedByYear()).Returns(this.FakeCarCollection.OrderBy(c => c.Year).Take(2).ToList()); " is 120.
Long Statement,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The length of the statement  "            mockedCarsRepository.Setup(r => r.GetById(It.IsInRange<int>(1' int.MaxValue' Range.Inclusive))).Returns(this.FakeCarCollection.First()); " is 136.
Virtual Method Call from Constructor,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,CarRepositoryMock,The constructor "CarRepositoryMock" calls a virtual method "ArrangeCarsRepositoryMock".
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,CarRepositoryMock,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\CarRepositoryMock.cs,PopulateFakeData,The following statement contains a magic number: this.FakeCarCollection = new List<Car>              {                  new Car { Id = 1' Make = "Audi"' Model = "A4"' Year = 2005 }'                  new Car { Id = 2' Make = "BMW"' Model = "325i"' Year = 2008 }'                  new Car { Id = 3' Make = "BMW"' Model = "330d"' Year = 2007 }'                  new Car { Id = 4' Make = "Opel"' Model = "Astra"' Year = 2010 }'              };
Magic Number,Cars.Tests.JustMock.Mocks,JustMockCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\JustMockCarsRepository.cs,ArrangeCarsRepositoryMock,The following statement contains a magic number: Mock.Arrange(() => this.CarsData.SortedByMake()).Returns(this.FakeCarCollection.OrderBy(c => c.Make).Take(2).ToList());
Magic Number,Cars.Tests.JustMock.Mocks,JustMockCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\JustMockCarsRepository.cs,ArrangeCarsRepositoryMock,The following statement contains a magic number: Mock.Arrange(() => this.CarsData.SortedByYear()).Returns(this.FakeCarCollection.OrderBy(c => c.Year).Take(2).ToList());
Magic Number,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The following statement contains a magic number: mockedCarsRepository.Setup(r => r.SortedByMake()).Returns(this.FakeCarCollection.OrderBy(c => c.Make).Take(2).ToList());
Magic Number,Cars.Tests.JustMock.Mocks,MoqCarsRepository,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\Mocks\MoqCarsRepository.cs,ArrangeCarsRepositoryMock,The following statement contains a magic number: mockedCarsRepository.Setup(r => r.SortedByYear()).Returns(this.FakeCarCollection.OrderBy(c => c.Year).Take(2).ToList());
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,IndexShouldReturnAllCars,The following statement contains a magic number: Assert.AreEqual(4' model.Count);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldThrowArgumentNullExceptionIfCarMakeIsNull,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = ""'                  Model = "330d"'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldThrowArgumentNullExceptionIfCarMakeIsNull,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = ""'                  Model = "330d"'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldThrowArgumentNullExceptionIfCarModelIsNull,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = "BMW"'                  Model = ""'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldThrowArgumentNullExceptionIfCarModelIsNull,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = "BMW"'                  Model = ""'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldReturnADetail,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = "BMW"'                  Model = "330d"'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldReturnADetail,The following statement contains a magic number: var car = new Car              {                  Id = 15'                  Make = "BMW"'                  Model = "330d"'                  Year = 2014              };
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,AddingCarShouldReturnADetail,The following statement contains a magic number: Assert.AreEqual(2005' model.Year);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SortingByMarkInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(2' sortedCarsByMakeModel.Count);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SortingByYearInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(2' sortedCarsByYearModel.Count);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SortingByYearInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(2005' sortedCarsByYearModel.First().Year);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SortingByYearInAscendingOrder,The following statement contains a magic number: Assert.AreEqual(2007' sortedCarsByYearModel.ElementAt(1).Year);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SearchingCarsByCriteria,The following statement contains a magic number: Assert.AreEqual(2' matchedCars.Count);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SearchingCarsByCriteria,The following statement contains a magic number: Assert.AreEqual(2' matchedCars.First().Id);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,SearchingCarsByCriteria,The following statement contains a magic number: Assert.AreEqual(3' matchedCars.ElementAt(1).Id);
Magic Number,Cars.Tests.JustMock,CarsControllerTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\4. C# High-Quality Code\19. Mocking with Moq and JustMock\Cars.Tests.JustMock\CarsControllerTests.cs,GetByIdShouldReturnFirstCar,The following statement contains a magic number: var matchedCars = (Car)this.GetModel(() => this.controller.Details(5));
