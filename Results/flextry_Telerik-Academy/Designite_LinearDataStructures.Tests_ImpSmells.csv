Implementation smell,Namespace,Class,File,Method,Description
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_1,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_2,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_3,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 3' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_3,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 3' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_3,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 3' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLastLongestSubsequence_3,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLongestSubsequenceAtTheBeginning,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLongestSubsequenceAtTheBeginning,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLongestSubsequenceAtTheBeginning,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLongestSubsequenceAtTheBeginning,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnLongestSubsequenceAtTheBeginning,The following statement contains a magic number: var collection = new List<int>() { 1' 1' 1' 1' 2' 2' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheEnd,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 4' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var collection = new List<int>() { 1' 2' 2' 3' 3' 3' 3' 4' 4' 4 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,LongestSubsequenceOfEqualsTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\LongestSubsequenceOfEqualsTests.cs,ShouldReturnOnlyOneSubsequenceAtTheMiddle,The following statement contains a magic number: var expectedLongestSubsequence = new List<int>() { 3' 3' 3' 3 };
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPushFuncionality,The following statement contains a magic number: stack.Push(2);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPushFuncionality,The following statement contains a magic number: stack.Push(3);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPushFuncionality,The following statement contains a magic number: Assert.AreEqual(3' stack.Count);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: stack.Push(2);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: stack.Push(3);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(3' stack.Count);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(3' stack.Peek());
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(3' stack.Count);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: stack.Push(2);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: stack.Push(3);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: Assert.AreEqual(3' stack.Count);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: Assert.AreEqual(3' stack.Pop());
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: Assert.AreEqual(2' stack.Count);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestPopFunctionality,The following statement contains a magic number: Assert.AreEqual(2' stack.Pop());
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestCountAndCapacity,The following statement contains a magic number: var elementsToAdd = 930;
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestCountAndCapacity,The following statement contains a magic number: Assert.AreEqual(1024' stack.Capacity);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessFunctionalityShouldNotTrimCapacity,The following statement contains a magic number: var elementsToAdd = 930;
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessFunctionalityShouldNotTrimCapacity,The following statement contains a magic number: Assert.AreEqual(1024' stack.Capacity);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessFunctionalityShouldTrimCapacity,The following statement contains a magic number: var elementsToAdd = 930;
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessFunctionalityShouldTrimCapacity,The following statement contains a magic number: var elementsToRemove = 10;
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestClearFunctionality,The following statement contains a magic number: stack.Push(2);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestClearFunctionality,The following statement contains a magic number: stack.Push(3);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestClearFunctionality,The following statement contains a magic number: Assert.AreEqual(4' stack.Capacity);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessAfterClearStack,The following statement contains a magic number: stack.Push(2);
Magic Number,LinearDataStructures.Tests,StackTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\StackTests.cs,TestTrimExcessAfterClearStack,The following statement contains a magic number: stack.Push(3);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestEnqueueFuncionality,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestEnqueueFuncionality,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestEnqueueFuncionality,The following statement contains a magic number: Assert.AreEqual(3' queue.Count);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(3' queue.Count);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,PeekShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(3' queue.Count);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: Assert.AreEqual(3' queue.Count);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: Assert.AreEqual(2' queue.Count);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: Assert.AreEqual(2' queue.Dequeue());
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestDequeueFunctionality,The following statement contains a magic number: Assert.AreEqual(3' queue.Dequeue());
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestClearFunctionality,The following statement contains a magic number: queue.Enqueue(2);
Magic Number,LinearDataStructures.Tests,QueueTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\QueueTests.cs,TestClearFunctionality,The following statement contains a magic number: queue.Enqueue(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddLastMethod,The following statement contains a magic number: linkedList.AddLast(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddLastMethod,The following statement contains a magic number: linkedList.AddLast(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstAndAddLastMethods,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstAndAddLastMethods,The following statement contains a magic number: linkedList.AddLast(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstAndAddLastMethods,The following statement contains a magic number: linkedList.AddLast(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestCountOnAddFirstAndAddLastMethods,The following statement contains a magic number: Assert.AreEqual(4' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.First.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.First.Next.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddLastMethod,The following statement contains a magic number: linkedList.AddLast(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddLastMethod,The following statement contains a magic number: linkedList.AddLast(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddLastMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.First.Next.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Last.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: linkedList.AddLast(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: linkedList.AddLast(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.First.Next.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Last.Previous.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: Assert.AreEqual(4' linkedList.Last.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFirstMiddleLastElementsOnAddFirstAndAddLastMethod,The following statement contains a magic number: Assert.AreEqual(4' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementsThatIsPlacedAtTheBeginning,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementsThatIsPlacedAtTheBeginning,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementsThatIsPlacedAtTheBeginning,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: linkedList.AddLast(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: linkedList.AddLast(7);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: Assert.IsNotNull(linkedList.Find(4));
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: Assert.AreEqual(4' linkedList.Find(4).Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: Assert.AreEqual(4' linkedList.Find(4).Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodOnExistedElementThatIsPlacedAtTheEnd,The following statement contains a magic number: Assert.AreEqual(5' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodShouldReturnNull,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodShouldReturnNull,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestFindMethodShouldReturnNull,The following statement contains a magic number: Assert.IsNull(linkedList.Find(4));
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: linkedList.AddFirst(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: linkedList.AddBefore(linkedList.Last' 3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: linkedList.AddBefore(linkedList.Find(2)' 1);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 0' 1' 2' 3' 4 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 0' 1' 2' 3' 4 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddBeforeMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 0' 1' 2' 3' 4 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: linkedList.AddFirst(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: linkedList.AddAfter(linkedList.First' 2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: linkedList.AddAfter(linkedList.Last' 5);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: linkedList.AddAfter(linkedList.Find(2)' 3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: linkedList.AddAfter(linkedList.Find(2)' 3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestAddAfterMethod,The following statement contains a magic number: CollectionAssert.AreEqual(new List<int> { 1' 2' 3' 4' 5 }' linkedList.ToList());
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: linkedList.AddFirst(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: linkedList.AddFirst(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: linkedList.Remove(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: linkedList.Remove(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldChangeCount,The following statement contains a magic number: Assert.AreEqual(2' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldNotChangeCount,The following statement contains a magic number: linkedList.AddFirst(4);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldNotChangeCount,The following statement contains a magic number: linkedList.Remove(5);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveMethodShouldNotChangeCount,The following statement contains a magic number: Assert.AreEqual(2' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.First.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveFirstMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.First.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Last.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: Assert.AreEqual(3' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.Last.Value);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestRemoveLastMethod,The following statement contains a magic number: Assert.AreEqual(2' linkedList.Count);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestGetEnumeratorMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestGetEnumeratorMethod,The following statement contains a magic number: linkedList.AddFirst(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestClearMethod,The following statement contains a magic number: linkedList.AddFirst(3);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestClearMethod,The following statement contains a magic number: linkedList.AddLast(2);
Magic Number,LinearDataStructures.Tests,DoubleLinkedListTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\02. Linear Data Structures\LinearDataStructures.Tests\DoubleLinkedListTests.cs,TestClearMethod,The following statement contains a magic number: linkedList.AddBefore(linkedList.Last' 3);
