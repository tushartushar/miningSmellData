Implementation smell,Namespace,Class,File,Method,Description
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,AreConsecutive,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\AreConsecutive.cs,run,The following statement contains a magic number: arr = new[] {83' 78' 80' 81' 79' 82};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,run,The following statement contains a magic number: const int elementToSearch = 18;
Magic Number,CodingPractice,BinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearch.cs,binarySearch,The following statement contains a magic number: while (low <= high)              {                  int mid = (low + high)/2;                    //if (input[mid] == element)                  //{                  //    return true;                  //}                  if (element < input[mid]) //if less than mid                      high = mid - 1;                  else if (element > input[mid]) // if greater than mid                      low = mid + 1;                  else                      return true;              }
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: int[] arr = {1' 3' 2' 5' 2' 1' 2' 2};
Magic Number,CodingPractice,DuplicatesInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\DuplicatesInArray.cs,run,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(3);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(2);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(6);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(5);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(11);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(10);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(16);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(15);
Magic Number,CodingPractice,LinkedListNodeDelete,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListNodeDelete.cs,run,The following statement contains a magic number: unsortedLinkedList.insert(12);
Magic Number,CodingPractice,NextGreaterElement,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\NextGreaterElement.cs,run,The following statement contains a magic number: arr = new[] {11' 3' 13' 21};
Magic Number,CodingPractice,NextGreaterElement,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\NextGreaterElement.cs,run,The following statement contains a magic number: arr = new[] {11' 3' 13' 21};
Magic Number,CodingPractice,NextGreaterElement,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\NextGreaterElement.cs,run,The following statement contains a magic number: arr = new[] {11' 3' 13' 21};
Magic Number,CodingPractice,NextGreaterElement,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\NextGreaterElement.cs,run,The following statement contains a magic number: arr = new[] {11' 3' 13' 21};
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: matrix = new[']                           {                               {10' 20' 30' 40}'                               {15' 25' 35' 45}'                               {27' 29' 37' 48}'                               {32' 33' 39' 50}'                           };
Magic Number,CodingPractice,SearchSortedMatrix,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Matrix\SearchSortedMatrix.cs,run,The following statement contains a magic number: searchMatrix(29);
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,SmallestElementInArray,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\SmallestElementInArray.cs,run,The following statement contains a magic number: int[] arr = {98' 88' 53' 15' 88' 415' 68' 2};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: a = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: a = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: a = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: a = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: a = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: b = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: b = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: b = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: b = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice,TwoSameList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\HashMap\TwoSameList.cs,run,The following statement contains a magic number: b = new[] {1' 2' 3' 4' 5' 6};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Arrays,RecArrayReverse,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Arrays\RecArrayReverse.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,_2NonRepeatingNo,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\2NonRepeatingNo.cs,run,The following statement contains a magic number: arr = new[] {2' 3' 7' 9' 11' 2' 3' 11};
Magic Number,CodingPractice.BitMagic,RepeatingAndMissing,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\RepeatingAndMissing.cs,run,The following statement contains a magic number: arr = new[] {3' 1' 3};
Magic Number,CodingPractice.BitMagic,RepeatingAndMissing,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BitMagic\RepeatingAndMissing.cs,run,The following statement contains a magic number: arr = new[] {3' 1' 3};
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(5);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(4);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(7);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(3);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(6);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(2);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: node.Insert(9);
Magic Number,CodingPractice.BST,BSTRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BSTRunner.cs,run,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,CodingPractice.BST,BinarySearchTree,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearchTree.cs,PrintRootToLeavePath,The following statement contains a magic number: var nodes = new IComparable[1000];
Magic Number,CodingPractice.BST,BinarySearchTree,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\BST\BinarySearchTree.cs,balanceInsert,The following statement contains a magic number: if (low == high) // when there is only one data to be inserted  				Insert(nodeData[low]);  			else if (low + 1 == high) // when there are only two data elements to be inserted.  			{  				Insert(nodeData[low]);  				Insert(nodeData[high]);  			}  			else  			{  				int mid = (low + high)/2;  				Insert(nodeData[mid]);  				balanceInsert(low' mid - 1);  				balanceInsert(mid + 1' high);  			}
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: arr = new[] {1' 1' 2' 2' 2' 3' 3};
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: arr = new[] {1' 1' 2' 2' 2' 3' 3};
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: arr = new[] {1' 1' 2' 2' 2' 3' 3};
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: arr = new[] {1' 1' 2' 2' 2' 3' 3};
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: arr = new[] {1' 1' 2' 2' 2' 3' 3};
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,run,The following statement contains a magic number: Console.WriteLine(count(2));
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,first,The following statement contains a magic number: if (low <= high)              {                  int mid = (low + high)/2;                    if ((mid == 0 || c > arr[mid - 1]) && arr[mid] == c)                      return mid;                  else if (c > arr[mid])                      return first(mid + 1' high' c);                  else                      return first(low' mid - 1' c);              }
Magic Number,CodingPractice.Counting,NoOfOccurrence,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Counting\NoOfOccurrence.cs,last,The following statement contains a magic number: if (low <= high)              {                  int mid = (low + high)/2;                    if ((mid == SIZE - 1 || c < arr[mid + 1]) && arr[mid] == c)                      return mid;                  else if (c < arr[mid])                      return last(low' mid - 1' c);                  else                      return last(mid + 1' high' c);              }
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Atlanta"' "Houston"' 800);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Atlanta"' "Washington"' 600);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Austin"' "Dallas"' 200);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Austin"' "Houston"' 160);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Chicago"' "Denver"' 1000);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Dallas"' "Austin"' 200);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Dallas"' "Chicago"' 900);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Dallas"' "Denver"' 780);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Denver"' "Atlanta"' 1400);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Denver"' "Chicago"' 1000);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Houston"' "Atlanta"' 800);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Washington"' "Atlanta"' 600);
Magic Number,CodingPractice.Graph,GraphRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\GraphRunner.cs,run,The following statement contains a magic number: graph.addEdge("Washington"' "Dallas"' 1300);
Magic Number,CodingPractice.Graph,WeightedGraph,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\WeightedGraph.cs,WeightedGraph,The following statement contains a magic number: maxVertices = 50;
Magic Number,CodingPractice.Graph,WeightedGraph,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\WeightedGraph.cs,WeightedGraph,The following statement contains a magic number: vertices = new object[50];
Magic Number,CodingPractice.Graph,WeightedGraph,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\WeightedGraph.cs,WeightedGraph,The following statement contains a magic number: marks = new bool[50];
Magic Number,CodingPractice.Graph,WeightedGraph,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\WeightedGraph.cs,WeightedGraph,The following statement contains a magic number: edges = new int[50'50];
Magic Number,CodingPractice.Graph,WeightedGraph,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Graph\WeightedGraph.cs,WeightedGraph,The following statement contains a magic number: edges = new int[50'50];
Magic Number,CodingPractice.Heap,tempHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\tempHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)              {                  elements[hole] = elements[(hole - 1)/2] ; // move hole into its parent                  hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,tempHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\tempHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)              {                  elements[hole] = elements[(hole - 1)/2] ; // move hole into its parent                  hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,tempHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\tempHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)              {                  elements[hole] = elements[(hole - 1)/2] ; // move hole into its parent                  hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) > 0)                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,newHole,The following statement contains a magic number: int left = (hole*2) + 1;
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Heap,MaxHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MaxHeap.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Heap,HeapRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\HeapRunner.cs,run,The following statement contains a magic number: maxHeap.enqueue(5);
Magic Number,CodingPractice.Heap,HeapRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\HeapRunner.cs,run,The following statement contains a magic number: maxHeap.enqueue(10);
Magic Number,CodingPractice.Heap,HeapRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\HeapRunner.cs,run,The following statement contains a magic number: maxHeap.enqueue(9);
Magic Number,CodingPractice.Heap,HeapRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\HeapRunner.cs,run,The following statement contains a magic number: maxHeap.enqueue(15);
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) < 0) //MIN HEAP                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) < 0) //MIN HEAP                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,reheapUp,The following statement contains a magic number: while (hole > 0 && item.CompareTo(elements[(hole - 1)/2]) < 0) //MIN HEAP                  // if hole is not the root and item is greater than its parent value              {                  elements[hole] = elements[(hole - 1)/2]; // move parent to hole                   hole = (hole - 1)/2; // move hole up              }
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,newHole,The following statement contains a magic number: int left = (hole*2) + 1;
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Heap,MinHeap,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Heap\MinHeap.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Recursion,Combinations,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\Combinations.cs,run,The following statement contains a magic number: Console.WriteLine(combinations(20' 5));
Magic Number,CodingPractice.Recursion,Combinations,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\Combinations.cs,run,The following statement contains a magic number: Console.WriteLine(combinations(20' 5));
Magic Number,CodingPractice.Recursion,Combinations,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\Combinations.cs,run,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CodingPractice.Recursion,Factorial,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\Factorial.cs,run,The following statement contains a magic number: Console.WriteLine(factorial(4));
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: arr = new[] {1' 2' 3' 4' 5' 6' 7' 8};
Magic Number,CodingPractice.Recursion,IsThere,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\IsThere.cs,run,The following statement contains a magic number: Console.WriteLine(isThere(76' 0));
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,run,The following statement contains a magic number: numbers = new[] {1' 2' 3' 4};
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,run,The following statement contains a magic number: numbers = new[] {1' 2' 3' 4};
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,run,The following statement contains a magic number: numbers = new[] {1' 2' 3' 4};
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,run,The following statement contains a magic number: Console.WriteLine(search(2' 0' numbers.Length - 1));
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,run,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CodingPractice.Recursion,RecBinarySearch,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\RecBinarySearch.cs,search,The following statement contains a magic number: int mid = (low + high)/2;
Magic Number,CodingPractice.Recursion,count7,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\count7.cs,run,The following statement contains a magic number: count(217);
Magic Number,CodingPractice.Recursion,count7,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\count7.cs,count,The following statement contains a magic number: if (n > 1)              {                  temp = n%10;                  Console.Write(temp);                  count(n/10);              }
Magic Number,CodingPractice.Recursion,count7,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Recursion\count7.cs,count,The following statement contains a magic number: if (n > 1)              {                  temp = n%10;                  Console.Write(temp);                  count(n/10);              }
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: int[] arr = {1' 2' 3' 4' 5' 6' 7' 8' 9};
Magic Number,CodingPractice.Shuffle,FisherYates,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Shuffle\FisherYates.cs,run,The following statement contains a magic number: Thread.Sleep(800);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: arrayStack.push(5);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: arrayStack.push(3);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: arrayStack.push(4);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: arrayStack.push(6);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: arrayStack.push(12);
Magic Number,CodingPractice.Stacks,StackRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Stacks\StackRunner.cs,run,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: firstlinkedList.insert(6);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: firstlinkedList.insert(5);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: firstlinkedList.insert(4);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: firstlinkedList.insert(3);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: firstlinkedList.insert(2);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: secondlinkedList.insert(8);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: secondlinkedList.insert(6);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: secondlinkedList.insert(4);
Magic Number,CodingPractice.LinkedList,InsertionOfTwoList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\InsertionOfTwoList.cs,run,The following statement contains a magic number: secondlinkedList.insert(2);
Magic Number,CodingPractice.LinkedList,LinkedListRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListRunner.cs,run,The following statement contains a magic number: linkedList.insert(8);
Magic Number,CodingPractice.LinkedList,LinkedListRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListRunner.cs,run,The following statement contains a magic number: linkedList.insert(4);
Magic Number,CodingPractice.LinkedList,LinkedListRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListRunner.cs,run,The following statement contains a magic number: linkedList.insert(16);
Magic Number,CodingPractice.LinkedList,LinkedListRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\LinkedListRunner.cs,run,The following statement contains a magic number: linkedList.insert(6);
Magic Number,CodingPractice.LinkedList,ShuffleMergeList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\ShuffleMergeList.cs,run,The following statement contains a magic number: a.insert(3);
Magic Number,CodingPractice.LinkedList,ShuffleMergeList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\ShuffleMergeList.cs,run,The following statement contains a magic number: a.insert(2);
Magic Number,CodingPractice.LinkedList,ShuffleMergeList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\ShuffleMergeList.cs,run,The following statement contains a magic number: b.insert(13);
Magic Number,CodingPractice.LinkedList,ShuffleMergeList,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\ShuffleMergeList.cs,run,The following statement contains a magic number: b.insert(7);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(2);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(4);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(6);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(7);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(17);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,run,The following statement contains a magic number: linkedList.insert(8);
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,frontBackSplit,The following statement contains a magic number: if (len < 2)              {                  front = linkedList.list;                  back = null;              }              else              {                  for (int i = 0; i < (len - 1)/2; i++)                  {                      currNode = currNode.next;                  }                    front = linkedList.list;                  back = currNode.next;                  currNode.next = null;              }
Magic Number,CodingPractice.LinkedList,FrontBackSplit,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\LinkedList\FrontBackSplit.cs,frontBackSplit,The following statement contains a magic number: if (len < 2)              {                  front = linkedList.list;                  back = null;              }              else              {                  for (int i = 0; i < (len - 1)/2; i++)                  {                      currNode = currNode.next;                  }                    front = linkedList.list;                  back = currNode.next;                  currNode.next = null;              }
Magic Number,CodingPractice.Queues,ArrayQueue,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Queues\ArrayQueue.cs,ArrayQueue,The following statement contains a magic number: capacity = 100;
Magic Number,CodingPractice.Queues,QueueRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Queues\QueueRunner.cs,run,The following statement contains a magic number: queue.enqueue(5);
Magic Number,CodingPractice.Queues,QueueRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Queues\QueueRunner.cs,run,The following statement contains a magic number: queue.enqueue(10);
Magic Number,CodingPractice.Queues,QueueRunner,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Queues\QueueRunner.cs,run,The following statement contains a magic number: queue.enqueue(20);
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,run,The following statement contains a magic number: elements = new IComparable[] {25' 17' 36' 2' 3' 100' 1' 19' 7};
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,heapSort,The following statement contains a magic number: for (int index = SIZE/2 - 1; index >= 0; index--)                  heapify(elements[index]' index' SIZE - 1);
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,newHole,The following statement contains a magic number: int left = (hole*2) + 1;
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Sorts,HeapSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\HeapSort.cs,newHole,The following statement contains a magic number: int right = (hole*2) + 2;
Magic Number,CodingPractice.Sorts,MergeSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\MergeSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 56};
Magic Number,CodingPractice.Sorts,MergeSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\MergeSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 56};
Magic Number,CodingPractice.Sorts,MergeSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\MergeSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 56};
Magic Number,CodingPractice.Sorts,MergeSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\MergeSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 56};
Magic Number,CodingPractice.Sorts,MergeSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\MergeSort.cs,mergeSort,The following statement contains a magic number: if (first < last)              {                  int middle = (first + last)/2;                  mergeSort(first' middle);                  mergeSort(middle + 1' last);                  merge(first' middle' middle + 1' last);              }
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
Magic Number,CodingPractice.Sorts,QuickSort,C:\repos\flextry_Telerik-Academy\Programming with C#\Codes\Libraries\DSA\CS-Algorithms-and-Datastructures-master\Sorts\QuickSort.cs,run,The following statement contains a magic number: values = new[] {24' 5' 45' 8' 12' 6};
