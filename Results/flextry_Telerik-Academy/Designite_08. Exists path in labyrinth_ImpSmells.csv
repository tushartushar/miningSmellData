Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,FindAllPaths,The method has 6 parameters.
Long Statement,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,IsCellPassable,The length of the statement  "	return row >= 0 && row < labyrinth.GetLongLength (0) && col >= 0 && col < labyrinth.GetLongLength (1) && labyrinth [row' col] != NonPassableCell; " is 145.
Long Statement,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,PrintResult,The length of the statement  "	return string.Format ("Path exists -> cells length: {0} -> Direction: {1}{2}\n"' pathLength + 1' result.ToString ().Substring (0' pathLength >= 250 ? 250 : pathLength)' pathLength >= 250 ? "..." : ""); " is 201.
Magic Number,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,PrintResult,The following statement contains a magic number: return string.Format ("Path exists -> cells length: {0} -> Direction: {1}{2}\n"' pathLength + 1' result.ToString ().Substring (0' pathLength >= 250 ? 250 : pathLength)' pathLength >= 250 ? "..." : "");  
Magic Number,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,PrintResult,The following statement contains a magic number: return string.Format ("Path exists -> cells length: {0} -> Direction: {1}{2}\n"' pathLength + 1' result.ToString ().Substring (0' pathLength >= 250 ? 250 : pathLength)' pathLength >= 250 ? "..." : "");  
Magic Number,Algorithms,ExistsPathInLabyrinth,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\5. C# Data Structures and Algorithms\08. Recursion\08. Exists path in labyrinth\ExistsPathInLabyrinth.cs,PrintResult,The following statement contains a magic number: return string.Format ("Path exists -> cells length: {0} -> Direction: {1}{2}\n"' pathLength + 1' result.ToString ().Substring (0' pathLength >= 250 ? 250 : pathLength)' pathLength >= 250 ? "..." : "");  
