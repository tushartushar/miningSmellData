Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,Cyclomatic complexity of the method is 8
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int row = 0; row <= 6; row += 3)              {                  if (board[row] != EmptyCell && board[row] == board[row + 1] && board[row + 1] == board[row + 2])                  {                      return this.IdentifyPlayer(board[row]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int row = 0; row <= 6; row += 3)              {                  if (board[row] != EmptyCell && board[row] == board[row + 1] && board[row + 1] == board[row + 2])                  {                      return this.IdentifyPlayer(board[row]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int row = 0; row <= 6; row += 3)              {                  if (board[row] != EmptyCell && board[row] == board[row + 1] && board[row + 1] == board[row + 2])                  {                      return this.IdentifyPlayer(board[row]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int col = 0; col <= 2; col++)              {                  if (board[col] != EmptyCell && board[col] == board[col + 3] && board[col + 3] == board[col + 6])                  {                      return this.IdentifyPlayer(board[col]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int col = 0; col <= 2; col++)              {                  if (board[col] != EmptyCell && board[col] == board[col + 3] && board[col + 3] == board[col + 6])                  {                      return this.IdentifyPlayer(board[col]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int col = 0; col <= 2; col++)              {                  if (board[col] != EmptyCell && board[col] == board[col + 3] && board[col + 3] == board[col + 6])                  {                      return this.IdentifyPlayer(board[col]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: for (int col = 0; col <= 2; col++)              {                  if (board[col] != EmptyCell && board[col] == board[col + 3] && board[col + 3] == board[col + 6])                  {                      return this.IdentifyPlayer(board[col]);                  }              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[0] != EmptyCell && board[0] == board[4] && board[4] == board[8])              {                  return this.IdentifyPlayer(board[0]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[0] != EmptyCell && board[0] == board[4] && board[4] == board[8])              {                  return this.IdentifyPlayer(board[0]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[0] != EmptyCell && board[0] == board[4] && board[4] == board[8])              {                  return this.IdentifyPlayer(board[0]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
Magic Number,TicTacToe.GameLogic,GameResultValidator,C:\repos\flextry_Telerik-Academy\Web Design & Development\7. JavaScript Single-Page Applications\05. AngularJS - Directives\TicTacToe.GameLogic\GameResultValidator.cs,GetResult,The following statement contains a magic number: if (board[2] != EmptyCell && board[2] == board[4] && board[4] == board[6])              {                  return this.IdentifyPlayer(board[2]);              }
