Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,SetStatisticInfo,Cyclomatic complexity of the method is 9
Complex Method,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,MakeClientOrder,Cyclomatic complexity of the method is 9
Complex Method,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,GetBaseDirectory,Cyclomatic complexity of the method is 19
Long Parameter List,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeImageInPanel,The method has 5 parameters.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The length of the statement  "			textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5])); " is 135.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,OnMakeOrderButtonClick,The length of the statement  "		App.Resources.MovieOrdersCount = App.FileManager.SetStatisticInfo (App.FileManager.GetBaseDirectory ("Movie")' Basket.RentedItems.Count); " is 137.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,OnMakeOrderButtonClick,The length of the statement  "		App.Resources.GameOrdersCount = App.FileManager.SetStatisticInfo (App.FileManager.GetBaseDirectory ("Game")' Basket.PurchasedItems.Where (i => i is Game).Count ()); " is 164.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,OnMakeOrderButtonClick,The length of the statement  "		App.Resources.MusicOrdersCount = App.FileManager.SetStatisticInfo (App.FileManager.GetBaseDirectory ("Music")' Basket.PurchasedItems.Where (i => i is Music).Count ()); " is 167.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,OnMakeOrderButtonClick,The length of the statement  "		App.Resources.TotalIncome = App.FileManager.SetStatisticInfo (App.FileManager.GetBaseDirectory ("Library")' Basket.PurchasedItems.Sum (i => i.Price) + Basket.RentedItems.Sum (i => i.TotalPrice)' "total-income"); " is 211.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The length of the statement  "	ElementRenderer.VisualizeImageInPanel (newItemGrid' itemDescription.Name' App.FileManager.GetBaseDirectory (itemDescription.GetType ().Name)); " is 142.
Long Statement,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,OnSearchButtonClick,The length of the statement  "	ElementRenderer.VizualizeNewClientsSearchResult (this.ClientsListBox' this.InfoAboutClientGrid' this.SearchByNameBox' App.Resources.Clients); " is 141.
Long Statement,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,GetUserOrdersInfo,The length of the statement  "		using (StreamReader countReader = new StreamReader (string.Format (@"{0}\{1}\orders.txt"' baseDirectory' clientName))) { " is 120.
Long Statement,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,MakeClientOrder,The length of the statement  "	using (StreamWriter writer = new StreamWriter (string.Format (@"{0}\{1}\orders.txt"' baseDirectory' clientName)' true)) { " is 121.
Long Statement,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,MakeClientOrder,The length of the statement  "				currentOrderInfo.AppendFormat ("{0};{1};{2}"' itemRentableInfo.RentalDate.ToShortDateString ()' itemRentableInfo.ReturnDate.ToShortDateString ()' itemRentableInfo.TotalPrice); " is 175.
Long Statement,ProgramDioptase,GamesLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\GamesLibrary.xaml.cs,OnCheckBoxSelection,The length of the statement  "		ElementRenderer.VizualizeItemsBySelectedGenres (this.AllGamesPanel' this.GenrePanel' App.Resources.Games' this.SearchBox.Text); " is 127.
Long Statement,ProgramDioptase,RentOptionScreen,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\RentOptionScreen.xaml.cs,CalendarControl_SelectedDatesChanged,The length of the statement  "			this.PeriodTextBlock.Text = string.Format ("{0}{1} - {2}"' this.PeriodText' today.ToShortDateString ()' selectedDate.AddDays (-1).ToShortDateString ()); " is 152.
Long Statement,ProgramDioptase,MoviesLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\MoviesLibrary.xaml.cs,OnSearchButtonClick,The length of the statement  "	ElementRenderer.VizualizeNewSearchResultByName<Movie> (this.AllMoviesPanel' this.SearchByNameBox' App.Resources.Movies); " is 120.
Long Statement,ProgramDioptase,MoviesLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\MoviesLibrary.xaml.cs,OnCheckBoxSelection,The length of the statement  "		ElementRenderer.VizualizeItemsBySelectedGenres (this.AllMoviesPanel' this.GenrePanel' App.Resources.Movies' this.SearchByNameBox.Text); " is 135.
Long Statement,ProgramDioptase,MusicLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\MusicLibrary.xaml.cs,OnCheckBoxSelection,The length of the statement  "		ElementRenderer.VizualizeItemsBySelectedGenres (this.AllMusicPanel' this.GenrePanel' App.Resources.Music' this.SearchBox.Text); " is 127.
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: foreach (var orderInfo in userOrders) {  	var components = orderInfo.Split (new char[] {  		';'  	}' StringSplitOptions.RemoveEmptyEntries);  	Grid newItemGrid = new Grid ();  	newItemGrid.Margin = new Thickness (5' 5' 0' 10);  	newItemGrid.Height = 50;  	var imageColumn = new ColumnDefinition ();  	imageColumn.Width = new GridLength (50);  	newItemGrid.ColumnDefinitions.Add (imageColumn);  	newItemGrid.ColumnDefinitions.Add (new ColumnDefinition ());  	ElementRenderer.VisualizeImageInPanel (newItemGrid' components [1]' App.FileManager.GetBaseDirectory (components [0]));  	var textBlock = new TextBlock ();  	textBlock.VerticalAlignment = System.Windows.VerticalAlignment.Center;  	textBlock.Margin = new Thickness (5' 0' 0' 0);  	textBlock.FontSize = 15;  	textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  	if (components [0] == "Game" || components [0] == "Music") {  		textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  	} else if (components [0] == "Movie") {  		textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  	}  	Grid.SetColumn (textBlock' 1);  	newItemGrid.Children.Add (textBlock);  	this.ClientStockItems.Children.Add (newItemGrid);  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: newItemGrid.Margin = new Thickness (5' 5' 0' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: newItemGrid.Margin = new Thickness (5' 5' 0' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: newItemGrid.Margin = new Thickness (5' 5' 0' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: newItemGrid.Height = 50;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: imageColumn.Width = new GridLength (50);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Margin = new Thickness (5' 0' 0' 0);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.FontSize = 15;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Text = string.Format ("{0} [{1}] "' components [1]' components [2]);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Game" || components [0] == "Music") {  	textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  } else if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Game" || components [0] == "Music") {  	textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  } else if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Game" || components [0] == "Music") {  	textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  } else if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Game" || components [0] == "Music") {  	textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  } else if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Text += string.Format ("| Price: {0:C}"' decimal.Parse (components [3]));  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: if (components [0] == "Movie") {  	textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,VizualizeClientOrders,The following statement contains a magic number: textBlock.Text += string.Format ("| Rented: {0} - {1} | Price: {2:C}"' components [3]' components [4]' decimal.Parse (components [5]));  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: if (Basket.PurchasedItems.Count > 0 || Basket.RentedItems.Count > 0) {  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Visible;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Visible;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  	this.ClientsListBox.Height = 257;  	decimal totalPrice = 0m;  	foreach (var item in Basket.RentedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.TotalPrice;  	}  	foreach (var item in Basket.PurchasedItems) {  		this.AddItemToBasketGrid (item as IDescription);  		totalPrice += item.Price;  	}  	StackPanel priceAndResetButtonStackPanel = new StackPanel ();  	priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  	TextBlock totalPriceTextBlock = new TextBlock ();  	totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  	totalPriceTextBlock.FontWeight = FontWeights.Bold;  	totalPriceTextBlock.FontSize = 14;  	totalPriceTextBlock.Text = string.Format ("Total price: {0:C}"' totalPrice);  	Button resetButton = new Button ();  	resetButton.Content = "Empty Basket";  	resetButton.Height = 20;  	priceAndResetButtonStackPanel.Children.Add (totalPriceTextBlock);  	priceAndResetButtonStackPanel.Children.Add (resetButton);  	resetButton.Click += (sender' args) => {  		Basket.EmptyBasket ();  		this.ShowBasketItemsToGrid ();  	};  	this.BasketElementsStackPanel.Children.Add (priceAndResetButtonStackPanel);  } else {  	this.MakeOrderButton.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsScrollViewer.Visibility = System.Windows.Visibility.Hidden;  	this.BasketElementsStackPanel.Visibility = System.Windows.Visibility.Hidden;  	this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  	this.ClientsListBox.Height = 571;  }  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 324);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsListBox.Height = 257;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: priceAndResetButtonStackPanel.Margin = new Thickness (5' 0' 5' 5);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: totalPriceTextBlock.Margin = new Thickness (0' 0' 5' 5);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: totalPriceTextBlock.FontSize = 14;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: resetButton.Height = 20;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsScrollViewer.Margin = new Thickness (10' 119' 650' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,ShowBasketItemsToGrid,The following statement contains a magic number: this.ClientsListBox.Height = 571;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: newItemGrid.Margin = new Thickness (5' 0' 0' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: newItemGrid.Margin = new Thickness (5' 0' 0' 10);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: newItemGrid.Height = 50;  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: imageColumn.Width = new GridLength (50);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: textBlock.Margin = new Thickness (5' 0' 0' 0);  
Magic Number,ProgramDioptase,ClientsLibrary,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientsLibrary.xaml.cs,AddItemToBasketGrid,The following statement contains a magic number: textBlock.FontSize = 15;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int k = 0; k < 1; k++) {  	for (int i = 0; i < itemsInfo.Count; i++) {  		var nestedPanel = new StackPanel ();  		nestedPanel.Margin = new Thickness (10' 0' 0' 20);  		nestedPanel.Height = 200;  		nestedPanel.Width = 200;  		var image = new Image ();  		image.Height = 180;  		image.MaxHeight = 180;  		image.Width = 180;  		image.MaxWidth = 180;  		image.Stretch = System.Windows.Media.Stretch.UniformToFill;  		// Loading an image  		LoadImage (baseDirectory' itemsInfo [i].Name' image);  		// Add image to Stack Panel  		nestedPanel.Children.Add (image);  		// Loading other components as Name' Genre' Year etc.  		PushItemsInPanel (nestedPanel' itemsInfo [i]);  		// Set event args  		var eventInfo = itemsInfo [i];  		// Set Mouse Click event to Image  		nestedPanel.MouseLeftButtonDown += (sender' args) => {  			var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  			catalogItemInfo.ShowDialog ();  		};  		panel.Children.Add (nestedPanel);  	}  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: for (int i = 0; i < itemsInfo.Count; i++) {  	var nestedPanel = new StackPanel ();  	nestedPanel.Margin = new Thickness (10' 0' 0' 20);  	nestedPanel.Height = 200;  	nestedPanel.Width = 200;  	var image = new Image ();  	image.Height = 180;  	image.MaxHeight = 180;  	image.Width = 180;  	image.MaxWidth = 180;  	image.Stretch = System.Windows.Media.Stretch.UniformToFill;  	// Loading an image  	LoadImage (baseDirectory' itemsInfo [i].Name' image);  	// Add image to Stack Panel  	nestedPanel.Children.Add (image);  	// Loading other components as Name' Genre' Year etc.  	PushItemsInPanel (nestedPanel' itemsInfo [i]);  	// Set event args  	var eventInfo = itemsInfo [i];  	// Set Mouse Click event to Image  	nestedPanel.MouseLeftButtonDown += (sender' args) => {  		var catalogItemInfo = new InformationAboutCatalogItem (eventInfo' baseDirectory);  		catalogItemInfo.ShowDialog ();  	};  	panel.Children.Add (nestedPanel);  }  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: nestedPanel.Margin = new Thickness (10' 0' 0' 20);  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: nestedPanel.Margin = new Thickness (10' 0' 0' 20);  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: nestedPanel.Height = 200;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: nestedPanel.Width = 200;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: image.Height = 180;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: image.MaxHeight = 180;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: image.Width = 180;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,VisualizeAllElementsToPanel,The following statement contains a magic number: image.MaxWidth = 180;  
Magic Number,ProgramDioptase,ElementRenderer,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ElementRenderer.cs,PushItemsInPanel,The following statement contains a magic number: textBlock.FontSize = 15;  
Magic Number,ProgramDioptase,RentOptionScreen,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\RentOptionScreen.xaml.cs,RentOptionScreen,The following statement contains a magic number: this.CalendarControl.DisplayDateEnd = new DateTime (DateTime.Now.Year' DateTime.Now.Month' DateTime.Now.Day + 15);  
Magic Number,ProgramDioptase.CatalogItems,Game,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Game.cs,InitializeData,The following statement contains a magic number: this.IsInStock = components [3].ToLower ().Equals ("yes") ? true : false;  
Magic Number,ProgramDioptase.CatalogItems,Game,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Game.cs,InitializeData,The following statement contains a magic number: this.Price = decimal.Parse (components [4]);  
Magic Number,ProgramDioptase.CatalogItems,Movie,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Movie.cs,InitializeData,The following statement contains a magic number: this.IsInStock = components [3].ToLower ().Equals ("yes") ? true : false;  
Magic Number,ProgramDioptase.CatalogItems,Movie,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Movie.cs,InitializeData,The following statement contains a magic number: this.PricePerDay = decimal.Parse (components [4]);  
Magic Number,ProgramDioptase.CatalogItems,Music,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Music.cs,InitializeData,The following statement contains a magic number: this.IsInStock = components [3].ToLower ().Equals ("yes") ? true : false;  
Magic Number,ProgramDioptase.CatalogItems,Music,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\CatalogItems\Music.cs,InitializeData,The following statement contains a magic number: this.Price = decimal.Parse (components [4]);  
Magic Number,ProgramDioptase.ClientDescription,Person,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientDescription\Person.cs,InitializeData,The following statement contains a magic number: this.Address = components [2];  
Magic Number,ProgramDioptase.ClientDescription,Person,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ClientDescription\Person.cs,InitializeData,The following statement contains a magic number: this.MobileNumber = components [3];  
Magic Number,ProgramDioptase.ItemTypes,CatalogItem,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\ItemTypes\CatalogItem.cs,InitializeData,The following statement contains a magic number: this.ReleaseYear = components [2];  
Missing Default,ProgramDioptase,DataManager,F:\newReposMay17\flextry_Telerik-Academy\Programming with C#\3. C# Object-Oriented Programming\09. Teamwork - UI Business Application\Program Dioptase\DataManager.cs,GetBaseDirectory,The following switch statement is missing a default case: switch (type) {  case "Movie":  	baseDirectory = DataManager.MoviePath;  	break;  case "Game":  	baseDirectory = DataManager.GamePath;  	break;  case "Music":  	baseDirectory = DataManager.MusicPath;  	break;  case "Client":  	baseDirectory = DataManager.ClientPath;  	break;  case "Resource":  	baseDirectory = DataManager.ResourcePath;  	break;  case "Library":  	baseDirectory = new Uri (@"../../Library"' UriKind.RelativeOrAbsolute);  	break;  }  
