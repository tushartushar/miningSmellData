Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ToyStore.DataGenerators,AgeRangeGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\AgeRangeGenerator.cs,Seed,The following statement contains a magic number: var upperBound = 5;
Magic Number,ToyStore.DataGenerators,AgeRangeGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\AgeRangeGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)              {                  var ageRange = new AgeRange()                  {                      MinAge = minAge'                      MaxAge = upperBound                  };                    this.ToyStoreContext.AgeRanges.Add(ageRange);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }                    this.ChangeAgeValue(ref minAge' ref lowerBound' ref upperBound);              }
Magic Number,ToyStore.DataGenerators,AgeRangeGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\AgeRangeGenerator.cs,ChangeAgeValue,The following statement contains a magic number: if (minAge++ + 2 >= upperBound)              {                  lowerBound++;                  upperBound += lowerBound - 2;                  minAge = lowerBound;              }
Magic Number,ToyStore.DataGenerators,AgeRangeGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\AgeRangeGenerator.cs,ChangeAgeValue,The following statement contains a magic number: if (minAge++ + 2 >= upperBound)              {                  lowerBound++;                  upperBound += lowerBound - 2;                  minAge = lowerBound;              }
Magic Number,ToyStore.DataGenerators,ToyGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\ToyGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)              {                  var toy = new Toy()                  {                      Name = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      Type = this.GetRandomStringOrNull(MinLength' MaxLength)'                      Price = (decimal)Math.Round(RandomDataGenerator.Instance.GetRandomDouble() * 1000' 2)'                      Color = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      AgeRangeId = this.GetRandomAgeRangeIdFromDatabase()'                      ManufacturerId = this.GetRandomManufacturerIdFromDatabase()'                      Categories = this.GetRandomCategoriesFromDatabase()                  };                    this.ToyStoreContext.Toys.Add(toy);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }              }
Magic Number,ToyStore.DataGenerators,ToyGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\ToyGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)              {                  var toy = new Toy()                  {                      Name = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      Type = this.GetRandomStringOrNull(MinLength' MaxLength)'                      Price = (decimal)Math.Round(RandomDataGenerator.Instance.GetRandomDouble() * 1000' 2)'                      Color = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      AgeRangeId = this.GetRandomAgeRangeIdFromDatabase()'                      ManufacturerId = this.GetRandomManufacturerIdFromDatabase()'                      Categories = this.GetRandomCategoriesFromDatabase()                  };                    this.ToyStoreContext.Toys.Add(toy);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }              }
Magic Number,ToyStore.DataGenerators,ToyGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\ToyGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)              {                  var toy = new Toy()                  {                      Name = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      Type = this.GetRandomStringOrNull(MinLength' MaxLength)'                      Price = (decimal)Math.Round(RandomDataGenerator.Instance.GetRandomDouble() * 1000' 2)'                      Color = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)'                      AgeRangeId = this.GetRandomAgeRangeIdFromDatabase()'                      ManufacturerId = this.GetRandomManufacturerIdFromDatabase()'                      Categories = this.GetRandomCategoriesFromDatabase()                  };                    this.ToyStoreContext.Toys.Add(toy);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }              }
Magic Number,ToyStore.DataGenerators,ToyGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\ToyGenerator.cs,GetRandomCategoriesFromDatabase,The following statement contains a magic number: var categoriesToTake = RandomDataGenerator.Instance.GetRandomInt(0' 3);
Magic Number,ToyStore.DataGenerators,CategoryGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\CategoryGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)               {                  var category = new Category()                  {                      Name = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)                  };                    this.ToyStoreContext.Categories.Add(category);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }              }
Magic Number,ToyStore.DataGenerators,ManufacturerGenerator,C:\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - Databases\Databases - Exam Preparation\ToyStore (Database First)\ToyStore.DataGenerators\ManufacturerGenerator.cs,Seed,The following statement contains a magic number: for (int i = 0; i < this.SeedDataCount; i++)              {                  var manufacturer = new Manufacturer()                  {                      Name = uniqueNames[i]'                      Country = RandomDataGenerator.Instance.GetRandomString(MinLength' MaxLength)                  };                    this.ToyStoreContext.Manufacturers.Add(manufacturer);                    if (i % 100 == 0)                  {                      this.Logger.Log(".");                      this.ToyStoreContext.SaveChanges();                  }              }
