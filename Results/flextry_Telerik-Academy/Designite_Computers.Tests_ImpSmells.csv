Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Computers.Tests,CpuRandTest,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\CpuRandTest.cs,TestRandomGeneratorWithCustomRandomNumberProviderThatAlwaysReturn5,The following statement contains a magic number: var customNumber = 5;
Magic Number,Computers.Tests,CpuRandTest,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\CpuRandTest.cs,TestRandomGeneratorWithCustomRandomNumberProviderThatAlwaysReturn5,The following statement contains a magic number: var cpu = new Cpu32Bits(4' null' customRandomNumberProvider);
Magic Number,Computers.Tests,CpuRandTest,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\CpuRandTest.cs,TestRandomGeneratorWithCustomRandomNumberProviderThatAlwaysReturn5,The following statement contains a magic number: var generatedNumber = cpu.GenerateRandomNumber(1' 100);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,CreateBatteryInitiallyShouldReturn50Percents,The following statement contains a magic number: var exceptedPercentage = 50;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Subtract10PercentsShouldReturn40,The following statement contains a magic number: laptopBattery.Charge(-10);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Subtract10PercentsShouldReturn40,The following statement contains a magic number: var exceptedPercentage = 40;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Subtract50PercentsShouldReturnZero,The following statement contains a magic number: laptopBattery.Charge(-50);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Add10PercentsShouldReturn60,The following statement contains a magic number: laptopBattery.Charge(10);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Add10PercentsShouldReturn60,The following statement contains a magic number: var exceptedPercentage = 60;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Add50PercentsShouldReturn100,The following statement contains a magic number: laptopBattery.Charge(50);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,Add50PercentsShouldReturn100,The following statement contains a magic number: var exceptedPercentage = 100;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,TestOnNegativeInputValueShouldReturnZero,The following statement contains a magic number: laptopBattery.Charge(-1000);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,TestOnInputValueGreaterThanMaximalValueShouldReturn100,The following statement contains a magic number: laptopBattery.Charge(10000);
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,TestOnInputValueGreaterThanMaximalValueShouldReturn100,The following statement contains a magic number: var exceptedPercentage = 100;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,SetNegativePercentageViaPropertyShouldThrowException,The following statement contains a magic number: laptopBattery.Percentage = -10;
Magic Number,Computers.Tests,LaptopChargeTests,D:\research\architectureSmells\repos\flextry_Telerik-Academy\Programming with C#\0. Exams\Telerik 2013-2014 - High-Quality Code\C# High-Quality Code - 6 August 2014 - Morning\Computers\Computers.Tests\LaptopChargeTests.cs,SetInvalidNonNegativePercentageViaPropertyShouldThrowException,The following statement contains a magic number: laptopBattery.Percentage = 150;
