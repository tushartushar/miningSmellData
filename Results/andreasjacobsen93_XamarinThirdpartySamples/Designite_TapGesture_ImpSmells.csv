Implementation smell,Namespace,Class,File,Method,Description
Magic Number,TapGesture,TapGestureViewController,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\xamarin-recipes-master\TapGesture\TapGesture\TapGestureViewController.cs,TapThat,The following statement contains a magic number: if (!tapped) {  	tap.View.Transform *= CGAffineTransform.MakeRotation ((float)Math.PI / 2);  	tapped = true;  	alert = new UIAlertView ("Card Tapped"' "This card has been tapped"' null' "OK"' null);  }  else {  	tap.View.Transform *= CGAffineTransform.MakeRotation ((float)-Math.PI / 2);  	tapped = false;  	alert = new UIAlertView ("Card Uptapped"' "This card has been untapped"' null' "OK"' null);  }  
Magic Number,TapGesture,TapGestureViewController,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\xamarin-recipes-master\TapGesture\TapGesture\TapGestureViewController.cs,TapThat,The following statement contains a magic number: if (!tapped) {  	tap.View.Transform *= CGAffineTransform.MakeRotation ((float)Math.PI / 2);  	tapped = true;  	alert = new UIAlertView ("Card Tapped"' "This card has been tapped"' null' "OK"' null);  }  else {  	tap.View.Transform *= CGAffineTransform.MakeRotation ((float)-Math.PI / 2);  	tapped = false;  	alert = new UIAlertView ("Card Uptapped"' "This card has been untapped"' null' "OK"' null);  }  
Magic Number,TapGesture,TapGestureViewController,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\xamarin-recipes-master\TapGesture\TapGesture\TapGestureViewController.cs,TapThat,The following statement contains a magic number: tap.View.Transform *= CGAffineTransform.MakeRotation ((float)Math.PI / 2);  
Magic Number,TapGesture,TapGestureViewController,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\xamarin-recipes-master\TapGesture\TapGesture\TapGestureViewController.cs,TapThat,The following statement contains a magic number: tap.View.Transform *= CGAffineTransform.MakeRotation ((float)-Math.PI / 2);  
