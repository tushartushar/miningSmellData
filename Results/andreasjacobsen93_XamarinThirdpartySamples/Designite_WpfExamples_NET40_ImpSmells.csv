Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CsvDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CsvDemo\MainWindow.xaml.cs,SavePlot_Click,Cyclomatic complexity of the method is 15
Complex Method,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,Cyclomatic complexity of the method is 13
Long Parameter List,WpfExamples,ScreenCapture,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\ScreenCapture.cs,BitBlt,The method has 9 parameters.
Long Parameter List,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The method has 19 parameters.
Long Parameter List,CoupledAxesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CoupledAxesDemo\MainWindow.xaml.cs,MainWindow,The method has 5 parameters.
Long Parameter List,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The method has 6 parameters.
Long Statement,WpfExamples,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\MainWindow.xaml.cs,CreateThumbnail,The length of the statement  "	var bitmap = ScreenCapture.Capture ((int)window.Left' (int)window.Top' (int)window.ActualWidth' (int)window.ActualHeight); " is 122.
Long Statement,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The length of the statement  "	Func<double' double' double> peaks = (x' y) => 3 * (1 - x) * (1 - x) * Math.Exp (-(x * x) - (y + 1) * (y + 1)) - 10 * (x / 5 - x * x * x - y * y * y * y * y) * Math.Exp (-x * x - y * y) - 1.0 / 3 * Math.Exp (-(x + 1) * (x + 1) - y * y); " is 236.
Long Statement,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The length of the statement  "	this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842))))); " is 207.
Long Statement,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The length of the statement  "	this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0)); " is 239.
Long Statement,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The length of the statement  "	this.Examples.Add (new Example ("sin(x)*cos(y)"' -Math.PI' Math.PI' 0.1' -Math.PI' Math.PI' 0.1' -1' 1' 0.1' (x' y) => Math.Sin (x) * Math.Cos (y))); " is 149.
Long Statement,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The length of the statement  "	this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°")); " is 137.
Long Statement,OverlayDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\OverlayDemo\MainWindow.xaml.cs,HandleTransformChanged,The length of the statement  "	var plotArea = new Rect (this.model.PlotArea.Left' this.model.PlotArea.Top' this.model.PlotArea.Width' this.model.PlotArea.Height); " is 131.
Long Statement,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The length of the statement  "	double cosH = (Math.Cos (Deg2Rad (zenith)) - (sinDec * Math.Sin (Deg2Rad (latitude)))) / (cosDec * Math.Cos (Deg2Rad (latitude))); " is 130.
Magic Number,WpfExamples,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The following statement contains a magic number: if (example != null) {  	var window = example.Create ();  	window.Icon = this.Icon;  	window.Show ();  	window.KeyDown += (s' args) =>  {  		if (args.Key == Key.F12) {  			CreateThumbnail (window' 120' Path.Combine (@"..\..\Images\"' example.ThumbnailFileName));  			MessageBox.Show (window' "Demo image updated.");  			e.Handled = true;  		}  	};  }  
Magic Number,WpfExamples,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The following statement contains a magic number: window.KeyDown += (s' args) =>  {  	if (args.Key == Key.F12) {  		CreateThumbnail (window' 120' Path.Combine (@"..\..\Images\"' example.ThumbnailFileName));  		MessageBox.Show (window' "Demo image updated.");  		e.Handled = true;  	}  };  
Magic Number,WpfExamples,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The following statement contains a magic number: if (args.Key == Key.F12) {  	CreateThumbnail (window' 120' Path.Combine (@"..\..\Images\"' example.ThumbnailFileName));  	MessageBox.Show (window' "Demo image updated.");  	e.Handled = true;  }  
Magic Number,WpfExamples,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\MainWindow.xaml.cs,ListBoxMouseDoubleClick,The following statement contains a magic number: CreateThumbnail (window' 120' Path.Combine (@"..\..\Images\"' example.ThumbnailFileName));  
Magic Number,ScatterErrorSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterErrorSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = CreateExamplePoints (20).ToList ();  
Magic Number,ScatterErrorSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterErrorSeriesDemo\MainWindow.xaml.cs,CreateExamplePoints,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	x += 2 + random.NextDouble ();  	y += 1 + random.NextDouble ();  	yield return new ExamplePoint {  		V1 = x'  		V2 = y'  		E1 = random.NextDouble ()'  		E2 = random.NextDouble ()  	};  }  
Magic Number,ScatterErrorSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterErrorSeriesDemo\MainWindow.xaml.cs,CreateExamplePoints,The following statement contains a magic number: x += 2 + random.NextDouble ();  
Magic Number,ResizeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ResizeDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 1000));  
Magic Number,ResizeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ResizeDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 1000));  
Magic Number,ResizeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ResizeDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (x => Math.Sin (x) / x' 0' 10' 1000));  
Magic Number,ResizeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ResizeDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (x => Math.Sin (x) / x' 0' 10' 1000));  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AnnotationDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AnnotationDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Points = new List<DataPoint> {  	new DataPoint (10' 10)'  	new DataPoint (80' 30)'  	new DataPoint (60' 70)  };  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	v1 += (r.NextDouble () - 0.5) * 0.7;  	v2 += (r.NextDouble () - 0.5) * 0.1;  	double y1 = p1 + v1;  	double y2 = p2 + v2;  	p1 = y1;  	p2 = y2;  	this.Measurements.Add (new Measurement {  		Time = i * 2.5'  		Value = y1'  		Maximum = y1 + y2'  		Minimum = y1 - y2  	});  }  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: v1 += (r.NextDouble () - 0.5) * 0.7;  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: v1 += (r.NextDouble () - 0.5) * 0.7;  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: v2 += (r.NextDouble () - 0.5) * 0.1;  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: v2 += (r.NextDouble () - 0.5) * 0.1;  
Magic Number,AreaDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AreaDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Measurements.Add (new Measurement {  	Time = i * 2.5'  	Value = y1'  	Maximum = y1 + y2'  	Minimum = y1 - y2  });  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,AxesDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\AxesDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Data1 = new List<DataPoint> {  	new DataPoint (10' 4)'  	new DataPoint (12' 7)'  	new DataPoint (16' 3)'  	new DataPoint (20' 9)  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BarSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BarSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < N; i++) {  	dy += (r.NextDouble () * 2) - 1;  	y += dy;  	this.Measurements.Add (new Measurement {  		Time = 2.5 * i / (N - 1)'  		Value = y / (N - 1)'  		Maximum = (y / (N - 1)) + 5'  		Minimum = (y / (N - 1)) - 5  	});  }  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < N; i++) {  	dy += (r.NextDouble () * 2) - 1;  	y += dy;  	this.Measurements.Add (new Measurement {  		Time = 2.5 * i / (N - 1)'  		Value = y / (N - 1)'  		Maximum = (y / (N - 1)) + 5'  		Minimum = (y / (N - 1)) - 5  	});  }  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < N; i++) {  	dy += (r.NextDouble () * 2) - 1;  	y += dy;  	this.Measurements.Add (new Measurement {  		Time = 2.5 * i / (N - 1)'  		Value = y / (N - 1)'  		Maximum = (y / (N - 1)) + 5'  		Minimum = (y / (N - 1)) - 5  	});  }  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: for (int i = 0; i < N; i++) {  	dy += (r.NextDouble () * 2) - 1;  	y += dy;  	this.Measurements.Add (new Measurement {  		Time = 2.5 * i / (N - 1)'  		Value = y / (N - 1)'  		Maximum = (y / (N - 1)) + 5'  		Minimum = (y / (N - 1)) - 5  	});  }  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: dy += (r.NextDouble () * 2) - 1;  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Measurements.Add (new Measurement {  	Time = 2.5 * i / (N - 1)'  	Value = y / (N - 1)'  	Maximum = (y / (N - 1)) + 5'  	Minimum = (y / (N - 1)) - 5  });  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Measurements.Add (new Measurement {  	Time = 2.5 * i / (N - 1)'  	Value = y / (N - 1)'  	Maximum = (y / (N - 1)) + 5'  	Minimum = (y / (N - 1)) - 5  });  
Magic Number,BindingDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\BindingDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: this.Measurements.Add (new Measurement {  	Time = 2.5 * i / (N - 1)'  	Value = y / (N - 1)'  	Maximum = (y / (N - 1)) + 5'  	Minimum = (y / (N - 1)) - 5  });  
Magic Number,ContextMenuDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContextMenuDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: model.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 200));  
Magic Number,ContextMenuDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContextMenuDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: model.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 200));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("peaks"' -3' 3' 0.05' -3' 3' 0.05' -6' 10' 1' peaks));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 1"' -1.5' 1.5' 0.1' -1.5' 1.5' 0.1' 0' 2.25' 0.25' (x' y) => 1.0 / (square (x * x + (y - 0.842) * (y + 0.842)) + square (x * (y - 0.842) + x * (y - 0.842)))));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("Conrec example 2"' -2 * Math.PI' 2 * Math.PI' 0.25' -2 * Math.PI' 2 * Math.PI' 0.25' -1' 1' 0.02' (x' y) => Math.Sin (Math.Sqrt (x * x + y * y)) + y != 0 ? 1.0 / Math.Sqrt ((x - c) * (x - c) + y * y) : 0));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sin(x)*cos(y)"' -Math.PI' Math.PI' 0.1' -Math.PI' Math.PI' 0.1' -1' 1' 0.1' (x' y) => Math.Sin (x) * Math.Cos (y)));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sin(x)*cos(y)"' -Math.PI' Math.PI' 0.1' -Math.PI' Math.PI' 0.1' -1' 1' 0.1' (x' y) => Math.Sin (x) * Math.Cos (y)));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sin(x)*cos(y)"' -Math.PI' Math.PI' 0.1' -Math.PI' Math.PI' 0.1' -1' 1' 0.1' (x' y) => Math.Sin (x) * Math.Cos (y)));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x*y"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x*y"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x*y"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x^{2}+y^{2}"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * x + y * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x^{2}+y^{2}"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * x + y * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("x^{2}+y^{2}"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => x * x + y * y));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("atan2(y'x)"' -1' 1' 0.1' -1' 1' 0.1' -180' 180' 10' (x' y) => Math.Atan2 (y' x) * 180 / Math.PI' "0Â°"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("y/x"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => y / x' "0%"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("y/x"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => y / x' "0%"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("y/x"' -1' 1' 0.1' -1' 1' 0.1' -1' 1' 0.1' (x' y) => y / x' "0%"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: this.Examples.Add (new Example ("sinc(r+0.1)"' -8' 8' 0.2' -8' 8' 0.2' -0.2' 1' 0.1' (x' y) =>  {  	double r = Math.Sqrt (x * x + y * y);  	return Math.Sin (r + 0.1) / (r + 0.1);  }' "0.0"));  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: return Math.Sin (r + 0.1) / (r + 0.1);  
Magic Number,ContourDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ContourDemo\MainViewModel.cs,AddExamples,The following statement contains a magic number: return Math.Sin (r + 0.1) / (r + 0.1);  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,ColumnSeriesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ColumnSeriesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Items = new Collection<Item> {  	new Item {  		Label = "Apples"'  		Value1 = 37'  		Value2 = 12'  		Value3 = 19  	}'  	new Item {  		Label = "Pears"'  		Value1 = 7'  		Value2 = 21'  		Value3 = 9  	}'  	new Item {  		Label = "Bananas"'  		Value1 = 23'  		Value2 = 2'  		Value3 = 29  	}  };  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: for (var i = 0; i < Rows; i++) {  	for (var j = 0; j < Cols; j++) {  		result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  	}  }  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: for (var i = 0; i < Rows; i++) {  	for (var j = 0; j < Cols; j++) {  		result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  	}  }  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: for (var j = 0; j < Cols; j++) {  	result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  }  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: for (var j = 0; j < Cols; j++) {  	result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  }  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  
Magic Number,HeatMapDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HeatMapDemo\MainWindow.xaml.cs,GenerateHeatMap,The following statement contains a magic number: result [i' j] = Math.Sin (2 * Math.PI * i / Rows) * Math.Sin (2 * Math.PI * j / Cols);  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: this.task = Task.Factory.StartNew (() =>  {  	double x = 0;  	while (!complete) {  		this.Title = "Plot updated: " + DateTime.Now;  		this.Points.Add (new DataPoint (x' Math.Sin (x)));  		// Change the refresh flag' this will trig InvalidatePlot() on the Plot control  		this.Refresh++;  		x += 0.1;  		Thread.Sleep (100);  	}  });  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: this.task = Task.Factory.StartNew (() =>  {  	double x = 0;  	while (!complete) {  		this.Title = "Plot updated: " + DateTime.Now;  		this.Points.Add (new DataPoint (x' Math.Sin (x)));  		// Change the refresh flag' this will trig InvalidatePlot() on the Plot control  		this.Refresh++;  		x += 0.1;  		Thread.Sleep (100);  	}  });  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: while (!complete) {  	this.Title = "Plot updated: " + DateTime.Now;  	this.Points.Add (new DataPoint (x' Math.Sin (x)));  	// Change the refresh flag' this will trig InvalidatePlot() on the Plot control  	this.Refresh++;  	x += 0.1;  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: while (!complete) {  	this.Title = "Plot updated: " + DateTime.Now;  	this.Points.Add (new DataPoint (x' Math.Sin (x)));  	// Change the refresh flag' this will trig InvalidatePlot() on the Plot control  	this.Refresh++;  	x += 0.1;  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: x += 0.1;  
Magic Number,RefreshDemo,Window6ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window6ViewModel.cs,Window6ViewModel,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,RefreshDemo,Window1,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window1.xaml.cs,CompositionTarget_Rendering,The following statement contains a magic number: if (seconds > this.lastUpdateTime + 0.2) {  	this.PlotModel = this.CreatePlot ();  	this.lastUpdateTime = seconds;  }  
Magic Number,RefreshDemo,Window1,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window1.xaml.cs,CreatePlot,The following statement contains a magic number: pm.Series.Add (new FunctionSeries (Math.Sin' x' x + 4' 0.01));  
Magic Number,RefreshDemo,Window1,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window1.xaml.cs,CreatePlot,The following statement contains a magic number: pm.Series.Add (new FunctionSeries (Math.Sin' x' x + 4' 0.01));  
Magic Number,RefreshDemo,Window1,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window1.xaml.cs,CreatePlot,The following statement contains a magic number: x += 0.1;  
Magic Number,RefreshDemo,Window2,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window2.xaml.cs,CompositionTarget_Rendering,The following statement contains a magic number: if (seconds > this.lastUpdateTime + 0.2) {  	this.UpdatePlot ();  	this.lastUpdateTime = seconds;  }  
Magic Number,RefreshDemo,Window2,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window2.xaml.cs,UpdatePlot,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window2,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window2.xaml.cs,UpdatePlot,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window2,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window2.xaml.cs,UpdatePlot,The following statement contains a magic number: x += 0.1;  
Magic Number,RefreshDemo,Window3,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window3.xaml.cs,CompositionTarget_Rendering,The following statement contains a magic number: if (seconds > this.lastUpdateTime + 0.2) {  	this.UpdatePlot ();  	this.lastUpdateTime = seconds;  }  
Magic Number,RefreshDemo,Window3,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window3.xaml.cs,UpdatePlot,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window3,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window3.xaml.cs,UpdatePlot,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window3,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window3.xaml.cs,UpdatePlot,The following statement contains a magic number: x += 0.1;  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: worker.DoWork += (s' e) =>  {  	while (!worker.CancellationPending) {  		lock (this.PlotModel.SyncRoot) {  			this.PlotModel.Title = "Plot updated: " + DateTime.Now;  			this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  		}  		x += 0.1;  		PlotModel.InvalidatePlot (true);  		Thread.Sleep (100);  	}  };  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: worker.DoWork += (s' e) =>  {  	while (!worker.CancellationPending) {  		lock (this.PlotModel.SyncRoot) {  			this.PlotModel.Title = "Plot updated: " + DateTime.Now;  			this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  		}  		x += 0.1;  		PlotModel.InvalidatePlot (true);  		Thread.Sleep (100);  	}  };  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: worker.DoWork += (s' e) =>  {  	while (!worker.CancellationPending) {  		lock (this.PlotModel.SyncRoot) {  			this.PlotModel.Title = "Plot updated: " + DateTime.Now;  			this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  		}  		x += 0.1;  		PlotModel.InvalidatePlot (true);  		Thread.Sleep (100);  	}  };  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: worker.DoWork += (s' e) =>  {  	while (!worker.CancellationPending) {  		lock (this.PlotModel.SyncRoot) {  			this.PlotModel.Title = "Plot updated: " + DateTime.Now;  			this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  		}  		x += 0.1;  		PlotModel.InvalidatePlot (true);  		Thread.Sleep (100);  	}  };  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: while (!worker.CancellationPending) {  	lock (this.PlotModel.SyncRoot) {  		this.PlotModel.Title = "Plot updated: " + DateTime.Now;  		this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  	}  	x += 0.1;  	PlotModel.InvalidatePlot (true);  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: while (!worker.CancellationPending) {  	lock (this.PlotModel.SyncRoot) {  		this.PlotModel.Title = "Plot updated: " + DateTime.Now;  		this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  	}  	x += 0.1;  	PlotModel.InvalidatePlot (true);  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: while (!worker.CancellationPending) {  	lock (this.PlotModel.SyncRoot) {  		this.PlotModel.Title = "Plot updated: " + DateTime.Now;  		this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  	}  	x += 0.1;  	PlotModel.InvalidatePlot (true);  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: while (!worker.CancellationPending) {  	lock (this.PlotModel.SyncRoot) {  		this.PlotModel.Title = "Plot updated: " + DateTime.Now;  		this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  	}  	x += 0.1;  	PlotModel.InvalidatePlot (true);  	Thread.Sleep (100);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: lock (this.PlotModel.SyncRoot) {  	this.PlotModel.Title = "Plot updated: " + DateTime.Now;  	this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: lock (this.PlotModel.SyncRoot) {  	this.PlotModel.Title = "Plot updated: " + DateTime.Now;  	this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  }  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: this.PlotModel.Series [0] = new FunctionSeries (Math.Sin' x' x + 4' 0.01);  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: x += 0.1;  
Magic Number,RefreshDemo,Window4,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RefreshDemo\Window4.xaml.cs,Window4,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,Update,The following statement contains a magic number: while (!token.IsCancellationRequested) {  	context.Post (_ => this.UpdatePlot ()' null);  	Thread.Sleep (250);  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,Update,The following statement contains a magic number: Thread.Sleep (250);  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: for (int j = 0; j < 20000; j++) {  	x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  	y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: for (int j = 0; j < 20000; j++) {  	x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  	y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: for (int j = 0; j < 20000; j++) {  	x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  	y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: for (int j = 0; j < 20000; j++) {  	x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  	y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: for (int j = 0; j < 20000; j++) {  	x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  	y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  }  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: x += (this.randomizer.NextDouble () - 0.5) * 1e-3;  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  
Magic Number,TaskDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\TaskDemo\MainViewModel.cs,CalculateNextPoint,The following statement contains a magic number: y += (this.randomizer.NextDouble () - 0.5) * 1e-3;  
Magic Number,CoupledAxesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CoupledAxesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Model1.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 1000));  
Magic Number,CoupledAxesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CoupledAxesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Model1.Series.Add (new FunctionSeries (Math.Sin' 0' 10' 1000));  
Magic Number,CoupledAxesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CoupledAxesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Model2.Series.Add (new FunctionSeries (x => Math.Sin (x) / x' 0' 10' 1000));  
Magic Number,CoupledAxesDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CoupledAxesDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.Model2.Series.Add (new FunctionSeries (x => Math.Sin (x) / x' 0' 10' 1000));  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel = this.CreateModel (new DateTime (2010' 01' 01)' new DateTime (2015' 01' 01)' 3600 * 24 * 14);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel = this.CreateModel (new DateTime (2010' 01' 01)' new DateTime (2015' 01' 01)' 3600 * 24 * 14);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel = this.CreateModel (new DateTime (2010' 01' 01)' new DateTime (2015' 01' 01)' 3600 * 24 * 14);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel = this.CreateModel (new DateTime (2010' 01' 01)' new DateTime (2015' 01' 01)' 3600 * 24 * 14);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel = this.CreateModel (new DateTime (2010' 01' 01)' new DateTime (2015' 01' 01)' 3600 * 24 * 14);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel2 = this.CreateModel2 (new TimeSpan (0' 0' 0' 0)' new TimeSpan (0' 24' 0' 0)' 3600);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.ExampleModel2 = this.CreateModel2 (new TimeSpan (0' 0' 0' 0)' new TimeSpan (0' 24' 0' 0)' 3600);  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.SunData = this.CreateSunData (year' 59.91' 10.75' TimeZoneInfo.FindSystemTimeZoneById ("W. Europe Standard Time"));  
Magic Number,DateTimeDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.SunData = this.CreateSunData (year' 59.91' 10.75' TimeZoneInfo.FindSystemTimeZoneById ("W. Europe Standard Time"));  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Deg2Rad,The following statement contains a magic number: return Math.PI * angle / 180.0;  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Rad2Deg,The following statement contains a magic number: return 180.0 * angle / Math.PI;  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: if (sunrise)  	t = N + ((6.0 - lngHour) / 24.0);  else  	t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: if (sunrise)  	t = N + ((6.0 - lngHour) / 24.0);  else  	t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: if (sunrise)  	t = N + ((6.0 - lngHour) / 24.0);  else  	t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: if (sunrise)  	t = N + ((6.0 - lngHour) / 24.0);  else  	t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: t = N + ((6.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: t = N + ((6.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: t = N + ((18.0 - lngHour) / 24.0);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: L = FixValue (L' 0' 360);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: RA = FixValue (RA' 0' 360);  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: RA = RA / 15.0;  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: if (sunrise)  	H = 360.0 - Rad2Deg (Math.Acos (cosH));  else  	H = Rad2Deg (Math.Acos (cosH));  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: H = 360.0 - Rad2Deg (Math.Acos (cosH));  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: H = H / 15.0;  
Magic Number,DateTimeDemo,Sun,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\DateTimeDemo\Sun.cs,Calculate,The following statement contains a magic number: UT = FixValue (UT' 0' 24);  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pm.Axes.Add (new LinearAxis {  	Position = AxisPosition.Left'  	Minimum = 0'  	Maximum = 1'  	MajorStep = 0.2'  	MinorStep = 0.05'  	Title = "Frequency"  });  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pm.Axes.Add (new LinearAxis {  	Position = AxisPosition.Left'  	Minimum = 0'  	Maximum = 1'  	MajorStep = 0.2'  	MinorStep = 0.05'  	Title = "Frequency"  });  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pm.Axes.Add (new LinearAxis {  	Position = AxisPosition.Bottom'  	Minimum = 0'  	Maximum = 100'  	Title = "Lightness"  });  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,LoadPixelData,The following statement contains a magic number: this.pixelData = new int[pixelByteArray.Length / 4];  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,ThrottledEvent_ThrottledMouseMove,The following statement contains a magic number: for (double pt = 0; pt < distance; pt++) {  	double xPos = line.X1 + (line.X2 - line.X1) * pt / distance;  	double yPos = line.Y1 + (line.Y2 - line.Y1) * pt / distance;  	var xIndex = (int)xPos;  	var yIndex = (int)yPos;  	int pixel = this.pixelData [xIndex + (yIndex * 300)];  	// the RGB values are 'packed' into an int' here we unpack them  	var blue = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var green = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var red = (byte)(pixel & 0xFF);  	histoR [red / b]++;  	histoG [green / b]++;  	histoB [blue / b]++;  	n++;  }  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,ThrottledEvent_ThrottledMouseMove,The following statement contains a magic number: for (double pt = 0; pt < distance; pt++) {  	double xPos = line.X1 + (line.X2 - line.X1) * pt / distance;  	double yPos = line.Y1 + (line.Y2 - line.Y1) * pt / distance;  	var xIndex = (int)xPos;  	var yIndex = (int)yPos;  	int pixel = this.pixelData [xIndex + (yIndex * 300)];  	// the RGB values are 'packed' into an int' here we unpack them  	var blue = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var green = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var red = (byte)(pixel & 0xFF);  	histoR [red / b]++;  	histoG [green / b]++;  	histoB [blue / b]++;  	n++;  }  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,ThrottledEvent_ThrottledMouseMove,The following statement contains a magic number: for (double pt = 0; pt < distance; pt++) {  	double xPos = line.X1 + (line.X2 - line.X1) * pt / distance;  	double yPos = line.Y1 + (line.Y2 - line.Y1) * pt / distance;  	var xIndex = (int)xPos;  	var yIndex = (int)yPos;  	int pixel = this.pixelData [xIndex + (yIndex * 300)];  	// the RGB values are 'packed' into an int' here we unpack them  	var blue = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var green = (byte)(pixel & 0xFF);  	pixel >>= 8;  	var red = (byte)(pixel & 0xFF);  	histoR [red / b]++;  	histoG [green / b]++;  	histoB [blue / b]++;  	n++;  }  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,ThrottledEvent_ThrottledMouseMove,The following statement contains a magic number: pixel >>= 8;  
Magic Number,HistogramDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\HistogramDemo\MainWindow.xaml.cs,ThrottledEvent_ThrottledMouseMove,The following statement contains a magic number: pixel >>= 8;  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,MainViewModel,The following statement contains a magic number: NumberOfSeries = 20;  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,CreateModel,The following statement contains a magic number: for (int i = 1; i <= n; i++) {  	var s = new LineSeries {  		Title = "Series " + i  	};  	newModel.Series.Add (s);  	for (double x = 0; x < 2 * Math.PI; x += 0.1)  		s.Points.Add (new DataPoint (x' Math.Sin (x * i) / i + i));  }  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,CreateModel,The following statement contains a magic number: for (int i = 1; i <= n; i++) {  	var s = new LineSeries {  		Title = "Series " + i  	};  	newModel.Series.Add (s);  	for (double x = 0; x < 2 * Math.PI; x += 0.1)  		s.Points.Add (new DataPoint (x' Math.Sin (x * i) / i + i));  }  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,CreateModel,The following statement contains a magic number: for (double x = 0; x < 2 * Math.PI; x += 0.1)  	s.Points.Add (new DataPoint (x' Math.Sin (x * i) / i + i));  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,CreateModel,The following statement contains a magic number: for (double x = 0; x < 2 * Math.PI; x += 0.1)  	s.Points.Add (new DataPoint (x' Math.Sin (x * i) / i + i));  
Magic Number,LegendsDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\LegendsDemo\MainViewModel.cs,CreateModel,The following statement contains a magic number: x += 0.1
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.Slices.Add (new PieSlice ("Africa"' 1030) {  	IsExploded = true  });  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.Slices.Add (new PieSlice ("Americas"' 929) {  	IsExploded = true  });  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.Slices.Add (new PieSlice ("Asia"' 4157));  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.Slices.Add (new PieSlice ("Europe"' 739) {  	IsExploded = true  });  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.Slices.Add (new PieSlice ("Oceania"' 35) {  	IsExploded = true  });  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.InnerDiameter = 0.2;  
Magic Number,PieDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PieDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: pieSeries.AngleSpan = 360;  
Magic Number,PolarDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PolarDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.MaxAngle = Math.PI * 2;  
Magic Number,PolarDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PolarDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.MajorStep = Math.PI / 4;  
Magic Number,PolarDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PolarDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: this.MinorStep = Math.PI / 16;  
Magic Number,PolarDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PolarDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (t => t' t => t' 0' Math.PI * 6' 0.01));  
Magic Number,PolarDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\PolarDemo\MainWindow.xaml.cs,CreateModel,The following statement contains a magic number: model.Series.Add (new FunctionSeries (t => t' t => t' 0' Math.PI * 6' 0.01));  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,SetupModel,The following statement contains a magic number: PlotModel.Axes.Add (new LinearAxis {  	Position = AxisPosition.Left'  	Minimum = -2'  	Maximum = 2  });  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,SetupModel,The following statement contains a magic number: PlotModel.Axes.Add (new LinearAxis {  	Position = AxisPosition.Left'  	Minimum = -2'  	Maximum = 2  });  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,SetupModel,The following statement contains a magic number: this.numberOfSeries = this.SimulationType == SimulationType.TimeSimulation ? 1 : 20;  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,SetupModel,The following statement contains a magic number: this.timer.Change (1000' UpdateInterval);  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int i = 0; i < PlotModel.Series.Count; i++) {  	var s = (LineSeries)PlotModel.Series [i];  	switch (SimulationType) {  	case SimulationType.TimeSimulation: {  		double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  		if (s.Points.Count >= 200)  			s.Points.RemoveAt (0);  		double y = 0;  		int m = 80;  		for (int j = 0; j < m; j++)  			y += Math.Cos (0.001 * x * j * j);  		y /= m;  		s.Points.Add (new DataPoint (x' y));  		break;  	}  	case SimulationType.Waves:  		s.Points.Clear ();  		double a = 0.5 + i * 0.05;  		for (double x = -5; x <= 5; x += 0.01) {  			s.Points.Add (new DataPoint (x' Function (t' x' a)));  		}  		break;  	}  	n += s.Points.Count;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: if (s.Points.Count >= 200)  	s.Points.RemoveAt (0);  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (int j = 0; j < m; j++)  	y += Math.Cos (0.001 * x * j * j);  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: y += Math.Cos (0.001 * x * j * j);  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (double x = -5; x <= 5; x += 0.01) {  	s.Points.Add (new DataPoint (x' Function (t' x' a)));  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (double x = -5; x <= 5; x += 0.01) {  	s.Points.Add (new DataPoint (x' Function (t' x' a)));  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: for (double x = -5; x <= 5; x += 0.01) {  	s.Points.Add (new DataPoint (x' Function (t' x' a)));  }  
Magic Number,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following statement contains a magic number: x += 0.01
Magic Number,ScatterDemo,Fern,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterDemo\Fern.cs,Generate,The following statement contains a magic number: for (int i = 0; i < n; i++) {  	var r = random.NextDouble ();  	if (r < p [0])  		point = a1.Transform (point);  	else if (r < p [1])  		point = a2.Transform (point);  	else if (r < p [2])  		point = a3.Transform (point);  	else  		point = a4.Transform (point);  	points.Add (T.Transform (point));  }  
Magic Number,ScatterDemo,Fern,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterDemo\Fern.cs,Generate,The following statement contains a magic number: if (r < p [0])  	point = a1.Transform (point);  else if (r < p [1])  	point = a2.Transform (point);  else if (r < p [2])  	point = a3.Transform (point);  else  	point = a4.Transform (point);  
Magic Number,ScatterDemo,Fern,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterDemo\Fern.cs,Generate,The following statement contains a magic number: if (r < p [1])  	point = a2.Transform (point);  else if (r < p [2])  	point = a3.Transform (point);  else  	point = a4.Transform (point);  
Magic Number,ScatterDemo,Fern,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterDemo\Fern.cs,Generate,The following statement contains a magic number: if (r < p [2])  	point = a3.Transform (point);  else  	point = a4.Transform (point);  
Magic Number,ScatterDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\ScatterDemo\MainWindow.xaml.cs,MainWindow,The following statement contains a magic number: foreach (var pt in Fern.Generate (2000)) {  	s1.Points.Add (new DataPoint (pt.X' -pt.Y));  }  
Magic Number,UserControlDemo,ViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\UserControlDemo\ViewModel.cs,ViewModel,The following statement contains a magic number: for (int i = 0; i < 10; i++) {  	this.Points.Add (new DataPoint (i' r.NextDouble ()));  }  
Missing Default,CsvDemo,MainWindow,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\CsvDemo\MainWindow.xaml.cs,SavePlot_Click,The following switch statement is missing a default case: switch (ext) {  case ".png":  	plot1.SaveBitmap (dlg.FileName' 0' 0' OxyColors.Automatic);  	break;  case ".svg":  	var rc = new ShapesRenderContext (null);  	var svg = OxyPlot.SvgExporter.ExportToString (this.vm.Model' plot1.ActualWidth' plot1.ActualHeight' false' rc);  	File.WriteAllText (dlg.FileName' svg);  	break;  case ".pdf":  	using (var s = File.Create (dlg.FileName)) {  		PdfExporter.Export (vm.Model' s' plot1.ActualWidth' plot1.ActualHeight);  	}  	break;  case ".xaml":  	plot1.SaveXaml (dlg.FileName);  	break;  }  
Missing Default,RealtimeDemo,MainViewModel,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\Examples\WPF\WpfExamples\Examples\RealtimeDemo\MainViewModel.cs,Update,The following switch statement is missing a default case: switch (SimulationType) {  case SimulationType.TimeSimulation: {  	double x = s.Points.Count > 0 ? s.Points [s.Points.Count - 1].X + 1 : 0;  	if (s.Points.Count >= 200)  		s.Points.RemoveAt (0);  	double y = 0;  	int m = 80;  	for (int j = 0; j < m; j++)  		y += Math.Cos (0.001 * x * j * j);  	y /= m;  	s.Points.Add (new DataPoint (x' y));  	break;  }  case SimulationType.Waves:  	s.Points.Clear ();  	double a = 0.5 + i * 0.05;  	for (double x = -5; x <= 5; x += 0.01) {  		s.Points.Add (new DataPoint (x' Function (t' x' a)));  	}  	break;  }  
