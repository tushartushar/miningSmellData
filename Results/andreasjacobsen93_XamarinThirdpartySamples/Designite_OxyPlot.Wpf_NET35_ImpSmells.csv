Implementation smell,Namespace,Class,File,Method,Description
Long Method,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The method has 159 lines of code.
Long Method,OxyPlot.Wpf,ConverterExtensions,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Utilities\ConverterExtensions.cs,Convert,The method has 162 lines of code.
Complex Method,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,SetCursorType,Cyclomatic complexity of the method is 15
Complex Method,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,Cyclomatic complexity of the method is 17
Complex Method,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,Cyclomatic complexity of the method is 11
Complex Method,OxyPlot.Wpf,ConverterExtensions,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Utilities\ConverterExtensions.cs,Convert,Cyclomatic complexity of the method is 79
Complex Method,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawPolygons,Cyclomatic complexity of the method is 13
Complex Method,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,Cyclomatic complexity of the method is 14
Complex Method,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureTextSize,Cyclomatic complexity of the method is 10
Complex Method,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,SetStroke,Cyclomatic complexity of the method is 10
Long Parameter List,OxyPlot.Wpf,XamlExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\XamlExporter.cs,Export,The method has 5 parameters.
Long Parameter List,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,Export,The method has 6 parameters.
Long Parameter List,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,Export,The method has 6 parameters.
Long Parameter List,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,ExportToBitmap,The method has 5 parameters.
Long Parameter List,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreateBorderGeometry,The method has 5 parameters.
Long Parameter List,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The method has 5 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLine,The method has 6 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegments,The method has 6 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawPolygon,The method has 7 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawPolygons,The method has 7 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The method has 10 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawImage,The method has 11 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegmentsByStreamGeometry,The method has 6 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,SetStroke,The method has 7 parameters.
Long Parameter List,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineBalanced,The method has 6 parameters.
Long Identifier,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,OnPositionChanged,The length of the parameter dependencyPropertyChangedEventArgs is 34.
Long Statement,OxyPlot.Wpf,LinearColorAxis,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Axes\LinearColorAxis.cs,SynchronizeProperties,The length of the statement  "		axis.Palette = this.GradientStops.Count > 2 ? Interpolate (this.GradientStops.ToList ()' this.PaletteSize) : new OxyPalette (); " is 127.
Long Statement,OxyPlot.Wpf,LinearColorAxis,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Axes\LinearColorAxis.cs,Interpolate,The length of the statement  "			palette.Add (OxyColor.Interpolate (start.Color.ToOxyColor ()' end.Color.ToOxyColor ()' (palettePositions - start.Offset) / (end.Offset - start.Offset))); " is 153.
Long Statement,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,ToBitmap,The length of the statement  "	return PngExporter.ExportToBitmap (this.ActualModel' (int)this.ActualWidth' (int)this.ActualHeight' this.Background.ToOxyColor ()); " is 131.
Long Statement,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,ToXaml,The length of the statement  "	return XamlExporter.ExportToString (this.ActualModel' this.ActualWidth' this.ActualHeight' this.Background.ToOxyColor ()); " is 122.
Long Statement,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,DoCopy,The length of the statement  "	var bitmap = PngExporter.ExportToBitmap (this.ActualModel' (int)this.ActualWidth' (int)this.ActualHeight' background.ToOxyColor ()); " is 132.
Long Statement,OxyPlot.Wpf,Keyboard,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Utilities\Keyboard.cs,GetModifierKeys,The length of the statement  "	if (System.Windows.Input.Keyboard.IsKeyDown (Key.LeftShift) || System.Windows.Input.Keyboard.IsKeyDown (Key.RightShift)) { " is 122.
Long Statement,OxyPlot.Wpf,Keyboard,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Utilities\Keyboard.cs,GetModifierKeys,The length of the statement  "	if (System.Windows.Input.Keyboard.IsKeyDown (Key.LeftCtrl) || System.Windows.Input.Keyboard.IsKeyDown (Key.RightCtrl)) { " is 120.
Long Statement,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,OnApplyTemplate,The length of the statement  "		throw new InvalidOperationException (string.Format ("The TrackerControl template must contain a content container with name +'{0}'"' PartContentcontainer)); " is 156.
Long Statement,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,OnApplyTemplate,The length of the statement  "		throw new InvalidOperationException (string.Format ("The TrackerControl template must contain a Path with name +'{0}'"' PartPath)); " is 131.
Long Statement,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,OnApplyTemplate,The length of the statement  "		throw new InvalidOperationException (string.Format ("The TrackerControl template must contain a ContentPresenter with name +'{0}'"' PartContent)); " is 146.
Long Statement,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The length of the statement  "	this.path.Data = this.ShowPointer ? this.CreatePointerBorderGeometry (ha' va' contentWidth' contentHeight' out margin) : this.CreateBorderGeometry (ha' va' contentWidth' contentHeight' out margin); " is 197.
Long Statement,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreateBorderGeometry,The length of the statement  "	margin = new Thickness (ha == HorizontalAlignment.Left ? m : 0' va == VerticalAlignment.Top ? m : 0' ha == HorizontalAlignment.Right ? m : 0' va == VerticalAlignment.Bottom ? m : 0); " is 182.
Long Statement,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawImage,The length of the statement  "	if (srcX == 0 && srcY == 0 && srcWidth == bitmapChain.PixelWidth && srcHeight == bitmapChain.PixelHeight)// ReSharper restore CompareOfFloatsByEqualityOperator " is 159.
Long Statement,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawImage,The length of the statement  "	RenderOptions.SetBitmapScalingMode (image' interpolate ? BitmapScalingMode.HighQuality : BitmapScalingMode.NearestNeighbor); " is 124.
Long Statement,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureTextByGlyphTypeface,The length of the statement  "	var typeface = new Typeface (new FontFamily (fontFamily)' FontStyles.Normal' GetFontWeight (fontWeight)' FontStretches.Normal); " is 127.
Long Statement,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,CreateAndAdd,The length of the statement  "		element.Clip = new RectangleGeometry (new Rect (this.clip.Value.X - clipOffsetX' this.clip.Value.Y - clipOffsetY' this.clip.Value.Width' this.clip.Value.Height)); " is 162.
Complex Conditional,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawImage,The conditional expression  "destWidth <= 0 || destHeight <= 0 || srcWidth <= 0 || srcHeight <= 0"  is complex.
Complex Conditional,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawImage,The conditional expression  "srcX == 0 && srcY == 0 && srcWidth == bitmapChain.PixelWidth && srcHeight == bitmapChain.PixelHeight"  is complex.
Magic Number,OxyPlot.Wpf,LinearColorAxis,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Axes\LinearColorAxis.cs,SynchronizeProperties,The following statement contains a magic number: if (this.GradientStops != null) {  	axis.Palette = this.GradientStops.Count > 2 ? Interpolate (this.GradientStops.ToList ()' this.PaletteSize) : new OxyPalette ();  }  
Magic Number,OxyPlot.Wpf,LinearColorAxis,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Axes\LinearColorAxis.cs,SynchronizeProperties,The following statement contains a magic number: axis.Palette = this.GradientStops.Count > 2 ? Interpolate (this.GradientStops.ToList ()' this.PaletteSize) : new OxyPalette ();  
Magic Number,OxyPlot.Wpf,LinearColorAxis,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Axes\LinearColorAxis.cs,Interpolate,The following statement contains a magic number: Debug.Assert (stops.Count >= 2' "Can't interpolate less than 2 gradient stops.");  
Magic Number,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,PlotView,The following statement contains a magic number: PaddingProperty.OverrideMetadata (typeof(PlotView)' new FrameworkPropertyMetadata (new Thickness (8)' AppearanceChanged));  
Magic Number,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,OnMouseUp,The following statement contains a magic number: if (this.ContextMenu != null) {  	if (Math.Abs (d) < 1e-8 && e.ChangedButton == MouseButton.Right) {  		// TODO: why is the data context not passed to the context menu??  		this.ContextMenu.DataContext = this.DataContext;  		this.ContextMenu.Visibility = Visibility.Visible;  		this.ContextMenu.IsOpen = true;  	}  	else {  		this.ContextMenu.Visibility = Visibility.Collapsed;  		this.ContextMenu.IsOpen = false;  	}  }  
Magic Number,OxyPlot.Wpf,PlotView,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PlotView.cs,OnMouseUp,The following statement contains a magic number: if (Math.Abs (d) < 1e-8 && e.ChangedButton == MouseButton.Right) {  	// TODO: why is the data context not passed to the context menu??  	this.ContextMenu.DataContext = this.DataContext;  	this.ContextMenu.Visibility = Visibility.Visible;  	this.ContextMenu.IsOpen = true;  }  else {  	this.ContextMenu.Visibility = Visibility.Collapsed;  	this.ContextMenu.IsOpen = false;  }  
Magic Number,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,PngExporter,The following statement contains a magic number: this.Width = 700;  
Magic Number,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,PngExporter,The following statement contains a magic number: this.Height = 400;  
Magic Number,OxyPlot.Wpf,PngExporter,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\PngExporter.cs,PngExporter,The following statement contains a magic number: this.Resolution = 96;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterHorizontally) {  	if (this.Position.X - (contentWidth / 2) < MarginLimit) {  		ha = HorizontalAlignment.Left;  	}  	if (this.Position.X + (contentWidth / 2) > canvasWidth - MarginLimit) {  		ha = HorizontalAlignment.Right;  	}  }  else {  	ha = this.Position.X < canvasWidth / 2 ? HorizontalAlignment.Left : HorizontalAlignment.Right;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterHorizontally) {  	if (this.Position.X - (contentWidth / 2) < MarginLimit) {  		ha = HorizontalAlignment.Left;  	}  	if (this.Position.X + (contentWidth / 2) > canvasWidth - MarginLimit) {  		ha = HorizontalAlignment.Right;  	}  }  else {  	ha = this.Position.X < canvasWidth / 2 ? HorizontalAlignment.Left : HorizontalAlignment.Right;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterHorizontally) {  	if (this.Position.X - (contentWidth / 2) < MarginLimit) {  		ha = HorizontalAlignment.Left;  	}  	if (this.Position.X + (contentWidth / 2) > canvasWidth - MarginLimit) {  		ha = HorizontalAlignment.Right;  	}  }  else {  	ha = this.Position.X < canvasWidth / 2 ? HorizontalAlignment.Left : HorizontalAlignment.Right;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.Position.X - (contentWidth / 2) < MarginLimit) {  	ha = HorizontalAlignment.Left;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.Position.X + (contentWidth / 2) > canvasWidth - MarginLimit) {  	ha = HorizontalAlignment.Right;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: ha = this.Position.X < canvasWidth / 2 ? HorizontalAlignment.Left : HorizontalAlignment.Right;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterVertically) {  	if (this.Position.Y - (contentHeight / 2) < MarginLimit) {  		va = VerticalAlignment.Top;  	}  	if (ha == HorizontalAlignment.Center) {  		va = VerticalAlignment.Bottom;  		if (this.Position.Y - contentHeight < MarginLimit) {  			va = VerticalAlignment.Top;  		}  	}  	if (va == VerticalAlignment.Center && this.Position.Y + (contentHeight / 2) > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  	if (va == VerticalAlignment.Top && this.Position.Y + contentHeight > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  }  else {  	va = this.Position.Y < canvasHeight / 2 ? VerticalAlignment.Top : VerticalAlignment.Bottom;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterVertically) {  	if (this.Position.Y - (contentHeight / 2) < MarginLimit) {  		va = VerticalAlignment.Top;  	}  	if (ha == HorizontalAlignment.Center) {  		va = VerticalAlignment.Bottom;  		if (this.Position.Y - contentHeight < MarginLimit) {  			va = VerticalAlignment.Top;  		}  	}  	if (va == VerticalAlignment.Center && this.Position.Y + (contentHeight / 2) > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  	if (va == VerticalAlignment.Top && this.Position.Y + contentHeight > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  }  else {  	va = this.Position.Y < canvasHeight / 2 ? VerticalAlignment.Top : VerticalAlignment.Bottom;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.CanCenterVertically) {  	if (this.Position.Y - (contentHeight / 2) < MarginLimit) {  		va = VerticalAlignment.Top;  	}  	if (ha == HorizontalAlignment.Center) {  		va = VerticalAlignment.Bottom;  		if (this.Position.Y - contentHeight < MarginLimit) {  			va = VerticalAlignment.Top;  		}  	}  	if (va == VerticalAlignment.Center && this.Position.Y + (contentHeight / 2) > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  	if (va == VerticalAlignment.Top && this.Position.Y + contentHeight > canvasHeight - MarginLimit) {  		va = VerticalAlignment.Bottom;  	}  }  else {  	va = this.Position.Y < canvasHeight / 2 ? VerticalAlignment.Top : VerticalAlignment.Bottom;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (this.Position.Y - (contentHeight / 2) < MarginLimit) {  	va = VerticalAlignment.Top;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: if (va == VerticalAlignment.Center && this.Position.Y + (contentHeight / 2) > canvasHeight - MarginLimit) {  	va = VerticalAlignment.Bottom;  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,UpdatePositionAndBorder,The following statement contains a magic number: va = this.Position.Y < canvasHeight / 2 ? VerticalAlignment.Top : VerticalAlignment.Bottom;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Bottom) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = 0;  	double y1 = height;  	margin = new Thickness (0' 0' 0' m);  	points = new[] {  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x2 + (m / 2)' y1)'  		new Point (x2' y1 + m)'  		new Point (x2 - (m / 2)' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Bottom) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = 0;  	double y1 = height;  	margin = new Thickness (0' 0' 0' m);  	points = new[] {  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x2 + (m / 2)' y1)'  		new Point (x2' y1 + m)'  		new Point (x2 - (m / 2)' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Bottom) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = 0;  	double y1 = height;  	margin = new Thickness (0' 0' 0' m);  	points = new[] {  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x2 + (m / 2)' y1)'  		new Point (x2' y1 + m)'  		new Point (x2 - (m / 2)' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x2 + (m / 2)' y1)'  	new Point (x2' y1 + m)'  	new Point (x2 - (m / 2)' y1)'  	new Point (x0' y1)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x2 + (m / 2)' y1)'  	new Point (x2' y1 + m)'  	new Point (x2 - (m / 2)' y1)'  	new Point (x0' y1)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Top) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (0' m' 0' 0);  	points = new[] {  		new Point (x0' y0)'  		new Point (x2 - (m / 2)' y0)'  		new Point (x2' 0)'  		new Point (x2 + (m / 2)' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Top) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (0' m' 0' 0);  	points = new[] {  		new Point (x0' y0)'  		new Point (x2 - (m / 2)' y0)'  		new Point (x2' 0)'  		new Point (x2 + (m / 2)' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Center && va == VerticalAlignment.Top) {  	double x0 = 0;  	double x1 = width;  	double x2 = (x0 + x1) / 2;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (0' m' 0' 0);  	points = new[] {  		new Point (x0' y0)'  		new Point (x2 - (m / 2)' y0)'  		new Point (x2' 0)'  		new Point (x2 + (m / 2)' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x0' y0)'  	new Point (x2 - (m / 2)' y0)'  	new Point (x2' 0)'  	new Point (x2 + (m / 2)' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x0' y0)'  	new Point (x2 - (m / 2)' y0)'  	new Point (x2' 0)'  	new Point (x2 + (m / 2)' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Center) {  	double x0 = m;  	double x1 = m + width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (m' 0' 0' 0);  	points = new[] {  		new Point (0' y2)'  		new Point (x0' y2 - (m / 2))'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y2 + (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Center) {  	double x0 = m;  	double x1 = m + width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (m' 0' 0' 0);  	points = new[] {  		new Point (0' y2)'  		new Point (x0' y2 - (m / 2))'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y2 + (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Center) {  	double x0 = m;  	double x1 = m + width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (m' 0' 0' 0);  	points = new[] {  		new Point (0' y2)'  		new Point (x0' y2 - (m / 2))'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y2 + (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (0' y2)'  	new Point (x0' y2 - (m / 2))'  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' y2 + (m / 2))  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (0' y2)'  	new Point (x0' y2 - (m / 2))'  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' y2 + (m / 2))  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Right && va == VerticalAlignment.Center) {  	double x0 = 0;  	double x1 = width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (0' 0' m' 0);  	points = new[] {  		new Point (x1 + m' y2)'  		new Point (x1' y2 + (m / 2))'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y2 - (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Right && va == VerticalAlignment.Center) {  	double x0 = 0;  	double x1 = width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (0' 0' m' 0);  	points = new[] {  		new Point (x1 + m' y2)'  		new Point (x1' y2 + (m / 2))'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y2 - (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Right && va == VerticalAlignment.Center) {  	double x0 = 0;  	double x1 = width;  	double y0 = 0;  	double y1 = height;  	double y2 = (y0 + y1) / 2;  	margin = new Thickness (0' 0' m' 0);  	points = new[] {  		new Point (x1 + m' y2)'  		new Point (x1' y2 + (m / 2))'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y2 - (m / 2))  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x1 + m' y2)'  	new Point (x1' y2 + (m / 2))'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y2 - (m / 2))  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (x1 + m' y2)'  	new Point (x1' y2 + (m / 2))'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' y0)'  	new Point (x1' y0)'  	new Point (x1' y2 - (m / 2))  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Top) {  	m *= 0.67;  	double x0 = m;  	double x1 = m + width;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (m' m' 0' 0);  	points = new[] {  		new Point (0' 0)'  		new Point (m * 2' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' m * 2)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Top) {  	m *= 0.67;  	double x0 = m;  	double x1 = m + width;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (m' m' 0' 0);  	points = new[] {  		new Point (0' 0)'  		new Point (m * 2' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' m * 2)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Top) {  	m *= 0.67;  	double x0 = m;  	double x1 = m + width;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (m' m' 0' 0);  	points = new[] {  		new Point (0' 0)'  		new Point (m * 2' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' m * 2)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: m *= 0.67;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (0' 0)'  	new Point (m * 2' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' m * 2)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: points = new[] {  	new Point (0' 0)'  	new Point (m * 2' y0)'  	new Point (x1' y0)'  	new Point (x1' y1)'  	new Point (x0' y1)'  	new Point (x0' m * 2)  };  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Right && va == VerticalAlignment.Top) {  	m *= 0.67;  	double x0 = 0;  	double x1 = width;  	double y0 = m;  	double y1 = m + height;  	margin = new Thickness (0' m' m' 0);  	points = new[] {  		new Point (x1 + m' 0)'  		new Point (x1' y0 + m)'  		new Point (x1' y1)'  		new Point (x0' y1)'  		new Point (x0' y0)'  		new Point (x1 - m' y0)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: m *= 0.67;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Left && va == VerticalAlignment.Bottom) {  	m *= 0.67;  	double x0 = m;  	double x1 = m + width;  	double y0 = 0;  	double y1 = height;  	margin = new Thickness (m' 0' 0' m);  	points = new[] {  		new Point (0' y1 + m)'  		new Point (x0' y1 - m)'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1)'  		new Point (x0 + m' y1)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: m *= 0.67;  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: if (ha == HorizontalAlignment.Right && va == VerticalAlignment.Bottom) {  	m *= 0.67;  	double x0 = 0;  	double x1 = width;  	double y0 = 0;  	double y1 = height;  	margin = new Thickness (0' 0' m' m);  	points = new[] {  		new Point (x1 + m' y1 + m)'  		new Point (x1 - m' y1)'  		new Point (x0' y1)'  		new Point (x0' y0)'  		new Point (x1' y0)'  		new Point (x1' y1 - m)  	};  }  
Magic Number,OxyPlot.Wpf,TrackerControl,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\Tracker\TrackerControl.cs,CreatePointerBorderGeometry,The following statement contains a magic number: m *= 0.67;  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,ShapesRenderContext,The following statement contains a magic number: this.BalancedLineDrawingThicknessLimit = 3.5;  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegments,The following statement contains a magic number: for (int i = 0; i + 1 < points.Count; i += 2) {  	if (path == null) {  		path = this.CreateAndAdd<Path> ();  		this.SetStroke (path' stroke' thickness' lineJoin' dashArray' 0' aliased);  		pathGeometry = new PathGeometry ();  	}  	var figure = new PathFigure {  		StartPoint = this.ToPoint (points [i]' aliased)'  		IsClosed = false  	};  	figure.Segments.Add (new LineSegment (this.ToPoint (points [i + 1]' aliased)' true) {  		IsSmoothJoin = false  	});  	pathGeometry.Figures.Add (figure);  	count++;  	// Must limit the number of figures' otherwise drawing errors...  	if (count > MaxFiguresPerGeometry || dashArray != null) {  		path.Data = pathGeometry;  		path = null;  		count = 0;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegments,The following statement contains a magic number: i += 2
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null || halign != HorizontalAlignment.Left || valign != VerticalAlignment.Top) {  	tb.Measure (new Size (1000' 1000));  	var size = tb.DesiredSize;  	if (maxSize != null) {  		if (size.Width > maxSize.Value.Width + 1e-3) {  			size.Width = Math.Max (maxSize.Value.Width' 0);  		}  		if (size.Height > maxSize.Value.Height + 1e-3) {  			size.Height = Math.Max (maxSize.Value.Height' 0);  		}  		tb.Width = size.Width;  		tb.Height = size.Height;  	}  	if (halign == HorizontalAlignment.Center) {  		dx = -size.Width / 2;  	}  	if (halign == HorizontalAlignment.Right) {  		dx = -size.Width;  	}  	if (valign == VerticalAlignment.Middle) {  		dy = -size.Height / 2;  	}  	if (valign == VerticalAlignment.Bottom) {  		dy = -size.Height;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: tb.Measure (new Size (1000' 1000));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: tb.Measure (new Size (1000' 1000));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null) {  	if (size.Width > maxSize.Value.Width + 1e-3) {  		size.Width = Math.Max (maxSize.Value.Width' 0);  	}  	if (size.Height > maxSize.Value.Height + 1e-3) {  		size.Height = Math.Max (maxSize.Value.Height' 0);  	}  	tb.Width = size.Width;  	tb.Height = size.Height;  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (maxSize != null) {  	if (size.Width > maxSize.Value.Width + 1e-3) {  		size.Width = Math.Max (maxSize.Value.Width' 0);  	}  	if (size.Height > maxSize.Value.Height + 1e-3) {  		size.Height = Math.Max (maxSize.Value.Height' 0);  	}  	tb.Width = size.Width;  	tb.Height = size.Height;  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (size.Width > maxSize.Value.Width + 1e-3) {  	size.Width = Math.Max (maxSize.Value.Width' 0);  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (size.Height > maxSize.Value.Height + 1e-3) {  	size.Height = Math.Max (maxSize.Value.Height' 0);  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (halign == HorizontalAlignment.Center) {  	dx = -size.Width / 2;  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: dx = -size.Width / 2;  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: if (valign == VerticalAlignment.Middle) {  	dy = -size.Height / 2;  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawText,The following statement contains a magic number: dy = -size.Height / 2;  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureText,The following statement contains a magic number: tb.Measure (new Size (1000' 1000));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureText,The following statement contains a magic number: tb.Measure (new Size (1000' 1000));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureTextSize,The following statement contains a magic number: return new OxySize (Math.Round (width * sizeInEm' 2)' Math.Round (lines * glyphTypeface.Height * sizeInEm' 2));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureTextSize,The following statement contains a magic number: return new OxySize (Math.Round (width * sizeInEm' 2)' Math.Round (lines * glyphTypeface.Height * sizeInEm' 2));  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegmentsByStreamGeometry,The following statement contains a magic number: for (int i = 0; i + 1 < points.Count; i += 2) {  	if (streamGeometry == null) {  		streamGeometry = new StreamGeometry ();  		streamGeometryContext = streamGeometry.Open ();  	}  	streamGeometryContext.BeginFigure (this.ToPoint (points [i]' aliased)' false' false);  	streamGeometryContext.LineTo (this.ToPoint (points [i + 1]' aliased)' true' false);  	count++;  	// Must limit the number of figures' otherwise drawing errors...  	if (count > MaxFiguresPerGeometry || dashArray != null) {  		streamGeometryContext.Close ();  		var path = this.CreateAndAdd<Path> ();  		this.SetStroke (path' stroke' thickness' lineJoin' dashArray' 0' aliased);  		path.Data = streamGeometry;  		streamGeometry = null;  		count = 0;  	}  }  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,DrawLineSegmentsByStreamGeometry,The following statement contains a magic number: i += 2
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,ToPixelAlignedPoint,The following statement contains a magic number: return new Point (0.5 + (int)pt.X' 0.5 + (int)pt.Y);  
Magic Number,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,ToPixelAlignedPoint,The following statement contains a magic number: return new Point (0.5 + (int)pt.X' 0.5 + (int)pt.Y);  
Missing Default,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,MeasureTextSize,The following switch statement is missing a default case: switch (ch) {  case '\n':  	lines++;  	if (lineWidth > width) {  		width = lineWidth;  	}  	lineWidth = 0;  	continue;  case '\t':  	continue;  }  
Missing Default,OxyPlot.Wpf,ShapesRenderContext,C:\repos\andreasjacobsen93_XamarinThirdpartySamples\oxyplot-develop\Source\OxyPlot.Wpf\RenderContexts\ShapesRenderContext.cs,SetStroke,The following switch statement is missing a default case: switch (lineJoin) {  case OxyPenLineJoin.Round:  	shape.StrokeLineJoin = PenLineJoin.Round;  	break;  case OxyPenLineJoin.Bevel:  	shape.StrokeLineJoin = PenLineJoin.Bevel;  	break;  // The default StrokeLineJoin is Miter  }  
