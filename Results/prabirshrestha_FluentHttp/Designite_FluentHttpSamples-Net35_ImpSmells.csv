Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FluentHttpSamples,Program,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\Program.cs,AttachRequestBodyAndUpdateHeader,Cyclomatic complexity of the method is 14
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 10
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,SerializeString,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,EscapeToJavascriptString,Cyclomatic complexity of the method is 10
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseObject,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseValue,Cyclomatic complexity of the method is 8
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseString,Cyclomatic complexity of the method is 18
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,Cyclomatic complexity of the method is 15
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,SerializeValue,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,SerializeString,Cyclomatic complexity of the method is 9
Complex Method,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,IsNumeric,Cyclomatic complexity of the method is 12
Complex Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 16
Complex Method,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,Cyclomatic complexity of the method is 16
Long Statement,FluentHttpSamples,Program,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\Program.cs,AttachRequestBodyAndUpdateHeader,The length of the statement  "                            sb.AppendFormat(CultureInfo.InvariantCulture' "{0}={1}"' FluentHttpRequest.UrlEncode(key)' FluentHttpRequest.UrlEncode(jsonValue)); " is 131.
Long Statement,FluentHttpSamples,Program,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\Program.cs,AttachRequestBodyAndUpdateHeader,The length of the statement  "                    sbMediaObject.AppendFormat("Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"{2}"' kvp.Key' mediaObject.FileName' MultiPartNewLine); " is 145.
Long Statement,FluentHttpSamples,Program,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\Program.cs,AttachRequestBodyAndUpdateHeader,The length of the statement  "                request.Body(body => body.Append(Encoding.UTF8.GetBytes(string.Concat(MultiPartNewLine' MultiPartFormPrefix' boundary' MultiPartFormPrefix' MultiPartNewLine)))); " is 161.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The length of the statement  "            return type == null ? jsonObject : (jsonSerializerStrategy ?? CurrentJsonSerializerStrategy).DeserializeObject(jsonObject' type); " is 129.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The length of the statement  "            return type == null ? jsonObject : (jsonSerializerStrategy ?? CurrentJsonSerializerStrategy).DeserializeObject(jsonObject' type); " is 129.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "            if (str.IndexOf("."' StringComparison.OrdinalIgnoreCase) != -1 || str.IndexOf("e"' StringComparison.OrdinalIgnoreCase) != -1) " is 125.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "                success = double.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 123.
Long Statement,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseNumber,The length of the statement  "                success = long.TryParse(new string(json' index' charLength)' NumberStyles.Any' CultureInfo.InvariantCulture' out number); " is 121.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The length of the statement  "                return typeof(IConvertible).IsAssignableFrom(type) ? Convert.ChangeType(value' type' CultureInfo.InvariantCulture) : value; " is 123.
Long Statement,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The length of the statement  "                return typeof(IConvertible).IsAssignableFrom(type) ? Convert.ChangeType(value' type' CultureInfo.InvariantCulture) : value; " is 123.
Long Statement,Reflection,ReflectionUtils,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,IsTypeGenericeCollectionInterface,The length of the statement  "                return (genericDefinition == typeof(IList<>) || genericDefinition == typeof(ICollection<>) || genericDefinition == typeof(IEnumerable<>)); " is 138.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,GetNewInstance,The length of the statement  "                    ConstructorInfo constructorInfo = type.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null); " is 153.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,GetNewInstance,The length of the statement  "                ConstructorInfo constructorInfo = type.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance' null' Type.EmptyTypes' null); " is 153.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,CreateGetHandler,The length of the statement  "                DynamicMethod dynamicGet = CreateDynamicMethod("Get" + fieldInfo.Name' fieldInfo.DeclaringType' new Type[] { typeof(object) }' fieldInfo.DeclaringType); " is 152.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,CreateSetHandler,The length of the statement  "                DynamicMethod dynamicSet = CreateDynamicMethod("Set" + fieldInfo.Name' null' new Type[] { typeof(object)' typeof(object) }' fieldInfo.DeclaringType); " is 149.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,CreateGetHandler,The length of the statement  "                DynamicMethod dynamicGet = CreateDynamicMethod("Get" + propertyInfo.Name' propertyInfo.DeclaringType' new Type[] { typeof(object) }' propertyInfo.DeclaringType); " is 161.
Long Statement,Reflection,CacheResolver,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,CreateSetHandler,The length of the statement  "                DynamicMethod dynamicSet = CreateDynamicMethod("Set" + propertyInfo.Name' null' new Type[] { typeof(object)' typeof(object) }' propertyInfo.DeclaringType); " is 155.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'"  is complex.
Complex Conditional,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The conditional expression  "json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is long && type == typeof(long)) || (value is double && type == typeof(double))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is double && type != typeof(double)) || (value is long && type != typeof(long))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is long && type == typeof(long)) || (value is double && type == typeof(double))"  is complex.
Complex Conditional,SimpleJson,PocoJsonSerializerStrategy,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,DeserializeObject,The conditional expression  "(value is double && type != typeof(double)) || (value is long && type != typeof(long))"  is complex.
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,EscapeToJavascriptString,The following statement contains a magic number: remainingLength >= 2
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 5;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'f' &&                      json[index + 1] == 'a' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 's' &&                      json[index + 4] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 5
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 't' &&                      json[index + 1] == 'r' &&                      json[index + 2] == 'u' &&                      json[index + 3] == 'e'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: index += 4;
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: json[index] == 'n' &&                      json[index + 1] == 'u' &&                      json[index + 2] == 'l' &&                      json[index + 3] == 'l'
Magic Number,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following statement contains a magic number: remainingLength >= 4
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,ParseValue,The following switch statement is missing a default case: switch (LookAhead(json' index))              {                  case TOKEN_STRING:                      return ParseString(json' ref index' ref success);                  case TOKEN_NUMBER:                      return ParseNumber(json' ref index' ref success);                  case TOKEN_CURLY_OPEN:                      return ParseObject(json' ref index' ref success);                  case TOKEN_SQUARED_OPEN:                      return ParseArray(json' ref index' ref success);                  case TOKEN_TRUE:                      NextToken(json' ref index);                      return true;                  case TOKEN_FALSE:                      NextToken(json' ref index);                      return false;                  case TOKEN_NULL:                      NextToken(json' ref index);                      return null;                  case TOKEN_NONE:                      break;              }
Missing Default,SimpleJson,SimpleJson,C:\research\architectureSmells\repos\prabirshrestha_FluentHttp\src\Samples\FluentHttpSamples-Net40\SimpleJson.cs,NextToken,The following switch statement is missing a default case: switch (c)              {                  case '{':                      return TOKEN_CURLY_OPEN;                  case '}':                      return TOKEN_CURLY_CLOSE;                  case '[':                      return TOKEN_SQUARED_OPEN;                  case ']':                      return TOKEN_SQUARED_CLOSE;                  case ''':                      return TOKEN_COMMA;                  case '"':                      return TOKEN_STRING;                  case '0':                  case '1':                  case '2':                  case '3':                  case '4':                  case '5':                  case '6':                  case '7':                  case '8':                  case '9':                  case '-':                      return TOKEN_NUMBER;                  case ':':                      return TOKEN_COLON;              }
