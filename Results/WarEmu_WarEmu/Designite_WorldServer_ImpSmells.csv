Implementation smell,Namespace,Class,File,Method,Description
Long Method,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The method has 120 lines of code.
Long Method,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The method has 101 lines of code.
Long Method,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The method has 117 lines of code.
Complex Method,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacterInfoStats,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,DeleteChar,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,BuildCharacters,Cyclomatic complexity of the method is 10
Complex Method,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,Cyclomatic complexity of the method is 10
Complex Method,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,Cyclomatic complexity of the method is 30
Complex Method,WorldServer,GtoupHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\GroupHandlers.cs,F_GROUP_COMMAND,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,Cyclomatic complexity of the method is 16
Complex Method,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,Cyclomatic complexity of the method is 17
Complex Method,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,Cyclomatic complexity of the method is 15
Complex Method,WorldServer,AbilityInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityInterface.cs,UpdateAbilities,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityHandlers,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityInfo,Cyclomatic complexity of the method is 17
Complex Method,WorldServer,StealsActionPointsHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\StealsActionPointsHandler.cs,CanCast,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,Cyclomatic complexity of the method is 10
Complex Method,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,CanCast,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,Update,Cyclomatic complexity of the method is 17
Complex Method,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,GetNextTarget,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,CanAttack,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,MailInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MailInterface.cs,BuildMail,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,Item,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Item.cs,BuildItem,Cyclomatic complexity of the method is 10
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,Load,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanUse,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,Cyclomatic complexity of the method is 16
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,MoveSlot,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,MoveSlot,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GenerateAutoSlot,Cyclomatic complexity of the method is 20
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CreateItem,Cyclomatic complexity of the method is 12
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,HandleTrade,Cyclomatic complexity of the method is 13
Complex Method,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,Trade,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,Cyclomatic complexity of the method is 10
Complex Method,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleInteract,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,DoneQuest,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleEvent,Cyclomatic complexity of the method is 20
Complex Method,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,UpdateRange,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GeneratePQuestObjective,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,Cyclomatic complexity of the method is 14
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadLoots,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadGameObjectLoots,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,BuyItemVendor,Cyclomatic complexity of the method is 9
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,Cyclomatic complexity of the method is 20
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,Cyclomatic complexity of the method is 11
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadQuestsRelation,Cyclomatic complexity of the method is 17
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,RemoveDoubleSpawns,Cyclomatic complexity of the method is 16
Complex Method,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadScripts,Cyclomatic complexity of the method is 16
Complex Method,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,Cyclomatic complexity of the method is 13
Complex Method,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,Cyclomatic complexity of the method is 32
Complex Method,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,CheckInit,Cyclomatic complexity of the method is 8
Complex Method,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,Cyclomatic complexity of the method is 16
Long Parameter List,WorldServer,GmCommandHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,GmCommandHandler,The method has 6 parameters. Parameters: Name' Handler' Handlers' GmLevel' ValueCount' Description
Long Parameter List,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,Ability,The method has 10 parameters. Parameters: Interface' Parent' Info' Caster' IsBuff' Px' Py' Pz' ZoneId' OverrideHandler
Long Parameter List,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,Ability,The method has 6 parameters. Parameters: Interface' Parent' Info' Caster' IsBuff' OverrideHandler
Long Parameter List,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellEffect,The method has 5 parameters. Parameters: Caster' Target' RealDamage' Damage' Ability
Long Parameter List,WorldServer,AbilityInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityInterface.cs,StartCast,The method has 5 parameters. Parameters: AbilityID' Px' Py' Pz' ZoneId
Long Parameter List,WorldServer,AbilityInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityInterface.cs,Cast,The method has 5 parameters. Parameters: Info' Px' Py' Pz' ZoneId
Long Parameter List,WorldServer,Item,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Item.cs,BuildItem,The method has 5 parameters. Parameters: Out' Itm' Info' SlotId' Count
Long Parameter List,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanUse,The method has 7 parameters. Parameters: Info' Plr' IgnoreLevel' IgnoreSkills' IgnoreRace' IgnoreCareer' IgnoreRenown
Long Parameter List,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,FollowUnit,The method has 5 parameters. Parameters: Target' MinDist' MaxDist' Speed' Form
Long Parameter List,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,BuildPlayerInfo,The method has 7 parameters. Parameters: Out' CharId' Name' Online' Level' Career' Zone
Long Parameter List,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,CreateGameObject,The method has 5 parameters. Parameters: Entry' ZoneId' Px' Py' Pz
Long Parameter List,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,CreateCreature,The method has 5 parameters. Parameters: Entry' ZoneId' Px' Py' Pz
Long Parameter List,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The method has 6 parameters. Parameters: ZoneID' XZone' YZone' X' Y' Z
Long Parameter List,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The method has 7 parameters. Parameters: ZoneID' PinX' PinY' PinZ' WorldX' WorldY' WorldZ
Long Parameter List,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,SetPosition,The method has 5 parameters. Parameters: PinX' PinY' PinZ' Head' SendState
Long Parameter List,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,GetPlayers,The method has 6 parameters. Parameters: Name' GuildName' Career' ZoneId' MinLevel' MaxLevel
Long Parameter List,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetPosition,The method has 5 parameters. Parameters: PinX' PinY' PinZ' Head' SendState
Long Parameter List,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Teleport,The method has 5 parameters. Parameters: ZoneID' WorldX' WorldY' WorldZ' WorldO
Long Parameter List,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Teleport,The method has 5 parameters. Parameters: NewZone' WorldX' WorldY' WorldZ' WorldO
Long Parameter List,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The method has 5 parameters. Parameters: Plr' TargetX' TargetY' TargetZ' MovementType
Long Statement,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacters,The length of the statement  "            List<Characters_influence> Influences = Database.SelectAllObjects<Characters_influence>() as List<Characters_influence>; " is 120.
Long Statement,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacter,The length of the statement  "                Char.Influences = Database.SelectObjects<Characters_influence>("CharacterId=" + Char.CharacterId) as List<Characters_influence>; " is 128.
Long Statement,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,RemoveCharacter,The length of the statement  "                    Program.AcctMgr.UpdateRealmCharacters(Program.Rm.RealmId' (uint)CharMgr.Database.GetObjectCount<Character>(" Realm=1")' (uint)CharMgr.Database.GetObjectCount<Character>(" Realm=2")); " is 182.
Long Statement,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,Load,The length of the statement  "                Offset = new Bitmap(Program.Config.ZoneFolder + "zone" + String.Format("{0:000}"' ZoneID) + "/offset.png"); // /zones/zone003/offset.png " is 136.
Long Statement,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,Load,The length of the statement  "                Terrain = new Bitmap(Program.Config.ZoneFolder + "zone" + String.Format("{0:000}"' ZoneID) + "/terrain.png"); // /zones/zone003/offset.png " is 138.
Long Statement,WorldServer,CommandMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CommandMgr.cs,PlayerWisp,The length of the statement  "            if (Receiver == null || !Receiver.IsInWorld() || (Plr.GmLevel == 0 && Receiver.GmLevel == 0 && !Program.Config.ChatBetweenRealms && Plr.Realm != Receiver.Realm)) " is 161.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,DecodeCommand,The length of the statement  "                    Plr.SendMessage(0' ""' "Invalid Arguments Count : " + Handler.Description' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 123.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ReloadItems,The length of the statement  "            Plr.SendMessage(0' "Server"' "Items Loaded : " + WorldMgr._Item_Info.Count' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 124.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchNpc,The length of the statement  "            List<Creature_proto> L = WorldMgr.Database.SelectObjects<Creature_proto>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<Creature_proto>; " is 163.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchNpc,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.Entry + "'Name:" + proto.Name + "'Faction:" + proto.Faction + "'Flag:" + proto.Flag + "'Icon:" + proto.Icone + "'Model:" + proto.Model1 + "'Script:" + proto.ScriptName' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 254.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchGameObject,The length of the statement  "            List<GameObject_proto> L = WorldMgr.Database.SelectObjects<GameObject_proto>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<GameObject_proto>; " is 169.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchGameObject,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.Entry + "'Name:" + proto.Name + "'Faction:" + proto.Faction + "'Scale:" + proto.Scale + "'Model:" + proto.DisplayID + "'Script:" + proto.ScriptName' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 234.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchItem,The length of the statement  "            List<Item_Info> L = WorldMgr.Database.SelectObjects<Item_Info>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<Item_Info>; " is 148.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchItem,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.Entry + "'Name:" + proto.Name + "'Type:"+proto.Type +"'Race:" + proto.Race + "'Career:" + proto.Career + "'Armor:" + proto.Armor + "'Speed:" + proto.Speed + "'Script:" + proto.ScriptName' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 273.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchAbility,The length of the statement  "            List<Ability_Info> L = WorldMgr.Database.SelectObjects<Ability_Info>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<Ability_Info>; " is 157.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchAbility,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.Entry + "'Name:" + proto.Name + "'Ap:" + proto.ApCost + "'Career:" + proto.CareerLine + "'Cast:" + proto.CastTime + "'Cooldown:" + proto.Cooldown + "'Rank:" + proto.MinimumRank + "'Handler:" + proto.HandlerName' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 297.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchZone,The length of the statement  "            List<Zone_Info> L = WorldMgr.Database.SelectObjects<Zone_Info>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<Zone_Info>; " is 148.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchZone,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.ZoneId + "'Name:" + proto.Name + "'X:" + proto.OffX + "'Y:" + proto.OffY + "'Region:" + proto.Region + "'Level:" + proto.MinLevel + "'Price:" + proto.Price + "'Tier:" + proto.Tier' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 266.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchQuest,The length of the statement  "            List<Quest> L = WorldMgr.Database.SelectObjects<Quest>("Name Like '%" + WorldMgr.Database.Escape(Str) + "%' LIMIT 0'30") as List<Quest>; " is 136.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,SearchQuest,The length of the statement  "                    Plr.SendMessage(0' ""' "ID:" + proto.Entry + "'Name:" + proto.Name + "'Level:" + proto.Level + "'Objectives:" + proto.Objectives.Count + "'Prev:" + proto.PrevQuest + "'Xp:" + proto.Xp + "'Rewars:" + proto.Rewards.Count + "'Type:" + proto.Type' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 292.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,Invinsible,The length of the statement  "                Obj.GetPlayer().SendMessage(0' "Invinsibility : " + Obj.GetUnit().IsInvinsible' ""' SystemData.ChatLogFilters.CHATLOGFILTERS_CITY_ANNOUNCE); " is 140.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,Gps,The length of the statement  "            Pos += "'Wh=" + Plr._Value.WorldO + "'Ph=" + Plr.Heading + "'HeightMap=" + ClientFileMgr.GetHeight(Plr.Zone.ZoneId' Plr.X' Plr.Y); " is 130.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,Gps,The length of the statement  "                Plr.SendMessage(0' ""' "2Dist=" + Plr.GetRealDistance(Obj) + "'Dist=" + Plr.GetDistanceTo(Obj)' SystemData.ChatLogFilters.CHATLOGFILTERS_EMOTE); " is 144.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,EquipList,The length of the statement  "                    Plr.SendMessage(0' ""' "<" + i + "'" + Obj.ItmInterface.Items[i].ModelId + ">"' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 128.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ChapterSave,The length of the statement  "            Plr.SendMessage(Plr' "Saved [" + Info.Name + "] to '" + Plr.X + "'''" + Plr.Y + "'"' SystemData.ChatLogFilters.CHATLOGFILTERS_SAY); " is 131.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcMoveWaypoint,The length of the statement  "                Plr.SendMessage(0' "Server"' "Invalid Waypoint ID. Use .waypoint list"' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 120.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcRemoveWaypoint,The length of the statement  "                Plr.SendMessage(0' "Server"' "Invalid Waypoint ID. Use .waypoint list"' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 120.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcInfoWaypoint,The length of the statement  "            Message += "Current = " + IA.CurrentWaypointID + "'NextTime=" + (IA.NextAllowedMovementTime - TCPManager.GetTimeStampMS()) + "'Started=" + IA.Started + "'Ended=" + IA.Ended + "'Back=" + IA.IsWalkingBack + "'Type=" + IA.CurrentWaypointType + "'State=" + IA.State; " is 262.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcSpawn,The length of the statement  "                    Plr.SendMessage(0' "Server"' "Npc Entry is valid but npc stats are empty. No sniff data about this npc"' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 153.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcSpawn,The length of the statement  "            Log.Command = "SPAWN CREATURE " + Spawn.Entry + " " + Spawn.Guid + " AT " + Spawn.ZoneId + " " + Plr._Value.WorldX + " " + Plr._Value.WorldY; " is 141.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcRemove,The length of the statement  "                Log.Command = "REMOVE CREATURE " + Spawn.Entry + " " + Spawn.Guid + " AT " + Spawn.ZoneId + " " + Spawn.WorldX + " " + Spawn.WorldY; " is 132.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcRemove,The length of the statement  "            Plr.SendMessage(0' "Server"' "Npc Removed : " + Obj.GetCreature().Spawn.Guid' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 126.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ReloadCreaturesAndItems,The length of the statement  "            Plr.SendMessage(0' "Server"' "NPC Items Loaded : " + WorldMgr._CreatureItems.Count' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 132.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ReloadCreaturesAndItems,The length of the statement  "            Plr.SendMessage(0' "Server"' "NPC's Loaded : " + WorldMgr.CreatureProtos.Count' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 128.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ReloadCreaturesAndItems,The length of the statement  "                        Plr.SendMessage(0' "Server"' "NPC with Entry " + Crea.Entry + " not found in CreatureProtos' removing NPC"' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 156.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ReloadCreaturesAndItems,The length of the statement  "            Plr.SendMessage(0' "Server"' "NPC spawn's Loaded : " + WorldMgr.CreatureSpawns.Count' SystemData.ChatLogFilters.CHATLOGFILTERS_SHOUT); " is 134.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,TeleportAppear,The length of the statement  "            Plr.Teleport(Target.Zone' (uint)Target.WorldPosition.X' (uint)Target.WorldPosition.Y' (UInt16)Target.WorldPosition.Z' 0); " is 121.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,TeleportAppear,The length of the statement  "            Log.Command = "APPEAR PLAYER " + Target.Name + " TO " + Target.Zone.ZoneId + " " + Target._Value.WorldX + " " + Target._Value.WorldY; " is 133.
Long Statement,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,TeleportSummon,The length of the statement  "            Log.Command = "SUMMON PLAYER " + Target.Name + " TO " + Plr.Zone.ZoneId + " " + Plr._Value.WorldX + " " + Plr._Value.WorldY; " is 124.
Long Statement,WorldServer,CSharpScriptCompiler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ScriptsManager.cs,GetScriptFiles,The length of the statement  "            return Directory.GetFiles(Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)' "Scripts")' "*"' SearchOption.AllDirectories).Where(f => f.ToLower().EndsWith(".cs")); " is 208.
Long Statement,WorldServer,CSharpScriptCompiler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ScriptsManager.cs,CompileScript,The length of the statement  "            foreach (System.Reflection.AssemblyName an in System.Reflection.Assembly.GetExecutingAssembly().GetReferencedAssemblies()) " is 122.
Long Statement,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_CREATE_CHARACTER,The length of the statement  "                        Program.AcctMgr.UpdateRealmCharacters(Program.Rm.RealmId' (uint)CharMgr.Database.GetObjectCount<Character>(" Realm=1")' (uint)CharMgr.Database.GetObjectCount<Character>(" Realm=2")); " is 182.
Long Statement,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The length of the statement  "            //Log.Success("Movement after"' "X=" + X + "'Y=" + Y + "'Z=" + Z + "'ztemp = " + z_temp + "'" + Type + "'" + Unk1 + "'" + CombatByte); " is 134.
Long Statement,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_FLIGHT,The length of the statement  "                cclient.Plr.Teleport(Taxis[FlyID - 1].ZoneID' Taxis[FlyID - 1].WorldX' Taxis[FlyID - 1].WorldY' Taxis[FlyID - 1].WorldZ' Taxis[FlyID - 1].WorldO); " is 146.
Long Statement,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityHandlers,The length of the statement  "                    IAbilityTypeAttribute[] attrib = type.GetCustomAttributes(typeof(IAbilityTypeAttribute)' true) as IAbilityTypeAttribute[]; " is 122.
Long Statement,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityInfo,The length of the statement  "                        Log.Info("AbilityMgr"' "Disabled Ability : " + Info.Entry + "'" + Info.Name + "' Range=" + Stat.GetRadius(0) + "'Damages=" + Stat.GetDamage(0)); " is 144.
Long Statement,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,OnReceiveDamages,The length of the statement  "                //Attacker.SendCastEffect(Ab.Caster' (ushort)(Spell != null ? Spell.Info.Entry : 0)' GameData.CombatEvent.COMBATEVENT_ABSORB' 100); " is 131.
Long Statement,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,OnReceiveDamages,The length of the statement  "                //Attacker.SendCastEffect(Ab.Caster' (ushort)(Spell != null ? Spell.Info.Entry : 0)' GameData.CombatEvent.COMBATEVENT_ABSORB' 100); " is 131.
Long Statement,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The length of the statement  "                if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets " is 120.
Long Statement,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,Start,The length of the statement  "                InvisibleObject = Ab.Caster.Region.CreateGameObject(23' TargetHandler.Target.Zone.ZoneId' (ushort)TargetHandler.Target.X' (ushort)TargetHandler.Target.Y' (ushort)TargetHandler.Target.Z); " is 186.
Long Statement,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ReturnToSpawn,The length of the statement  "            Crea.SetPosition((UInt16)Crea.SpawnPoint.X' (UInt16)Crea.SpawnPoint.Y' (UInt16)Crea.SpawnPoint.Z' Crea.SpawnHeading' true); " is 123.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The length of the statement  "                    else if ((ISlot == EquipSlot.POCHE_1 || ISlot == EquipSlot.POCHE_2) && (ESlot == EquipSlot.POCHE_1 && ESlot == EquipSlot.POCHE_2)) " is 130.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The length of the statement  "                    else if ((ISlot >= EquipSlot.TROPHEE_1 && ISlot <= EquipSlot.TROPHEE_5) && (ESlot >= EquipSlot.TROPHEE_1 && ESlot <= EquipSlot.TROPHEE_5)) " is 138.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The length of the statement  "                    else if ((ISlot >= EquipSlot.BIJOUX_1 && ISlot <= EquipSlot.BIJOUX_4) && (ESlot >= EquipSlot.BIJOUX_1 && ESlot <= EquipSlot.BIJOUX_4)) " is 134.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GenerateAutoSlot,The length of the statement  "                if (ISlot >= EquipSlot.BIJOUX_1 && ISlot <= EquipSlot.BIJOUX_4) // Un bijoux a placer' on prend un emplacement de bijoux vide " is 125.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CreateItem,The length of the statement  "                UInt16 ToCreate = (UInt16)Math.Ceiling((decimal)(Count / Info.MaxStack) + 1); // Nombre d'objet qui doit être créé Count/MaxStack " is 129.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CreateItem,The length of the statement  "                        ToCreate = (UInt16)Math.Ceiling((decimal)(Count / Info.MaxStack) + 1); // On supprime le nombre stackable et on recalcul le nombre de slot necessaire " is 149.
Long Statement,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CreateItem,The length of the statement  "                //Log.Info("ItemsInterface"' "Count=" + Count + "'FreeSlot=" + TotalFreeSlot + "'ToCreate=" + ToCreate+"'CanStack="+CanStack); " is 126.
Long Statement,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,ArriveAtTarget,The length of the statement  "                _Owner.SetPosition((UInt16)TargetPosition.X' (UInt16)TargetPosition.Y' (UInt16)TargetPosition.Z' _Owner.Heading' false); " is 120.
Long Statement,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleInteract,The length of the statement  "            List<Quest> InProgress = Starter != null ? Starter.FindAll(info => Plr.QtsInterface.HasQuest(info.Entry) && !Plr.QtsInterface.HasDoneQuest(info.Entry)) : null; " is 159.
Long Statement,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,CanStartQuest,The length of the statement  "            if (HasQuest(Quest.Entry) || Quest.Level > (GetPlayer().Level+1) || (Quest.PrevQuest != 0 && !HasDoneQuest(Quest.PrevQuest))) " is 125.
Long Statement,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleEvent,The length of the statement  "                        if (Type == Objective_Type.QUEST_SPEACK_TO || Type == Objective_Type.QUEST_KILL_MOB || Type == Objective_Type.QUEST_PROTECT_UNIT) " is 129.
Long Statement,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,OnPlayerConnect,The length of the statement  "            Character_social Social = _Socials.Find(social => social != null && social.DistName.ToLower() == Sender.Name.ToLower()); " is 120.
Long Statement,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,OnPlayerLeave,The length of the statement  "            Character_social Social = _Socials.Find(social => social != null && social.DistName.ToLower() == Sender.Name.ToLower()); " is 120.
Long Statement,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,BuildPlayerInfo,The length of the statement  "            BuildPlayerInfo(ref Out' (UInt16)Plr._Value.CharacterId' Plr.Name' Plr.SocInterface.Anon ? false : true' Plr.Level' (UInt16)Plr._Info.Career' Plr._Value.ZoneId); " is 161.
Long Statement,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,SendFriend,The length of the statement  "            BuildPlayerInfo(ref Out' (uint)Plr._Info.CharacterId' Plr._Info.Name' online' Plr._Value.Level' Plr._Info.Career' Plr._Value.ZoneId); " is 133.
Long Statement,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,The length of the statement  "                                        Log.Info("WorldMgr"' "Creating Quest(" + Obj.Entry + ") Item : " + Obj.Item.Entry + "'  " + Obj.Item.Name + "| Adding Loot to : " + Proto.Name); " is 144.
Long Statement,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadChapters,The length of the statement  "                    GetRegionCell(Zone.Region' (ushort)((float)(Info.PinX / 4096) + Zone.OffX)' (ushort)((float)(Info.PinY / 4096) + Zone.OffY)).AddChapter(Info); " is 142.
Long Statement,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadPublicQuests,The length of the statement  "                GetRegionCell(Zone.Region' (ushort)((float)(Info.PinX / 4096) + Zone.OffX)' (ushort)((float)(Info.PinY / 4096) + Zone.OffY)).AddPQuest(Info); " is 141.
Long Statement,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The length of the statement  "            AcctMgr.UpdateRealmCharacters(Rm.RealmId' (uint)CharMgr.Database.GetObjectCount<Character>("Realm=1")' (uint)CharMgr.Database.GetObjectCount<Character>("Realm=2")); " is 164.
Long Statement,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The length of the statement  "            if (Spawn.Title == 0 && Spawn.Icone == 0 && Spawn.Proto.Title == 0 && Spawn.Icone == 0 && Spawn.Emote == 0 && Spawn.Proto.FinishingQuests == null && Spawn.Proto.StartingQuests == null) " is 184.
Long Statement,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,ToString,The length of the statement  "            return "SpawnId=" + Spawn.Entry + "'Entry=" + Spawn.Entry + "'Name=" + Name + "'Level=" + Level + "'Faction=" + Faction + "'Emote=" + Spawn.Emote + "AI:" + AiInterface.State + "'Position :" + base.ToString(); " is 208.
Long Statement,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,ToString,The length of the statement  "            return "SpawnId=" + Spawn.Guid + "'Entry=" + Spawn.Entry + "'Name=" + Name + "'Level=" + Level + "'Faction=" + Faction + "'Position :" + base.ToString(); " is 153.
Long Statement,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,ToString,The length of the statement  "            return string.Format("(OffX = {0}' OffY = {1}'Heading = {2}' Oid = {3}' Name= {4})"' XOffset.ToString()' YOffset.ToString()'Heading.ToString()' Oid.ToString()' Name) + base.ToString(); " is 184.
Long Statement,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,AddPlayer,The length of the statement  "                    CharMgr.Database.ExecuteNonQuery("UPDATE characters_value SET Online=1 WHERE CharacterId=" + Plr._Info.CharacterId + ";"); " is 122.
Long Statement,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,RemovePlayer,The length of the statement  "                    CharMgr.Database.ExecuteNonQuery("UPDATE characters_value SET Online=0 WHERE CharacterId=" + Plr._Info.CharacterId + ";"); " is 122.
Long Statement,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetDeath,The length of the statement  "            EvtInterface.AddEvent(AutomaticRespawnPlayer' Time * 1000' 1); // If the player don't resurrect. autoresurrect in 10 Minutes. " is 125.
Long Statement,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendInited,The length of the statement  "            Out.WriteHexStringBytes("00CA00000028D5BF1D7F0000000CF824000CAFC7051700020000000000080001001A000000000000084261646C616E6473000000"); " is 132.
Long Statement,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The length of the statement  "                SendState(Plr' (ushort)MvtInterface.TargetPosition.X' (ushort)MvtInterface.TargetPosition.Y' (ushort)MvtInterface.TargetPosition.Z' (byte)(MvtInterface.CurrentSpeed >= 50 ? 3 : 1)); " is 181.
Long Statement,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,CheckInit,The length of the statement  "                    string[] Files = Directory.GetFiles(Path.Combine(Directory.GetCurrentDirectory()' "Abilities/")' "*.txt"' SearchOption.TopDirectoryOnly); " is 137.
Complex Conditional,WorldServer,CommandMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CommandMgr.cs,PlayerWisp,The conditional expression  "Receiver == null || !Receiver.IsInWorld() || (Plr.GmLevel == 0 && Receiver.GmLevel == 0 && !Program.Config.ChatBetweenRealms && Plr.Realm != Receiver.Realm)"  is complex.
Complex Conditional,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The conditional expression  "zmod != 0 && zmod != 97 && zmod != 113 && zmod != 99 && zmod != 115"  is complex.
Complex Conditional,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,Cast,The conditional expression  "CustomValue != 0 || Ab.Info.Info.ApSec != 0 || Ab.Info.GetTime(0) == 0 || Ab.Info.GetDamage(1) != 0"  is complex.
Complex Conditional,WorldServer,SimpleHealHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\SimpleHealHandler.cs,Cast,The conditional expression  "CustomValue != 0 || Ab.Info.Info.ApSec != 0 || Ab.Info.GetTime(0) == 0 || Ab.Info.GetHeal(1) != 0"  is complex.
Complex Conditional,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The conditional expression  "Leader == null || Members.Count < 1 || (Members.Count == 1 && Leader == Members.First())"  is complex.
Complex Conditional,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The conditional expression  "(ISlot == EquipSlot.POCHE_1 || ISlot == EquipSlot.POCHE_2) && (ESlot == EquipSlot.POCHE_1 && ESlot == EquipSlot.POCHE_2)"  is complex.
Complex Conditional,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The conditional expression  "(ISlot >= EquipSlot.TROPHEE_1 && ISlot <= EquipSlot.TROPHEE_5) && (ESlot >= EquipSlot.TROPHEE_1 && ESlot <= EquipSlot.TROPHEE_5)"  is complex.
Complex Conditional,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The conditional expression  "(ISlot >= EquipSlot.BIJOUX_1 && ISlot <= EquipSlot.BIJOUX_4) && (ESlot >= EquipSlot.BIJOUX_1 && ESlot <= EquipSlot.BIJOUX_4)"  is complex.
Complex Conditional,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,MoveSlot,The conditional expression  "(IFrom == null && ITo != null) // Si le slot que je déplace est vide                  || (IFrom != null && ITo == null && IFrom.Info.MaxStack <= 1) // Si l'objet n'est pas stackable                  || (IFrom != null && ITo != null && IFrom.Info != ITo.Info)"  is complex.
Complex Conditional,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleInteract,The conditional expression  "Starter == null && Finisher == null && Text.Length <= 0 && InProgress == null"  is complex.
Complex Conditional,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,CanStartQuest,The conditional expression  "HasQuest(Quest.Entry) || Quest.Level > (GetPlayer().Level+1) || (Quest.PrevQuest != 0 && !HasDoneQuest(Quest.PrevQuest))"  is complex.
Complex Conditional,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,IsVisibleBForA,The conditional expression  "A == null || B == null || A.IsDisposed || B.IsDisposed"  is complex.
Complex Conditional,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,IsVisibleBForA,The conditional expression  "A == B || !A.IsActive || !B.IsActive || !B.IsVisible"  is complex.
Complex Conditional,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GetZoneFromOffsets,The conditional expression  "OffsetX >= Info.OffX && OffsetX < Info.OffX + 16                      && OffsetY >= Info.OffY && OffsetY < Info.OffY + 16"  is complex.
Complex Conditional,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The conditional expression  "Spawn.Title == 0 && Spawn.Icone == 0 && Spawn.Proto.Title == 0 && Spawn.Icone == 0 && Spawn.Emote == 0 && Spawn.Proto.FinishingQuests == null && Spawn.Proto.StartingQuests == null"  is complex.
Complex Conditional,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,Say,The conditional expression  "Plr.GmLevel != 0 || GetPlayer().GmLevel != 0 || Program.Config.ChatBetweenRealms || Plr.Realm == GetPlayer().Realm"  is complex.
Complex Conditional,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,SetPosition,The conditional expression  "PinX != X || PinY != Y || PinZ != Z || Head != Heading"  is complex.
Complex Conditional,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,GetPlayers,The conditional expression  "Plr.SocInterface.Hide                          || (Name.Length > 0 && !Plr.Name.ToLower().StartsWith(Name))                          || (Career != 0 && Career != Plr._Info.Career)                          || (ZoneId != 255 && Plr.Zone.ZoneId != ZoneId)                          || (Plr.Level < MinLevel)                          || (Plr.Level > MaxLevel)"  is complex.
Virtual Method Call from Constructor,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,Ability,The constructor "Ability" calls a virtual method "InitAbility".
Empty Catch Block,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,Stop,The method has an empty catch block.
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacterInfoStats,The following statement contains a magic number: PrevPrevious = Stats.Value.Find(info => info.Level == (byte)(i - 2) && info.StatId == StatId);
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacterInfoStats,The following statement contains a magic number: Current.StatValue = (ushort)(Previous.StatValue + 3);
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacterInfoStats,The following statement contains a magic number: Current.StatValue <= Previous.StatValue || Math.Abs(Current.StatValue - Previous.StatValue) > 40
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,LoadCharacterInfoStats,The following statement contains a magic number: i <= 40
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,GetCharacterInfoStats,The following statement contains a magic number: _CareerLevelStats.Add((ushort)((int)CareerLine << 8 + (int)Level)' Stats);
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,GetCharacterInfoStats,The following statement contains a magic number: !_CareerLevelStats.TryGetValue((ushort)((int)CareerLine << 8 + (int)Level)' out Stats)
Magic Number,WorldServer,CharMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\CharMgr.cs,BuildCharacters,The following statement contains a magic number: Out.Fill(0' 284);
Magic Number,WorldServer,MapPiece,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,IsOn,The following statement contains a magic number: Col.R != 255 && Col.G != 255 && Col.B != 255
Magic Number,WorldServer,MapPiece,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,IsOn,The following statement contains a magic number: Col.R != 255 && Col.G != 255 && Col.B != 255
Magic Number,WorldServer,MapPiece,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,IsOn,The following statement contains a magic number: Col.R != 255 && Col.G != 255 && Col.B != 255
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,LoadMapPieces,The following statement contains a magic number: Piece.PositionY = ushort.Parse(Datas[2]);
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,LoadMapPieces,The following statement contains a magic number: Piece.SizeX = ushort.Parse(Datas[3]);
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,LoadMapPieces,The following statement contains a magic number: Piece.SizeY = ushort.Parse(Datas[4]);
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,LoadInfluences,The following statement contains a magic number: Area.InfluenceId = ushort.Parse(Datas[2]);
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetWorldPiece,The following statement contains a magic number: PinX /= 64;
Magic Number,WorldServer,ClientZoneInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetWorldPiece,The following statement contains a magic number: PinY /= 64;
Magic Number,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: PinX = (int)((float)PinX / 64f);
Magic Number,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: PinY = (int)((float)PinY / 64f);
Magic Number,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: fZValue += iColor.R * 31;
Magic Number,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: fZValue *= 16;
Magic Number,WorldServer,HeighMapInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: return (int)fZValue-30;
Magic Number,WorldServer,ClientFileMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\ClientFileMgr.cs,GetHeight,The following statement contains a magic number: return Info.GetHeight(PinX' PinY) / 2;
Magic Number,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ModifySpeed,The following statement contains a magic number: Speed = 500;
Magic Number,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ModifySpeed,The following statement contains a magic number: Speed > 500 && Plr.GmLevel < 3
Magic Number,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,ModifySpeed,The following statement contains a magic number: Speed > 500 && Plr.GmLevel < 3
Magic Number,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,Kill,The following statement contains a magic number: Plr.GmLevel < 3
Magic Number,WorldServer,GmCommand,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\GmCommand.cs,NpcAddWaypoint,The following statement contains a magic number: Wp.WaitAtEndMS = 2000;
Magic Number,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,The following statement contains a magic number: switch (Menu.Menu)              {                  case 15: // Fermeture du loot                        return;                    case 13: // Récupération de tous les items                      if (Plr.ItmInterface.GetTotalFreeInventorySlot() < GetLootCount())                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_LOOT);                      else                      {                          for (byte i = 0; i < Loots.Count; ++i)                          {                              if (Loots[i] == null)                                  continue;                                TakeLoot(Plr' i);                          }                      }                        break;                    case 12: // Récupération d'un item                      TakeLoot(Plr' Menu.Num);                      break;              }
Magic Number,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,The following statement contains a magic number: switch (Menu.Menu)              {                  case 15: // Fermeture du loot                        return;                    case 13: // Récupération de tous les items                      if (Plr.ItmInterface.GetTotalFreeInventorySlot() < GetLootCount())                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_LOOT);                      else                      {                          for (byte i = 0; i < Loots.Count; ++i)                          {                              if (Loots[i] == null)                                  continue;                                TakeLoot(Plr' i);                          }                      }                        break;                    case 12: // Récupération d'un item                      TakeLoot(Plr' Menu.Num);                      break;              }
Magic Number,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,The following statement contains a magic number: switch (Menu.Menu)              {                  case 15: // Fermeture du loot                        return;                    case 13: // Récupération de tous les items                      if (Plr.ItmInterface.GetTotalFreeInventorySlot() < GetLootCount())                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_LOOT);                      else                      {                          for (byte i = 0; i < Loots.Count; ++i)                          {                              if (Loots[i] == null)                                  continue;                                TakeLoot(Plr' i);                          }                      }                        break;                    case 12: // Récupération d'un item                      TakeLoot(Plr' Menu.Num);                      break;              }
Magic Number,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,The following statement contains a magic number: Out.WriteByte(4);
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Loot.Info.MinRank > Corps.Level + 4 || Loot.Info.MinRenown > (Corps.Level + 4) * 2
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Loot.Info.MinRank > Corps.Level + 4 || Loot.Info.MinRenown > (Corps.Level + 4) * 2
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Loot.Info.MinRank > Corps.Level + 4 || Loot.Info.MinRenown > (Corps.Level + 4) * 2
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct = 0.01f;
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct = 100;
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct >= 100
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Interface != null && Pct != 100.0f
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct >= 100f || RandomMgr.Next(10000) < (Pct*100)
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct >= 100f || RandomMgr.Next(10000) < (Pct*100)
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: Pct >= 100f || RandomMgr.Next(10000) < (Pct*100)
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: UInt32 Money = (UInt32)(Corps.Level * (UInt32)7) + (Corps.Rank * (UInt32)50);
Magic Number,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following statement contains a magic number: UInt32 Money = (UInt32)(Corps.Level * (UInt32)7) + (Corps.Rank * (UInt32)50);
Magic Number,WorldServer,AuthentificationHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\AuthentificationHandlers.cs,F_CONNECT,The following statement contains a magic number: packet.Skip(8);
Magic Number,WorldServer,AuthentificationHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\AuthentificationHandlers.cs,F_CONNECT,The following statement contains a magic number: string Token = packet.GetString(80);
Magic Number,WorldServer,AuthentificationHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\AuthentificationHandlers.cs,F_CONNECT,The following statement contains a magic number: packet.Skip(21);
Magic Number,WorldServer,AuthentificationHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\AuthentificationHandlers.cs,F_CONNECT,The following statement contains a magic number: string Username = packet.GetString(23);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_CREATE_CHARACTER,The following statement contains a magic number: packet.Skip(2);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_CREATE_CHARACTER,The following statement contains a magic number: byte[] Traits = new byte[8];
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_CREATE_CHARACTER,The following statement contains a magic number: packet.Skip(7);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_CREATE_CHARACTER,The following statement contains a magic number: Name.Length > 2 && !CharMgr.NameIsUsed(Name)
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_CHARACTER,The following statement contains a magic number: Out.FillString(cclient._Account.Username' 21);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_CHARACTER,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_NAME,The following statement contains a magic number: string CharName = packet.GetString(30);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_NAME,The following statement contains a magic number: string UserName = packet.GetString(20);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_NAME,The following statement contains a magic number: Out.WriteString(CharName' 30);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DELETE_NAME,The following statement contains a magic number: Out.WriteString(UserName' 20);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DUMP_ARENAS_LARGE,The following statement contains a magic number: Out.Fill(0' 20);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DUMP_ARENAS_LARGE,The following statement contains a magic number: Out.WriteString("38699"' 5);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DUMP_ARENAS_LARGE,The following statement contains a magic number: Out.WriteString("38700"' 5);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_DUMP_ARENAS_LARGE,The following statement contains a magic number: Out.WriteString("0.0.0.0"' 20);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_RENAME_CHARACTER,The following statement contains a magic number: packet.Skip(3);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_RENAME_CHARACTER,The following statement contains a magic number: string OldName = packet.GetString(24);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_RENAME_CHARACTER,The following statement contains a magic number: string NewName = packet.GetString(24);
Magic Number,WorldServer,CharacterHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CharacterHandlers.cs,F_RENAME_CHARACTER,The following statement contains a magic number: NewName.Length > 2 && !CharMgr.NameIsUsed(NewName)
Magic Number,WorldServer,CombatHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\CombatHandlers.cs,F_INTERACT,The following statement contains a magic number: Obj.GetDistanceTo(cclient.Plr) > 20
Magic Number,WorldServer,GtoupHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\GroupHandlers.cs,F_GROUP_COMMAND,The following statement contains a magic number: switch (State)              {                  case 2: // Accept invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.AcceptInvitation();                      break;                  case 6: // Decline invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.DeclineInvitation();                      break;                  case 3: // Leave group                      if (Plr.GetGroup() == null)                          return;                      Plr.GetGroup().RemoveMember(Plr);                      Plr.SetGroup(null);                      break;                  case 17: // Make main                      break;                  default:                      Log.Error("GroupHandler"' "Unsupported type: " + State);                      break;              }
Magic Number,WorldServer,GtoupHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\GroupHandlers.cs,F_GROUP_COMMAND,The following statement contains a magic number: switch (State)              {                  case 2: // Accept invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.AcceptInvitation();                      break;                  case 6: // Decline invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.DeclineInvitation();                      break;                  case 3: // Leave group                      if (Plr.GetGroup() == null)                          return;                      Plr.GetGroup().RemoveMember(Plr);                      Plr.SetGroup(null);                      break;                  case 17: // Make main                      break;                  default:                      Log.Error("GroupHandler"' "Unsupported type: " + State);                      break;              }
Magic Number,WorldServer,GtoupHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\GroupHandlers.cs,F_GROUP_COMMAND,The following statement contains a magic number: switch (State)              {                  case 2: // Accept invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.AcceptInvitation();                      break;                  case 6: // Decline invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.DeclineInvitation();                      break;                  case 3: // Leave group                      if (Plr.GetGroup() == null)                          return;                      Plr.GetGroup().RemoveMember(Plr);                      Plr.SetGroup(null);                      break;                  case 17: // Make main                      break;                  default:                      Log.Error("GroupHandler"' "Unsupported type: " + State);                      break;              }
Magic Number,WorldServer,GtoupHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\GroupHandlers.cs,F_GROUP_COMMAND,The following statement contains a magic number: switch (State)              {                  case 2: // Accept invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.AcceptInvitation();                      break;                  case 6: // Decline invitation                      if (Plr.Invitation == null)                          return;                      Plr.Invitation.DeclineInvitation();                      break;                  case 3: // Leave group                      if (Plr.GetGroup() == null)                          return;                      Plr.GetGroup().RemoveMember(Plr);                      Plr.SetGroup(null);                      break;                  case 17: // Make main                      break;                  default:                      Log.Error("GroupHandler"' "Unsupported type: " + State);                      break;              }
Magic Number,WorldServer,InterfaceHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InterfaceHandlers.cs,F_INTERFACE_COMMAND,The following statement contains a magic number: switch (CommandId)              {                    case 1: // ????                      {                      } break;                    case 2: // Resurrect Button                      {                          cclient.Plr.PreRespawnPlayer();                      } break;                    case 10: // Talisman Fuse                      {                      } break;                }
Magic Number,WorldServer,InterfaceHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InterfaceHandlers.cs,F_INTERFACE_COMMAND,The following statement contains a magic number: switch (CommandId)              {                    case 1: // ????                      {                      } break;                    case 2: // Resurrect Button                      {                          cclient.Plr.PreRespawnPlayer();                      } break;                    case 10: // Talisman Fuse                      {                      } break;                }
Magic Number,WorldServer,InventoryHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InventoryHandlers.cs,F_BAG_INFO,The following statement contains a magic number: switch (Type)              {                  case 3: // Toggle Pvp                      Plr.CbtInterface.TurnPvp();                      break;                    case 16: // Buy more bag space                      byte Price = packet.GetUint8();                      if (!Plr.ItmInterface.HasMaxBag())                      {                          if (Plr.HaveMoney(Plr.ItmInterface.GetBagPrice()))                          {                              if (Plr.RemoveMoney(Plr.ItmInterface.GetBagPrice()))                              {                                  ++Plr.ItmInterface.BagBuy;                                  Plr.ItmInterface.SendMaxInventory(Plr);                              }                          }                      }                      break;              }
Magic Number,WorldServer,InventoryHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InventoryHandlers.cs,F_BAG_INFO,The following statement contains a magic number: switch (Type)              {                  case 3: // Toggle Pvp                      Plr.CbtInterface.TurnPvp();                      break;                    case 16: // Buy more bag space                      byte Price = packet.GetUint8();                      if (!Plr.ItmInterface.HasMaxBag())                      {                          if (Plr.HaveMoney(Plr.ItmInterface.GetBagPrice()))                          {                              if (Plr.RemoveMoney(Plr.ItmInterface.GetBagPrice()))                              {                                  ++Plr.ItmInterface.BagBuy;                                  Plr.ItmInterface.SendMaxInventory(Plr);                              }                          }                      }                      break;              }
Magic Number,WorldServer,InventoryHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InventoryHandlers.cs,F_USE_ITEM,The following statement contains a magic number: Plr.DealHeal(Plr' (uint)item.Info.MinRank * 100);
Magic Number,WorldServer,InventoryHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InventoryHandlers.cs,F_USE_ITEM,The following statement contains a magic number: item.Info.Type == 31 && item.Info.ScriptName == "HealthPotion"
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following statement contains a magic number: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: packet.Size < 10
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Heading /= 8;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: X /= 2;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Y /= 2;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: z_temp += 65535;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: zmod != 0 && zmod != 97 && zmod != 113 && zmod != 99 && zmod != 115
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: zmod != 0 && zmod != 97 && zmod != 113 && zmod != 99 && zmod != 115
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: zmod != 0 && zmod != 97 && zmod != 113 && zmod != 99 && zmod != 115
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: zmod != 0 && zmod != 97 && zmod != 113 && zmod != 99 && zmod != 115
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr.LastCX > 12288 && X < 4096
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr.LastCX > 12288 && X < 4096
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr.LastCY > 24576 && Y < 8192
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr.LastCY > 24576 && Y < 8192
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Heading /= 2;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: z_temp /= 16;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: z_temp += 12288;
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr._ZoneMgr.ZoneId == 161 || Plr._ZoneMgr.ZoneId == 162
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: Plr._ZoneMgr.ZoneId == 161 || Plr._ZoneMgr.ZoneId == 162
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_STATE2,The following statement contains a magic number: CombatByte >= 50 && CombatByte < 0x92 || CombatByte == 0xDF
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_ENTER_FULL,The following statement contains a magic number: string CharName = packet.GetString(24);
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_ENTER_FULL,The following statement contains a magic number: packet.Skip(2);
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_ENTER_FULL,The following statement contains a magic number: string Language = packet.GetString(2);
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_PLAYER_ENTER_FULL,The following statement contains a magic number: packet.Skip(4);
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_REQUEST_WORLD_LARGE,The following statement contains a magic number: Out.WriteUInt32(7);
Magic Number,WorldServer,MovementHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MovementHandlers.cs,F_FLIGHT,The following statement contains a magic number: State == 20
Magic Number,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,The following statement contains a magic number: switch (State)              {                  case 1: // Show Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                              Crea.QtsInterface.BuildQuest(QuestID' cclient.Plr);                        } break;                    case 2: // Accept Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              if (cclient.Plr.QtsInterface.AcceptQuest(QuestID))                              {                                  if (!Crea.QtsInterface.CreatureHasStartQuest(cclient.Plr))                                  {                                      Crea.SendRemove(cclient.Plr);                                      Crea.SendMeTo(cclient.Plr);                                  }                              }                          }                        }break;                    case 3: // Quest Done                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                          {                              if (cclient.Plr.QtsInterface.DoneQuest(QuestID))                              {                                  Crea.SendRemove(cclient.Plr);                                  Crea.SendMeTo(cclient.Plr);                              }                          }                        } break;                    case 4: // Quest Done Info                      {                            if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              Crea.QtsInterface.SendQuestDoneInfo(cclient.Plr' QuestID);                          else if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              Crea.QtsInterface.SendQuestInProgressInfo(cclient.Plr' QuestID);                          }                        } break;                    case 5: // Select Quest Reward                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              cclient.Plr.QtsInterface.SelectRewards(QuestID' Unk3);                        } break;                }
Magic Number,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,The following statement contains a magic number: switch (State)              {                  case 1: // Show Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                              Crea.QtsInterface.BuildQuest(QuestID' cclient.Plr);                        } break;                    case 2: // Accept Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              if (cclient.Plr.QtsInterface.AcceptQuest(QuestID))                              {                                  if (!Crea.QtsInterface.CreatureHasStartQuest(cclient.Plr))                                  {                                      Crea.SendRemove(cclient.Plr);                                      Crea.SendMeTo(cclient.Plr);                                  }                              }                          }                        }break;                    case 3: // Quest Done                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                          {                              if (cclient.Plr.QtsInterface.DoneQuest(QuestID))                              {                                  Crea.SendRemove(cclient.Plr);                                  Crea.SendMeTo(cclient.Plr);                              }                          }                        } break;                    case 4: // Quest Done Info                      {                            if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              Crea.QtsInterface.SendQuestDoneInfo(cclient.Plr' QuestID);                          else if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              Crea.QtsInterface.SendQuestInProgressInfo(cclient.Plr' QuestID);                          }                        } break;                    case 5: // Select Quest Reward                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              cclient.Plr.QtsInterface.SelectRewards(QuestID' Unk3);                        } break;                }
Magic Number,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,The following statement contains a magic number: switch (State)              {                  case 1: // Show Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                              Crea.QtsInterface.BuildQuest(QuestID' cclient.Plr);                        } break;                    case 2: // Accept Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              if (cclient.Plr.QtsInterface.AcceptQuest(QuestID))                              {                                  if (!Crea.QtsInterface.CreatureHasStartQuest(cclient.Plr))                                  {                                      Crea.SendRemove(cclient.Plr);                                      Crea.SendMeTo(cclient.Plr);                                  }                              }                          }                        }break;                    case 3: // Quest Done                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                          {                              if (cclient.Plr.QtsInterface.DoneQuest(QuestID))                              {                                  Crea.SendRemove(cclient.Plr);                                  Crea.SendMeTo(cclient.Plr);                              }                          }                        } break;                    case 4: // Quest Done Info                      {                            if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              Crea.QtsInterface.SendQuestDoneInfo(cclient.Plr' QuestID);                          else if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              Crea.QtsInterface.SendQuestInProgressInfo(cclient.Plr' QuestID);                          }                        } break;                    case 5: // Select Quest Reward                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              cclient.Plr.QtsInterface.SelectRewards(QuestID' Unk3);                        } break;                }
Magic Number,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,The following statement contains a magic number: switch (State)              {                  case 1: // Show Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                              Crea.QtsInterface.BuildQuest(QuestID' cclient.Plr);                        } break;                    case 2: // Accept Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              if (cclient.Plr.QtsInterface.AcceptQuest(QuestID))                              {                                  if (!Crea.QtsInterface.CreatureHasStartQuest(cclient.Plr))                                  {                                      Crea.SendRemove(cclient.Plr);                                      Crea.SendMeTo(cclient.Plr);                                  }                              }                          }                        }break;                    case 3: // Quest Done                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                          {                              if (cclient.Plr.QtsInterface.DoneQuest(QuestID))                              {                                  Crea.SendRemove(cclient.Plr);                                  Crea.SendMeTo(cclient.Plr);                              }                          }                        } break;                    case 4: // Quest Done Info                      {                            if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              Crea.QtsInterface.SendQuestDoneInfo(cclient.Plr' QuestID);                          else if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              Crea.QtsInterface.SendQuestInProgressInfo(cclient.Plr' QuestID);                          }                        } break;                    case 5: // Select Quest Reward                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              cclient.Plr.QtsInterface.SelectRewards(QuestID' Unk3);                        } break;                }
Magic Number,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_REQUEST_QUEST,The following statement contains a magic number: switch (State)              {                  case 0: // Show Quest                      {                          cclient.Plr.QtsInterface.SendQuest(QuestID);                      } break;                    case 1: // Decline Quest                      {                          cclient.Plr.QtsInterface.DeclineQuest(QuestID);                      } break;                    case 2: // Send To Group                      {                        } break;              }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following statement contains a magic number: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,Start,The following statement contains a magic number: NextTick = StartTime + 1000;
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,Update,The following statement contains a magic number: NextTick = Tick + 1000;
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte(7);
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)(Damage / 64));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte(7);
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Damage % 64) * 2) + (Heal ? 0 : 1)));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendSpellDamage,The following statement contains a magic number: Out.WriteByte((byte)(Damage / 64));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendAbilityDone,The following statement contains a magic number: Out.WriteByte(6);
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendAbilityDone,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SetBuff,The following statement contains a magic number: InitEffect((byte)(MSEndTime / 1000));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,InitEffect,The following statement contains a magic number: Out.WriteByte((byte)(Seconds * 2));
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,SendEffect,The following statement contains a magic number: byte Time = (byte)((EndTime - TCPManager.GetTimeStampMS()) / 1000);
Magic Number,WorldServer,Ability,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Ability.cs,RemoveEffect,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,AbilityInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityInterface.cs,OnMove,The following statement contains a magic number: IsCasting() && CurrentAbility.Info.Info.CastTime > 1000
Magic Number,WorldServer,AbilityInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityInterface.cs,Cast,The following statement contains a magic number: SetCooldown(Info.Entry' Info.Info.Cooldown * 1000);
Magic Number,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityInfo,The following statement contains a magic number: Info.Entry == 245
Magic Number,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityInfo,The following statement contains a magic number: Stat.GetRadius(0) > 20 && Info.HandlerName.ToLower().Contains("zone")
Magic Number,WorldServer,AbilityMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\AbilityMgr.cs,LoadAbilityInfo,The following statement contains a magic number: Info.EffectID = 100;
Magic Number,WorldServer,AbsorbDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += (float)Ab.Info.Level * 9f;
Magic Number,WorldServer,AbsorbDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,AbsorbDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,Reset,The following statement contains a magic number: this.Ab.SetBuff(Ab.Info.GetTime(0) * 1000);
Magic Number,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,GetAbilityDamage,The following statement contains a magic number: Damage += (float)Ab.Info.Level * 9f;
Magic Number,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,AbsorbDamagesOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\AbsorbDamagesOverTimeBuff.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,StealsActionPointsBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Bonus\StealsActionPointsBuff.cs,Reset,The following statement contains a magic number: this.Ab.SetBuff(Ab.Info.GetTime(0) * 1000);
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,Reset,The following statement contains a magic number: this.Ab.SetBuff(Ab.Info.GetTime(0) * 1000);
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += (float)Ab.Info.Level * 5.82f;
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += C.StsInterface.GetTotalStat((byte)GameData.Stats.STATS_STRENGTH) / 5;
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Ab.Info.Info.MaxRange <= 5
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DamageOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DamageOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1667
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1682
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1677
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1683
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1676
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1670
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1669
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,InitAbility,The following statement contains a magic number: Ab.Info.Entry == 1666
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: float Damage = (float)Ab.Info.GetDamage(0) + (float)Ab.Info.Level * 5.82f;
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += Ab.Caster.StsInterface.GetTotalStat((byte)GameData.Stats.STATS_STRENGTH) / 5;
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\DealDamagesHandler.cs,GetAbilityDamage,The following statement contains a magic number: Ab.Info.Info.MaxRange <= 5
Magic Number,WorldServer,FleeAbilityBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Entries\FleeAbilityBuff.cs,Reset,The following statement contains a magic number: this.Ab.SetBuff(Ab.Info.GetTime(0) * 1000);
Magic Number,WorldServer,FleeAbilityBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Entries\FleeAbilityBuff.cs,Reset,The following statement contains a magic number: Ab.Caster.StsInterface.AddBonusSpeed(30);
Magic Number,WorldServer,FleeAbilityBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Entries\FleeAbilityBuff.cs,Stop,The following statement contains a magic number: Ab.Caster.StsInterface.RemoveBonusSpeed(30);
Magic Number,WorldServer,FleeAbilityHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Entries\FleeAbilityHandler.cs,Cast,The following statement contains a magic number: Ab.Caster.ResetNextActionPoints(10000);
Magic Number,WorldServer,HealPercentFromDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Entries\HealPercentFromDamagesHandler.cs,OnDealDamageTarget,The following statement contains a magic number: HealHandler.CustomValue = (uint)(((float)Damage * (float)Ab.Info.GetPercent(0)) / 100f) + Ab.Info.GetHeal(0);
Magic Number,WorldServer,HealOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\HealOverTimeHandler.cs,Reset,The following statement contains a magic number: this.Ab.SetBuff(Ab.Info.GetTime(0) * 1000);
Magic Number,WorldServer,HealOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\HealOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += (float)Ab.Info.Level * 9f;
Magic Number,WorldServer,HealOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\HealOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,HealOverTimeBuff,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\HealOverTimeHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,ResurrectsTargetHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\ResurrectsTargetHandler.cs,Cast,The following statement contains a magic number: Target.Health = (Target.MaxHealth * Ab.Info.GetPercent(0)) / 100;
Magic Number,WorldServer,SimpleHealHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\SimpleHealHandler.cs,GetAbilityDamage,The following statement contains a magic number: float Damage = (float)Ab.Info.GetHeal(0) + (float)Ab.Info.Level * 9f;
Magic Number,WorldServer,SimpleHealHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\SimpleHealHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,SimpleHealHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\SimpleHealHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,Cast,The following statement contains a magic number: GetTargets((Unit Target) =>              {                  if ((Ab.Info.Entry == 1747 || Ab.Info.Entry == 1435) && Count >= 3) // (Choppa ' Lotsa) (Slayer' Flurry) ' hit 3 targets                      return;                    if (Ab.Info.Entry == 1490 & Count >= 9) // (Accuracy' Slayer)                      return;                    DealHandler.InitTargets(Target);                  if (DealHandler.CanCast(false) == GameData.AbilityResult.ABILITYRESULT_OK)                  {                      if (Ab.Info.Entry == 8397) // Mouth of Tzeentch                          Target.AbtInterface.Cancel(false);                        DealHandler.Cast();                      if (Ab.Info.Entry == 8038) // Heaven's Fury ' movement stuck 3 seconds                          Target.DisableMovements(3000);                        ++Count;                  }              });
Magic Number,WorldServer,DealDamagesInFront,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesInFront.cs,GetTargets,The following statement contains a magic number: Obj.GetDistanceTo(Ab.Px' Ab.Py' Ab.Pz) < Ab.Info.GetRadius(0) && Ab.Caster.IsObjectInFront(Target'90)
Magic Number,WorldServer,DealDamagesWhenHitHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesWhenHitHandler.cs,GetAbilityDamage,The following statement contains a magic number: float Damage = (float)Ab.Info.GetDamage(0) + (float)Ab.Info.Level * 5.82f;
Magic Number,WorldServer,DealDamagesWhenHitHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesWhenHitHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += Ab.Caster.StsInterface.GetTotalStat((byte)GameData.Stats.STATS_STRENGTH) / 5;
Magic Number,WorldServer,DealDamagesWhenHitHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesWhenHitHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesWhenHitHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesWhenHitHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealDamagesWhenHitHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesWhenHitHandler.cs,GetAbilityDamage,The following statement contains a magic number: Ab.Info.Info.MaxRange <= 5
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,Start,The following statement contains a magic number: InvisibleObject = Ab.Caster.Region.CreateGameObject(23' Ab.ZoneId' Ab.Px' Ab.Py' Ab.Pz);
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,GetAbilityDamage,The following statement contains a magic number: float Damage = (float)Ab.Info.GetDamage(0) + (float)Ab.Info.Level * 5.82f;
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += C.StsInterface.GetTotalStat((byte)GameData.Stats.STATS_STRENGTH) / 5;
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,GetAbilityDamage,The following statement contains a magic number: Ab.Info.Info.MaxRange <= 5
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,DealZoneDamagesHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\DealDamagesZoneHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)C.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,SimpleHealGroupHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\SimpleHealGroupHandler.cs,GetAbilityDamage,The following statement contains a magic number: float Damage = (float)Ab.Info.GetHeal(0) + (float)Ab.Info.Level * 5.82f;
Magic Number,WorldServer,SimpleHealGroupHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\SimpleHealGroupHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,SimpleHealGroupHandler,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Abilities\Handlers\Zone\SimpleHealGroupHandler.cs,GetAbilityDamage,The following statement contains a magic number: Damage += ((float)Ab.Caster.ItmInterface.GetDamage() * 0.1f) * ((float)Ab.Info.Info.CastTime * 0.001f);
Magic Number,WorldServer,AIInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\AIInterface.cs,Load,The following statement contains a magic number: Evt.AddEvent(UpdateThink' BrainThinkTime + RandomMgr.Next(0' 2000)' 0);
Magic Number,WorldServer,AIInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\AIInterface.cs,OnTargetDie,The following statement contains a magic number: LockMovement(4000);
Magic Number,WorldServer,AIInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\AIInterface.cs,OnCombatStart,The following statement contains a magic number: EquipedItem = _Owner.GetCreature().ItmInterface.RemoveCreatureItem(11);
Magic Number,WorldServer,AIInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\AIInterface.cs,AddWaypoint,The following statement contains a magic number: Base.WaitAtEndMS = 2000;
Magic Number,WorldServer,AIInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\AIInterface.cs,IsAtWaypointEnd,The following statement contains a magic number: _Owner.GetDistanceTo(CurrentWaypoint.X' CurrentWaypoint.Y' CurrentWaypoint.Z) < 3
Magic Number,WorldServer,AggroInfo,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,GetHate,The following statement contains a magic number: Hate = (float)((float)DamagesDeal / (float)TotalDamage) * 100.0f;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ResetFightingState,The following statement contains a magic number: FightingStateTime = Tick + 2000;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,Update,The following statement contains a magic number: NextAttackTime += 100;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,AttackAI,The following statement contains a magic number: NextAttackTime = Tick + 2000;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,AttackAI,The following statement contains a magic number: _Owner.IsWithinRadius(Target' 5)
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,LookAt,The following statement contains a magic number: Crea.MvtInterface.FollowUnit(Target' 7' 3' 100' eFormationType.Protect);
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,LookAt,The following statement contains a magic number: Crea.MvtInterface.FollowUnit(Target' 7' 3' 100' eFormationType.Protect);
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,LookAt,The following statement contains a magic number: Crea.MvtInterface.FollowUnit(Target' 7' 3' 100' eFormationType.Protect);
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,CombatStart,The following statement contains a magic number: GetAggro(Fighter.Oid' Fighter.IsPlayer()).DamagesReceive += 100;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,CheckSpawnRange,The following statement contains a magic number: Crea.GetDistance(Crea.SpawnPoint) > 200
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ClearTargets,The following statement contains a magic number: Targets[2] = 0;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ClearTargets,The following statement contains a magic number: Targets[3] = 0;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ClearTargets,The following statement contains a magic number: Targets[4] = 0;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ClearTargets,The following statement contains a magic number: Targets[5] = 0;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ClearTargets,The following statement contains a magic number: Targets[6] = 0;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,GetCurrentTarget,The following statement contains a magic number: i < 7
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ResetPvpTime,The following statement contains a magic number: NextAllowedDisable = TCPManager.GetTimeStampMS() + 60000 * 10;
Magic Number,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,ResetPvpTime,The following statement contains a magic number: NextAllowedDisable = TCPManager.GetTimeStampMS() + 60000 * 10;
Magic Number,WorldServer,MailInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MailInterface.cs,BuildMail,The following statement contains a magic number: packet.Skip(2);
Magic Number,WorldServer,MailInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MailInterface.cs,BuildMail,The following statement contains a magic number: nextSend = (uint)TCPServer.GetTimeStamp() + 5;
Magic Number,WorldServer,MailInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MailInterface.cs,BuildPreMail,The following statement contains a magic number: Out.WriteByte((byte)(Mail.AuctionType == 0 ? 100 : 0));
Magic Number,WorldServer,MailInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MailInterface.cs,BuildPreMail,The following statement contains a magic number: Mail.Items.Count > 8
Magic Number,WorldServer,Mount,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Mounts\Mount.cs,SendMount,The following statement contains a magic number: Out.Fill(0' 14);
Magic Number,WorldServer,Mount,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Mounts\Mount.cs,OnStartCast,The following statement contains a magic number: (Args as Ability).Info.Entry == 245
Magic Number,WorldServer,GroupInvitation,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,GroupInvitation,The following statement contains a magic number: Expire = TCPManager.GetTimeStamp() + 65;
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The following statement contains a magic number: Out.WriteUInt16R((ushort)650);
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The following statement contains a magic number: Out.WriteUInt16R((ushort)650);
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,Update,The following statement contains a magic number: Out.WriteByte((byte)(Plr._Value.ZoneId*2));
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,IsFull,The following statement contains a magic number: return Members.Count >= 6;
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,AddXp,The following statement contains a magic number: Plr == Killer || Plr.GetDistance(Killer) < 100
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,AddXp,The following statement contains a magic number: Plr == Killer || Plr.GetDistance(Killer) < 100
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,AddRenown,The following statement contains a magic number: Plr == Killer || Plr.GetDistance(Killer) < 100
Magic Number,WorldServer,Group,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Group.cs,AddRenown,The following statement contains a magic number: Plr == Killer || Plr.GetDistance(Killer) < 100
Magic Number,WorldServer,Item,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Item.cs,BuildItem,The following statement contains a magic number: Out.Fill(0' 7);
Magic Number,WorldServer,Item,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Item.cs,BuildItem,The following statement contains a magic number: Out.Fill(0' 5);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetAttackTime,The following statement contains a magic number: return 200;
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetAttackSpeed,The following statement contains a magic number: Speed += (byte)(Gauche.Info.Speed * 0.1);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetAttackSpeed,The following statement contains a magic number: Speed += (byte)(Droite.Info.Speed * 0.1);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetAttackSpeed,The following statement contains a magic number: Speed += (byte)(Distance.Info.Speed * 0.1);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,HasMaxBag,The following statement contains a magic number: BagBuy < 3
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetMaxInventorySlot,The following statement contains a magic number: return (byte)(INVENTORY_START_SLOT + 32 + BagBuy * INVENTORY_SLOT_COUNT);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,GetBagPrice,The following statement contains a magic number: Price *= Math.Pow(10' Bag);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendMaxInventory,The following statement contains a magic number: Out.WriteUInt16(2);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendAllItems,The following statement contains a magic number: Count >= 8
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendBuffer,The following statement contains a magic number: Packet.Fill(0' 3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendItems,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendItems,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendItem,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendItems,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendItems,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendEquiped,The following statement contains a magic number: Invalide == 2
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendEquiped,The following statement contains a magic number: Out.WriteUInt16((UInt16)(2 - Invalide));
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendInspect,The following statement contains a magic number: Out.WriteByte(7);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,CanMove,The following statement contains a magic number: ESlot == EquipSlot.TROPHEE_2 && Plr.Level < 10
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendTradeInfo,The following statement contains a magic number: Out.Fill(0' 24);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendTradeInfo,The following statement contains a magic number: DistInterface.TradingAccepted == 2
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendTradeClose,The following statement contains a magic number: Out.WriteByte(3);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SendTradeClose,The following statement contains a magic number: Out.Fill(0' 24);
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,SellItem,The following statement contains a magic number: UInt16 SlotId = (UInt16)(Menu.Num + (Menu.Page * 256));
Magic Number,WorldServer,ItemsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\ItemsInterface.cs,BuyBackItem,The following statement contains a magic number: UInt16 SlotId = (ushort)(BuyBack.Count - 1 - (Menu.Num + (Menu.Page * 256)));
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,GetFollowPct,The following statement contains a magic number: return (Id / Count) * 100;
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following statement contains a magic number: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following statement contains a magic number: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following statement contains a magic number: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following statement contains a magic number: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following statement contains a magic number: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,GetMsTimeToArriveAt,The following statement contains a magic number: return (int)(_Owner.GetDistanceTo(target) * (METRE_SPEED_MS / speed * 100f));
Magic Number,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,SetTickSpeed,The following statement contains a magic number: float tickSpeed = (METRE_SPEED_MS / (float)speed) * 100f;
Magic Number,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,HandleInteract,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,SendQuest,The following statement contains a magic number: Packet.Fill(0' 18);
Magic Number,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,SendQuestDoneInfo,The following statement contains a magic number: Out.WriteByte(3);
Magic Number,WorldServer,QuestsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\QuestsInterface.cs,SendQuestInProgressInfo,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,SocialInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\SocialInterface.cs,SendPlayers,The following statement contains a magic number: Out.WriteByte(4);
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,ApplyStats,The following statement contains a magic number: Unit.MaxHealth = (uint)(GetTotalStat((byte)GameData.Stats.STATS_WOUNDS) * 10);
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculDamage,The following statement contains a magic number: float Wdps = (float)Me.ItmInterface.GetAttackDamage(Slot) / 10f;
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculDamage,The following statement contains a magic number: Wdps = (Wdps * 45f) * 0.01f;
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculDamage,The following statement contains a magic number: Wdps = (Wdps * 45f) * 0.01f;
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculDamage,The following statement contains a magic number: WSpeed /= 100;
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculDamage,The following statement contains a magic number: return (int)(((Str / 10) + Wdps) * WSpeed);
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculReduce,The following statement contains a magic number: Reduce += Tou / 5;
Magic Number,WorldServer,StatsInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\StatsInterface.cs,CalculReduce,The following statement contains a magic number: Reduce += (int)(Armor / (Me.Level * 1.1f));
Magic Number,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,UpdateRange,The following statement contains a magic number: Distance > 100 || ForceUpdate
Magic Number,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,GetOid,The following statement contains a magic number: MaxOID = 2;
Magic Number,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,GetOid,The following statement contains a magic number: i = 2;
Magic Number,WorldServer,RegionMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\RegionMgr.cs,GetObject,The following statement contains a magic number: Oid < 2
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GetZoneFromOffsets,The following statement contains a magic number: OffsetX >= Info.OffX && OffsetX < Info.OffX + 16                      && OffsetY >= Info.OffY && OffsetY < Info.OffY + 16
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GetZoneFromOffsets,The following statement contains a magic number: OffsetX >= Info.OffX && OffsetX < Info.OffX + 16                      && OffsetY >= Info.OffY && OffsetY < Info.OffY + 16
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: _Item_Info = new Dictionary<uint' Item_Info>(100000);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] = 3;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] = 3;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[5] = 2;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[5] = 2;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] != 3 || Info.Unk27[5] != 2
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] != 3 || Info.Unk27[5] != 2
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] != 3 || Info.Unk27[5] != 2
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadItem_Info,The following statement contains a magic number: Info.Unk27[4] != 3 || Info.Unk27[5] != 2
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateXPCount,The following statement contains a magic number: KLvl > VLvl + 8
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateXPCount,The following statement contains a magic number: UInt32 XP = VLvl * 70;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateXPCount,The following statement contains a magic number: XP += (UInt32)Victim.Rank * 50;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateXPCount,The following statement contains a magic number: XP -= (UInt32)(((float)XP / (float)100) * (KLvl - VLvl + 1)) * 5;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateXPCount,The following statement contains a magic number: XP -= (UInt32)(((float)XP / (float)100) * (KLvl - VLvl + 1)) * 5;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateRenownCount,The following statement contains a magic number: UInt32 RP = VRp * 4 + VLvl * 6;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateRenownCount,The following statement contains a magic number: UInt32 RP = VRp * 4 + VLvl * 6;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,SendVendorPage,The following statement contains a magic number: Out.WriteByte(3);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,SendVendorPage,The following statement contains a magic number: Out.Fill(0' 18);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,The following statement contains a magic number: switch ((Objective_Type)Obj.ObjType)              {                  case Objective_Type.QUEST_KILL_PLAYERS:                      {                          if(Obj.Description.Length < 1)                              Obj.Description = "Enemy Players";                      }break;                    case Objective_Type.QUEST_SPEACK_TO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                             if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Npc'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Speak to " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_USE_GO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                              Obj.GameObject = GetGameObjectProto(ObjID);                            if (Obj.GameObject == null)                          {                              Obj.Description = "Invalid Go'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.GameObject.Name.Length)                                  Obj.Description = "Find " + Obj.GameObject.Name;                          }                        } break;                    case Objective_Type.QUEST_KILL_MOB:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Creature'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Kill " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_GET_ITEM:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                          {                              Obj.Item = GetItem_Info(ObjID);                              if (Obj.Item == null)                              {                                  int a =Obj.Quest.Particular.ToLower().IndexOf("kill the ");                                  if (a >= 0)                                  {                                      string[] RestWords = Obj.Quest.Particular.Substring(a + 9).Split(' ');                                      string Name = RestWords[0] + " " + RestWords[1];                                      Creature_proto Proto = GetCreatureProtoByName(Name);                                      if (Proto == null)                                          Proto = GetCreatureProtoByName(RestWords[0]);                                      if (Proto != null)                                      {                                          Obj.Item = new Item_Info();                                          Obj.Item.Entry = ObjID;                                          Obj.Item.Name = Obj.Description;                                          Obj.Item.MaxStack = 20;                                          Obj.Item.ModelId = 531;                                          _Item_Info.Add(Obj.Item.Entry' Obj.Item);                                            Log.Info("WorldMgr"' "Creating Quest(" + Obj.Entry + ") Item : " + Obj.Item.Entry + "'  " + Obj.Item.Name + "| Adding Loot to : " + Proto.Name);                                          Creature_loot loot = new Creature_loot();                                          loot.Entry = Proto.Entry;                                          loot.ItemId = Obj.Item.Entry;                                          loot.Info = Obj.Item;                                          loot.Pct = 0;                                          GetLoots(Proto.Entry).Add(loot);                                      }                                  }                              }                          }                      }                      break;              }
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,The following statement contains a magic number: switch ((Objective_Type)Obj.ObjType)              {                  case Objective_Type.QUEST_KILL_PLAYERS:                      {                          if(Obj.Description.Length < 1)                              Obj.Description = "Enemy Players";                      }break;                    case Objective_Type.QUEST_SPEACK_TO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                             if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Npc'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Speak to " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_USE_GO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                              Obj.GameObject = GetGameObjectProto(ObjID);                            if (Obj.GameObject == null)                          {                              Obj.Description = "Invalid Go'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.GameObject.Name.Length)                                  Obj.Description = "Find " + Obj.GameObject.Name;                          }                        } break;                    case Objective_Type.QUEST_KILL_MOB:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Creature'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Kill " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_GET_ITEM:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                          {                              Obj.Item = GetItem_Info(ObjID);                              if (Obj.Item == null)                              {                                  int a =Obj.Quest.Particular.ToLower().IndexOf("kill the ");                                  if (a >= 0)                                  {                                      string[] RestWords = Obj.Quest.Particular.Substring(a + 9).Split(' ');                                      string Name = RestWords[0] + " " + RestWords[1];                                      Creature_proto Proto = GetCreatureProtoByName(Name);                                      if (Proto == null)                                          Proto = GetCreatureProtoByName(RestWords[0]);                                      if (Proto != null)                                      {                                          Obj.Item = new Item_Info();                                          Obj.Item.Entry = ObjID;                                          Obj.Item.Name = Obj.Description;                                          Obj.Item.MaxStack = 20;                                          Obj.Item.ModelId = 531;                                          _Item_Info.Add(Obj.Item.Entry' Obj.Item);                                            Log.Info("WorldMgr"' "Creating Quest(" + Obj.Entry + ") Item : " + Obj.Item.Entry + "'  " + Obj.Item.Name + "| Adding Loot to : " + Proto.Name);                                          Creature_loot loot = new Creature_loot();                                          loot.Entry = Proto.Entry;                                          loot.ItemId = Obj.Item.Entry;                                          loot.Info = Obj.Item;                                          loot.Pct = 0;                                          GetLoots(Proto.Entry).Add(loot);                                      }                                  }                              }                          }                      }                      break;              }
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,The following statement contains a magic number: switch ((Objective_Type)Obj.ObjType)              {                  case Objective_Type.QUEST_KILL_PLAYERS:                      {                          if(Obj.Description.Length < 1)                              Obj.Description = "Enemy Players";                      }break;                    case Objective_Type.QUEST_SPEACK_TO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                             if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Npc'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Speak to " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_USE_GO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                              Obj.GameObject = GetGameObjectProto(ObjID);                            if (Obj.GameObject == null)                          {                              Obj.Description = "Invalid Go'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.GameObject.Name.Length)                                  Obj.Description = "Find " + Obj.GameObject.Name;                          }                        } break;                    case Objective_Type.QUEST_KILL_MOB:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Creature'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Kill " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_GET_ITEM:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                          {                              Obj.Item = GetItem_Info(ObjID);                              if (Obj.Item == null)                              {                                  int a =Obj.Quest.Particular.ToLower().IndexOf("kill the ");                                  if (a >= 0)                                  {                                      string[] RestWords = Obj.Quest.Particular.Substring(a + 9).Split(' ');                                      string Name = RestWords[0] + " " + RestWords[1];                                      Creature_proto Proto = GetCreatureProtoByName(Name);                                      if (Proto == null)                                          Proto = GetCreatureProtoByName(RestWords[0]);                                      if (Proto != null)                                      {                                          Obj.Item = new Item_Info();                                          Obj.Item.Entry = ObjID;                                          Obj.Item.Name = Obj.Description;                                          Obj.Item.MaxStack = 20;                                          Obj.Item.ModelId = 531;                                          _Item_Info.Add(Obj.Item.Entry' Obj.Item);                                            Log.Info("WorldMgr"' "Creating Quest(" + Obj.Entry + ") Item : " + Obj.Item.Entry + "'  " + Obj.Item.Name + "| Adding Loot to : " + Proto.Name);                                          Creature_loot loot = new Creature_loot();                                          loot.Entry = Proto.Entry;                                          loot.ItemId = Obj.Item.Entry;                                          loot.Info = Obj.Item;                                          loot.Pct = 0;                                          GetLoots(Proto.Entry).Add(loot);                                      }                                  }                              }                          }                      }                      break;              }
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,The following statement contains a magic number: X = (UInt16)(Spawn.WorldX >> 12);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,The following statement contains a magic number: Y = (UInt16)(Spawn.WorldY >> 12);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,The following statement contains a magic number: X = (UInt16)(Spawn.WorldX >> 12);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,The following statement contains a magic number: Y = (UInt16)(Spawn.WorldY >> 12);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadPublicQuests,The following statement contains a magic number: GetRegionCell(Zone.Region' (ushort)((float)(Info.PinX / 4096) + Zone.OffX)' (ushort)((float)(Info.PinY / 4096) + Zone.OffY)).AddPQuest(Info);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadPublicQuests,The following statement contains a magic number: GetRegionCell(Zone.Region' (ushort)((float)(Info.PinX / 4096) + Zone.OffX)' (ushort)((float)(Info.PinY / 4096) + Zone.OffY)).AddPQuest(Info);
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,RemoveDoubleSpawns,The following statement contains a magic number: uint Space = 400;
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,RemoveDoubleSpawns,The following statement contains a magic number: int[] Removed = new int[255];
Magic Number,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,RemoveDoubleSpawns,The following statement contains a magic number: i < 255
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculPin,The following statement contains a magic number: Pos += 32768;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculPin,The following statement contains a magic number: Offset >= BaseOffset + 8
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculCombat,The following statement contains a magic number: Pos /= 2;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculCombat,The following statement contains a magic number: OffSet-=4;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculCombat,The following statement contains a magic number: Pos += 16384;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculCombat,The following statement contains a magic number: OffSet >= 4
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,UpdateAnnounces,The following statement contains a magic number: NextAnnounce = Tick + 30000;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculPin,The following statement contains a magic number: int BaseOffset = x ? Info.OffX << 12 : Info.OffY << 12;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculPin,The following statement contains a magic number: int BaseOffset = x ? Info.OffX << 12 : Info.OffY << 12;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = X > 32768 ? X - 32768 : X;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = X > 32768 ? X - 32768 : X;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = Y > 32768 ? Y - 32768 : Y;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = Y > 32768 ? Y - 32768 : Y;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = PinX > 32768 ? PinX - 32768 : PinX;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = PinX > 32768 ? PinX - 32768 : PinX;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = PinY > 32768 ? PinY - 32768 : PinY;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = PinY > 32768 ? PinY - 32768 : PinY;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: WorldZ += 16384;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: Info.ZoneId == 161
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = PinX > 32768 ? PinX - 32768 : PinX;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int x = PinX > 32768 ? PinX - 32768 : PinX;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = PinY > 32768 ? PinY - 32768 : PinY;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: int y = PinY > 32768 ? PinY - 32768 : PinY;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: WorldPosition.Z += 16384;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalculWorldPosition,The following statement contains a magic number: Info.ZoneId == 161
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalcOffset,The following statement contains a magic number: return (UInt32)Math.Truncate((decimal)(Pin / 4096 + (x ? Info.OffX : Info.OffY))) << 12;
Magic Number,WorldServer,ZoneMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Map\ZoneMgr.cs,CalcOffset,The following statement contains a magic number: return (UInt32)Math.Truncate((decimal)(Pin / 4096 + (x ? Info.OffX : Info.OffY))) << 12;
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: PacketLength < 2
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: PacketLength -= 2;
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: PacketLength < PacketSize + 10
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: packet.Size = (ulong)PacketSize+10;
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: PacketLength -= 8;
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: Log.Debug("OnReceive"' "Packet contain multiple opcodes " + PacketLength + ">" + (PacketSize + 2));
Magic Number,WorldServer,GameClient,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\GameClient.cs,OnReceive,The following statement contains a magic number: PacketLength > PacketSize + 2
Magic Number,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The following statement contains a magic number: ConsoleMgr.WaitAndExit(2000);
Magic Number,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The following statement contains a magic number: ConsoleMgr.WaitAndExit(2000);
Magic Number,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The following statement contains a magic number: ConsoleMgr.WaitAndExit(2000);
Magic Number,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The following statement contains a magic number: ConsoleMgr.WaitAndExit(2000);
Magic Number,WorldServer,Program,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Program.cs,Main,The following statement contains a magic number: ConsoleMgr.WaitAndExit(2000);
Magic Number,WorldServer,ChapterObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\ChapterObject.cs,OnLoad,The following statement contains a magic number: Z = 16384;
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,GenerateWounds,The following statement contains a magic number: Wounds += 95 * (Level + 1);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,GenerateWounds,The following statement contains a magic number: Wounds += Level * 5.5f;
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,GenerateWounds,The following statement contains a magic number: Wounds += Rank * (5.85f * Level * 52);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,GenerateWounds,The following statement contains a magic number: Wounds += Rank * (5.85f * Level * 52);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,GenerateWounds,The following statement contains a magic number: return (ushort)(Wounds/10);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: SetOffset((ushort)(Spawn.WorldX >> 12)' (ushort)(Spawn.WorldY >> 12));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: SetOffset((ushort)(Spawn.WorldX >> 12)' (ushort)(Spawn.WorldY >> 12));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.X = (ushort)(X + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.X = (ushort)(X + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.X = (ushort)(X + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.Y = (ushort)(Y + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.Y = (ushort)(Y + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.Y = (ushort)(Y + Random.randomInt(50) + Random.randomInt(100) + Random.randomInt(150));
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.Speed = 10;
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.WaitAtEndMS = (uint)(5000 + Random.randomIntAbs(10) * 1000);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.WaitAtEndMS = (uint)(5000 + Random.randomIntAbs(10) * 1000);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Wp.WaitAtEndMS = (uint)(5000 + Random.randomIntAbs(10) * 1000);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: i < 3
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Faction <= 1 || Faction == 128 || Faction == 129
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,OnLoad,The following statement contains a magic number: Faction <= 1 || Faction == 128 || Faction == 129
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.Fill(0' 4);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.Proto._Unks[2]);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.Proto._Unks[3]);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.Proto._Unks[4]);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.Proto._Unks[5]);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.Proto._Unks[6]);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.WriteByte(5);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendMeTo,The following statement contains a magic number: Out.Fill(0' 48);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SendInteract,The following statement contains a magic number: switch (InteractType)                  {                      case GameData.InteractType.INTERACTTYPE_DYEMERCHANT:                          {                              string Text = WorldMgr.GetCreatureText(Spawn.Entry);                                if (Menu.Menu == 9) // List des objets a vendre                                  WorldMgr.SendVendor(Plr' Spawn.Entry);                              else if (Menu.Menu == 11) // Achat d'un item                                  WorldMgr.BuyItemVendor(Plr' Menu' Spawn.Entry);                              else if (Menu.Menu == 14) // Vend un Item                                  Plr.ItmInterface.SellItem(Menu);                              else if (Menu.Menu == 36) // Rachette un item                                  Plr.ItmInterface.BuyBackItem(Menu);                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                  Out.WriteUInt16(0);                                  Out.WriteByte(0x40); // Dye                                  Out.WriteByte(0x22); // Vendors                                  Out.WriteByte(0);                                  Out.WritePascalString(Text);                                  Out.WriteByte(0);                                  Plr.SendPacket(Out);                              }                          } break;                        case GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER:                          {                              byte[] data = new byte[62]  		                    {  			                    0x01'0xF4'0x00'0x00'0x00'0x00'0x00'0x00'0x64'0x42'0x39'0x00'0x00'0x00'0xC0'0xE3'  			                    0x03'0x39'0xA0'0xD1'0x6F'0x00'0xC8'0xA8'0x1D'0x37'0x28'0x94'0x79'0x33'0xB2'0x24'  			                    0x32'0x44'0xDB'0xD7'0x1C'0x5D'0x18'0x5D'0xDD'0x1C'0xA4'0x0D'0x00'0x00'0xA8'0x6B'  			                    0x21'0x36'0x11'0x00'0x00'0x00'0xC8'0xD0'0xAF'0x3A'0x78'0xD1'0x6F'0x00  		                    };                                UInt16 Counts = 1;                                PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteUInt16(0x0A12);                              foreach (Zone_Taxi Taxi in WorldMgr.GetTaxis(Plr))                              {                                  Out.WriteUInt16(Counts);                                  Out.WriteByte(2);                                  Out.WriteUInt16(Taxi.Info.Price);                                  Out.WriteUInt16(Taxi.Info.ZoneId);                                  Out.WriteByte(1);                                  ++Counts;                              }                              Out.Write(data);                              Plr.SendPacket(Out);                          }break;                        case GameData.InteractType.INTERACTTYPE_TRAINER:                          {                              if (Menu.Menu == 7)                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(5);                                  Out.WriteByte(0x0F);                                  Out.WriteByte(6);                                  Out.WriteUInt16(0);                                  Plr.SendPacket(Out);                              }                              else                              {                                  PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                                  Out.WriteByte(0);                                  Out.WriteUInt16(Oid);                                    if (Plr.Realm == GameData.Realms.REALMS_REALM_ORDER)                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 94 48 61 69 6C |.........!..Hail|  |20 64 65 66 65 6E 64 65 72 20 6F 66 20 74 68 65 | defender of the|  |20 45 6D 70 69 72 65 21 20 20 59 6F 75 72 20 70 | Empire!  Your p|  |65 72 66 6F 72 6D 61 6E 63 65 20 69 6E 20 62 61 |erformance in ba|  |74 74 6C 65 20 69 73 20 74 68 65 20 6F 6E 6C 79 |ttle is the only|  |20 74 68 69 6E 67 20 74 68 61 74 20 6B 65 65 70 | thing that keep|  |73 20 74 68 65 20 68 6F 72 64 65 73 20 6F 66 20 |s the hordes of |  |43 68 61 6F 73 20 61 74 20 62 61 79 2E 20 4C 65 |Chaos at bay. Le|  |74 27 73 20 62 65 67 69 6E 20 79 6F 75 72 20 74 |t's begin your t|  |72 61 69 6E 69 6E 67 20 61 74 20 6F 6E 63 65 21 |raining at once!|  |00                                              |.               |");                                  }                                  else                                  {                                      Out.WritePacketString(@"|00 00 00 21 00 AA 4C 65 61 72 |.........!..Lear|  |6E 20 74 68 65 73 65 20 6C 65 73 73 6F 6E 73 20 |n these lessons |  |77 65 6C 6C 2C 20 66 6F 72 20 67 61 69 6E 69 6E |well' for gainin|  |67 20 74 68 65 20 66 61 76 6F 72 20 6F 66 20 74 |g the favor of t|  |68 65 20 52 61 76 65 6E 20 67 6F 64 20 73 68 6F |he Raven god sho|  |75 6C 64 20 62 65 20 6F 66 20 75 74 6D 6F 73 74 |uld be of utmost|  |20 69 6D 70 6F 72 74 61 6E 63 65 20 74 6F 20 79 | importance to y|  |6F 75 2E 20 4F 74 68 65 72 77 69 73 65 2E 2E 2E |ou. Otherwise...|  |20 54 68 65 72 65 20 69 73 20 61 6C 77 61 79 73 | There is always|  |20 72 6F 6F 6D 20 66 6F 72 20 6D 6F 72 65 20 53 | room for more S|  |70 61 77 6E 20 77 69 74 68 69 6E 20 6F 75 72 20 |pawn within our |  |72 61 6E 6B 73 2E 00                            |.......         |");                                  }                                  Plr.SendPacket(Out);                              }                          } break;                      case GameData.InteractType.INTERACTTYPE_BANKER:                          {                              PacketOut Out = new PacketOut((byte)Opcodes.F_INTERACT_RESPONSE);                              Out.WriteByte(0x1D);                              Out.WriteByte(0);                              Plr.SendPacket(Out);                          } break;                      default:                          QtsInterface.HandleInteract(Plr' this' Menu);                          break;                  }
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SetDeath,The following statement contains a magic number: EvtInterface.AddEvent(RezUnit' 30000 + Level * 1000' 1);
Magic Number,WorldServer,Creature,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Creature.cs,SetDeath,The following statement contains a magic number: EvtInterface.AddEvent(RezUnit' 30000 + Level * 1000' 1);
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,OnLoad,The following statement contains a magic number: Faction -= 8;
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,OnLoad,The following statement contains a magic number: Faction >= 8
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,OnLoad,The following statement contains a magic number: Faction < 2
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,OnLoad,The following statement contains a magic number: SetOffset((ushort)(Spawn.WorldX >> 12)' (ushort)(Spawn.WorldY >> 12));
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,OnLoad,The following statement contains a magic number: SetOffset((ushort)(Spawn.WorldX >> 12)' (ushort)(Spawn.WorldY >> 12));
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.GetUnk(2));
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,SendMeTo,The following statement contains a magic number: int flags = Spawn.GetUnk(3);
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,SendMeTo,The following statement contains a magic number: flags = flags | 4;
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.GetUnk(4));
Magic Number,WorldServer,GameObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\GameObject.cs,SendMeTo,The following statement contains a magic number: Out.WriteUInt16(Spawn.GetUnk(5));
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalculOffset,The following statement contains a magic number: UInt16 Ox = (UInt16)Math.Truncate((decimal)(X / 4096 + Zone.Info.OffX));
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalculOffset,The following statement contains a magic number: UInt16 Oy = (UInt16)Math.Truncate((decimal)(Y / 4096 + Zone.Info.OffY));
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalcWorldPositions,The following statement contains a magic number: int x = X > 32768 ? X - 32768 : X;
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalcWorldPositions,The following statement contains a magic number: int x = X > 32768 ? X - 32768 : X;
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalcWorldPositions,The following statement contains a magic number: int y = Y > 32768 ? Y - 32768 : Y;
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,CalcWorldPositions,The following statement contains a magic number: int y = Y > 32768 ? Y - 32768 : Y;
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,SetOffset,The following statement contains a magic number: XZone = (uint)(OffX << 12);
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,SetOffset,The following statement contains a magic number: YZone = (uint)(OffY << 12);
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,GetAngle,The following statement contains a magic number: headingDifference += 4096.0f;
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,GetAngle,The following statement contains a magic number: return (headingDifference * 360.0f / 4096.0f);
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,GetAngle,The following statement contains a magic number: return (headingDifference * 360.0f / 4096.0f);
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,IsObjectInFront,The following statement contains a magic number: angle >= 360 - viewangle / 2 || angle < viewangle / 2
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,IsObjectInFront,The following statement contains a magic number: angle >= 360 - viewangle / 2 || angle < viewangle / 2
Magic Number,WorldServer,Object,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Object.cs,IsObjectInFront,The following statement contains a magic number: angle >= 360 - viewangle / 2 || angle < viewangle / 2
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,GetPlayers,The following statement contains a magic number: Plr.SocInterface.Hide                          || (Name.Length > 0 && !Plr.Name.ToLower().StartsWith(Name))                          || (Career != 0 && Career != Plr._Info.Career)                          || (ZoneId != 255 && Plr.Zone.ZoneId != ZoneId)                          || (Plr.Level < MinLevel)                          || (Plr.Level > MaxLevel)
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,OnLoad,The following statement contains a magic number: SetOffset((UInt16)(_Value.WorldX >> 12)' (UInt16)(_Value.WorldY >> 12));
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,OnLoad,The following statement contains a magic number: SetOffset((UInt16)(_Value.WorldX >> 12)' (UInt16)(_Value.WorldY >> 12));
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSniff,The following statement contains a magic number: Result+=Line.Substring(1' 48).Replace(" "' string.Empty);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSniff,The following statement contains a magic number: Result = Result.Remove(0' 4);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSniff,The following statement contains a magic number: byte Opcode = Convert.ToByte(Result.Substring(0' 2)' 16);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSniff,The following statement contains a magic number: byte Opcode = Convert.ToByte(Result.Substring(0' 2)' 16);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSniff,The following statement contains a magic number: Result = Result.Remove(0' 2);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetPVPFlag,The following statement contains a magic number: Faction = (byte)(Realm == GameData.Realms.REALMS_REALM_DESTRUCTION ? 8 : 6);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetPVPFlag,The following statement contains a magic number: Faction = (byte)(Realm == GameData.Realms.REALMS_REALM_DESTRUCTION ? 8 : 6);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetDeath,The following statement contains a magic number: UInt16 Time = 600;
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SetDeath,The following statement contains a magic number: EvtInterface.AddEvent(AutomaticRespawnPlayer' Time * 1000' 1);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,PreRespawnPlayer,The following statement contains a magic number: SendDialog((ushort)5' (ushort)5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,PreRespawnPlayer,The following statement contains a magic number: SendDialog((ushort)5' (ushort)5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,PreRespawnPlayer,The following statement contains a magic number: EvtInterface.AddEvent(RespawnPlayer' 5000' 1);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSpeed,The following statement contains a magic number: Out.WriteByte(100);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendInited,The following statement contains a magic number: Out.Fill(0' 5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendInited,The following statement contains a magic number: Out.Fill(0' 6);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendInited,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSkills,The following statement contains a magic number: Out.WriteByte(3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSkills,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendXp,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendRenown,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMessage,The following statement contains a magic number: Out.Fill(0' 4);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMessage,The following statement contains a magic number: int Pos = b + 5;
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMessage,The following statement contains a magic number: Out.WriteByte(3);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMeTo,The following statement contains a magic number: Out.Fill(0' 12);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMeTo,The following statement contains a magic number: Out.Fill(0' 8);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendMeTo,The following statement contains a magic number: Out.Fill(0' 4);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSwitchRegion,The following statement contains a magic number: Out.Fill(0' 5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SendSwitchRegion,The following statement contains a magic number: Out.Fill(0' 11);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Quit,The following statement contains a magic number: EvtInterface.AddEvent(Quit' 5000' 5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Quit,The following statement contains a magic number: EvtInterface.AddEvent(Quit' 5000' 5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Quit,The following statement contains a magic number: SendLocalizeString("" + DisconnectTime / 1000' GameData.Localized_text.TEXT_YOU_WILL_LOG_OUT_IN_X_SECONDS);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Quit,The following statement contains a magic number: DisconnectTime -= 5000;
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,Save,The following statement contains a magic number: EvtInterface.AddEvent(Save' 20000' 0);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,SafeWorldTeleport,The following statement contains a magic number: Out.Fill(0' 5);
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,OnRangeUpdate,The following statement contains a magic number: CurrentPiece == null || !CurrentPiece.IsOn((ushort)(X / 64)' (ushort)(Y / 64)' Zone.ZoneId)
Magic Number,WorldServer,Player,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Player.cs,OnRangeUpdate,The following statement contains a magic number: CurrentPiece == null || !CurrentPiece.IsOn((ushort)(X / 64)' (ushort)(Y / 64)' Zone.ZoneId)
Magic Number,WorldServer,PQuestObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\PQuestObject.cs,SendReinitTime,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,PQuestObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\PQuestObject.cs,SendStageInfo,The following statement contains a magic number: Out.Fill(0' 3);
Magic Number,WorldServer,PQuestObject,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\PQuestObject.cs,OnLoad,The following statement contains a magic number: Z = 16384;
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following statement contains a magic number: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The following statement contains a magic number: Out.Fill(0' 4);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The following statement contains a magic number: MovementType < 3
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The following statement contains a magic number: SendState(Plr' (ushort)MvtInterface.TargetPosition.X' (ushort)MvtInterface.TargetPosition.Y' (ushort)MvtInterface.TargetPosition.Z' (byte)(MvtInterface.CurrentSpeed >= 50 ? 3 : 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendState,The following statement contains a magic number: SendState(Plr' (ushort)MvtInterface.TargetPosition.X' (ushort)MvtInterface.TargetPosition.Y' (ushort)MvtInterface.TargetPosition.Z' (byte)(MvtInterface.CurrentSpeed >= 50 ? 3 : 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,UpdateHealth,The following statement contains a magic number: uint Regen = TotalHealth / 8;
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,UpdateActionPoints,The following statement contains a magic number: NextApRegen = Tick + 300;
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,UpdateActionPoints,The following statement contains a magic number: ActionPoints += 25;
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,Strike,The following statement contains a magic number: DmgReduce = Math.Min(75' DmgReduce);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,Strike,The following statement contains a magic number: RealDamage = (Damage-((DmgReduce/100f * DmgReduce)));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,Strike,The following statement contains a magic number: RealDamage = 2;
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,Strike,The following statement contains a magic number: RealDamage <= 2
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)(Count / 64));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)((128 + (Count % 64) * 2) + 1));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendCastEffect,The following statement contains a magic number: Out.WriteByte((byte)(Count / 64));
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendAttackMovement,The following statement contains a magic number: Out.WriteByte(2);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SendAttackMovement,The following statement contains a magic number: Out.Fill(0' 9);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetDeath,The following statement contains a magic number: States.Add(3);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetDeath,The following statement contains a magic number: Out.Fill(0' 6);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,RezUnit,The following statement contains a magic number: States.Remove(3);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetLootable,The following statement contains a magic number: Out.WriteByte(9);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetLootable,The following statement contains a magic number: Out.Fill(0' 6);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: FactionId = (byte)(NewFaction / 8);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: Faction = (byte)(NewFaction % 8);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: Agressive = Convert.ToBoolean(Faction % 2);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: Rank = (byte)(Faction / 2);
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: FactionId >= 8 && FactionId <= 15
Magic Number,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,SetFaction,The following statement contains a magic number: FactionId >= 8 && FactionId <= 15
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetHeading,The following statement contains a magic number: heading += 4096;
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetPointFromHeading,The following statement contains a magic number: distance = (int)((float)distance*13.2f);
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetBackPoint,The following statement contains a magic number: Point2D Pos = Front.GetPointFromHeading(Front.GetHeading(this)' distance*2);
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetRealDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetRealDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point2D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point2D.cs,GetRealDistance,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: Range = Range / Lerp(36.0' 13.50' Clamp(Range' 900));
Magic Number,WorldServer,Point3D,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Positions\Point3D.cs,GetDistanceTo,The following statement contains a magic number: return (int)(Math.Sqrt(dx * dx + dy * dy + dz * dz) / 13.2f);
Magic Number,WorldServer,WorldOrderMountScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\Creatures\WorldMountsScript.cs,Mount,The following statement contains a magic number: Target.MvtInterface.CurrentMount.SetMount(8);
Magic Number,WorldServer,WorldDestructionMountScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\Creatures\WorldMountsScript.cs,Mount,The following statement contains a magic number: Target.MvtInterface.CurrentMount.SetMount(3);
Magic Number,WorldServer,WorldDestructionMountScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\Creatures\WorldMountsScript.cs,Mount,The following statement contains a magic number: RandomMgr.Next(4) == 1
Magic Number,WorldServer,DoorScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\GameObject\Door.cs,OnInteract,The following statement contains a magic number: heading += 4096;
Magic Number,WorldServer,DoorScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\GameObject\Door.cs,OnInteract,The following statement contains a magic number: int distance = (int)((float)5 * 13.2f);
Magic Number,WorldServer,DoorScript,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\GameObject\Door.cs,OnInteract,The following statement contains a magic number: int distance = (int)((float)5 * 13.2f);
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,OnWorldPlayerEvent,The following statement contains a magic number: Out.Write(Packet.Data' 3' Packet.Data.Length - 3);
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,OnWorldPlayerEvent,The following statement contains a magic number: Out.Write(Packet.Data' 3' Packet.Data.Length - 3);
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,OnWorldPlayerEvent,The following statement contains a magic number: Out.Write(Packet.Data' 3' Packet.Data.Length - 3);
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,OnWorldPlayerEvent,The following statement contains a magic number: Out.Write(Packet.Data' 3' Packet.Data.Length - 3);
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,CheckInit,The following statement contains a magic number: CurrentCareer = Info.Data[33 + 3];
Magic Number,WorldServer,CareerPackagesSender,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,CheckInit,The following statement contains a magic number: CurrentCareer = Info.Data[33 + 3];
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: TempOpcodeName = Line.Substring(TempIndex + 7' Line.IndexOf("  ") - (TempIndex + 7));
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: TempOpcodeName = Line.Substring(TempIndex + 7' Line.IndexOf("  ") - (TempIndex + 7));
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: TempOpcode = byte.Parse(Line.Substring(TempIndex + 3' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: TempOpcode = byte.Parse(Line.Substring(TempIndex + 3' 2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: MaxPosition = Math.Min(33' (Packet.Size - TempPosition) * 2);
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: MaxPosition = Math.Min(33' (Packet.Size - TempPosition) * 2);
Magic Number,WorldServer,SniffFile,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Scripting\PacketSenderScript.cs,Analyze,The following statement contains a magic number: Packet.Data[TempPosition] = byte.Parse(Line.Substring(TempIndex' 2)' System.Globalization.NumberStyles.HexNumber);
Duplicate Code,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,LoadRegionSpawns,The method contains a code clone-set at the following line numbers (starting from the method definition): ((16' 40)' (50' 74))
Missing Default,WorldServer,Loot,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,SendInteract,The following switch statement is missing a default case: switch (Menu.Menu)              {                  case 15: // Fermeture du loot                        return;                    case 13: // Récupération de tous les items                      if (Plr.ItmInterface.GetTotalFreeInventorySlot() < GetLootCount())                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_LOOT);                      else                      {                          for (byte i = 0; i < Loots.Count; ++i)                          {                              if (Loots[i] == null)                                  continue;                                TakeLoot(Plr' i);                          }                      }                        break;                    case 12: // Récupération d'un item                      TakeLoot(Plr' Menu.Num);                      break;              }
Missing Default,WorldServer,LootsMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\LootsMgr.cs,GenerateLoot,The following switch statement is missing a default case: switch ((SystemData.ItemRarity)Loot.Info.Rarity)                      {                          case SystemData.ItemRarity.ITEMRARITY_COMMON:                              Pct *= Program.Config.CommonLootRate;                              break;                          case SystemData.ItemRarity.ITEMRARITY_UNCOMMON:                              Pct *= Program.Config.UncommonLootRate;                              break;                          case SystemData.ItemRarity.ITEMRARITY_RARE:                              Pct *= Program.Config.RareLootRate;                              break;                          case SystemData.ItemRarity.ITEMRARITY_VERY_RARE:                              Pct *= Program.Config.VeryRareLootRate;                              break;                          case SystemData.ItemRarity.ITEMRARITY_ARTIFACT:                              Pct *= Program.Config.ArtifactLootRate;                              break;                      }
Missing Default,WorldServer,InterfaceHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InterfaceHandlers.cs,F_INTERFACE_COMMAND,The following switch statement is missing a default case: switch (CommandId)              {                    case 1: // ????                      {                      } break;                    case 2: // Resurrect Button                      {                          cclient.Plr.PreRespawnPlayer();                      } break;                    case 10: // Talisman Fuse                      {                      } break;                }
Missing Default,WorldServer,InventoryHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\InventoryHandlers.cs,F_BAG_INFO,The following switch statement is missing a default case: switch (Type)              {                  case 3: // Toggle Pvp                      Plr.CbtInterface.TurnPvp();                      break;                    case 16: // Buy more bag space                      byte Price = packet.GetUint8();                      if (!Plr.ItmInterface.HasMaxBag())                      {                          if (Plr.HaveMoney(Plr.ItmInterface.GetBagPrice()))                          {                              if (Plr.RemoveMoney(Plr.ItmInterface.GetBagPrice()))                              {                                  ++Plr.ItmInterface.BagBuy;                                  Plr.ItmInterface.SendMaxInventory(Plr);                              }                          }                      }                      break;              }
Missing Default,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following switch statement is missing a default case: switch (Type)              {                  case 0: // Mailbox closed                      {                        } break;                  case 1: // Mail sent                      {                          Plr.MlInterface.BuildMail(packet);                      } break;                  case 2: // Open mail                  case 3: // Return mail                  case 4: // Delete mail                  case 5: // Mark as read/unread                  case 7: // Take Item                  case 8: // Take money                      {                          byte Page = packet.GetUint8();                          UInt32 Guid = ByteOperations.ByteSwap.Swap(packet.GetUint32());                            Character_mail Mail = Plr.MlInterface.GetMail(Guid);                            switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }                      }                      break;              }
Missing Default,WorldServer,MailHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\MailHandlers.cs,F_MAIL,The following switch statement is missing a default case: switch (Type)                          {                              case 2:                                  if (!Mail.Opened)                                  {                                      Mail.Opened = true;                                      CharMgr.SaveMail(Mail);                                      Plr.MlInterface.SendMailCounts();                                      Plr.MlInterface.SendMailBox();                                  }                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 3:                                  //TODO                                  Plr.MlInterface.SendResult(GameData.MailResult.TEXT_MAIL_RESULT11);                                  break;                              case 4:                                  Plr.MlInterface.RemoveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 5:                                  packet.Skip(4);                                  Mail.Opened = (packet.GetUint8() == 1);                                  CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailCounts();                                  Plr.MlInterface.SendMailBox();                                  break;                              case 7:                                  packet.Skip(4);                                  byte itemnum = packet.GetUint8();                                  if (Mail.Items.Count < itemnum + 1)                                      return;                                    UInt16 FreeSlot = Plr.ItmInterface.GetFreeInventorySlot();                                  if (FreeSlot == 0)                                  {                                      Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                      return;                                  }                                    KeyValuePair<uint' ushort> item = Mail.Items.ElementAt(itemnum);                                  Plr.ItmInterface.CreateItem(item.Key' item.Value);                                  Mail.Items.Remove(item);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                              case 8:                                  if (Mail.Money > 0)                                  {                                      Plr.AddMoney(Mail.Money);                                      Mail.Money = 0;                                  }                                  // Take as many items as you can before inventory is full                                  List<KeyValuePair<uint' ushort>> ToRemove = new List<KeyValuePair<uint' ushort>>();                                    foreach (KeyValuePair<uint' ushort> curritem in Mail.Items)                                  {                                      UInt16 Slot = Plr.ItmInterface.GetFreeInventorySlot();                                      if (Slot == 0)                                      {                                          Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_OVERAGE_CANT_TAKE_ATTACHMENTS);                                          break;                                      }                                      Plr.ItmInterface.CreateItem(curritem.Key' curritem.Value);                                      ToRemove.Add(curritem);                                  }                                    foreach (KeyValuePair<uint' ushort> remove in ToRemove)                                      Mail.Items.Remove(remove);                                    CharMgr.SaveMail(Mail);                                  Plr.MlInterface.SendMailUpdate(Mail);                                  Plr.MlInterface.SendMail(Mail);                                  break;                          }
Missing Default,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_QUEST,The following switch statement is missing a default case: switch (State)              {                  case 1: // Show Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                              Crea.QtsInterface.BuildQuest(QuestID' cclient.Plr);                        } break;                    case 2: // Accept Quest                      {                          if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              if (cclient.Plr.QtsInterface.AcceptQuest(QuestID))                              {                                  if (!Crea.QtsInterface.CreatureHasStartQuest(cclient.Plr))                                  {                                      Crea.SendRemove(cclient.Plr);                                      Crea.SendMeTo(cclient.Plr);                                  }                              }                          }                        }break;                    case 3: // Quest Done                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                          {                              if (cclient.Plr.QtsInterface.DoneQuest(QuestID))                              {                                  Crea.SendRemove(cclient.Plr);                                  Crea.SendMeTo(cclient.Plr);                              }                          }                        } break;                    case 4: // Quest Done Info                      {                            if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              Crea.QtsInterface.SendQuestDoneInfo(cclient.Plr' QuestID);                          else if (Crea.QtsInterface.HasQuestStarter(QuestID))                          {                              Crea.QtsInterface.SendQuestInProgressInfo(cclient.Plr' QuestID);                          }                        } break;                    case 5: // Select Quest Reward                      {                          if (Crea.QtsInterface.hasQuestFinisher(QuestID))                              cclient.Plr.QtsInterface.SelectRewards(QuestID' Unk3);                        } break;                }
Missing Default,WorldServer,QuestHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\QuestHandlers.cs,F_REQUEST_QUEST,The following switch statement is missing a default case: switch (State)              {                  case 0: // Show Quest                      {                          cclient.Plr.QtsInterface.SendQuest(QuestID);                      } break;                    case 1: // Decline Quest                      {                          cclient.Plr.QtsInterface.DeclineQuest(QuestID);                      } break;                    case 2: // Send To Group                      {                        } break;              }
Missing Default,WorldServer,SocialHandlers,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\NetWork\Handler\SocialHandlers.cs,F_SOCIAL_NETWORK,The following switch statement is missing a default case: switch (Type)              {                  case 11: // Inspection                      {                          Player Target = Plr.CbtInterface.GetTarget(GameData.TargetTypes.TARGETTYPES_TARGET_ALLY) as Player;                          if (Target == null)                              Plr.SendLocalizeString(""' GameData.Localized_text.TEXT_SN_LISTS_ERR_PLAYER_NOT_FOUND);                          else                              Target.ItmInterface.SendInspect(Plr);                      }                      break;                  case 8:                      {                          packet.Skip(1);                          byte NameSize = packet.GetUint8();                          packet.Skip(1);                          string Name = packet.GetString(NameSize);                          byte GuildSize = packet.GetUint8();                          packet.Skip(1);                          string GuildName = packet.GetString(GuildSize);                          packet.Skip(1);                          UInt16 Career = packet.GetUint16();                          packet.Skip(4);                          UInt16 ZoneId = packet.GetUint16();                            while (ZoneId > 256)                              ZoneId -= 256;                            while (packet.GetUint8() != 0xFF) ;                            packet.Skip(2 + (ZoneId == 255 ? 0 : 1));                            byte MinLevel = packet.GetUint8();                          byte MaxLevel = packet.GetUint8();                            Plr.SocInterface.SendPlayers(Player.GetPlayers(Name' GuildName' Career' ZoneId' MinLevel' MaxLevel));                        } break;                }
Missing Default,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,OnTakeDamage,The following switch statement is missing a default case: switch (AI.State)              {                  case AiState.STANDING:                      CombatStart(Fighter);                      break;                  case AiState.MOVING:                      CombatStart(Fighter);                      break;              }
Missing Default,WorldServer,CombatInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\CombatInterface.cs,OnDealDamage,The following switch statement is missing a default case: switch (AI.State)              {                  case AiState.STANDING:                      CombatStart(Victim);                      break;                  case AiState.MOVING:                      CombatStart(Victim);                      break;              }
Missing Default,WorldServer,MovementInterface,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Interfaces\MovementInterface.cs,UpdateFollow,The following switch statement is missing a default case: switch (Formation)              {                  case eFormationType.Line:                      {                      int MinDist = Id * FollowMinDist;                      int MaxDist = MinDist + (FollowMaxDist - FollowMinDist);                        if (!_Owner.IsObjectInFront(FollowTarget' 10))                          TurnTo(FollowTarget'true);                        if (Dist >= MaxDist)                      {                          Point2D Tp = FollowTarget.GetBackPoint(FollowTarget.Heading' MinDist);                          NewPos.X = Tp.X;                          NewPos.Y = Tp.Y;                          NewPos.Z = FollowTarget.Z;                      }                        break;                      }                  case eFormationType.Protect:                      {                          if (!_Owner.IsObjectInFront(FollowTarget' 10))                              TurnTo(FollowTarget' true);                            if (Dist > FollowMaxDist)                          {                              Point2D Tp = FollowTarget.GetPointFromHeading((ushort)((float)4096 - ((float)4096 / (float)100 * Pct))' FollowMinDist);                              NewPos.X = Tp.X;                              NewPos.Y = Tp.Y;                              NewPos.Z = FollowTarget.Z;                          }                      }                      break;              }
Missing Default,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GeneratePQuestObjective,The following switch statement is missing a default case: switch ((Objective_Type)Obj.Type)              {                  case Objective_Type.QUEST_KILL_PLAYERS:                      {                          if (Obj.Description.Length < 1)                              Obj.Description = "Enemy Players";                      } break;                    case Objective_Type.QUEST_SPEACK_TO:                      goto case Objective_Type.QUEST_KILL_MOB;                    case Objective_Type.QUEST_KILL_MOB:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjectId' out ObjID);                            if (ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Description.Length < 1 && Obj.Creature != null)                              Obj.Description = Obj.Creature.Name;                      } break;                    case Objective_Type.QUEST_GET_ITEM:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjectId' out ObjID);                            if (ObjID != 0)                              Obj.Item = GetItem_Info(ObjID);                      }                      break;              }
Missing Default,WorldServer,WorldMgr,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\Managers\WorldMgr.cs,GenerateObjectif,The following switch statement is missing a default case: switch ((Objective_Type)Obj.ObjType)              {                  case Objective_Type.QUEST_KILL_PLAYERS:                      {                          if(Obj.Description.Length < 1)                              Obj.Description = "Enemy Players";                      }break;                    case Objective_Type.QUEST_SPEACK_TO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                             if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Npc'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Speak to " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_USE_GO:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                              Obj.GameObject = GetGameObjectProto(ObjID);                            if (Obj.GameObject == null)                          {                              Obj.Description = "Invalid Go'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.GameObject.Name.Length)                                  Obj.Description = "Find " + Obj.GameObject.Name;                          }                        } break;                    case Objective_Type.QUEST_KILL_MOB:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if(ObjID != 0)                              Obj.Creature = GetCreatureProto(ObjID);                            if (Obj.Creature == null)                          {                              Obj.Description = "Invalid Creature'plz report to GM. QuestID " + Obj.Entry + "'ObjId=" + Obj.ObjID;                          }                          else                          {                              if (Obj.Description == null || Obj.Description.Length <= Obj.Creature.Name.Length)                                  Obj.Description = "Kill " + Obj.Creature.Name;                          }                        } break;                    case Objective_Type.QUEST_GET_ITEM:                      {                          uint ObjID = 0;                          uint.TryParse(Obj.ObjID' out ObjID);                            if (ObjID != 0)                          {                              Obj.Item = GetItem_Info(ObjID);                              if (Obj.Item == null)                              {                                  int a =Obj.Quest.Particular.ToLower().IndexOf("kill the ");                                  if (a >= 0)                                  {                                      string[] RestWords = Obj.Quest.Particular.Substring(a + 9).Split(' ');                                      string Name = RestWords[0] + " " + RestWords[1];                                      Creature_proto Proto = GetCreatureProtoByName(Name);                                      if (Proto == null)                                          Proto = GetCreatureProtoByName(RestWords[0]);                                      if (Proto != null)                                      {                                          Obj.Item = new Item_Info();                                          Obj.Item.Entry = ObjID;                                          Obj.Item.Name = Obj.Description;                                          Obj.Item.MaxStack = 20;                                          Obj.Item.ModelId = 531;                                          _Item_Info.Add(Obj.Item.Entry' Obj.Item);                                            Log.Info("WorldMgr"' "Creating Quest(" + Obj.Entry + ") Item : " + Obj.Item.Entry + "'  " + Obj.Item.Name + "| Adding Loot to : " + Proto.Name);                                          Creature_loot loot = new Creature_loot();                                          loot.Entry = Proto.Entry;                                          loot.ItemId = Obj.Item.Entry;                                          loot.Info = Obj.Item;                                          loot.Pct = 0;                                          GetLoots(Proto.Entry).Add(loot);                                      }                                  }                              }                          }                      }                      break;              }
Missing Default,WorldServer,Unit,D:\research\architectureSmells\repos\WarEmu_WarEmu\WorldServer\World\Objects\Unit.cs,GenerateInteractType,The following switch statement is missing a default case: switch (Title)              {                  case 1: goto case 40;                  case 2: goto case 40;                  case 3: goto case 40;                  case 40:                      Type = GameData.InteractType.INTERACTTYPE_TRAINER;                      break;                    case 18: goto case 131;                  case 131:                      Type = GameData.InteractType.INTERACTTYPE_FLIGHT_MASTER;                      break;                    case 10: goto case 135;                  case 11: goto case 135;                  case 12: goto case 135;                  case 13: goto case 135;                  case 14: goto case 135;                  case 15: goto case 135;                  case 16: goto case 135;                    case 22:                      Type = GameData.InteractType.INTERACTTYPE_BANKER;                      break;                    case 31: goto case 135;                  case 34: goto case 135;                  case 115: goto case 135;                  case 116: goto case 135;                  case 117: goto case 135;                  case 118: goto case 135;                  case 119: goto case 135;                  case 120: goto case 135;                  case 121: goto case 135;                  case 122: goto case 135;                  case 125: goto case 135;                  case 126: goto case 135;                  case 127: goto case 135;                  case 128: goto case 135;                  case 129: goto case 135;                  case 130: goto case 135;                  case 135:                      Type = GameData.InteractType.INTERACTTYPE_DYEMERCHANT;                      break;                  case 144: goto case 40;                }
