Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,GameData,GameData,C:\repos\WarEmu_WarEmu\Common\Database\GameData.cs,,The length of the parameter CareerMaskKnightoftheblazingsun is 31.
Long Statement,Common,AccountMgr,C:\repos\WarEmu_WarEmu\Common\Rpc\AccountMgr.cs,UpdateRealmCharacters,The length of the statement  "            Database.ExecuteNonQuery("UPDATE realms SET OrderCharacters =" + OrderCharacters + "' DestruCharacters=" + DestruCharacters + " WHERE RealmId = " + RealmId); " is 157.
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 21);
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed >> 35) & 0xFF;
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 4);
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomCharacterString,The following statement contains a magic number: for (int i = 0; i < length / 2; i++)              {                  s.Append((char)('a' + fastAbs(randomDouble()) * 26d));                  s.Append((char)('A' + fastAbs(randomDouble()) * 26d));              }
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0)              {                  u1 = randomDouble();                  u2 = randomDouble();                    q = Math.Pow(u1' 2) + Math.Pow(u2' 2);              }
Magic Number,Common,FastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0)              {                  u1 = randomDouble();                  u2 = randomDouble();                    q = Math.Pow(u1' 2) + Math.Pow(u2' 2);              }
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 21);
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed >> 35) & 0xFF;
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 4);
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,randomCharacterString,The following statement contains a magic number: for (int i = 0; i < length / 2; i++)              {                  s.Append((char)('a' + fastAbs(randomDouble()) * 26d));                  s.Append((char)('A' + fastAbs(randomDouble()) * 26d));              }
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0)              {                  u1 = randomDouble();                  u2 = randomDouble();                    q = Math.Pow(u1' 2) + Math.Pow(u2' 2);              }
Magic Number,Common,SFastRandom,C:\repos\WarEmu_WarEmu\Common\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0)              {                  u1 = randomDouble();                  u2 = randomDouble();                    q = Math.Pow(u1' 2) + Math.Pow(u2' 2);              }
Magic Number,Common,AccountMgr,C:\repos\WarEmu_WarEmu\Common\Rpc\AccountMgr.cs,GenerateToken,The following statement contains a magic number: var md5bytes = new byte[16];
Magic Number,Common,AccountMgr,C:\repos\WarEmu_WarEmu\Common\Rpc\AccountMgr.cs,BuildClusterList,The following statement contains a magic number: lock (_Realms)              {                  Log.Info("BuildRealm"' "Sending " + _Realms.Count + " realm(s)");                    ClusterInfo.Builder cluster = ClusterInfo.CreateBuilder();                  foreach (Realm Rm in _Realms.Values)                  {                      cluster.SetClusterId(Rm.RealmId)                             .SetClusterName(Rm.Name)                             .SetLobbyHost(Rm.Adresse)                             .SetLobbyPort((uint)Rm.Port)                             .SetLanguageId(0)                             .SetMaxClusterPop(500)                             .SetClusterPopStatus(ClusterPopStatus.POP_UNKNOWN)                             .SetClusterStatus(ClusterStatus.STATUS_ONLINE);                        cluster.AddServerList(                          ServerInfo.CreateBuilder().SetServerId(Rm.RealmId)                                                    .SetServerName(Rm.Name)                                                    .Build());                        cluster.AddPropertyList(setProp("setting.allow_trials"' Rm.AllowTrials));                      cluster.AddPropertyList(setProp("setting.charxferavailable"' Rm.CharfxerAvailable));                      cluster.AddPropertyList(setProp("setting.language"' Rm.Language));                      cluster.AddPropertyList(setProp("setting.legacy"' Rm.Legacy));                      cluster.AddPropertyList(setProp("setting.manualbonus.realm.destruction"' Rm.BonusDestruction));                      cluster.AddPropertyList(setProp("setting.manualbonus.realm.order"' Rm.BonusOrder));                      cluster.AddPropertyList(setProp("setting.min_cross_realm_account_level"' "0"));                      cluster.AddPropertyList(setProp("setting.name"' Rm.Name));                      cluster.AddPropertyList(setProp("setting.net.address"' Rm.Adresse.ToString()));                      cluster.AddPropertyList(setProp("setting.net.port"' Rm.Port.ToString()));                      cluster.AddPropertyList(setProp("setting.redirect"' Rm.Redirect));                      cluster.AddPropertyList(setProp("setting.region"' Rm.Region));                      cluster.AddPropertyList(setProp("setting.retired"' Rm.Retired));                      cluster.AddPropertyList(setProp("status.queue.Destruction.waiting"' Rm.WaitingDestruction));                      cluster.AddPropertyList(setProp("status.queue.Order.waiting"' Rm.WaitingOrder));                      cluster.AddPropertyList(setProp("status.realm.destruction.density"' Rm.DensityDestruction));                      cluster.AddPropertyList(setProp("status.realm.order.density"' Rm.DensityOrder));                      cluster.AddPropertyList(setProp("status.servertype.openrvr"' Rm.OpenRvr));                      cluster.AddPropertyList(setProp("status.servertype.rp"' Rm.Rp));                      cluster.AddPropertyList(setProp("status.status"' Rm.Status));                      cluster.Build();                      ClusterListReplay.AddClusterList(cluster);                  }              }
