Implementation smell,Namespace,Class,File,Method,Description
Long Method,QuantityTypes.Dynamic,Dimensions,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Dimensions.cs,ToString,The method has 119 lines of code.
Complex Method,QuantityTypes.Dynamic,Dimensions,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Dimensions.cs,ToString,Cyclomatic complexity of the method is 21
Complex Method,QuantityTypes.Dynamic,Utilities,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Utilities.cs,TrySplit,Cyclomatic complexity of the method is 10
Long Parameter List,QuantityTypes.Dynamic,Dimensions,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Dimensions.cs,Dimensions,The method has 7 parameters. Parameters: mass' length' time' current' temperature' amount' intensity
Long Parameter List,QuantityTypes.Dynamic,Dimensions,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Dimensions.cs,Dimensions,The method has 7 parameters. Parameters: mass' length' time' current' temperature' amount' intensity
Long Statement,QuantityTypes.Dynamic,Dimensions,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Dimensions.cs,Equals,The length of the statement  "            return other.mass == this.mass && other.length == this.length && other.time == this.time && other.current == this.current && other.temperature == this.temperature && other.amountOfSubstance == this.amountOfSubstance && other.luminousIntensity == this.luminousIntensity;" is 269.
Long Statement,QuantityTypes.Dynamic,Utilities,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Utilities.cs,TrySplit,The length of the statement  "            var numberFormatInfo = provider.GetFormat(typeof(NumberFormatInfo)) as NumberFormatInfo ?? CultureInfo.CurrentCulture.NumberFormat;" is 131.
Complex Conditional,QuantityTypes.Dynamic,Utilities,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Utilities.cs,TrySplit,The conditional expression  "unitIndex + 1 < s.Length && (char.IsDigit(s[unitIndex + 1]) || s[unitIndex + 1] == '-' || s[unitIndex + 1] == '+')"  is complex.
Complex Conditional,QuantityTypes.Dynamic,Utilities,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Utilities.cs,TrySplit,The conditional expression  "char.IsDigit(c) || char.IsWhiteSpace(c) || c == '+' || c == '-' || isDecimalSeparator(c) || isGroupSeparator(c)"  is complex.
Magic Number,QuantityTypes.Dynamic,Utilities,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Dynamic\Utilities.cs,TrySplit,The following statement contains a magic number: unitIndex += 2;
