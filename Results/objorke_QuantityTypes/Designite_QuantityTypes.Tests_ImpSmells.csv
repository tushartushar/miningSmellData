Implementation smell,Namespace,Class,File,Method,Description
Long Statement,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_Empty_ThrowsException,The length of the statement  "            Assert.Throws<FormatException>(() => Length.Parse(string.Empty' CultureInfo.InvariantCulture)' "empty quantity (IFormatProvider)"); " is 131.
Long Statement,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_Empty_ThrowsException,The length of the statement  "            Assert.Throws<FormatException>(() => Length.Parse(string.Empty' CultureInfo.InvariantCulture' UnitProvider.Default)' "empty quantity (IFormatProvider' IUnitProvider)"); " is 168.
Long Statement,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_Empty_ThrowsException,The length of the statement  "            Assert.Throws<FormatException>(() => Length.Parse(string.Empty' UnitProvider.Default)' "empty quantity (IUnitProvider)"); " is 121.
Long Statement,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_Null_ThrowsException,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Length.Parse(null' CultureInfo.InvariantCulture)' "null quantity (IFormatProvider)"); " is 128.
Long Statement,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_Null_ThrowsException,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => Length.Parse(null' CultureInfo.InvariantCulture' UnitProvider.Default)' "null quantity (IFormatProvider' IUnitProvider)"); " is 165.
Long Statement,QuantityTypes.Tests,SecondMomentOfAreaTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\SecondMomentOfAreaTests.cs,Units,The length of the statement  "            AssertAreEqual(Length.Centimetre * Length.Centimetre * Length.Centimetre * Length.Centimetre' SecondMomentOfArea.CentimetreToTheFourth);" is 136.
Long Statement,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The length of the statement  "            Assert.AreEqual(100 * TemperatureDifference.DegreeCelsius' 100 * Temperature.DegreeCelsius - 0 * Temperature.DegreeCelsius);" is 124.
Long Statement,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The length of the statement  "            Assert.AreEqual(180 * TemperatureDifference.DegreeFahrenheit' 212 * Temperature.DegreeFahrenheit - 32 * Temperature.DegreeFahrenheit);" is 134.
Long Statement,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The length of the statement  "            Assert.AreEqual(60 * TemperatureRateOfChange.DegreeFahrenheitPerMinute' TemperatureRateOfChange.DegreeFahrenheitPerSecond);" is 123.
Long Statement,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The length of the statement  "            Assert.AreEqual(60 * TemperatureRateOfChange.DegreeFahrenheitPerHour' TemperatureRateOfChange.DegreeFahrenheitPerMinute);" is 121.
Long Statement,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The length of the statement  "            Assert.That(1500d / (5 * TypographicLength.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));" is 160.
Long Statement,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The length of the statement  "            Assert.That(1500d / (5 * Length.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));" is 149.
Long Statement,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The length of the statement  "            Assert.That(1500d / (300 * TypographicResolution.DotsPerInch)' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6 * TypographicLength.Inch));" is 149.
Long Statement,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The length of the statement  "            Assert.That((mySpeed * Velocity.KilometrePerHour).ToString("0.00"' CultureInfo.InvariantCulture)' Is.EqualTo("7.72 m^2/s^2")); " is 126.
Long Statement,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The length of the statement  "            Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8)); " is 146.
Long Statement,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The length of the statement  "            Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8)); " is 140.
Long Statement,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The length of the statement  "            Assert.That((mySpeed * Velocity.KilometrePerHour).ToString("0.00"' CultureInfo.InvariantCulture)' Is.EqualTo("27.78 m^2/s^2")); " is 127.
Long Statement,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,ToString_ConvertButDoNotShowUnit,The length of the statement  "            Assert.AreEqual("100.0 kmph"' (100 * Velocity.KilometrePerHour).ToString("0.0[!km/h] kmph"' CultureInfo.InvariantCulture)); " is 123.
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,SetDisplayUnit,The following statement contains a magic number: unitProvider.RegisterUnit(627.48 * Length.Millimetre' "alen");
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,SetDisplayUnit,The following statement contains a magic number: Assert.AreEqual("1 alen"' (0.62748 * Length.Metre).ToString(unitProvider));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,RegisterUnit_ParseRegisteredUnit,The following statement contains a magic number: Assert.AreEqual(5 * Length.Metre' Length.Parse("5 m"' unitProvider));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,RegisterUnitsByType_AndParseRegisteredUnit,The following statement contains a magic number: Assert.AreEqual(5 * Length.Kilometre' Length.Parse("5 km"' unitProvider));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,RegisterUnitsByAssembly_AndParseRegisteredUnit,The following statement contains a magic number: Assert.AreEqual(5 * Length.Kilometre' Length.Parse("5 km"' unitProvider));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,InvariantCulture,The following statement contains a magic number: Assert.AreEqual("1.2 m"' (1.2 * Length.Metre).ToString(up));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,LocalCulture,The following statement contains a magic number: Assert.AreEqual("1'2 m"' (1.2 * Length.Metre).ToString(up));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,CustomFootUnit,The following statement contains a magic number: Assert.That(Length.Parse("3'"' unitProvider).ConvertTo(Length.Foot)' Is.EqualTo(3));
Magic Number,QuantityTypes.Tests,UnitProviderTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Core\UnitProviderTests.cs,NumberGroup,The following statement contains a magic number: Assert.That(Length.Parse("300'000.00 metre"' unitProvider).ConvertTo(Length.Metre)' Is.EqualTo(300000));
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,Example1,The following statement contains a magic number: var v = 100 * Length.Metre / (9 * Time.Second);
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,Example1,The following statement contains a magic number: var v = 100 * Length.Metre / (9 * Time.Second);
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,Example1,The following statement contains a magic number: UnitProvider.Default.RegisterUnit(0.3048 * Length.Metre' "fot");
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,Example1,The following statement contains a magic number: var t1 = 10 * Temperature.DegreeCelsius;
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,Example1,The following statement contains a magic number: var b5 = (0 * Temperature.DegreeCelsius).Equals(273.15 * Temperature.Kelvin);
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,ReadMeExample,The following statement contains a magic number: Length s = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,ReadMeExample,The following statement contains a magic number: Time t = 9.58 * Time.Second;
Magic Number,QuantityTypes.Tests,Example,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Example.cs,ReadMeExample,The following statement contains a magic number: Temperature temp = 100 * Temperature.DegreeCelsius;
Magic Number,QuantityTypes.Tests,NewtonSoftJsonTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\NewtonSoftJsonTests.cs,Serialize_WithConverter,The following statement contains a magic number: var obj = new TestObject {Distance = 1.23*Length.Metre' Time = null};
Magic Number,QuantityTypes.Tests,NewtonSoftJsonTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\NewtonSoftJsonTests.cs,Deserialize_WithConverter,The following statement contains a magic number: Assert.AreEqual(1.23*Length.Metre' obj.Distance);
Magic Number,QuantityTypes.Tests,NewtonSoftJsonTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\NewtonSoftJsonTests.cs,Serialize_WithoutConverter,The following statement contains a magic number: var obj = new TestObject {Distance = 1.23*Length.Metre' Time = null};
Magic Number,QuantityTypes.Tests,NewtonSoftJsonTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\NewtonSoftJsonTests.cs,Deserialize_WithoutConverter,The following statement contains a magic number: Assert.AreEqual(1.23*Length.Metre' obj.Distance);
Magic Number,QuantityTypes.Tests,QuantityJsonConverterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\QuantityJsonConverterTests.cs,WriteJson,The following statement contains a magic number: this.WriteJson(19 * Length.Metre' "\"19 m\"");
Magic Number,QuantityTypes.Tests,QuantityJsonConverterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\JsonTests\QuantityJsonConverterTests.cs,WriteJson,The following statement contains a magic number: this.WriteJson(-1000 * Time.Millisecond' "\"-1 s\"");
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,UnaryPlusOperator,The following statement contains a magic number: Assert.AreEqual(90 * Angle.Degree' +(90 * Angle.Degree));
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,UnaryPlusOperator,The following statement contains a magic number: Assert.AreEqual(90 * Angle.Degree' +(90 * Angle.Degree));
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,UnaryMinusOperator,The following statement contains a magic number: Assert.AreEqual(-90 * Angle.Degree' -(90 * Angle.Degree));
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,UnaryMinusOperator,The following statement contains a magic number: Assert.AreEqual(-90 * Angle.Degree' -(90 * Angle.Degree));
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,AdditionAssignmentOperator,The following statement contains a magic number: a += 90 * Angle.Degree;
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,AdditionAssignmentOperator,The following statement contains a magic number: Assert.AreEqual(90 * Angle.Degree' a);
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,ToString_CheckSpaces,The following statement contains a magic number: var a = 90 * Angle.Degree;
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,ToString_NorwegianCulture_CheckSpaces,The following statement contains a magic number: var a = 90 * Angle.Degree;
Magic Number,QuantityTypes.Tests,AngleTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\AngleTests.cs,ParseStringToAngleType,The following statement contains a magic number: Assert.AreEqual(50' (convertedValue is Angle ? (Angle)convertedValue : new Angle()).ConvertTo(Angle.Radian));
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Constructors,The following statement contains a magic number: Assert.AreEqual(2' new Density(2).Value);
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Constructors,The following statement contains a magic number: Assert.AreEqual(2' new Density(2).Value);
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Constructors,The following statement contains a magic number: Assert.AreEqual(2' new Density("2kg/m^3").Value);
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(2' Density.Parse("2kg/m^3").Value' "correct unit");
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(2' Density.Parse("2").Value' "no unit");
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Units,The following statement contains a magic number: Assert.AreEqual(1 * Density.PoundPerCubicFoot' Mass.Pound / (Volume)(Length.Foot ^ 3)' "lb/ft^3");
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Units,The following statement contains a magic number: Assert.AreEqual(1 * Density.PoundPerCubicInch' Mass.Pound / (Volume)(Length.Inch ^ 3)' "lb/in^3");
Magic Number,QuantityTypes.Tests,DensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\DensityTests.cs,Units,The following statement contains a magic number: Assert.AreEqual(1 * Density.TonnePerCubicMetre' Mass.Tonne / (Volume)(Length.Metre ^ 3)' "t/m^3");
Magic Number,QuantityTypes.Tests,EnergyTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\EnergyTests.cs,EnergyTimeDivision,The following statement contains a magic number: Power p = (0.1 * Energy.KilowattHour) / (10.0*Time.Second);
Magic Number,QuantityTypes.Tests,EnergyTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\EnergyTests.cs,EnergyTimeDivision,The following statement contains a magic number: Power p = (0.1 * Energy.KilowattHour) / (10.0*Time.Second);
Magic Number,QuantityTypes.Tests,EnergyTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\EnergyTests.cs,EnergyTimeDivision,The following statement contains a magic number: Assert.AreEqual(36000.0 * Power.Watt' p);
Magic Number,QuantityTypes.Tests,FlowTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FlowTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60000 * Flow.LitrePerMinute' 1 * Flow.CubicMetrePerSecond);
Magic Number,QuantityTypes.Tests,FlowTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FlowTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(3600 * Flow.CubicMetrePerHour' 1 * Flow.CubicMetrePerSecond);
Magic Number,QuantityTypes.Tests,ForceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\ForceTests.cs,Units,The following statement contains a magic number: AssertAreEqual(Force.Kilonewton' 1000 * Force.Newton);
Magic Number,QuantityTypes.Tests,FractionTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FractionTests.cs,Parse_Percent,The following statement contains a magic number: Assert.AreEqual(0.5 * Fraction.Frac' Fraction.Parse("50 %"));
Magic Number,QuantityTypes.Tests,FractionTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FractionTests.cs,Parse_Percent,The following statement contains a magic number: Assert.AreEqual(0.5 * Fraction.Frac' Fraction.Parse("50"));
Magic Number,QuantityTypes.Tests,FractionTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FractionTests.cs,CompareTo,The following statement contains a magic number: IQuantity f1 = 100 * Fraction.Percent;
Magic Number,QuantityTypes.Tests,FractionTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FractionTests.cs,CompareTo,The following statement contains a magic number: object f2 = 0.5 * Fraction.Frac;
Magic Number,QuantityTypes.Tests,FractionTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\FractionTests.cs,OperatorMassConcentrationInWater,The following statement contains a magic number: Assert.AreEqual(0.1 * MassConcentrationInWater.KilogramPerCubicMetre' actual);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(2' new Length(2).Value);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(2' new Length(2).Value);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(2' new Length("2m").Value);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(2 * Length.Metre' Length.Metre + Length.Metre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(1 * Length.Metre' (2 * Length.Metre) - Length.Metre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(1 * Length.Metre' (2 * Length.Metre) / 2);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(1 * Length.Metre' (2 * Length.Metre) / 2);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(100 * Area.SquareMetre' (10 * Length.Metre) * (10 * Length.Metre));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(100 * Area.SquareMetre' (10 * Length.Metre) * (10 * Length.Metre));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(100 * Area.SquareMetre' (10 * Length.Metre) * (10 * Length.Metre));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(960' (10 * Length.Inch) * (96 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(960' (10 * Length.Inch) * (96 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(960' (10 * Length.Inch) * (96 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Length s = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Time t = 9.58 * Time.Second;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(10.44' v.ConvertTo(Velocity.MetrePerSecond)' 0.01);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(10.44' v.ConvertTo(Velocity.MetrePerSecond)' 0.01);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(37.58' v.ConvertTo(Velocity.KilometrePerHour)' 0.01);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Operators,The following statement contains a magic number: Assert.AreEqual(37.58' v.ConvertTo(Velocity.KilometrePerHour)' 0.01);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ConvertTo,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(0.1' l.ConvertTo(Length.Kilometre));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,SetFromString,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' l);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1E2 * Length.Metre' Length.Parse("1E2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1e2 * Length.Metre' Length.Parse("1e2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1E+2 * Length.Metre' Length.Parse("1E+2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1e+2 * Length.Metre' Length.Parse("1e+2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1E-2 * Length.Metre' Length.Parse("1E-2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_E,The following statement contains a magic number: Assert.AreEqual(1e-2 * Length.Metre' Length.Parse("1e-2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_InvariantCulture,The following statement contains a magic number: Assert.AreEqual(1.2 * Length.Metre' Length.Parse("1.2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_CustomCulture2,The following statement contains a magic number: Assert.AreEqual(1.2 * Length.Metre' Length.Parse("1'2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ParseWithUnitProvider,The following statement contains a magic number: Assert.AreEqual(1.2 * Length.Metre' Length.Parse("1.2 m"' unitProvider));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ParseWithDifferentFormatProvider,The following statement contains a magic number: Assert.AreEqual(1.2 * Length.Metre' Length.Parse("1'2 m"' this.customCulture' unitProvider));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TryParse_ValidSyntax_ReturnsTrue,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' q);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TryParse_DifferentProviders_ReturnsCorrectValue,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' q);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TryParse_ValidSyntax2_ReturnsTrue,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' q);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TryParse_NumberGroups_ReturnsFalse,The following statement contains a magic number: Assert.AreEqual(100200 * Length.Metre' q);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-2 * Length.Metre' Length.Parse("1e-2m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-2 * Length.Metre' Length.Parse("1e-2 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' Length.Parse("100 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' Length.Parse("0.1 km"' CultureInfo.InvariantCulture));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' Length.Parse("1e2"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' Length.Parse("1e2m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-10 * Length.Metre' Length.Parse("1Å"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(-60 * Length.Metre' Length.Parse(" -60 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Length.Metre' Length.Parse("100 m "));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-9 * Length.Metre' Length.Parse("1 nm"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-6 * Length.Metre' Length.Parse("1 um"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(1e-6 * Length.Metre' Length.Parse("1 µm"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_StringsWithWhitespace,The following statement contains a magic number: Assert.AreEqual(1100 * Length.Metre' Length.Parse("1 100 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_StringsWithWhitespace,The following statement contains a magic number: Assert.AreEqual(-100 * Length.Metre' Length.Parse("- 100 m"));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_ValidFormatStrings,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StringFormat,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StringFormat,The following statement contains a magic number: var l2 = 10 * Length.Nanometre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_ExponentialValues,The following statement contains a magic number: var l = 1.234e-8 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_ConvertToDisplayUnit,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_ConvertButDoNotShowUnit,The following statement contains a magic number: var l = 1.2 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_Unmatched_InvalidFormatString,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_DifferentProviders,The following statement contains a magic number: var l = 100.1 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_CustomCulture,The following statement contains a magic number: Assert.AreEqual("10.000.000.000'0 m"' (1e10 * Length.Metre).ToString("N"' this.customCulture));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Parse_CustomCulture,The following statement contains a magic number: Assert.AreEqual(1e10 * Length.Metre' Length.Parse(value' this.customCulture));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_ThousandSeparator_ValidFormatStrings,The following statement contains a magic number: var l = 1000 * Length.Kilometre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ToString_InvalidFormatString,The following statement contains a magic number: var l = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Compare,The following statement contains a magic number: var l1 = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Compare,The following statement contains a magic number: var l2 = 200 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Compare,The following statement contains a magic number: var l3 = 100 * Length.Metre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StoppingDistance,The following statement contains a magic number: var speed = 100.0 * Velocity.KilometrePerHour;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StoppingDistance,The following statement contains a magic number: var deceleration = 6.0 * Acceleration.MetrePerSecondSquared;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StoppingDistance,The following statement contains a magic number: var distance = (speed * reactionTime) + (speed * (speed / (2.0 * deceleration)));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,StoppingDistance,The following statement contains a magic number: Assert.AreEqual(92' distance.Value' 1);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(Area.SquareMetre' Length.Metre ^ 2);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(2 * Area.SquareMetre' 2 * (Area)(Length.Metre ^ 2));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(2 * Area.SquareMetre' 2 * (Area)(Length.Metre ^ 2));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(2 * Area.SquareMetre' 2 * (Area)(Length.Metre ^ 2));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(8 * Volume.CubicMetre' (Volume)((2 * Length.Metre) ^ 3));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(8 * Volume.CubicMetre' (Volume)((2 * Length.Metre) ^ 3));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.AreEqual(8 * Volume.CubicMetre' (Volume)((2 * Length.Metre) ^ 3));
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,PowerOperator,The following statement contains a magic number: Assert.Throws<NotSupportedException>(() => { var x = Length.Metre ^ 4; });
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Cubed,The following statement contains a magic number: Assert.AreEqual(8 * Volume.CubicMetre' (2 * Length.Metre).Cubed());
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Cubed,The following statement contains a magic number: Assert.AreEqual(8 * Volume.CubicMetre' (2 * Length.Metre).Cubed());
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Squared,The following statement contains a magic number: Assert.AreEqual(4 * Area.SquareMetre' (2 * Length.Metre).Squared());
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,Squared,The following statement contains a magic number: Assert.AreEqual(4 * Area.SquareMetre' (2 * Length.Metre).Squared());
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TypographicLengthToLengthImplicitConversion,The following statement contains a magic number: Length length = 10 * TypographicLength.Centimetre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TypographicLengthToLengthImplicitConversion,The following statement contains a magic number: Assert.AreEqual(10 * Length.Centimetre' length);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TypographicLengthToLengthImplicitConversion,The following statement contains a magic number: Assert.AreNotEqual(10 * Length.Centimetre' 10 * TypographicLength.Centimetre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,TypographicLengthToLengthImplicitConversion,The following statement contains a magic number: Assert.AreNotEqual(10 * Length.Centimetre' 10 * TypographicLength.Centimetre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,LengthToTypographicLengthImplicitConversion,The following statement contains a magic number: TypographicLength length = 10 * Length.Centimetre;
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,LengthToTypographicLengthImplicitConversion,The following statement contains a magic number: Assert.AreEqual(10 * TypographicLength.Centimetre' length);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,LengthToTypographicLengthImplicitConversion,The following statement contains a magic number: Assert.AreNotEqual(10 * Length.Centimetre' 10 * TypographicLength.Centimetre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,LengthToTypographicLengthImplicitConversion,The following statement contains a magic number: Assert.AreNotEqual(10 * Length.Centimetre' 10 * TypographicLength.Centimetre);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ScandinavianMile,The following statement contains a magic number: Assert.AreEqual(10 * Length.Kilometre' Length.ScandinavianMile);
Magic Number,QuantityTypes.Tests,LengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LengthTests.cs,ScandinavianMile,The following statement contains a magic number: Assert.AreEqual("10 mil"' (10 * Length.ScandinavianMile).ToString("[mil]"));
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (5 * Length.Metre)' 2 * LinearMassDensity.KilogramPerMetre);
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (5 * Length.Metre)' 2 * LinearMassDensity.KilogramPerMetre);
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (5 * Length.Metre)' 2 * LinearMassDensity.KilogramPerMetre);
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram' (2 * LinearMassDensity.KilogramPerMetre) * (5 * Length.Metre));
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram' (2 * LinearMassDensity.KilogramPerMetre) * (5 * Length.Metre));
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram' (2 * LinearMassDensity.KilogramPerMetre) * (5 * Length.Metre));
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (2 * LinearMassDensity.KilogramPerMetre)' 5 * Length.Metre);
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (2 * LinearMassDensity.KilogramPerMetre)' 5 * Length.Metre);
Magic Number,QuantityTypes.Tests,LinearMassDensityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\LinearMassDensityTests.cs,Operators,The following statement contains a magic number: AssertAreEqual(10 * Mass.Kilogram / (2 * LinearMassDensity.KilogramPerMetre)' 5 * Length.Metre);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(0.5d' new MassConcentrationInWater(0.5).Value);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(0.5d' new MassConcentrationInWater(0.5).Value);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(2e-2d' new MassConcentrationInWater("20mg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(2e-2d' new MassConcentrationInWater("20mg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(3e-5d' new MassConcentrationInWater("30ug/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(3e-5d' new MassConcentrationInWater("30ug/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(4e-5d' new MassConcentrationInWater("40 µg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationInWaterTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationInWaterTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(4e-5d' new MassConcentrationInWater("40 µg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(2d' new MassConcentration(2).Value);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_Double,The following statement contains a magic number: Assert.AreEqual(2d' new MassConcentration(2).Value);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(2d' new MassConcentration("2kg/m^3").Value);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(3e-6d' new MassConcentration("3 ug/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(3e-6d' new MassConcentration("3 ug/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(4e-6d' new MassConcentration("4µg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,Constructor_String,The following statement contains a magic number: Assert.AreEqual(4e-6d' new MassConcentration("4µg/L").Value' 1e-9);
Magic Number,QuantityTypes.Tests,MassConcentrationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\MassConcentrationTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(0.001d' wv.ConvertTo(MassConcentration.MilligramPerLitre));
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(100 * TemperatureDifference.DegreeCelsius' 100 * Temperature.DegreeCelsius - 0 * Temperature.DegreeCelsius);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(100 * TemperatureDifference.DegreeCelsius' 100 * Temperature.DegreeCelsius - 0 * Temperature.DegreeCelsius);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(180 * TemperatureDifference.DegreeFahrenheit' 212 * Temperature.DegreeFahrenheit - 32 * Temperature.DegreeFahrenheit);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(180 * TemperatureDifference.DegreeFahrenheit' 212 * Temperature.DegreeFahrenheit - 32 * Temperature.DegreeFahrenheit);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(180 * TemperatureDifference.DegreeFahrenheit' 212 * Temperature.DegreeFahrenheit - 32 * Temperature.DegreeFahrenheit);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(100 * TemperatureDifference.Kelvin' 100 * Temperature.Kelvin - 0 * Temperature.Kelvin);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConsistencyWithTemperature,The following statement contains a magic number: Assert.AreEqual(100 * TemperatureDifference.Kelvin' 100 * Temperature.Kelvin - 0 * Temperature.Kelvin);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual((100 * TemperatureDifference.DegreeCelsius).ConvertTo(TemperatureDifference.DegreeFahrenheit)' 180);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual((100 * TemperatureDifference.DegreeCelsius).ConvertTo(TemperatureDifference.DegreeFahrenheit)' 180);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual((100 * TemperatureDifference.DegreeCelsius).ConvertTo(TemperatureDifference.Kelvin)' 100);
Magic Number,QuantityTypes.Tests,TemperatureDifferenceTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureDifferenceTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual((100 * TemperatureDifference.DegreeCelsius).ConvertTo(TemperatureDifference.Kelvin)' 100);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,Operators,The following statement contains a magic number: TemperatureDifference deltaT = 100*TemperatureDifference.DegreeCelsius;
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,Operators,The following statement contains a magic number: TemperatureRateOfChange roc = 100*TemperatureRateOfChange.DegreeCelsiusPerHour;
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.KelvinPerMinute' TemperatureRateOfChange.KelvinPerSecond);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.KelvinPerHour' TemperatureRateOfChange.KelvinPerMinute);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.DegreeCelsiusPerMinute' TemperatureRateOfChange.DegreeCelsiusPerSecond);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.DegreeCelsiusPerHour' TemperatureRateOfChange.DegreeCelsiusPerMinute);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.DegreeFahrenheitPerMinute' TemperatureRateOfChange.DegreeFahrenheitPerSecond);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(60 * TemperatureRateOfChange.DegreeFahrenheitPerHour' TemperatureRateOfChange.DegreeFahrenheitPerMinute);
Magic Number,QuantityTypes.Tests,TemperatureRateOfChangeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureRateOfChangeTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(TemperatureRateOfChange.KelvinPerSecond' 1.8 * TemperatureRateOfChange.DegreeFahrenheitPerSecond);
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Operators,The following statement contains a magic number: Temperature b = 100 * Temperature.DegreeCelsius;
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Operators,The following statement contains a magic number: TemperatureDifference delta = 100 * TemperatureDifference.DegreeCelsius;
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Comparisons,The following statement contains a magic number: Temperature c = 273.15 * Temperature.Kelvin;
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(100' (37.7777778 * Temperature.DegreeCelsius).ConvertTo(Temperature.DegreeFahrenheit)' 1e-4);
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(100' (37.7777778 * Temperature.DegreeCelsius).ConvertTo(Temperature.DegreeFahrenheit)' 1e-4);
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(100' (37.7777778 * Temperature.DegreeCelsius).ConvertTo(Temperature.DegreeFahrenheit)' 1e-4);
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(0' (32 * Temperature.DegreeFahrenheit).ConvertTo(Temperature.DegreeCelsius));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ConvertTo,The following statement contains a magic number: Assert.AreEqual(273.15' (0 * Temperature.DegreeCelsius).ConvertTo(Temperature.Kelvin));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Temperature.DegreeCelsius' Temperature.Parse("100 C"));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Temperature.DegreeCelsius' Temperature.Parse("100 °C"));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Temperature.DegreeCelsius' Temperature.Parse("100 degC"));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Temperature.DegreeCelsius' Temperature.Parse("1e2"));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,Parse_ValidStrings,The following statement contains a magic number: Assert.AreEqual(100 * Temperature.DegreeCelsius' Temperature.Parse("1e2C"));
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ToString_ValidFormatStrings,The following statement contains a magic number: var l = 100 * Temperature.DegreeCelsius;
Magic Number,QuantityTypes.Tests,TemperatureTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TemperatureTests.cs,ToString_InvalidFormatString,The following statement contains a magic number: var l = 100 * Temperature.DegreeCelsius;
Magic Number,QuantityTypes.Tests,Tests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\Tests.cs,AssertAreEqual,The following statement contains a magic number: AssertAreEqual(expected' actual' 1e-6' message);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,TimeTimeProduct,The following statement contains a magic number: var a = 9.81 * Length.Metre / (Time.Second * Time.Second);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,TimeTimeProduct,The following statement contains a magic number: Assert.AreEqual(9.81 * Acceleration.MetrePerSecondSquared' a);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,SecondPowerOfTime,The following statement contains a magic number: var a = 9.81 * Length.Metre / (Time.Second ^ 2);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,SecondPowerOfTime,The following statement contains a magic number: var a = 9.81 * Length.Metre / (Time.Second ^ 2);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,SecondPowerOfTime,The following statement contains a magic number: Assert.AreEqual(9.81 * Acceleration.MetrePerSecondSquared' a);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,FromTimeSpan,The following statement contains a magic number: var q = TimeSpan.FromSeconds(23).ToQuantity();
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,FromTimeSpan,The following statement contains a magic number: Assert.AreEqual(23 * Time.Second' q);
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,ToTimeSpan,The following statement contains a magic number: var ts = (23 * Time.Second).ToTimeSpan();
Magic Number,QuantityTypes.Tests,TimeTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TimeTests.cs,ToTimeSpan,The following statement contains a magic number: Assert.AreEqual(23' ts.TotalSeconds);
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: var resolution = 300 * TypographicResolution.DotsPerInch;
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: var typographicLength = 5 * TypographicLength.Inch;
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: var length = 5 * Length.Inch;
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(typographicLength * resolution' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(typographicLength * resolution' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(resolution * typographicLength ' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(resolution * typographicLength ' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(length * resolution' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(length * resolution' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(resolution * length' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(resolution * length' Is.EqualTo(1500).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * TypographicLength.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * TypographicLength.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * TypographicLength.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * TypographicLength.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * Length.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * Length.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * Length.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (5 * Length.Inch)' QuantityIs.EqualTo(300 * TypographicResolution.DotsPerInch).Within(1e-6 * TypographicResolution.DotsPerInch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (300 * TypographicResolution.DotsPerInch)' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6 * TypographicLength.Inch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (300 * TypographicResolution.DotsPerInch)' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6 * TypographicLength.Inch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (300 * TypographicResolution.DotsPerInch)' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6 * TypographicLength.Inch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,Operators,The following statement contains a magic number: Assert.That(1500d / (300 * TypographicResolution.DotsPerInch)' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6 * TypographicLength.Inch));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitFromLength,The following statement contains a magic number: var length = 5 * Length.Inch;
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitFromLength,The following statement contains a magic number: Assert.That(typographicLength' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitFromLength,The following statement contains a magic number: Assert.That(typographicLength' QuantityIs.EqualTo(5 * TypographicLength.Inch).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitToLength,The following statement contains a magic number: var typographicLength = 5 * TypographicLength.Inch;
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitToLength,The following statement contains a magic number: Assert.That(length' QuantityIs.EqualTo(5 * Length.Inch).Within(1e-6));
Magic Number,QuantityTypes.Tests,TypographicLengthTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\TypographicLengthTests.cs,ImplicitToLength,The following statement contains a magic number: Assert.That(length' QuantityIs.EqualTo(5 * Length.Inch).Within(1e-6));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,KineticEnergy,The following statement contains a magic number: var e = 0.5 * Mass.Kilogram * (Velocity.MetrePerSecond * Velocity.MetrePerSecond);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,KineticEnergy,The following statement contains a magic number: Assert.AreEqual(0.5 * Energy.Joule' e);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,KineticEnergy2,The following statement contains a magic number: var e = 0.5 * Mass.Kilogram * (Velocity.MetrePerSecond ^ 2);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,KineticEnergy2,The following statement contains a magic number: var e = 0.5 * Mass.Kilogram * (Velocity.MetrePerSecond ^ 2);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,KineticEnergy2,The following statement contains a magic number: Assert.AreEqual(0.5 * Energy.Joule' e);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,FinalSpeed,The following statement contains a magic number: var vf2 = 2 * (5 * Acceleration.MetrePerSecondSquared) * (10 * Length.Metre);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,FinalSpeed,The following statement contains a magic number: var vf2 = 2 * (5 * Acceleration.MetrePerSecondSquared) * (10 * Length.Metre);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,FinalSpeed,The following statement contains a magic number: var vf2 = 2 * (5 * Acceleration.MetrePerSecondSquared) * (10 * Length.Metre);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,FinalSpeed,The following statement contains a magic number: Assert.AreEqual(10 * Velocity.MetrePerSecond' v2);
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: var mySpeed = 100 * Velocity.KilometrePerHour;
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: mySpeed = 100 * Velocity.MetrePerSecond;
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,VelocityMultipliedByVelocity,The following statement contains a magic number: Assert.That(mySpeed * Velocity.KilometrePerHour' QuantityIs.EqualTo(100 / 3.6 * VelocitySquared.MetreSquaredPerSecondSquared).Within(1e-8));
Magic Number,QuantityTypes.Tests,VelocityTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\Quantities\VelocityTests.cs,ToString_ConvertButDoNotShowUnit,The following statement contains a magic number: Assert.AreEqual("100.0 kmph"' (100 * Velocity.KilometrePerHour).ToString("0.0[!km/h] kmph"' CultureInfo.InvariantCulture));
Magic Number,QuantityTypes.Tests,DataContractSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\DataContractSerializationTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' t.Distance);
Magic Number,QuantityTypes.Tests,DataContractSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\DataContractSerializationTests.cs,Roundtrip,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' t.Distance);
Magic Number,QuantityTypes.Tests,Test,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\DataContractSerializationTests.cs,Test,The following statement contains a magic number: this.Distance = 100.2 * Length.Metre;
Magic Number,QuantityTypes.Tests,Test,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\DataContractSerializationTests.cs,Test,The following statement contains a magic number: this.Distance = 100.2 * Length.Metre;
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Double_Serialize,The following statement contains a magic number: Assert.AreEqual("1'2"' 1.2.ToString());
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Double_Serialize,The following statement contains a magic number: var xml = Serialize(1.2);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Deserialize,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' t2.Distance);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Length_Roundtrip,The following statement contains a magic number: var x1 = 5d / 7 * Length.Metre;
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Length_Roundtrip,The following statement contains a magic number: var x1 = 5d / 7 * Length.Metre;
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Length_Deserialize_WithUnit,The following statement contains a magic number: Assert.AreEqual(100.2 * Length.Metre' l);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Temperature_Serialize,The following statement contains a magic number: var xml = Serialize(37.5 * Temperature.DegreeCelsius);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Temperature_Deserialize,The following statement contains a magic number: Assert.AreEqual(37.5 * Temperature.DegreeCelsius' t1);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Temperature_Deserialize_WithUnit,The following statement contains a magic number: Assert.AreEqual(37.5 * Temperature.DegreeCelsius' t2);
Magic Number,QuantityTypes.Tests,XmlSerializationTests,C:\research\architectureSmells\repos\objorke_QuantityTypes\Source\QuantityTypes.Tests\XmlTests\XmlSerializationTests.cs,Temperature_Roundtrip,The following statement contains a magic number: var t1 = 37.5 * Temperature.DegreeCelsius;
