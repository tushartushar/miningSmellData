Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,Cyclomatic complexity of the method is 8
Long Parameter List,BoxStruct,Box,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Box.cs,Box,The method has 5 parameters.
Long Parameter List,Core,Matrix2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Matrix2D.cs,Matrix2D,The method has 9 parameters.
Long Parameter List,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The method has 6 parameters.
Long Statement,BoxStruct,Box,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Box.cs,Transform,The length of the statement  "	_matrix = Matrix2D.CreateTranslation (-_origin * _size.ToVector ()) * Matrix2D.CreateScale (_scale) * Matrix2D.CreateRotation (_rotation.Radians) * Matrix2D.CreateTranslation (_position); " is 187.
Long Statement,BoxStruct,Box,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Box.cs,GetAlignedRectangle,The length of the statement  "	var rectangle = new Rectangle ((int)_position.X' (int)_position.Y' (int)(_size.Width * _scale.X)' (int)(_size.Height * _scale.Y)); " is 130.
Long Statement,Core,Matrix2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Matrix2D.cs,ToString,The length of the statement  "	return "{ " + string.Format ("{{M11:{0} M12:{1} M13{2}}} {{M21:{3} M22:{4} M23:{5}}} {{M31:{6} M32:{7} M33:{8}}}"' M11' M12' M13' M21' M22' M23' M31' M32' M33) + " }"; " is 167.
Long Statement,Core,Matrix2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Matrix2D.cs,GetHashCode,The length of the statement  "	return M11.GetHashCode () + M12.GetHashCode () + M13.GetHashCode () + M21.GetHashCode () + M22.GetHashCode () + M23.GetHashCode () + M31.GetHashCode () + M32.GetHashCode () + M33.GetHashCode (); " is 194.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "		throw new InvalidOperationException ("Draw was called' but Begin has not yet been called. Begin must be called successfully before you can call Draw."); " is 152.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.TopLeft = new VertexPositionColorTexture (new Vector3 (position.X' position.Y' 0)' Color.White' new Vector2 (0' 0)); " is 121.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.TopRight = new VertexPositionColorTexture (new Vector3 (position.X + texture.Width' position.Y' 0)' Color.White' new Vector2 (1' 0)); " is 138.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.BottomLeft = new VertexPositionColorTexture (new Vector3 (position.X' position.Y + texture.Height' 0)' Color.White' new Vector2 (0' 1)); " is 141.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.BottomRight = new VertexPositionColorTexture (new Vector3 (position.X + texture.Width' position.Y + texture.Height' 0)' Color.White' new Vector2 (1' 1)); " is 158.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "		throw new InvalidOperationException ("Draw was called' but Begin has not yet been called. Begin must be called successfully before you can call Draw."); " is 152.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.TopRight = new VertexPositionColorTexture (new Vector3 (box.TopRight' 0)' color.Value' new Vector2 (textureBottomRight.X' textureTopLeft.Y)); " is 146.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Draw,The length of the statement  "	item.BottomLeft = new VertexPositionColorTexture (new Vector3 (box.BottomLeft' 0)' color.Value' new Vector2 (textureTopLeft.X' textureBottomRight.Y)); " is 150.
Long Statement,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,FlushVertexArray,The length of the statement  "	_graphicsDevice.DrawUserIndexedPrimitives (PrimitiveType.TriangleList' _vertexArray' 0' vertexCount' _indices' 0' (vertexCount / 4) * 2' VertexPositionColorTexture.VertexDeclaration); " is 183.
Virtual Method Call from Constructor,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,Batch2D,The constructor "Batch2D" calls a virtual method "CreateIndex".
Magic Number,Core,Circle,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Circle.cs,ToRectangle,The following statement contains a magic number: return new Rectangle ((int)(Position.X - R)' (int)(Position.Y - R)' (int)(R * 2)' (int)(R * 2));  
Magic Number,Core,Circle,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Circle.cs,ToRectangle,The following statement contains a magic number: return new Rectangle ((int)(Position.X - R)' (int)(Position.Y - R)' (int)(R * 2)' (int)(R * 2));  
Magic Number,Core,Rotation,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Rotation.cs,Rotation,The following statement contains a magic number: _degrees = degrees % 360;  
Magic Number,Core,Rotation,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Rotation.cs,Rotation,The following statement contains a magic number: if (_degrees < 0)  	_degrees = 360 + degrees;  
Magic Number,Core,Rotation,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Rotation.cs,Rotation,The following statement contains a magic number: _degrees = 360 + degrees;  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: if (_indices != null) {  	_indices.CopyTo (newIndices' 0);  	start = _indices.Length / 6;  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: start = _indices.Length / 6;  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: for (var i = start; i < count; i++) {  	newIndices [i * 6] = (short)(i * 4);  	newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  	newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  	newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  	newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  }  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [i * 6] = (short)(i * 4);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [i * 6] = (short)(i * 4);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 1] = (short)((i * 4) + 1);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 2] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 3] = (short)((i * 4) + 1);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 4] = (short)((i * 4) + 3);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: newIndices [(i * 6) + 5] = (short)((i * 4) + 2);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,CreateIndex,The following statement contains a magic number: _vertexArray = new VertexPositionColorTexture[4 * count];  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,FlushVertexArray,The following statement contains a magic number: _graphicsDevice.DrawUserIndexedPrimitives (PrimitiveType.TriangleList' _vertexArray' 0' vertexCount' _indices' 0' (vertexCount / 4) * 2' VertexPositionColorTexture.VertexDeclaration);  
Magic Number,Core.Graphics,Batch2D,C:\repos\GabrielDav_Solid2D\Solid2D\Core\Graphics\Batch2D.cs,FlushVertexArray,The following statement contains a magic number: _graphicsDevice.DrawUserIndexedPrimitives (PrimitiveType.TriangleList' _vertexArray' 0' vertexCount' _indices' 0' (vertexCount / 4) * 2' VertexPositionColorTexture.VertexDeclaration);  
