Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,ControlTransferAsync,Cyclomatic complexity of the method is 12
Complex Method,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,StrError,Cyclomatic complexity of the method is 14
Complex Method,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,MonoLibUsbErrorFromTransferStatus,Cyclomatic complexity of the method is 8
Long Parameter List,LibUsbDotNet.Main,Helper,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\Main\Helper.cs,ToString,The method has 5 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,GetDescriptor,The method has 5 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,GetDescriptor,The method has 5 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,ControlTransfer,The method has 8 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,ControlTransferAsync,The method has 8 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,ControlTransfer,The method has 8 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,BulkTransfer,The method has 6 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,BulkTransfer,The method has 6 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,InterruptTransfer,The method has 6 parameters.
Long Parameter List,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,InterruptTransfer,The method has 6 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbControlSetupHandle,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbControlSetupHandle.cs,MonoUsbControlSetupHandle,The method has 6 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbControlSetupHandle,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbControlSetupHandle.cs,MonoUsbControlSetupHandle,The method has 5 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbTransfer,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbTransfer.cs,FillBulk,The method has 7 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbTransfer,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbTransfer.cs,FillInterrupt,The method has 7 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbTransfer,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbTransfer.cs,FillIsochronous,The method has 8 parameters.
Long Parameter List,MonoLibUsb.Transfer,MonoUsbTransfer,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbTransfer.cs,FillControl,The method has 5 parameters.
Long Statement,LibUsbDotNet.Main,Helper,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\Main\Helper.cs,HexString,The length of the statement  "	StringBuilder sb = new StringBuilder ((data.Length * 2) + (data.Length * prefix.Length) + (data.Length * suffix.Length)); " is 121.
Long Statement,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,GetDescriptor,The length of the statement  "	return ControlTransfer (deviceHandle' (byte)UsbEndpointDirection.EndpointIn' (byte)UsbStandardRequest.GetDescriptor' (short)((descType << 8) | descIndex)' 0' pData' (short)length' 1000); " is 186.
Long Statement,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,ControlTransferAsync,The length of the statement  "	MonoUsbControlSetupHandle setupHandle = new MonoUsbControlSetupHandle (requestType' request' value' index' pData' dataLength); " is 126.
Long Statement,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,StopAndExit,The length of the statement  "	            if (LibUsbDotNet.LudnMonoLibUsb.MonoUsbDevice.mMonoUSBProfileList != null) LibUsbDotNet.LudnMonoLibUsb.MonoUsbDevice.mMonoUSBProfileList.Close();" is 145.
Long Statement,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The length of the statement  "			bool bSuccess = mUsbEventThread.Join ((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)); " is 124.
Long Statement,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The length of the statement  "			//bool bSuccess = mIsStoppedEvent.WaitOne((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)' false); " is 135.
Long Statement,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The length of the statement  "				throw new UsbException (typeof(MonoUsbEventHandler)' "Critical timeout failure! MonoUsbApi.HandleEventsTimeout did not return within the allotted time."); " is 154.
Long Statement,MonoLibUsb.Profile,MonoUsbProfileHandleEnumerator,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Profile\MonoUsbProfileHandleEnumerator.cs,MoveNext,The length of the statement  "	IntPtr pNextProfileHandle = Marshal.ReadIntPtr (new IntPtr (mProfileListHandle.DangerousGetHandle ().ToInt64 () + (mNextDeviceProfilePos * IntPtr.Size))); " is 154.
Long Statement,MonoLibUsb.Profile,MonoUsbProfileList,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Profile\MonoUsbProfileList.cs,syncWith,The length of the statement  "			//Console.WriteLine("DeviceDiscovery: Unchanged: Orig:{0} New:{1}"' mList[iFoundOldIndex].ProfileHandle.DangerousGetHandle()' newProfile.ProfileHandle.DangerousGetHandle()); " is 173.
Long Statement,MonoLibUsb.Profile,MonoUsbProfileList,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Profile\MonoUsbProfileList.cs,Refresh,The length of the statement  "			System.Diagnostics.Debug.Print ("libusb_get_device_list failed:{0} {1}"' (MonoUsbError)ret' MonoUsbApi.StrError ((MonoUsbError)ret)); " is 133.
Long Statement,MonoLibUsb.Transfer,MonoUsbTransfer,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Transfer\MonoUsbTransfer.cs,IsoPacket,The length of the statement  "	IntPtr pIsoPacket = new IntPtr (handle.ToInt64 () + OfsIsoPackets + (packetNumber * Marshal.SizeOf (typeof(libusb_iso_packet_descriptor)))); " is 140.
Magic Number,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,GetDescriptor,The following statement contains a magic number: return ControlTransfer (deviceHandle' (byte)UsbEndpointDirection.EndpointIn' (byte)UsbStandardRequest.GetDescriptor' (short)((descType << 8) | descIndex)' 0' pData' (short)length' 1000);  
Magic Number,MonoLibUsb,MonoUsbApi,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoLibUsbApi.cs,GetDescriptor,The following statement contains a magic number: return ControlTransfer (deviceHandle' (byte)UsbEndpointDirection.EndpointIn' (byte)UsbStandardRequest.GetDescriptor' (short)((descType << 8) | descIndex)' 0' pData' (short)length' 1000);  
Magic Number,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The following statement contains a magic number: if (!IsStopped && mRunning) {  	mRunning = false;  	if (bWait) {  		bool bSuccess = mUsbEventThread.Join ((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2));  		//bool bSuccess = mIsStoppedEvent.WaitOne((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)' false);  		if (!bSuccess) {  			mUsbEventThread.Abort ();  			throw new UsbException (typeof(MonoUsbEventHandler)' "Critical timeout failure! MonoUsbApi.HandleEventsTimeout did not return within the allotted time.");  			//LibUsbDotNet.UsbError.Error(ErrorCode.UnknownError' 0' "Critical timeout failure!"' typeof(MonoUsbEventHandler));  			//mIsStoppedEvent.Set();  		}  	}  	mUsbEventThread = null;  }  
Magic Number,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The following statement contains a magic number: if (!IsStopped && mRunning) {  	mRunning = false;  	if (bWait) {  		bool bSuccess = mUsbEventThread.Join ((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2));  		//bool bSuccess = mIsStoppedEvent.WaitOne((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)' false);  		if (!bSuccess) {  			mUsbEventThread.Abort ();  			throw new UsbException (typeof(MonoUsbEventHandler)' "Critical timeout failure! MonoUsbApi.HandleEventsTimeout did not return within the allotted time.");  			//LibUsbDotNet.UsbError.Error(ErrorCode.UnknownError' 0' "Critical timeout failure!"' typeof(MonoUsbEventHandler));  			//mIsStoppedEvent.Set();  		}  	}  	mUsbEventThread = null;  }  
Magic Number,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The following statement contains a magic number: if (bWait) {  	bool bSuccess = mUsbEventThread.Join ((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2));  	//bool bSuccess = mIsStoppedEvent.WaitOne((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)' false);  	if (!bSuccess) {  		mUsbEventThread.Abort ();  		throw new UsbException (typeof(MonoUsbEventHandler)' "Critical timeout failure! MonoUsbApi.HandleEventsTimeout did not return within the allotted time.");  		//LibUsbDotNet.UsbError.Error(ErrorCode.UnknownError' 0' "Critical timeout failure!"' typeof(MonoUsbEventHandler));  		//mIsStoppedEvent.Set();  	}  }  
Magic Number,MonoLibUsb,MonoUsbEventHandler,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\MonoUsbEventHandler.cs,Stop,The following statement contains a magic number: if (bWait) {  	bool bSuccess = mUsbEventThread.Join ((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2));  	//bool bSuccess = mIsStoppedEvent.WaitOne((int)((mWaitUnixNativeTimeval.tv_sec * 1000 + mWaitUnixNativeTimeval.tv_usec) * 1.2)' false);  	if (!bSuccess) {  		mUsbEventThread.Abort ();  		throw new UsbException (typeof(MonoUsbEventHandler)' "Critical timeout failure! MonoUsbApi.HandleEventsTimeout did not return within the allotted time.");  		//LibUsbDotNet.UsbError.Error(ErrorCode.UnknownError' 0' "Critical timeout failure!"' typeof(MonoUsbEventHandler));  		//mIsStoppedEvent.Set();  	}  }  
Magic Number,MonoLibUsb.Profile,MonoUsbProfile,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Profile\MonoUsbProfile.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return (mBusNumber.GetHashCode () * 397) ^ mDeviceAddress.GetHashCode ();  }  
Magic Number,MonoLibUsb.Profile,MonoUsbProfile,C:\repos\johannes85_bloenk-software\Libraries\LibUsbDotNet\MonoLibUsb\MonoUsbLib\..\..\LibWinUsb\MonoLibUsb\Profile\MonoUsbProfile.cs,GetHashCode,The following statement contains a magic number: return (mBusNumber.GetHashCode () * 397) ^ mDeviceAddress.GetHashCode ();  
