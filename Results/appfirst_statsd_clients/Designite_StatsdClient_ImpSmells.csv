Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Statsd,NativeMailSlot,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,CreateFile,The method has 7 parameters. Parameters: lpFileName' dwDesiredAccess' dwShareMode' SecurityAttributes' dwCreationDisposition' dwFlagsAndAttributes' hTemplateFile
Long Parameter List,Statsd,NativeMailSlot,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,GetMailslotInfo,The method has 5 parameters. Parameters: hMailslot' lpMaxMessageSize' lpNextSize' lpMessageCount' lpReadTimeout
Long Parameter List,Statsd,NativeMailSlot,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,WriteFile,The method has 5 parameters. Parameters: hFile' lpBuffer' nNumberOfBytesToWrite' lpNumberOfBytesWritten' lpOverlapped
Long Parameter List,Statsd,NativeMailSlot,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,ReadFile,The method has 5 parameters. Parameters: hFile' lpBuffer' nNumberOfBytesToRead' lpNumberOfBytesRead' lpOverlapped
Empty Catch Block,Statsd,MailSlotTransport,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,Close,The method has an empty catch block.
Magic Number,Statsd,BufferedStrategy,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\Client.cs,background,The following statement contains a magic number: while (true)              {                  Thread.Sleep(Interval / 2);                  buffer.SwapBuffers();                  Thread.Sleep(Interval / 2);                  Flush();              }
Magic Number,Statsd,BufferedStrategy,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\Client.cs,background,The following statement contains a magic number: while (true)              {                  Thread.Sleep(Interval / 2);                  buffer.SwapBuffers();                  Thread.Sleep(Interval / 2);                  Flush();              }
Magic Number,Statsd,MailSlotTransport,C:\repos\appfirst_statsd_clients\csharp\StatsdClient\MailSlot.cs,Send,The following statement contains a magic number: try              {                  UnicodeEncoding encoding = new UnicodeEncoding();                  string data_string = string.Format("{0}:{1}:{2}"' Process.GetCurrentProcess().Id' 3' mail);                  byte[] data_bytes = encoding.GetBytes(data_string);                  int byteCount = data_bytes.Length;                  if (byteCount > MAX_MESSAGE_SIZE)                  {                      Console.WriteLine(String.Format(                          "message size {0} bytes but is limited to {1} bytes' will be truncated"'                          byteCount' MAX_MESSAGE_SIZE));                      byteCount = MAX_MESSAGE_SIZE;                  }                  ensureMailSlot();                  mailSlot.Write(data_bytes' 0' byteCount);                  mailSlot.Flush();                    Console.WriteLine("sending " + data_string.Substring(0' encoding.GetCharCount(data_bytes' 0' byteCount)));              }              catch (IOException ioe)              {                  this.Close();                  Console.WriteLine(String.Format("{0} Exception caught."' ioe));                  return false;              }
