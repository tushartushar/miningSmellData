Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OpenGLTutorial14,Character,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,Character,The method has 7 parameters. Parameters: _id' _x1' _y1' _x2' _y2' _w' _h
Long Statement,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The length of the statement  "            return new FontVAO(program' new VBO<Vector3>(vertices)' new VBO<Vector2>(uvs)' new VBO<int>(indices' BufferTarget.ElementArrayBuffer)); " is 135.
Long Statement,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The length of the statement  "            Glut.glutInitDisplayMode(Glut.GLUT_DOUBLE | Glut.GLUT_DEPTH | Glut.GLUT_MULTISAMPLE);   // multisampling makes things beautiful! " is 128.
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: Vector3[] vertices = new Vector3[text.Length * 4];
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: Vector2[] uvs = new Vector2[text.Length * 4];
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: int[] indices = new int[text.Length * 6];
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: if (justification != Justification.Left)              {                  for (int i = 0; i < text.Length; i++)                      width += (int)characters[characters.ContainsKey(text[i]) ? text[i] : ' '].width;                  if (justification == Justification.Right) xpos = -width;                  else xpos = -width / 2;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: program["view_matrix"].SetValue(Matrix4.LookAt(new Vector3(0' 0' 10)' Vector3.Zero' new Vector3(0' 1' 0)));
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: for (int i = 0; i < 6; i++)              {                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 1);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4);                  triangles.Add(i * 4 + 2);                  triangles.Add(i * 4 + 3);              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,Main,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,CalculateTangents,The following statement contains a magic number: for (int i = 0; i < triangles.Length / 3; i++)              {                  Vector3 v1 = vertices[triangles[i * 3]];                  Vector3 v2 = vertices[triangles[i * 3 + 1]];                  Vector3 v3 = vertices[triangles[i * 3 + 2]];                    Vector2 w1 = uvs[triangles[i * 3]];                  Vector2 w2 = uvs[triangles[i * 3] + 1];                  Vector2 w3 = uvs[triangles[i * 3] + 2];                    float x1 = v2.X - v1.X;                  float x2 = v3.X - v1.X;                  float y1 = v2.Y - v1.Y;                  float y2 = v3.Y - v1.Y;                  float z1 = v2.Z - v1.Z;                  float z2 = v3.Z - v1.Z;                    float s1 = w2.X - w1.X;                  float s2 = w3.X - w1.X;                  float t1 = w2.Y - w1.Y;                  float t2 = w3.Y - w1.Y;                  float r = 1.0f / (s1 * t2 - s2 * t1);                  Vector3 sdir = new Vector3((t2 * x1 - t1 * x2) * r' (t2 * y1 - t1 * y2) * r' (t2 * z1 - t1 * z2) * r);                    tangents[triangles[i * 3]] += sdir;                  tangents[triangles[i * 3 + 1]] += sdir;                  tangents[triangles[i * 3 + 2]] += sdir;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnRenderFrame,The following statement contains a magic number: if (autoRotate)              {                  xangle += deltaTime / 2;                  yangle += deltaTime;              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnReshape,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 'w') up = true;              else if (key == 's') down = true;              else if (key == 'd') right = true;              else if (key == 'a') left = true;              else if (key == 27) Glut.glutLeaveMainLoop();
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w') up = false;              else if (key == 's') down = false;              else if (key == 'd') right = false;              else if (key == 'a') left = false;              else if (key == ' ') autoRotate = !autoRotate;              else if (key == 'l') lighting = !lighting;              else if (key == 'm') normalMapping = !normalMapping;              else if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }
Magic Number,OpenGLTutorial14,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial14\OpenGLTutorial14\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w') up = false;              else if (key == 's') down = false;              else if (key == 'd') right = false;              else if (key == 'a') left = false;              else if (key == ' ') autoRotate = !autoRotate;              else if (key == 'l') lighting = !lighting;              else if (key == 'm') normalMapping = !normalMapping;              else if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }
