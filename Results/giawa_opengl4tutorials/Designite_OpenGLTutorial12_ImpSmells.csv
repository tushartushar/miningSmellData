Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,BMFont,Cyclomatic complexity of the method is 14
Complex Method,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,Cyclomatic complexity of the method is 7
Long Parameter List,OpenGLTutorial12,FontVAO,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,FontVAO,The method has 4 parameters.
Long Statement,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The length of the statement  "	return new FontVAO (program' new VBO<Vector3> (vertices)' new VBO<Vector2> (uvs)' new VBO<int> (indices' BufferTarget.ElementArrayBuffer)); " is 139.
Long Statement,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The length of the statement  "	program ["projection_matrix"].SetValue (Matrix4.CreatePerspectiveFieldOfView (0.45f' (float)width / height' 0.1f' 1000f)); " is 122.
Long Statement,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The length of the statement  "		colors [i] = new Vector3 ((float)generator.NextDouble ()' (float)generator.NextDouble ()' (float)generator.NextDouble ()); " is 122.
Long Statement,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The length of the statement  "	program ["projection_matrix"].SetValue (Matrix4.CreatePerspectiveFieldOfView (0.45f' (float)width / height' 0.1f' 1000f)); " is 122.
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: if (justification != Justification.Left) {  	for (int i = 0; i < text.Length; i++)  		width += (int)characters [characters.ContainsKey (text [i]) ? text [i] : ' '].width;  	if (justification == Justification.Right)  		xpos = -width;  	else  		xpos = -width / 2;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: if (justification == Justification.Right)  	xpos = -width;  else  	xpos = -width / 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: xpos = -width / 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 1] = i * 4 + 0;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 1] = i * 4 + 0;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The following statement contains a magic number: program ["view_matrix"].SetValue (Matrix4.LookAt (new Vector3 (0' 0' 20)' Vector3.Zero' new Vector3 (0' 1' 0)));  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The following statement contains a magic number: fontProgram ["ortho_matrix"].SetValue (Matrix4.CreateOrthographic (width' height' 0' 1000));  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: fontProgram ["ortho_matrix"].SetValue (Matrix4.CreateOrthographic (width' height' 0' 1000));  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  } else if (key == 'r') {  	rainbow = !rainbow;  	program.Use ();  	program ["static_colors"].SetValue (rainbow);  }  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  } else if (key == 'r') {  	rainbow = !rainbow;  	program.Use ();  	program ["static_colors"].SetValue (rainbow);  }  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (fullscreen)  	Glut.glutFullScreen ();  else {  	Glut.glutPositionWindow (0' 0);  	Glut.glutReshapeWindow (1280' 720);  }  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (fullscreen)  	Glut.glutFullScreen ();  else {  	Glut.glutPositionWindow (0' 0);  	Glut.glutReshapeWindow (1280' 720);  }  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: Glut.glutReshapeWindow (1280' 720);  
Magic Number,OpenGLTutorial12,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: Glut.glutReshapeWindow (1280' 720);  
