Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OpenGLTutorial12,Character,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,Character,The method has 7 parameters. Parameters: _id' _x1' _y1' _x2' _y2' _w' _h
Long Statement,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The length of the statement  "            return new FontVAO(program' new VBO<Vector3>(vertices)' new VBO<Vector2>(uvs)' new VBO<int>(indices' BufferTarget.ElementArrayBuffer)); " is 135.
Long Statement,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The length of the statement  "            Glut.glutInitDisplayMode(Glut.GLUT_DOUBLE | Glut.GLUT_DEPTH | Glut.GLUT_MULTISAMPLE);   // multisampling makes things beautiful! " is 128.
Long Statement,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The length of the statement  "            for (int i = 0; i < colors.Length; i++) colors[i] = new Vector3((float)generator.NextDouble()' (float)generator.NextDouble()' (float)generator.NextDouble()); " is 157.
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: Vector3[] vertices = new Vector3[text.Length * 4];
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: Vector2[] uvs = new Vector2[text.Length * 4];
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: int[] indices = new int[text.Length * 6];
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: if (justification != Justification.Left)              {                  for (int i = 0; i < text.Length; i++)                      width += (int)characters[characters.ContainsKey(text[i]) ? text[i] : ' '].width;                  if (justification == Justification.Right) xpos = -width;                  else xpos = -width / 2;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The following statement contains a magic number: program["view_matrix"].SetValue(Matrix4.LookAt(new Vector3(0' 0' 20)' Vector3.Zero' new Vector3(0' 1' 0)));
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Main,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 27) Glut.glutLeaveMainLoop();
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }              else if (key == 'r')              {                  rainbow = !rainbow;                  program.Use();                  program["static_colors"].SetValue(rainbow);              }
Magic Number,OpenGLTutorial12,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }              else if (key == 'r')              {                  rainbow = !rainbow;                  program.Use();                  program["static_colors"].SetValue(rainbow);              }
Magic Number,OpenGLTutorial12,Particle,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Particle,The following statement contains a magic number: Direction = new Vector3((float)generator.NextDouble() * 2 - 1' 3 + (float)generator.NextDouble()' (float)generator.NextDouble() * 2 - 1);
Magic Number,OpenGLTutorial12,Particle,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Particle,The following statement contains a magic number: Direction = new Vector3((float)generator.NextDouble() * 2 - 1' 3 + (float)generator.NextDouble()' (float)generator.NextDouble() * 2 - 1);
Magic Number,OpenGLTutorial12,Particle,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Particle,The following statement contains a magic number: Direction = new Vector3((float)generator.NextDouble() * 2 - 1' 3 + (float)generator.NextDouble()' (float)generator.NextDouble() * 2 - 1);
Magic Number,OpenGLTutorial12,Particle,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Particle,The following statement contains a magic number: Life = life + (float)generator.NextDouble() * 2;
Magic Number,OpenGLTutorial12,Particle,C:\repos\giawa_opengl4tutorials\OpenGLTutorial12\OpenGLTutorial12\Program.cs,Update,The following statement contains a magic number: Direction += delta * new Vector3(0' -2' 0);
