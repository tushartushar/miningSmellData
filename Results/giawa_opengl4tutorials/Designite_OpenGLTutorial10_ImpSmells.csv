Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,Cyclomatic complexity of the method is 8
Long Parameter List,OpenGLTutorial10,Character,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,Character,The method has 7 parameters. Parameters: _id' _x1' _y1' _x2' _y2' _w' _h
Long Statement,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The length of the statement  "            return new FontVAO(program' new VBO<Vector3>(vertices)' new VBO<Vector2>(uvs)' new VBO<int>(indices' BufferTarget.ElementArrayBuffer)); " is 135.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The length of the statement  "            star = new VBO<Vector3>(new Vector3[] { new Vector3(-1' -1' 0)' new Vector3(1' -1' 0)' new Vector3(1' 1' 0)' new Vector3(-1' 1' 0) }); " is 134.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The length of the statement  "            starUV = new VBO<Vector2>(new Vector2[] { new Vector2(0' 0)' new Vector2(1' 0)' new Vector2(1' 1)' new Vector2(0' 1) }); " is 120.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The length of the statement  "                stars.Add(new Star(0' (float)i / numStars * 4f' new Vector3((float)generator.NextDouble()' (float)generator.NextDouble()' (float)generator.NextDouble()))); " is 155.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "            Vector3 position = 20 * new Vector3((float)(Math.Cos(phi) * Math.Sin(theta))' (float)Math.Cos(theta)' (float)(Math.Sin(phi) * Math.Sin(theta))); " is 144.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "                program["model_matrix"].SetValue(Matrix4.CreateTranslation(new Vector3(stars[i].dist' 0' 0)) * Matrix4.CreateRotationZ(stars[i].angle)); " is 136.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "                    stars[i].color = new Vector3((float)generator.NextDouble()' (float)generator.NextDouble()' (float)generator.NextDouble()); " is 122.
Long Statement,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "            FontVAO vao = font.CreateString(fontProgram' string.Format("Theta:   {0:0.000}'  Phi:   {1:0.000}"' theta' phi)' BMFont.Justification.Right); " is 141.
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: Vector3[] vertices = new Vector3[text.Length * 4];
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: Vector2[] uvs = new Vector2[text.Length * 4];
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: int[] indices = new int[text.Length * 6];
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: if (justification != Justification.Left)              {                  for (int i = 0; i < text.Length; i++)                      width += (int)characters[characters.ContainsKey(text[i]) ? text[i] : ' '].width;                  if (justification == Justification.Right) xpos = -width;                  else xpos = -width / 2;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,BMFont,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++)              {                  // grab the character' replacing with ' ' if the character isn't loaded                  Character ch = characters[characters.ContainsKey(text[i]) ? text[i] : ' '];                    vertices[i * 4 + 0] = new Vector3(xpos' ch.height' 0);                  vertices[i * 4 + 1] = new Vector3(xpos' 0' 0);                  vertices[i * 4 + 2] = new Vector3(xpos + ch.width' ch.height' 0);                  vertices[i * 4 + 3] = new Vector3(xpos + ch.width' 0' 0);                  xpos += (int)ch.width;                    uvs[i * 4 + 0] = new Vector2(ch.x1' ch.y1);                  uvs[i * 4 + 1] = new Vector2(ch.x1' ch.y2);                  uvs[i * 4 + 2] = new Vector2(ch.x2' ch.y1);                  uvs[i * 4 + 3] = new Vector2(ch.x2' ch.y2);                    indices[i * 6 + 0] = i * 4 + 2;                  indices[i * 6 + 1] = i * 4 + 0;                  indices[i * 6 + 2] = i * 4 + 1;                  indices[i * 6 + 3] = i * 4 + 3;                  indices[i * 6 + 4] = i * 4 + 2;                  indices[i * 6 + 5] = i * 4 + 1;              }
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: program["view_matrix"].SetValue(Matrix4.LookAt(new Vector3(0' 0' 20)' Vector3.Zero' new Vector3(0' 1' 0)));
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int>(new int[] { 0' 1' 2' 0' 2' 3 }' BufferTarget.ElementArrayBuffer);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int>(new int[] { 0' 1' 2' 0' 2' 3 }' BufferTarget.ElementArrayBuffer);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int>(new int[] { 0' 1' 2' 0' 2' 3 }' BufferTarget.ElementArrayBuffer);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: int numStars = 50;
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: if (theta < 0) theta += (float)Math.PI * 2;
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: Vector3 position = 20 * new Vector3((float)(Math.Cos(phi) * Math.Sin(theta))' (float)Math.Cos(theta)' (float)(Math.Sin(phi) * Math.Sin(theta)));
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: Vector3 upVector = ((theta % (Math.PI * 2)) > Math.PI) ? new Vector3(0' 1' 0) : new Vector3(0' -1' 0);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: for (int i = 0; i < stars.Count; i++)              {                  // set the position and color of this star                  program["model_matrix"].SetValue(Matrix4.CreateTranslation(new Vector3(stars[i].dist' 0' 0)) * Matrix4.CreateRotationZ(stars[i].angle));                  program["color"].SetValue(stars[i].color);                    Gl.BindBufferToShaderAttribute(star' program' "vertexPosition");                  Gl.BindBufferToShaderAttribute(starUV' program' "vertexUV");                  Gl.BindBuffer(starQuads);                    Gl.DrawElements(BeginMode.Triangles' starQuads.Count' DrawElementsType.UnsignedInt' IntPtr.Zero);                    // update the position of the star                  stars[i].angle += (float)i / stars.Count * deltaTime * 2;                  stars[i].dist -= 0.2f * deltaTime;                    // if we've reached the center then move this star outwards and give it a new color                  if (stars[i].dist < 0f)                  {                      stars[i].dist += 5f;                      stars[i].color = new Vector3((float)generator.NextDouble()' (float)generator.NextDouble()' (float)generator.NextDouble());                  }              }
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2(width / 2 - 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2(width / 2 - 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2(width / 2 - 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2(width / 2 - 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: fontProgram["ortho_matrix"].SetValue(Matrix4.CreateOrthographic(width' height' 0' 1000));
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2(-width / 2 + 10' height / 2 - font.Height - 10);
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 'w') up = true;              else if (key == 's') down = true;              else if (key == 'd') right = true;              else if (key == 'a') left = true;              else if (key == 27) Glut.glutLeaveMainLoop();
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w') up = false;              else if (key == 's') down = false;              else if (key == 'd') right = false;              else if (key == 'a') left = false;              else if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }
Magic Number,OpenGLTutorial10,Program,C:\repos\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w') up = false;              else if (key == 's') down = false;              else if (key == 'd') right = false;              else if (key == 'a') left = false;              else if (key == 'f')              {                  fullscreen = !fullscreen;                  if (fullscreen) Glut.glutFullScreen();                  else                  {                      Glut.glutPositionWindow(0' 0);                      Glut.glutReshapeWindow(1280' 720);                  }              }
