Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,BMFont,Cyclomatic complexity of the method is 14
Complex Method,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,Cyclomatic complexity of the method is 8
Complex Method,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,Cyclomatic complexity of the method is 7
Long Parameter List,OpenGLTutorial10,FontVAO,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,FontVAO,The method has 4 parameters.
Long Statement,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The length of the statement  "	return new FontVAO (program' new VBO<Vector3> (vertices)' new VBO<Vector2> (uvs)' new VBO<int> (indices' BufferTarget.ElementArrayBuffer)); " is 139.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The length of the statement  "	program ["projection_matrix"].SetValue (Matrix4.CreatePerspectiveFieldOfView (0.45f' (float)width / height' 0.1f' 1000f)); " is 122.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The length of the statement  "		stars.Add (new Star (0' (float)i / numStars * 4f' new Vector3 ((float)generator.NextDouble ()' (float)generator.NextDouble ()' (float)generator.NextDouble ()))); " is 161.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "	Vector3 position = 20 * new Vector3 ((float)(Math.Cos (phi) * Math.Sin (theta))' (float)Math.Cos (theta)' (float)(Math.Sin (phi) * Math.Sin (theta))); " is 150.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "		program ["model_matrix"].SetValue (Matrix4.CreateTranslation (new Vector3 (stars [i].dist' 0' 0)) * Matrix4.CreateRotationZ (stars [i].angle)); " is 143.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "			stars [i].color = new Vector3 ((float)generator.NextDouble ()' (float)generator.NextDouble ()' (float)generator.NextDouble ()); " is 127.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The length of the statement  "	FontVAO vao = font.CreateString (fontProgram' string.Format ("Theta:   {0:0.000}'  Phi:   {1:0.000}"' theta' phi)' BMFont.Justification.Right); " is 143.
Long Statement,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The length of the statement  "	program ["projection_matrix"].SetValue (Matrix4.CreatePerspectiveFieldOfView (0.45f' (float)width / height' 0.1f' 1000f)); " is 122.
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: if (justification != Justification.Left) {  	for (int i = 0; i < text.Length; i++)  		width += (int)characters [characters.ContainsKey (text [i]) ? text [i] : ' '].width;  	if (justification == Justification.Right)  		xpos = -width;  	else  		xpos = -width / 2;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: if (justification == Justification.Right)  	xpos = -width;  else  	xpos = -width / 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: xpos = -width / 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < text.Length; i++) {  	// grab the character' replacing with ' ' if the character isn't loaded  	Character ch = characters [characters.ContainsKey (text [i]) ? text [i] : ' '];  	vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  	vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  	vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  	vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  	xpos += (int)ch.width;  	uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  	uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  	uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  	uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  	indices [i * 6 + 0] = i * 4 + 2;  	indices [i * 6 + 1] = i * 4 + 0;  	indices [i * 6 + 2] = i * 4 + 1;  	indices [i * 6 + 3] = i * 4 + 3;  	indices [i * 6 + 4] = i * 4 + 2;  	indices [i * 6 + 5] = i * 4 + 1;  }  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 0] = new Vector3 (xpos' ch.height' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 1] = new Vector3 (xpos' 0' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 2] = new Vector3 (xpos + ch.width' ch.height' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: vertices [i * 4 + 3] = new Vector3 (xpos + ch.width' 0' 0);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 0] = new Vector2 (ch.x1' ch.y1);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 1] = new Vector2 (ch.x1' ch.y2);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 2] = new Vector2 (ch.x2' ch.y1);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: uvs [i * 4 + 3] = new Vector2 (ch.x2' ch.y2);  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 0] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 1] = i * 4 + 0;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 1] = i * 4 + 0;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 2] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 3] = i * 4 + 3;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 4] = i * 4 + 2;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,BMFont,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Font.cs,CreateString,The following statement contains a magic number: indices [i * 6 + 5] = i * 4 + 1;  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: program ["view_matrix"].SetValue (Matrix4.LookAt (new Vector3 (0' 0' 20)' Vector3.Zero' new Vector3 (0' 1' 0)));  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int> (new int[] {  	0'  	1'  	2'  	0'  	2'  	3  }' BufferTarget.ElementArrayBuffer);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int> (new int[] {  	0'  	1'  	2'  	0'  	2'  	3  }' BufferTarget.ElementArrayBuffer);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: starQuads = new VBO<int> (new int[] {  	0'  	1'  	2'  	0'  	2'  	3  }' BufferTarget.ElementArrayBuffer);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,Main,The following statement contains a magic number: fontProgram ["ortho_matrix"].SetValue (Matrix4.CreateOrthographic (width' height' 0' 1000));  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: if (theta < 0)  	theta += (float)Math.PI * 2;  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: theta += (float)Math.PI * 2;  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: for (int i = 0; i < stars.Count; i++) {  	// set the position and color of this star  	program ["model_matrix"].SetValue (Matrix4.CreateTranslation (new Vector3 (stars [i].dist' 0' 0)) * Matrix4.CreateRotationZ (stars [i].angle));  	program ["color"].SetValue (stars [i].color);  	Gl.BindBufferToShaderAttribute (star' program' "vertexPosition");  	Gl.BindBufferToShaderAttribute (starUV' program' "vertexUV");  	Gl.BindBuffer (starQuads);  	Gl.DrawElements (BeginMode.Triangles' starQuads.Count' DrawElementsType.UnsignedInt' IntPtr.Zero);  	// update the position of the star  	stars [i].angle += (float)i / stars.Count * deltaTime * 2;  	stars [i].dist -= 0.2f * deltaTime;  	// if we've reached the center then move this star outwards and give it a new color  	if (stars [i].dist < 0f) {  		stars [i].dist += 5f;  		stars [i].color = new Vector3 ((float)generator.NextDouble ()' (float)generator.NextDouble ()' (float)generator.NextDouble ());  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: stars [i].angle += (float)i / stars.Count * deltaTime * 2;  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2 (width / 2 - 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2 (width / 2 - 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2 (width / 2 - 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnRenderFrame,The following statement contains a magic number: vao.Position = new Vector2 (width / 2 - 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: fontProgram ["ortho_matrix"].SetValue (Matrix4.CreateOrthographic (width' height' 0' 1000));  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnReshape,The following statement contains a magic number: information.Position = new Vector2 (-width / 2 + 10' height / 2 - font.Height - 10);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 'w')  	up = true;  else if (key == 's')  	down = true;  else if (key == 'd')  	right = true;  else if (key == 'a')  	left = true;  else if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 's')  	down = true;  else if (key == 'd')  	right = true;  else if (key == 'a')  	left = true;  else if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 'd')  	right = true;  else if (key == 'a')  	left = true;  else if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 'a')  	left = true;  else if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardDown,The following statement contains a magic number: if (key == 27)  	Glut.glutLeaveMainLoop ();  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w')  	up = false;  else if (key == 's')  	down = false;  else if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'w')  	up = false;  else if (key == 's')  	down = false;  else if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 's')  	down = false;  else if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 's')  	down = false;  else if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'd')  	right = false;  else if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'a')  	left = false;  else if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (key == 'f') {  	fullscreen = !fullscreen;  	if (fullscreen)  		Glut.glutFullScreen ();  	else {  		Glut.glutPositionWindow (0' 0);  		Glut.glutReshapeWindow (1280' 720);  	}  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (fullscreen)  	Glut.glutFullScreen ();  else {  	Glut.glutPositionWindow (0' 0);  	Glut.glutReshapeWindow (1280' 720);  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: if (fullscreen)  	Glut.glutFullScreen ();  else {  	Glut.glutPositionWindow (0' 0);  	Glut.glutReshapeWindow (1280' 720);  }  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: Glut.glutReshapeWindow (1280' 720);  
Magic Number,OpenGLTutorial10,Program,D:\newReposJune17\giawa_opengl4tutorials\OpenGLTutorial10\OpenGLTutorial10\Program.cs,OnKeyboardUp,The following statement contains a magic number: Glut.glutReshapeWindow (1280' 720);  
