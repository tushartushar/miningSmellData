Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AppConfig,Log,C:\repos\bgripka_AppConfig\AppConfig\Log.cs,RaiseExceptionOccurred,Cyclomatic complexity of the method is 17
Complex Method,AppConfig.Windows.Forms.UI,RichTextMessageBox,C:\repos\bgripka_AppConfig\AppConfig\Windows\Forms\UI\RichTextMessageBox.cs,Show,Cyclomatic complexity of the method is 15
Long Statement,AppConfig.IO,ResourceAndSettingsFile,C:\repos\bgripka_AppConfig\AppConfig\IO\ResourceAndSettingsFile.cs,Save,The length of the statement  "		throw new Exception ("The 'Save' method is not allowed when a file name has not been set.  Check the 'IsFileNameSet' property and use the 'SaveAs' method when it is false."); " is 174.
Long Statement,AppConfig.IO,ResourceAndSettingsFile,C:\repos\bgripka_AppConfig\AppConfig\IO\ResourceAndSettingsFile.cs,Save,The length of the statement  "	string tempFilePath = Path.Combine (Environment.GetFolderPath (Environment.SpecialFolder.ApplicationData)' "App.Config\\Templating\\" + FileID.ToString () + ".zip"); " is 165.
Long Statement,AppConfig.Net,UdpNotification,C:\repos\bgripka_AppConfig\AppConfig\Net\UdpNotification.cs,StartListening,The length of the statement  "		throw new Exception ("UdpListener is already listening.  Call StopListening before calling StartListening a second time."); " is 123.
Long Statement,AppConfig.Reflection,AttributeUtil,C:\repos\bgripka_AppConfig\AppConfig\Reflection\Attribute.cs,GetAssemblyAttribute,The length of the statement  "		throw new Exception ("Error getting assembly attribute of type '" + typeof(T).FullName + "' from assembly '" + assembly.FullName + "'."' ex); " is 141.
Long Statement,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,RunAssemblyInstaller,The length of the statement  "	new System.Threading.Thread (new System.Threading.ParameterizedThreadStart (process_OutputDataReceived)).Start (process); " is 121.
Long Statement,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,RunAssemblyInstaller,The length of the statement  "	new System.Threading.Thread (new System.Threading.ParameterizedThreadStart (process_ErrorDataReceived)).Start (process); " is 120.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,GetEntryInstallingAssembly,The length of the statement  "		if (methodBase.DeclaringType != typeof(System.Configuration.Install.Installer) && !methodBase.DeclaringType.Assembly.FullName.StartsWith ("System.Configuration") && methodBase.DeclaringType.IsSubclassOf (typeof(System.Configuration.Install.Installer))) " is 252.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,GetInstallingConfiguration,The length of the statement  "		string configFilePath = Path.Combine (Path.GetDirectoryName (assembly.Location)' Path.GetFileNameWithoutExtension (assembly.Location)); " is 135.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,RegisterWithVisualStudio,The length of the statement  "	RegistryKey rkVisualStudioReference = Registry.LocalMachine.CreateSubKey (@"Software\Microsoft\.NETFramework\" + assembly.ImageRuntimeVersion + @"\AssemblyFolderEx\" + assembly.GetName ().Name); " is 194.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,UnregisterFromVisualStudio,The length of the statement  "	Registry.LocalMachine.DeleteSubKey (@"Software\Microsoft\.NETFramework\" + assembly.ImageRuntimeVersion + @"\AssemblyFolderEx\" + assembly.GetName ().Name); " is 156.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,AssociateFileExtension,The length of the statement  "		throw new Exception ("The icon file '" + Icon + "' to be associated with the extension '" + Extension + "' was not found."); " is 124.
Long Statement,AppConfig.Configuration.Install,InstallerUtilities,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\InstallerUtilities.cs,AssociateFileExtension,The length of the statement  "	Registry.SetValue (@"HKEY_LOCAL_MACHINE\Software\Classes\" + progID + @"\shell\open\command"' null' Assembly.Location + " \"%1\""); " is 131.
Virtual Method Call from Constructor,AppConfig.IO,SettingsFile,C:\repos\bgripka_AppConfig\AppConfig\IO\SettingsFile.cs,SettingsFile,The constructor "SettingsFile" calls a virtual method "SetDefaults".
Magic Number,AppConfig.Configuration,ArgumentParser,C:\repos\bgripka_AppConfig\AppConfig\Configuration\ArgumentParser.cs,ArgumentParser,The following statement contains a magic number: foreach (var arg in args) {  	var parts = arg.Split ('=');  	if (parts.Length != 2)  		continue;  	var name = parts [0].ToLowerInvariant ();  	var value = parts [1];  	if (!arguementTypes.ContainsKey (name))  		continue;  	try {  		this.Add (name' Convert.ChangeType (value' arguementTypes [name]));  	}  	catch {  		throw new Exception ("Arguement '" + name + "' cannot be casted to the required type '" + arguementTypes [name].FullName + "'.");  	}  }  
Magic Number,AppConfig.Configuration,ArgumentParser,C:\repos\bgripka_AppConfig\AppConfig\Configuration\ArgumentParser.cs,ArgumentParser,The following statement contains a magic number: if (parts.Length != 2)  	continue;  
Magic Number,AppConfig.IO,StreamExtentions,C:\repos\bgripka_AppConfig\AppConfig\IO\StreamExtentions.cs,ToByteArray,The following statement contains a magic number: try {  	byte[] readBuffer = new byte[4096];  	int totalBytesRead = 0;  	int bytesRead;  	while ((bytesRead = stream.Read (readBuffer' totalBytesRead' readBuffer.Length - totalBytesRead)) > 0) {  		totalBytesRead += bytesRead;  		if (totalBytesRead == readBuffer.Length) {  			int nextByte = stream.ReadByte ();  			if (nextByte != -1) {  				byte[] temp = new byte[readBuffer.Length * 2];  				Buffer.BlockCopy (readBuffer' 0' temp' 0' readBuffer.Length);  				Buffer.SetByte (temp' totalBytesRead' (byte)nextByte);  				readBuffer = temp;  				totalBytesRead++;  			}  		}  	}  	byte[] buffer = new byte[totalBytesRead];  	Buffer.BlockCopy (readBuffer' 0' buffer' 0' totalBytesRead);  	return buffer;  }  finally {  	stream.Position = originalPosition;  }  
Magic Number,AppConfig.IO,StreamExtentions,C:\repos\bgripka_AppConfig\AppConfig\IO\StreamExtentions.cs,ToByteArray,The following statement contains a magic number: try {  	byte[] readBuffer = new byte[4096];  	int totalBytesRead = 0;  	int bytesRead;  	while ((bytesRead = stream.Read (readBuffer' totalBytesRead' readBuffer.Length - totalBytesRead)) > 0) {  		totalBytesRead += bytesRead;  		if (totalBytesRead == readBuffer.Length) {  			int nextByte = stream.ReadByte ();  			if (nextByte != -1) {  				byte[] temp = new byte[readBuffer.Length * 2];  				Buffer.BlockCopy (readBuffer' 0' temp' 0' readBuffer.Length);  				Buffer.SetByte (temp' totalBytesRead' (byte)nextByte);  				readBuffer = temp;  				totalBytesRead++;  			}  		}  	}  	byte[] buffer = new byte[totalBytesRead];  	Buffer.BlockCopy (readBuffer' 0' buffer' 0' totalBytesRead);  	return buffer;  }  finally {  	stream.Position = originalPosition;  }  
Magic Number,AppConfig.IO,StreamExtentions,C:\repos\bgripka_AppConfig\AppConfig\IO\StreamExtentions.cs,ToByteArray,The following statement contains a magic number: while ((bytesRead = stream.Read (readBuffer' totalBytesRead' readBuffer.Length - totalBytesRead)) > 0) {  	totalBytesRead += bytesRead;  	if (totalBytesRead == readBuffer.Length) {  		int nextByte = stream.ReadByte ();  		if (nextByte != -1) {  			byte[] temp = new byte[readBuffer.Length * 2];  			Buffer.BlockCopy (readBuffer' 0' temp' 0' readBuffer.Length);  			Buffer.SetByte (temp' totalBytesRead' (byte)nextByte);  			readBuffer = temp;  			totalBytesRead++;  		}  	}  }  
Magic Number,AppConfig.IO,StreamExtentions,C:\repos\bgripka_AppConfig\AppConfig\IO\StreamExtentions.cs,ToByteArray,The following statement contains a magic number: if (totalBytesRead == readBuffer.Length) {  	int nextByte = stream.ReadByte ();  	if (nextByte != -1) {  		byte[] temp = new byte[readBuffer.Length * 2];  		Buffer.BlockCopy (readBuffer' 0' temp' 0' readBuffer.Length);  		Buffer.SetByte (temp' totalBytesRead' (byte)nextByte);  		readBuffer = temp;  		totalBytesRead++;  	}  }  
Magic Number,AppConfig.IO,StreamExtentions,C:\repos\bgripka_AppConfig\AppConfig\IO\StreamExtentions.cs,ToByteArray,The following statement contains a magic number: if (nextByte != -1) {  	byte[] temp = new byte[readBuffer.Length * 2];  	Buffer.BlockCopy (readBuffer' 0' temp' 0' readBuffer.Length);  	Buffer.SetByte (temp' totalBytesRead' (byte)nextByte);  	readBuffer = temp;  	totalBytesRead++;  }  
Magic Number,AppConfig,MD5Hash,C:\repos\bgripka_AppConfig\AppConfig\MD5Hash.cs,HashFile,The following statement contains a magic number: using (FileStream fileStream = new FileStream (uri.LocalPath' FileMode.Open' FileAccess.Read' FileShare.Read' 1024)) {  	return HashStream (fileStream);  }  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalSeconds < 60)  	return "Moments Ago";  else if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes == 1)  	return "1 Minute Ago";  else if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 1)  	return timeElapsed.TotalMinutes.ToString ("#0") + " Minutes Ago";  else if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalMinutes < 120)  	return " 1 Hour and " + timeElapsed.Minutes + " Minutes Ago";  else if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 24 && dateTime.Date == DateTime.Now.Date)  	return "About " + timeElapsed.TotalHours.ToString ("#0") + " Hours Ago";  else if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalHours < 48 && dateTime.Date == DateTime.Now.Date.AddDays (-1))  	return "Yesterday";  else if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalDays < 7)  	return dateTime.DayOfWeek.ToString ();  else if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig,DateTimeUtilities,C:\repos\bgripka_AppConfig\AppConfig\DateTimeUtilities.cs,GetRelativeTimeDescription,The following statement contains a magic number: if (timeElapsed.TotalDays < 14)  	return "Last " + dateTime.DayOfWeek.ToString ();  else  	return dateTime.ToString ("D");  
Magic Number,AppConfig.Net,UdpNotification,C:\repos\bgripka_AppConfig\AppConfig\Net\UdpNotification.cs,StartListening,The following statement contains a magic number: StartListening (IPAddress.Loopback' 4315);  
Magic Number,AppConfig.Net,UdpNotification,C:\repos\bgripka_AppConfig\AppConfig\Net\UdpNotification.cs,SendNotification,The following statement contains a magic number: SendNotification (IPAddress.Loopback' 4315' Message);  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,process_OutputDataReceived,The following statement contains a magic number: while (true) {  	while (!process.StandardOutput.EndOfStream) {  		int count = process.StandardOutput.Read (buffer' 0' buffer.Length);  		if (InstallerOutputReceived != null)  			InstallerOutputReceived.Invoke (this' new StringDataEventArgs (new string (buffer' 0' count)));  	}  	if (process.HasExited && process.StandardOutput.EndOfStream)  		return;  	System.Threading.Thread.Sleep (100);  }  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,process_OutputDataReceived,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,process_ErrorDataReceived,The following statement contains a magic number: while (true) {  	while (!process.StandardError.EndOfStream) {  		int count = process.StandardError.Read (buffer' 0' buffer.Length);  		if (InstallerOutputReceived != null)  			InstallerOutputReceived.Invoke (this' new StringDataEventArgs (new string (buffer' 0' count)));  	}  	if (process.HasExited && process.StandardOutput.EndOfStream)  		return;  	System.Threading.Thread.Sleep (100);  }  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,process_ErrorDataReceived,The following statement contains a magic number: System.Threading.Thread.Sleep (100);  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,GetFrameworkVersion,The following statement contains a magic number: return new Version (4' 0' 30319);  
Magic Number,AppConfig.Configuration.Install,AssemblyInstaller,C:\repos\bgripka_AppConfig\AppConfig\Configuration\Install\AssemblyInstaller.cs,GetFrameworkVersion,The following statement contains a magic number: return new Version (4' 0' 30319);  
Missing Default,AppConfig,Log,C:\repos\bgripka_AppConfig\AppConfig\Log.cs,RaiseExceptionOccurred,The following switch statement is missing a default case: switch (logLevel) {  case LogLevel.Debug:  	iLog.Debug (e.LogInfoMessage' e.Exception);  	break;  case LogLevel.Error:  	iLog.Error (e.LogInfoMessage' e.Exception);  	break;  case LogLevel.Fatal:  	iLog.Fatal (e.LogInfoMessage' e.Exception);  	break;  case LogLevel.Info:  	iLog.Info (e.LogInfoMessage' e.Exception);  	break;  case LogLevel.Warn:  	iLog.Warn (e.LogInfoMessage' e.Exception);  	break;  }  
