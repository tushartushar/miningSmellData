Implementation smell,Namespace,Class,File,Method,Description
Long Method,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,CheckDocumentHeader,The method has 161 lines of code.
Long Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,The method has 122 lines of code.
Long Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The method has 161 lines of code.
Long Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseCData,The method has 138 lines of code.
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,BatchFilesProcessor,Cyclomatic complexity of the method is 15
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessElement,Cyclomatic complexity of the method is 12
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,GetFilename,Cyclomatic complexity of the method is 8
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,SaveFictionBook,Cyclomatic complexity of the method is 14
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,Cyclomatic complexity of the method is 19
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessZipFile,Cyclomatic complexity of the method is 21
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessRarFile,Cyclomatic complexity of the method is 15
Complex Method,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessFile,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteStartElement,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteFullEndElement,Cyclomatic complexity of the method is 25
Complex Method,FB2Fix,Program,C:\repos\Gremlin2_Fb2Fix\Program.cs,Main,Cyclomatic complexity of the method is 12
Complex Method,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,Cyclomatic complexity of the method is 13
Complex Method,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,ReadHeader,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,ProcessFileError,Cyclomatic complexity of the method is 16
Complex Method,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,RARCallback,Cyclomatic complexity of the method is 15
Complex Method,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,CommandLineParser,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,Cyclomatic complexity of the method is 32
Complex Method,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,GetUsageString,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,LexFileArguments,Cyclomatic complexity of the method is 15
Complex Method,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceData,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceData,Cyclomatic complexity of the method is 13
Complex Method,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceEvent,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceEvent,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.ObjectModel,AuthorInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\AuthorInfoNode.cs,Store,Cyclomatic complexity of the method is 13
Complex Method,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,FictionBook,Cyclomatic complexity of the method is 17
Complex Method,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,CheckDocumentHeader,Cyclomatic complexity of the method is 32
Complex Method,FB2Fix.ObjectModel,DocumentInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\DocumentInfoNode.cs,Store,Cyclomatic complexity of the method is 18
Complex Method,FB2Fix.ObjectModel,DocumentNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\DocumentNode.cs,LoadDateElement,Cyclomatic complexity of the method is 8
Complex Method,FB2Fix.ObjectModel,PublishInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\PublishInfoNode.cs,Store,Cyclomatic complexity of the method is 12
Complex Method,FB2Fix.ObjectModel,SequenceInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\SequenceInfoNode.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix.ObjectModel,TitleInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\TitleInfoNode.cs,Store,Cyclomatic complexity of the method is 20
Complex Method,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,Cyclomatic complexity of the method is 36
Complex Method,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ScanToEnd,Cyclomatic complexity of the method is 17
Complex Method,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SetLiteralType,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,Cyclomatic complexity of the method is 21
Complex Method,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SniffMeta,Cyclomatic complexity of the method is 13
Complex Method,FB2Fix.Sgml,ContentModel,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SetDeclaredContent,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.Sgml,Group,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AddConnector,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.Sgml,Group,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AddOccurrence,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix.Sgml,Group,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,CanContain,Cyclomatic complexity of the method is 8
Complex Method,FB2Fix.Sgml,AttDef,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SetType,Cyclomatic complexity of the method is 44
Complex Method,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Parse,Cyclomatic complexity of the method is 26
Complex Method,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ParseMarkup,Cyclomatic complexity of the method is 16
Complex Method,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ParseEntity,Cyclomatic complexity of the method is 12
Complex Method,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ParseElementDecl,Cyclomatic complexity of the method is 12
Complex Method,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ParseModel,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,LazyLoadDtd,Cyclomatic complexity of the method is 16
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,Cyclomatic complexity of the method is 56
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseTag,Cyclomatic complexity of the method is 11
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,Cyclomatic complexity of the method is 32
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseDocType,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseCData,Cyclomatic complexity of the method is 21
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ExpandEntity,Cyclomatic complexity of the method is 8
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ReadString,Cyclomatic complexity of the method is 9
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ReadInnerXml,Cyclomatic complexity of the method is 10
Complex Method,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ValidateContent,Cyclomatic complexity of the method is 14
Long Parameter List,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessElement,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceEvent,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomConsoleTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomConsoleTraceListener.cs,TraceEvent,The method has 6 parameters.
Long Parameter List,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The method has 5 parameters.
Long Parameter List,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The method has 6 parameters.
Long Parameter List,FB2Fix.Logging,TraceEventTypeFilter,C:\repos\Gremlin2_Fb2Fix\Logging\TraceEventTypeFilter.cs,ShouldTrace,The method has 8 parameters.
Long Parameter List,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The method has 5 parameters.
Long Parameter List,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetChars,The method has 5 parameters.
Long Parameter List,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The method has 5 parameters.
Long Parameter List,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The method has 5 parameters.
Long Parameter List,FB2Fix.Sgml,ElementDecl,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ElementDecl,The method has 6 parameters.
Long Parameter List,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Parse,The method has 7 parameters.
Long Parameter List,FB2Fix.Sgml,SgmlDtd,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Parse,The method has 7 parameters.
Long Identifier,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,GetUsageString,The length of the parameter minimumNumberOfCharsForHelpText is 31.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,GetOutputFileName,The length of the statement  "			fullFilename = Path.Combine (path' StringUtils.Truncate (filename' options.maxLength - extension.Length - suffix.Length)) + suffix + extension; " is 143.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The length of the statement  "			encoding = Encoding.GetEncoding ((int)this.preferedCodepage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ()); " is 137.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The length of the statement  "			encoding = Encoding.GetEncoding (encoding.CodePage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ()); " is 128.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessRarFile,The length of the statement  "										string outputFilename = GetOutputFileName (this.outputDirectoryBad' Path.GetFileNameWithoutExtension (entryName)' ".fb2"); " is 122.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessFile,The length of the statement  "				ProcessDocument (fileStream' Path.GetFileNameWithoutExtension (filename)' File.GetLastWriteTimeUtc (filename) + localOffset); " is 125.
Long Statement,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessFile,The length of the statement  "					string outputFilename = GetOutputFileName (this.outputDirectoryBad' Path.GetFileNameWithoutExtension (filename)' ".fb2"); " is 121.
Long Statement,FB2Fix,FileNamePattern,C:\repos\Gremlin2_Fb2Fix\FileNameProvider.cs,Parse,The length of the statement  "				FileNamePatternElement patternElement = (FileNamePatternElement)Activator.CreateInstance (patternType' namePattern.Value); " is 122.
Long Statement,FB2Fix,Program,C:\repos\Gremlin2_Fb2Fix\Program.cs,Main,The length of the statement  "		errorConsoleListener.Filter = new TraceEventTypeFilter (TraceEventTypes.Critical | TraceEventTypes.Error | TraceEventTypes.Warning' arguments.loglevel); " is 152.
Long Statement,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The length of the statement  "					string option = argument.Substring (argumentPrefixLength' endIndex == -1 ? argument.Length - argumentPrefixLength : endIndex - argumentPrefixLength); " is 149.
Long Statement,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The length of the statement  "					else if (argument.Length > argumentPrefixLength + option.Length && argument [argumentPrefixLength + option.Length] == ':') { " is 124.
Long Statement,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,IsValidElementType,The length of the statement  "	return type != null && (type == typeof(int) || type == typeof(uint) || type == typeof(string) || type == typeof(bool) || type.IsEnum); " is 134.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,Write,The length of the statement  "	base.Write (String.Format ("{0}:{1}: {2}"' DateTime.Now.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' TraceEventType.Verbose).PadLeft (11)' message)); " is 182.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,WriteLine,The length of the statement  "	base.WriteLine (String.Format ("{0}:{1}: {2}"' DateTime.Now.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' TraceEventType.Verbose).PadLeft (11)' message)); " is 186.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The length of the statement  "	base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message)); " is 174.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The length of the statement  "	base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message)); " is 174.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The length of the statement  "	base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message)); " is 174.
Long Statement,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The length of the statement  "	base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message)); " is 174.
Long Statement,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ChangeDocumentStatus,The length of the statement  "	XmlNode statusInfoNode = document.SelectSingleNode ("//FictionBook/description/custom-info[@info-type='fb2fix-status']"); " is 121.
Long Statement,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,CheckAuthorInfo,The length of the statement  "		else if ((String.IsNullOrEmpty (author.FirstName) && String.IsNullOrEmpty (author.LastName)) && String.IsNullOrEmpty (author.NickName)) { " is 137.
Long Statement,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,CheckDocumentHeader,The length of the statement  "			if (programUsed.IndexOf ("LibRusEc kit"' StringComparison.InvariantCultureIgnoreCase) >= 0 && !String.IsNullOrEmpty (documentInfo.Id)) { " is 136.
Long Statement,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,CheckDocumentHeader,The length of the statement  "				XmlElement xmlPreviousId = this.document.SelectSingleNode ("//FictionBook/description/custom-info[@info-type='previous-id']") as XmlElement; " is 140.
Long Statement,FB2Fix.ObjectModel,PublishInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\PublishInfoNode.cs,Store,The length of the statement  "		if ((childElement = StoreElement (document' "year"' this.year.Value.ToString (CultureInfo.InvariantCulture))) != null) { " is 120.
Long Statement,FB2Fix.ObjectModel,PublishInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\PublishInfoNode.cs,IsEmpty,The length of the statement  "	return String.IsNullOrEmpty (bookName) && String.IsNullOrEmpty (publisher) && String.IsNullOrEmpty (city) && String.IsNullOrEmpty (isbn) && year == null && sequences.Count == 0; " is 177.
Long Statement,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Context,The length of the statement  "			msg = String.Format ("\nReferenced on line {0}' position {1} of internal entity '{2}'"' p.Line' p.LinePosition' p.Name); " is 120.
Long Statement,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Context,The length of the statement  "			msg = String.Format ("\nReferenced on line {0}' position {1} of '{2}' entity at [{3}]"' p.Line' p.LinePosition' p.Name' p.ResolvedUri.AbsolutePath); " is 148.
Long Statement,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The length of the statement  "		uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3]; " is 126.
Long Statement,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,LazyLoadDtd,The length of the statement  "			this.dtd = SgmlDtd.Parse (baseUri' this.docType' this.pubid' baseUri.AbsoluteUri' this.subset' this.proxy' this.nametable); " is 123.
Long Statement,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Log,The length of the statement  "			ErrorLog.WriteLine ("### Error in " + path + "#" + this.current.Name + "' line " + this.current.Line + "' position " + this.current.LinePosition + ": " + err); " is 159.
Long Statement,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,The length of the statement  "	if (!foundRoot && (this.NodeType == XmlNodeType.Element || this.NodeType == XmlNodeType.Text || this.NodeType == XmlNodeType.CDATA)) { " is 134.
Long Statement,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,The length of the statement  "		if (this.IsHtml && (this.NodeType != XmlNodeType.Element || string.Compare (this.LocalName' "html"' true' CultureInfo.InvariantCulture) != 0)) { " is 144.
Complex Conditional,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ScanToken,The conditional expression  "!nmtoken || ch == '_' || ch == '.' || ch == '-' || ch == ':' || Char.IsLetterOrDigit (ch)"  is complex.
Complex Conditional,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SniffWhitespace,The conditional expression  "ch != ' ' && ch != '\t' && ch != '\r' && ch != '\n'"  is complex.
Complex Conditional,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,The conditional expression  "!foundRoot && (this.NodeType == XmlNodeType.Element || this.NodeType == XmlNodeType.Text || this.NodeType == XmlNodeType.CDATA)"  is complex.
Complex Conditional,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The conditional expression  "attrName == "'" || attrName == "=" || attrName == ":" || attrName == ";""  is complex.
Complex Conditional,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseText,The conditional expression  "ch == '/' || ch == '!' || ch == '?' || Char.IsLetter (ch)"  is complex.
Empty Catch Block,FB2Fix.ObjectModel,DateTimeNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\DateTimeNode.cs,Load,The method has an empty catch block.
Empty Catch Block,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,FictionBook,The method has an empty catch block.
Empty Catch Block,FB2Fix.ObjectModel,DocumentNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\DocumentNode.cs,LoadDateElement,The method has an empty catch block.
Empty Catch Block,FB2Fix.ObjectModel,GenreInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\GenreInfoNode.cs,Load,The method has an empty catch block.
Empty Catch Block,FB2Fix.ObjectModel,PublishInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\PublishInfoNode.cs,Load,The method has an empty catch block.
Empty Catch Block,FB2Fix.ObjectModel,SequenceInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\SequenceInfoNode.cs,Load,The method has an empty catch block.
Empty Catch Block,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,The method has an empty catch block.
Empty Catch Block,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SniffEncoding,The method has an empty catch block.
Empty Catch Block,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SniffMeta,The method has an empty catch block.
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,PostProcessDocument,The following statement contains a magic number: invalidNodes = new List<XmlElement> (64);  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,StreamCopy,The following statement contains a magic number: if (source != null && destination != null) {  	byte[] buffer = new byte[4096];  	int readed;  	do {  		readed = source.Read (buffer' 0' buffer.Length);  		if (readed < 0) {  			throw new EndOfStreamException ("Unexpected end of stream");  		}  		destination.Write (buffer' 0' readed);  	}  	while (readed > 0);  }  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The following statement contains a magic number: try {  	if (encoding == null) {  		throw new InvalidFictionBookFormatException ("Can't detect a character encoding.");  	}  	long threshold = (long)(document.Document.InnerText.Length * 0.25);  	if (this.preferedCodepage != null) {  		encoding = Encoding.GetEncoding ((int)this.preferedCodepage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ());  	}  	else if (encoding.IsSingleByte) {  		encoding = Encoding.GetEncoding (encoding.CodePage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ());  	}  	bool done = false;  	int retryCount = 0;  	do {  		try {  			if (++retryCount > 2) {  				break;  			}  			if (encoding != null && document != null) {  				string outputFullPath = GetFilename (this.outputDirectoryGood' filename' document);  				string outputDirectory = Path.GetDirectoryName (outputFullPath).Trim ();  				string outputFilename = Path.GetFileName (outputFullPath).Trim ();  				if (options.validate) {  					try {  						XmlParserContext context = new XmlParserContext (null' null' ""' XmlSpace.None);  						XmlTextReader nodeReader = new XmlTextReader (document.Document.InnerXml' XmlNodeType.Document' context);  						XmlReaderSettings settings = new XmlReaderSettings ();  						settings.ValidationType = ValidationType.Schema;  						settings.Schemas = this.xsdSchema;  						XmlReader reader = XmlReader.Create (nodeReader' settings);  						// Parse the XML file.  						while (reader.Read ())  							;  					}  					catch (XmlSchemaValidationException exp) {  						Logger.WriteWarning (exp.Message);  						Logger.WriteLine (TraceEventType.Verbose' exp);  						outputDirectory = this.outputDirectoryNonValid;  					}  				}  				SaveFictionBook (outputDirectory' outputFilename' document' encoding);  			}  			done = true;  		}  		catch (EncoderFallbackException exp) {  			if (encoding != null) {  				Logger.WriteLineIf (false' TraceEventType.Warning' filename);  				Logger.WriteWarning ("Invalid document encoding ({0}) detected' utf-8 is used instead."' encoding.WebName);  				Logger.WriteLine (TraceEventType.Verbose' exp);  			}  			encoding = Encoding.UTF8;  		}  	}  	while (!done);  }  catch (IOException exp) {  	Logger.WriteLine (TraceEventType.Critical' exp.Message);  	Logger.WriteLine (TraceEventType.Verbose' exp);  	Logger.Flush ();  	Environment.Exit (1);  }  catch (UnauthorizedAccessException exp) {  	Logger.WriteError (exp.Message);  	Logger.WriteLine (TraceEventType.Verbose' exp);  }  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The following statement contains a magic number: try {  	if (encoding == null) {  		throw new InvalidFictionBookFormatException ("Can't detect a character encoding.");  	}  	long threshold = (long)(document.Document.InnerText.Length * 0.25);  	if (this.preferedCodepage != null) {  		encoding = Encoding.GetEncoding ((int)this.preferedCodepage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ());  	}  	else if (encoding.IsSingleByte) {  		encoding = Encoding.GetEncoding (encoding.CodePage' new EncoderCharEntityFallback (threshold)' new DecoderExceptionFallback ());  	}  	bool done = false;  	int retryCount = 0;  	do {  		try {  			if (++retryCount > 2) {  				break;  			}  			if (encoding != null && document != null) {  				string outputFullPath = GetFilename (this.outputDirectoryGood' filename' document);  				string outputDirectory = Path.GetDirectoryName (outputFullPath).Trim ();  				string outputFilename = Path.GetFileName (outputFullPath).Trim ();  				if (options.validate) {  					try {  						XmlParserContext context = new XmlParserContext (null' null' ""' XmlSpace.None);  						XmlTextReader nodeReader = new XmlTextReader (document.Document.InnerXml' XmlNodeType.Document' context);  						XmlReaderSettings settings = new XmlReaderSettings ();  						settings.ValidationType = ValidationType.Schema;  						settings.Schemas = this.xsdSchema;  						XmlReader reader = XmlReader.Create (nodeReader' settings);  						// Parse the XML file.  						while (reader.Read ())  							;  					}  					catch (XmlSchemaValidationException exp) {  						Logger.WriteWarning (exp.Message);  						Logger.WriteLine (TraceEventType.Verbose' exp);  						outputDirectory = this.outputDirectoryNonValid;  					}  				}  				SaveFictionBook (outputDirectory' outputFilename' document' encoding);  			}  			done = true;  		}  		catch (EncoderFallbackException exp) {  			if (encoding != null) {  				Logger.WriteLineIf (false' TraceEventType.Warning' filename);  				Logger.WriteWarning ("Invalid document encoding ({0}) detected' utf-8 is used instead."' encoding.WebName);  				Logger.WriteLine (TraceEventType.Verbose' exp);  			}  			encoding = Encoding.UTF8;  		}  	}  	while (!done);  }  catch (IOException exp) {  	Logger.WriteLine (TraceEventType.Critical' exp.Message);  	Logger.WriteLine (TraceEventType.Verbose' exp);  	Logger.Flush ();  	Environment.Exit (1);  }  catch (UnauthorizedAccessException exp) {  	Logger.WriteError (exp.Message);  	Logger.WriteLine (TraceEventType.Verbose' exp);  }  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The following statement contains a magic number: do {  	try {  		if (++retryCount > 2) {  			break;  		}  		if (encoding != null && document != null) {  			string outputFullPath = GetFilename (this.outputDirectoryGood' filename' document);  			string outputDirectory = Path.GetDirectoryName (outputFullPath).Trim ();  			string outputFilename = Path.GetFileName (outputFullPath).Trim ();  			if (options.validate) {  				try {  					XmlParserContext context = new XmlParserContext (null' null' ""' XmlSpace.None);  					XmlTextReader nodeReader = new XmlTextReader (document.Document.InnerXml' XmlNodeType.Document' context);  					XmlReaderSettings settings = new XmlReaderSettings ();  					settings.ValidationType = ValidationType.Schema;  					settings.Schemas = this.xsdSchema;  					XmlReader reader = XmlReader.Create (nodeReader' settings);  					// Parse the XML file.  					while (reader.Read ())  						;  				}  				catch (XmlSchemaValidationException exp) {  					Logger.WriteWarning (exp.Message);  					Logger.WriteLine (TraceEventType.Verbose' exp);  					outputDirectory = this.outputDirectoryNonValid;  				}  			}  			SaveFictionBook (outputDirectory' outputFilename' document' encoding);  		}  		done = true;  	}  	catch (EncoderFallbackException exp) {  		if (encoding != null) {  			Logger.WriteLineIf (false' TraceEventType.Warning' filename);  			Logger.WriteWarning ("Invalid document encoding ({0}) detected' utf-8 is used instead."' encoding.WebName);  			Logger.WriteLine (TraceEventType.Verbose' exp);  		}  		encoding = Encoding.UTF8;  	}  }  while (!done);  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The following statement contains a magic number: try {  	if (++retryCount > 2) {  		break;  	}  	if (encoding != null && document != null) {  		string outputFullPath = GetFilename (this.outputDirectoryGood' filename' document);  		string outputDirectory = Path.GetDirectoryName (outputFullPath).Trim ();  		string outputFilename = Path.GetFileName (outputFullPath).Trim ();  		if (options.validate) {  			try {  				XmlParserContext context = new XmlParserContext (null' null' ""' XmlSpace.None);  				XmlTextReader nodeReader = new XmlTextReader (document.Document.InnerXml' XmlNodeType.Document' context);  				XmlReaderSettings settings = new XmlReaderSettings ();  				settings.ValidationType = ValidationType.Schema;  				settings.Schemas = this.xsdSchema;  				XmlReader reader = XmlReader.Create (nodeReader' settings);  				// Parse the XML file.  				while (reader.Read ())  					;  			}  			catch (XmlSchemaValidationException exp) {  				Logger.WriteWarning (exp.Message);  				Logger.WriteLine (TraceEventType.Verbose' exp);  				outputDirectory = this.outputDirectoryNonValid;  			}  		}  		SaveFictionBook (outputDirectory' outputFilename' document' encoding);  	}  	done = true;  }  catch (EncoderFallbackException exp) {  	if (encoding != null) {  		Logger.WriteLineIf (false' TraceEventType.Warning' filename);  		Logger.WriteWarning ("Invalid document encoding ({0}) detected' utf-8 is used instead."' encoding.WebName);  		Logger.WriteLine (TraceEventType.Verbose' exp);  	}  	encoding = Encoding.UTF8;  }  
Magic Number,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessDocument,The following statement contains a magic number: if (++retryCount > 2) {  	break;  }  
Magic Number,FB2Fix,EncoderCharEntityFallbackBuffer,C:\repos\Gremlin2_Fb2Fix\EncoderCharEntityFallback.cs,EncoderCharEntityFallbackBuffer,The following statement contains a magic number: this.buffer = new StringBuilder (10);  
Magic Number,FB2Fix,FileNamePattern,C:\repos\Gremlin2_Fb2Fix\FileNameProvider.cs,FileNamePattern,The following statement contains a magic number: knownPatterns = new Dictionary<string' Type> (14);  
Magic Number,FB2Fix,Genre,C:\repos\Gremlin2_Fb2Fix\GenreTable.cs,Genre,The following statement contains a magic number: this.descriptions = new Dictionary<string' string> (2);  
Magic Number,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,Fb2TextWriter,The following statement contains a magic number: this.elementStack = new Stack<string> (16);  
Magic Number,FB2Fix,Program,C:\repos\Gremlin2_Fb2Fix\Program.cs,Main,The following statement contains a magic number: ZipConstants.DefaultCodePage = 866;  
Magic Number,FB2Fix,StringUtils,C:\repos\Gremlin2_Fb2Fix\StringUtils.cs,StringUtils,The following statement contains a magic number: table = new Dictionary<char' string> (75);  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,The following statement contains a magic number: if (this.retrieveComment) {  	openStruct.CmtBuf = new string ((char)0' 65536);  	openStruct.CmtBufSize = 65536;  }  else {  	openStruct.CmtBuf = null;  	openStruct.CmtBufSize = 0;  }  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,The following statement contains a magic number: if (this.retrieveComment) {  	openStruct.CmtBuf = new string ((char)0' 65536);  	openStruct.CmtBufSize = 65536;  }  else {  	openStruct.CmtBuf = null;  	openStruct.CmtBufSize = 0;  }  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,The following statement contains a magic number: openStruct.CmtBuf = new string ((char)0' 65536);  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,The following statement contains a magic number: openStruct.CmtBufSize = 65536;  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: hiWord = (ushort)((dosTime & 0xFFFF0000) >> 16);  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: year = ((hiWord & 0xFE00) >> 9) + 1980;  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: month = (hiWord & 0x01E0) >> 5;  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: hour = (loWord & 0xF800) >> 11;  
Magic Number,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,FromMSDOSTime,The following statement contains a magic number: minute = (loWord & 0x07E0) >> 5;  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ArgumentsUsage,The following statement contains a magic number: if (screenWidth == 0) {  	screenWidth = 80;  }  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ArgumentsUsage,The following statement contains a magic number: screenWidth = 80;  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The following statement contains a magic number: if (args != null) {  	foreach (string argument in args) {  		if (argument.Length > 0) {  			switch (argument [0]) {  			case '/':  				if (!NativeMethods.IsRunningOnWindows) {  					goto default;  				}  				goto case '-';  			case '-':  				if (!NativeMethods.IsRunningOnWindows) {  					if (argument.Length == 1) {  						goto default;  					}  					if (argument [1] != '-') {  						goto default;  					}  				}  				int argumentPrefixLength = (NativeMethods.IsRunningOnWindows) ? 1 : 2;  				int endIndex = argument.IndexOfAny (new char[] {  					':''  					'+''  					'-'  				}' argumentPrefixLength);  				string option = argument.Substring (argumentPrefixLength' endIndex == -1 ? argument.Length - argumentPrefixLength : endIndex - argumentPrefixLength);  				string optionArgument;  				if (option.Length + argumentPrefixLength == argument.Length) {  					optionArgument = null;  				}  				else if (argument.Length > argumentPrefixLength + option.Length && argument [argumentPrefixLength + option.Length] == ':') {  					optionArgument = argument.Substring (option.Length + argumentPrefixLength + 1);  				}  				else {  					optionArgument = argument.Substring (option.Length + argumentPrefixLength);  				}  				Argument arg = (Argument)this.argumentMap [option];  				if (arg == null) {  					ReportUnrecognizedArgument (argument);  					hadError = true;  				}  				else {  					hadError |= !arg.SetValue (optionArgument' destination);  				}  				break;  			case '@':  				string[] nestedArguments;  				hadError |= LexFileArguments (argument.Substring (1)' out nestedArguments);  				hadError |= ParseArgumentList (nestedArguments' destination);  				break;  			default:  				if (this.defaultArgument != null) {  					hadError |= !this.defaultArgument.SetValue (argument' destination);  				}  				else {  					ReportUnrecognizedArgument (argument);  					hadError = true;  				}  				break;  			}  		}  	}  }  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The following statement contains a magic number: foreach (string argument in args) {  	if (argument.Length > 0) {  		switch (argument [0]) {  		case '/':  			if (!NativeMethods.IsRunningOnWindows) {  				goto default;  			}  			goto case '-';  		case '-':  			if (!NativeMethods.IsRunningOnWindows) {  				if (argument.Length == 1) {  					goto default;  				}  				if (argument [1] != '-') {  					goto default;  				}  			}  			int argumentPrefixLength = (NativeMethods.IsRunningOnWindows) ? 1 : 2;  			int endIndex = argument.IndexOfAny (new char[] {  				':''  				'+''  				'-'  			}' argumentPrefixLength);  			string option = argument.Substring (argumentPrefixLength' endIndex == -1 ? argument.Length - argumentPrefixLength : endIndex - argumentPrefixLength);  			string optionArgument;  			if (option.Length + argumentPrefixLength == argument.Length) {  				optionArgument = null;  			}  			else if (argument.Length > argumentPrefixLength + option.Length && argument [argumentPrefixLength + option.Length] == ':') {  				optionArgument = argument.Substring (option.Length + argumentPrefixLength + 1);  			}  			else {  				optionArgument = argument.Substring (option.Length + argumentPrefixLength);  			}  			Argument arg = (Argument)this.argumentMap [option];  			if (arg == null) {  				ReportUnrecognizedArgument (argument);  				hadError = true;  			}  			else {  				hadError |= !arg.SetValue (optionArgument' destination);  			}  			break;  		case '@':  			string[] nestedArguments;  			hadError |= LexFileArguments (argument.Substring (1)' out nestedArguments);  			hadError |= ParseArgumentList (nestedArguments' destination);  			break;  		default:  			if (this.defaultArgument != null) {  				hadError |= !this.defaultArgument.SetValue (argument' destination);  			}  			else {  				ReportUnrecognizedArgument (argument);  				hadError = true;  			}  			break;  		}  	}  }  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The following statement contains a magic number: if (argument.Length > 0) {  	switch (argument [0]) {  	case '/':  		if (!NativeMethods.IsRunningOnWindows) {  			goto default;  		}  		goto case '-';  	case '-':  		if (!NativeMethods.IsRunningOnWindows) {  			if (argument.Length == 1) {  				goto default;  			}  			if (argument [1] != '-') {  				goto default;  			}  		}  		int argumentPrefixLength = (NativeMethods.IsRunningOnWindows) ? 1 : 2;  		int endIndex = argument.IndexOfAny (new char[] {  			':''  			'+''  			'-'  		}' argumentPrefixLength);  		string option = argument.Substring (argumentPrefixLength' endIndex == -1 ? argument.Length - argumentPrefixLength : endIndex - argumentPrefixLength);  		string optionArgument;  		if (option.Length + argumentPrefixLength == argument.Length) {  			optionArgument = null;  		}  		else if (argument.Length > argumentPrefixLength + option.Length && argument [argumentPrefixLength + option.Length] == ':') {  			optionArgument = argument.Substring (option.Length + argumentPrefixLength + 1);  		}  		else {  			optionArgument = argument.Substring (option.Length + argumentPrefixLength);  		}  		Argument arg = (Argument)this.argumentMap [option];  		if (arg == null) {  			ReportUnrecognizedArgument (argument);  			hadError = true;  		}  		else {  			hadError |= !arg.SetValue (optionArgument' destination);  		}  		break;  	case '@':  		string[] nestedArguments;  		hadError |= LexFileArguments (argument.Substring (1)' out nestedArguments);  		hadError |= ParseArgumentList (nestedArguments' destination);  		break;  	default:  		if (this.defaultArgument != null) {  			hadError |= !this.defaultArgument.SetValue (argument' destination);  		}  		else {  			ReportUnrecognizedArgument (argument);  			hadError = true;  		}  		break;  	}  }  
Magic Number,FB2Fix.CommandLine,CommandLineParser,C:\repos\Gremlin2_Fb2Fix\CommandLineParser\CommandLineArguments.cs,ParseArgumentList,The following statement contains a magic number: switch (argument [0]) {  case '/':  	if (!NativeMethods.IsRunningOnWindows) {  		goto default;  	}  	goto case '-';  case '-':  	if (!NativeMethods.IsRunningOnWindows) {  		if (argument.Length == 1) {  			goto default;  		}  		if (argument [1] != '-') {  			goto default;  		}  	}  	int argumentPrefixLength = (NativeMethods.IsRunningOnWindows) ? 1 : 2;  	int endIndex = argument.IndexOfAny (new char[] {  		':''  		'+''  		'-'  	}' argumentPrefixLength);  	string option = argument.Substring (argumentPrefixLength' endIndex == -1 ? argument.Length - argumentPrefixLength : endIndex - argumentPrefixLength);  	string optionArgument;  	if (option.Length + argumentPrefixLength == argument.Length) {  		optionArgument = null;  	}  	else if (argument.Length > argumentPrefixLength + option.Length && argument [argumentPrefixLength + option.Length] == ':') {  		optionArgument = argument.Substring (option.Length + argumentPrefixLength + 1);  	}  	else {  		optionArgument = argument.Substring (option.Length + argumentPrefixLength);  	}  	Argument arg = (Argument)this.argumentMap [option];  	if (arg == null) {  		ReportUnrecognizedArgument (argument);  		hadError = true;  	}  	else {  		hadError |= !arg.SetValue (optionArgument' destination);  	}  	break;  case '@':  	string[] nestedArguments;  	hadError |= LexFileArguments (argument.Substring (1)' out nestedArguments);  	hadError |= ParseArgumentList (nestedArguments' destination);  	break;  default:  	if (this.defaultArgument != null) {  		hadError |= !this.defaultArgument.SetValue (argument' destination);  	}  	else {  		ReportUnrecognizedArgument (argument);  		hadError = true;  	}  	break;  }  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,Write,The following statement contains a magic number: base.Write (String.Format ("{0}:{1}: {2}"' DateTime.Now.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' TraceEventType.Verbose).PadLeft (11)' message));  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,WriteLine,The following statement contains a magic number: base.WriteLine (String.Format ("{0}:{1}: {2}"' DateTime.Now.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' TraceEventType.Verbose).PadLeft (11)' message));  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The following statement contains a magic number: base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message));  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceData,The following statement contains a magic number: base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message));  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The following statement contains a magic number: base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message));  
Magic Number,FB2Fix.Logging,CustomTraceListener,C:\repos\Gremlin2_Fb2Fix\Logging\CustomTraceListener.cs,TraceEvent,The following statement contains a magic number: base.WriteLine (String.Format ("{0}:{1}: {2}"' eventDateTime.ToString ("dd.MM.yyyy HH:mm:ss.fffff")' Enum.GetName (typeof(TraceEventType)' eventType).PadLeft (11)' message));  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: for (int index = 0; index < hash.Length; index++) {  	switch (index) {  	case 4:  	case 6:  	case 8:  	case 10:  		documentId.Append ("-");  		documentId.Append (hash [index].ToString ("X2"));  		break;  	default:  		documentId.Append (hash [index].ToString ("X2"));  		break;  	}  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: for (int index = 0; index < hash.Length; index++) {  	switch (index) {  	case 4:  	case 6:  	case 8:  	case 10:  		documentId.Append ("-");  		documentId.Append (hash [index].ToString ("X2"));  		break;  	default:  		documentId.Append (hash [index].ToString ("X2"));  		break;  	}  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: for (int index = 0; index < hash.Length; index++) {  	switch (index) {  	case 4:  	case 6:  	case 8:  	case 10:  		documentId.Append ("-");  		documentId.Append (hash [index].ToString ("X2"));  		break;  	default:  		documentId.Append (hash [index].ToString ("X2"));  		break;  	}  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: for (int index = 0; index < hash.Length; index++) {  	switch (index) {  	case 4:  	case 6:  	case 8:  	case 10:  		documentId.Append ("-");  		documentId.Append (hash [index].ToString ("X2"));  		break;  	default:  		documentId.Append (hash [index].ToString ("X2"));  		break;  	}  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: switch (index) {  case 4:  case 6:  case 8:  case 10:  	documentId.Append ("-");  	documentId.Append (hash [index].ToString ("X2"));  	break;  default:  	documentId.Append (hash [index].ToString ("X2"));  	break;  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: switch (index) {  case 4:  case 6:  case 8:  case 10:  	documentId.Append ("-");  	documentId.Append (hash [index].ToString ("X2"));  	break;  default:  	documentId.Append (hash [index].ToString ("X2"));  	break;  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: switch (index) {  case 4:  case 6:  case 8:  case 10:  	documentId.Append ("-");  	documentId.Append (hash [index].ToString ("X2"));  	break;  default:  	documentId.Append (hash [index].ToString ("X2"));  	break;  }  
Magic Number,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,ComputeDocumentId,The following statement contains a magic number: switch (index) {  case 4:  case 6:  case 8:  case 10:  	documentId.Append ("-");  	documentId.Append (hash [index].ToString ("X2"));  	break;  default:  	documentId.Append (hash [index].ToString ("X2"));  	break;  }  
Magic Number,FB2Fix.ObjectModel,GenreInfoNode,C:\repos\Gremlin2_Fb2Fix\ObjectModel\GenreInfoNode.cs,GetHashCode,The following statement contains a magic number: return (genre != null ? genre.GetHashCode () : 0) + 29 * match.GetHashCode ();  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,The following statement contains a magic number: if (Internal) {  	if (this.Literal != null) {  		this.stm = new StringReader (this.Literal);  	}  }  else if (this.Uri == null) {  	this.Error ("Unresolvable entity '{0}'"' this.Name);  }  else {  	if (baseUri != null) {  		this.resolvedUri = new Uri (baseUri' this.Uri);  	}  	else {  		this.resolvedUri = new Uri (this.Uri);  	}  	Stream stream;  	Encoding e = Encoding.Default;  	switch (this.resolvedUri.Scheme) {  	case "file":  		{  			string path = this.resolvedUri.LocalPath;  			stream = new FileStream (path' FileMode.Open' FileAccess.Read);  		}  		break;  	default:  		//Console.WriteLine("Fetching:" + ResolvedUri.AbsoluteUri);  		HttpWebRequest wr = (HttpWebRequest)WebRequest.Create (ResolvedUri);  		wr.UserAgent = "Mozilla/4.0 (compatible;);";  		wr.Timeout = 10000;  		// in case this is running in an ASPX page.  		if (Proxy != null) {  			wr.Proxy = new WebProxy (Proxy);  		}  		wr.PreAuthenticate = false;  		// Pass the credentials of the process.   		wr.Credentials = CredentialCache.DefaultCredentials;  		WebResponse resp = wr.GetResponse ();  		Uri actual = resp.ResponseUri;  		if (actual.AbsoluteUri != this.resolvedUri.AbsoluteUri) {  			this.resolvedUri = actual;  		}  		string contentType = resp.ContentType.ToLower ();  		string mimeType = contentType;  		int i = contentType.IndexOf (';');  		if (i >= 0) {  			mimeType = contentType.Substring (0' i);  		}  		if (StringUtilities.EqualsIgnoreCase (mimeType' "text/html")) {  			this.Html = true;  		}  		i = contentType.IndexOf ("charset");  		e = Encoding.Default;  		if (i >= 0) {  			int j = contentType.IndexOf ("="' i);  			int k = contentType.IndexOf (";"' j);  			if (k < 0) {  				k = contentType.Length;  			}  			if (j > 0) {  				j++;  				string charset = contentType.Substring (j' k - j).Trim ();  				try {  					e = Encoding.GetEncoding (charset);  				}  				catch (Exception) {  				}  			}  		}  		stream = resp.GetResponseStream ();  		break;  	}  	this.weOwnTheStream = true;  	HtmlStream html = new HtmlStream (stream' e);  	this.encoding = html.Encoding;  	this.stm = html;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,The following statement contains a magic number: if (this.Uri == null) {  	this.Error ("Unresolvable entity '{0}'"' this.Name);  }  else {  	if (baseUri != null) {  		this.resolvedUri = new Uri (baseUri' this.Uri);  	}  	else {  		this.resolvedUri = new Uri (this.Uri);  	}  	Stream stream;  	Encoding e = Encoding.Default;  	switch (this.resolvedUri.Scheme) {  	case "file":  		{  			string path = this.resolvedUri.LocalPath;  			stream = new FileStream (path' FileMode.Open' FileAccess.Read);  		}  		break;  	default:  		//Console.WriteLine("Fetching:" + ResolvedUri.AbsoluteUri);  		HttpWebRequest wr = (HttpWebRequest)WebRequest.Create (ResolvedUri);  		wr.UserAgent = "Mozilla/4.0 (compatible;);";  		wr.Timeout = 10000;  		// in case this is running in an ASPX page.  		if (Proxy != null) {  			wr.Proxy = new WebProxy (Proxy);  		}  		wr.PreAuthenticate = false;  		// Pass the credentials of the process.   		wr.Credentials = CredentialCache.DefaultCredentials;  		WebResponse resp = wr.GetResponse ();  		Uri actual = resp.ResponseUri;  		if (actual.AbsoluteUri != this.resolvedUri.AbsoluteUri) {  			this.resolvedUri = actual;  		}  		string contentType = resp.ContentType.ToLower ();  		string mimeType = contentType;  		int i = contentType.IndexOf (';');  		if (i >= 0) {  			mimeType = contentType.Substring (0' i);  		}  		if (StringUtilities.EqualsIgnoreCase (mimeType' "text/html")) {  			this.Html = true;  		}  		i = contentType.IndexOf ("charset");  		e = Encoding.Default;  		if (i >= 0) {  			int j = contentType.IndexOf ("="' i);  			int k = contentType.IndexOf (";"' j);  			if (k < 0) {  				k = contentType.Length;  			}  			if (j > 0) {  				j++;  				string charset = contentType.Substring (j' k - j).Trim ();  				try {  					e = Encoding.GetEncoding (charset);  				}  				catch (Exception) {  				}  			}  		}  		stream = resp.GetResponseStream ();  		break;  	}  	this.weOwnTheStream = true;  	HtmlStream html = new HtmlStream (stream' e);  	this.encoding = html.Encoding;  	this.stm = html;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,The following statement contains a magic number: switch (this.resolvedUri.Scheme) {  case "file":  	{  		string path = this.resolvedUri.LocalPath;  		stream = new FileStream (path' FileMode.Open' FileAccess.Read);  	}  	break;  default:  	//Console.WriteLine("Fetching:" + ResolvedUri.AbsoluteUri);  	HttpWebRequest wr = (HttpWebRequest)WebRequest.Create (ResolvedUri);  	wr.UserAgent = "Mozilla/4.0 (compatible;);";  	wr.Timeout = 10000;  	// in case this is running in an ASPX page.  	if (Proxy != null) {  		wr.Proxy = new WebProxy (Proxy);  	}  	wr.PreAuthenticate = false;  	// Pass the credentials of the process.   	wr.Credentials = CredentialCache.DefaultCredentials;  	WebResponse resp = wr.GetResponse ();  	Uri actual = resp.ResponseUri;  	if (actual.AbsoluteUri != this.resolvedUri.AbsoluteUri) {  		this.resolvedUri = actual;  	}  	string contentType = resp.ContentType.ToLower ();  	string mimeType = contentType;  	int i = contentType.IndexOf (';');  	if (i >= 0) {  		mimeType = contentType.Substring (0' i);  	}  	if (StringUtilities.EqualsIgnoreCase (mimeType' "text/html")) {  		this.Html = true;  	}  	i = contentType.IndexOf ("charset");  	e = Encoding.Default;  	if (i >= 0) {  		int j = contentType.IndexOf ("="' i);  		int k = contentType.IndexOf (";"' j);  		if (k < 0) {  			k = contentType.Length;  		}  		if (j > 0) {  			j++;  			string charset = contentType.Substring (j' k - j).Trim ();  			try {  				e = Encoding.GetEncoding (charset);  			}  			catch (Exception) {  			}  		}  	}  	stream = resp.GetResponseStream ();  	break;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,Open,The following statement contains a magic number: wr.Timeout = 10000;  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch == 'x') {  	ch = ReadChar ();  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		int p;  		if (ch >= '0' && ch <= '9') {  			p = ch - '0';  		}  		else if (ch >= 'a' && ch <= 'f') {  			p = ch - 'a' + 10;  		}  		else if (ch >= 'A' && ch <= 'F') {  			p = ch - 'A' + 10;  		}  		else {  			break;  			//we must be done!  			//Error("Hex digit out of range '{0}'"' (int)ch);  		}  		v = (v * 16) + p;  	}  }  else {  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		if (ch >= '0' && ch <= '9') {  			v = (v * 10) + (ch - '0');  		}  		else {  			break;  			// we must be done!  			//Error("Decimal digit out of range '{0}'"' (int)ch);  		}  	}  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch == 'x') {  	ch = ReadChar ();  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		int p;  		if (ch >= '0' && ch <= '9') {  			p = ch - '0';  		}  		else if (ch >= 'a' && ch <= 'f') {  			p = ch - 'a' + 10;  		}  		else if (ch >= 'A' && ch <= 'F') {  			p = ch - 'A' + 10;  		}  		else {  			break;  			//we must be done!  			//Error("Hex digit out of range '{0}'"' (int)ch);  		}  		v = (v * 16) + p;  	}  }  else {  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		if (ch >= '0' && ch <= '9') {  			v = (v * 10) + (ch - '0');  		}  		else {  			break;  			// we must be done!  			//Error("Decimal digit out of range '{0}'"' (int)ch);  		}  	}  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch == 'x') {  	ch = ReadChar ();  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		int p;  		if (ch >= '0' && ch <= '9') {  			p = ch - '0';  		}  		else if (ch >= 'a' && ch <= 'f') {  			p = ch - 'a' + 10;  		}  		else if (ch >= 'A' && ch <= 'F') {  			p = ch - 'A' + 10;  		}  		else {  			break;  			//we must be done!  			//Error("Hex digit out of range '{0}'"' (int)ch);  		}  		v = (v * 16) + p;  	}  }  else {  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		if (ch >= '0' && ch <= '9') {  			v = (v * 10) + (ch - '0');  		}  		else {  			break;  			// we must be done!  			//Error("Decimal digit out of range '{0}'"' (int)ch);  		}  	}  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch == 'x') {  	ch = ReadChar ();  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		int p;  		if (ch >= '0' && ch <= '9') {  			p = ch - '0';  		}  		else if (ch >= 'a' && ch <= 'f') {  			p = ch - 'a' + 10;  		}  		else if (ch >= 'A' && ch <= 'F') {  			p = ch - 'A' + 10;  		}  		else {  			break;  			//we must be done!  			//Error("Hex digit out of range '{0}'"' (int)ch);  		}  		v = (v * 16) + p;  	}  }  else {  	for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  		if (ch >= '0' && ch <= '9') {  			v = (v * 10) + (ch - '0');  		}  		else {  			break;  			// we must be done!  			//Error("Decimal digit out of range '{0}'"' (int)ch);  		}  	}  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  	int p;  	if (ch >= '0' && ch <= '9') {  		p = ch - '0';  	}  	else if (ch >= 'a' && ch <= 'f') {  		p = ch - 'a' + 10;  	}  	else if (ch >= 'A' && ch <= 'F') {  		p = ch - 'A' + 10;  	}  	else {  		break;  		//we must be done!  		//Error("Hex digit out of range '{0}'"' (int)ch);  	}  	v = (v * 16) + p;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  	int p;  	if (ch >= '0' && ch <= '9') {  		p = ch - '0';  	}  	else if (ch >= 'a' && ch <= 'f') {  		p = ch - 'a' + 10;  	}  	else if (ch >= 'A' && ch <= 'F') {  		p = ch - 'A' + 10;  	}  	else {  		break;  		//we must be done!  		//Error("Hex digit out of range '{0}'"' (int)ch);  	}  	v = (v * 16) + p;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  	int p;  	if (ch >= '0' && ch <= '9') {  		p = ch - '0';  	}  	else if (ch >= 'a' && ch <= 'f') {  		p = ch - 'a' + 10;  	}  	else if (ch >= 'A' && ch <= 'F') {  		p = ch - 'A' + 10;  	}  	else {  		break;  		//we must be done!  		//Error("Hex digit out of range '{0}'"' (int)ch);  	}  	v = (v * 16) + p;  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= '0' && ch <= '9') {  	p = ch - '0';  }  else if (ch >= 'a' && ch <= 'f') {  	p = ch - 'a' + 10;  }  else if (ch >= 'A' && ch <= 'F') {  	p = ch - 'A' + 10;  }  else {  	break;  	//we must be done!  	//Error("Hex digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= '0' && ch <= '9') {  	p = ch - '0';  }  else if (ch >= 'a' && ch <= 'f') {  	p = ch - 'a' + 10;  }  else if (ch >= 'A' && ch <= 'F') {  	p = ch - 'A' + 10;  }  else {  	break;  	//we must be done!  	//Error("Hex digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= 'a' && ch <= 'f') {  	p = ch - 'a' + 10;  }  else if (ch >= 'A' && ch <= 'F') {  	p = ch - 'A' + 10;  }  else {  	break;  	//we must be done!  	//Error("Hex digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= 'a' && ch <= 'f') {  	p = ch - 'a' + 10;  }  else if (ch >= 'A' && ch <= 'F') {  	p = ch - 'A' + 10;  }  else {  	break;  	//we must be done!  	//Error("Hex digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: p = ch - 'a' + 10;  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= 'A' && ch <= 'F') {  	p = ch - 'A' + 10;  }  else {  	break;  	//we must be done!  	//Error("Hex digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: p = ch - 'A' + 10;  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: v = (v * 16) + p;  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: for (; ch != EOF && ch != ';'; ch = ReadChar ()) {  	if (ch >= '0' && ch <= '9') {  		v = (v * 10) + (ch - '0');  	}  	else {  		break;  		// we must be done!  		//Error("Decimal digit out of range '{0}'"' (int)ch);  	}  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: if (ch >= '0' && ch <= '9') {  	v = (v * 10) + (ch - '0');  }  else {  	break;  	// we must be done!  	//Error("Decimal digit out of range '{0}'"' (int)ch);  }  
Magic Number,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,ExpandCharEntity,The following statement contains a magic number: v = (v * 10) + (ch - '0');  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed = stm.Read (rawBuffer' 0' 4);  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,HtmlStream,The following statement contains a magic number: if (this.decoder == null) {  	this.decoder = defaultEncoding.GetDecoder ();  	rawUsed += stm.Read (rawBuffer' 4' BUFSIZE - 4);  	DecodeBlock ();  	// Now sniff to see if there is an XML declaration or HTML <META> tag.  	Decoder sd = SniffEncoding ();  	if (sd != null) {  		this.decoder = sd;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,HtmlStream,The following statement contains a magic number: if (this.decoder == null) {  	this.decoder = defaultEncoding.GetDecoder ();  	rawUsed += stm.Read (rawBuffer' 4' BUFSIZE - 4);  	DecodeBlock ();  	// Now sniff to see if there is an XML declaration or HTML <META> tag.  	Decoder sd = SniffEncoding ();  	if (sd != null) {  		this.decoder = sd;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed += stm.Read (rawBuffer' 4' BUFSIZE - 4);  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,HtmlStream,The following statement contains a magic number: rawUsed += stm.Read (rawBuffer' 4' BUFSIZE - 4);  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (4 <= (length - index)) {  	uint w = (uint)buffer [index + 0] << 24 | (uint)buffer [index + 1] << 16 | (uint)buffer [index + 2] << 8 | buffer [index + 3];  	// see if it's a 4-byte encoding  	switch (w) {  	case 0xfefffeff:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderBigEngian ();  	case 0xfffefffe:  		index += 4;  		this.encoding = System.Text.Encoding.UTF8;  		return new Ucs4DecoderLittleEndian ();  	case 0x3c000000:  		goto case 0xfefffeff;  	case 0x0000003c:  		goto case 0xfffefffe;  	}  	w >>= 8;  	if (w == 0xefbbbf) {  		index += 3;  		this.encoding = System.Text.Encoding.UTF8;  		return Encoding.UTF8.GetDecoder ();  	}  	w >>= 8;  	switch (w) {  	case 0xfeff:  		index += 2;  		this.encoding = System.Text.Encoding.BigEndianUnicode;  		return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  	case 0xfffe:  		index += 2;  		this.encoding = new UnicodeEncoding (false' false);  		return this.encoding.GetDecoder ();  	case 0x3c00:  		goto case 0xfeff;  	case 0x003c:  		goto case 0xfffe;  	}  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {  case 0xfefffeff:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderBigEngian ();  case 0xfffefffe:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderLittleEndian ();  case 0x3c000000:  	goto case 0xfefffeff;  case 0x0000003c:  	goto case 0xfffefffe;  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {  case 0xfefffeff:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderBigEngian ();  case 0xfffefffe:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderLittleEndian ();  case 0x3c000000:  	goto case 0xfefffeff;  case 0x0000003c:  	goto case 0xfffefffe;  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 4;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 4;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: w >>= 8;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: if (w == 0xefbbbf) {  	index += 3;  	this.encoding = System.Text.Encoding.UTF8;  	return Encoding.UTF8.GetDecoder ();  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 3;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: w >>= 8;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {  case 0xfeff:  	index += 2;  	this.encoding = System.Text.Encoding.BigEndianUnicode;  	return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  case 0xfffe:  	index += 2;  	this.encoding = new UnicodeEncoding (false' false);  	return this.encoding.GetDecoder ();  case 0x3c00:  	goto case 0xfeff;  case 0x003c:  	goto case 0xfffe;  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: switch (w) {  case 0xfeff:  	index += 2;  	this.encoding = System.Text.Encoding.BigEndianUnicode;  	return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  case 0xfffe:  	index += 2;  	this.encoding = new UnicodeEncoding (false' false);  	return this.encoding.GetDecoder ();  case 0x3c00:  	goto case 0xfeff;  case 0x003c:  	goto case 0xfffe;  }  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 2;  
Magic Number,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following statement contains a magic number: index += 2;  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetCharCount,The following statement contains a magic number: return (count + tempBytes) / 4;  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetChars,The following statement contains a magic number: if (tempBytes > 0) {  	for (; i < 4; i++) {  		temp [i] = bytes [byteIndex];  		byteIndex++;  		byteCount--;  	}  	i = 1;  	GetFullChars (temp' 0' 4' chars' charIndex);  	charIndex++;  }  else {  	i = 0;  }  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetChars,The following statement contains a magic number: if (tempBytes > 0) {  	for (; i < 4; i++) {  		temp [i] = bytes [byteIndex];  		byteIndex++;  		byteCount--;  	}  	i = 1;  	GetFullChars (temp' 0' 4' chars' charIndex);  	charIndex++;  }  else {  	i = 0;  }  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetChars,The following statement contains a magic number: for (; i < 4; i++) {  	temp [i] = bytes [byteIndex];  	byteIndex++;  	byteCount--;  }  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetChars,The following statement contains a magic number: GetFullChars (temp' 0' 4' chars' charIndex);  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,UnicodeToUTF16,The following statement contains a magic number: lowerByte = (byte)(0xD7C0 + (code >> 10));  
Magic Number,FB2Fix.Sgml,Ucs4Decoder,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,UnicodeToUTF16,The following statement contains a magic number: return ((char)((higherByte << 8) | lowerByte));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i + 3]) << 24) | (bytes [i + 2] << 16) | (bytes [i + 1] << 8) | (bytes [i]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderBigEngian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i += 4;  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: for (i = byteIndex' j = charIndex; i + 3 < byteCount;) {  	code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  	if (code > 0x10FFFF) {  		throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  	}  	else if (code > 0xFFFF) {  		chars [j] = UnicodeToUTF16 (code);  		j++;  	}  	else {  		if (code >= 0xD800 && code <= 0xDFFF) {  			throw new Exception ("Invalid character 0x" + code.ToString ("x") + " in encoding");  		}  		else {  			chars [j] = (char)code;  		}  	}  	j++;  	i += 4;  }  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: code = (UInt32)(((bytes [i]) << 24) | (bytes [i + 1] << 16) | (bytes [i + 2] << 8) | (bytes [i + 3]));  
Magic Number,FB2Fix.Sgml,Ucs4DecoderLittleEndian,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,GetFullChars,The following statement contains a magic number: i += 4;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Init,The following statement contains a magic number: this.stack = new HWStack<Node> (10);  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (tag.DtdType == null) {  	score += 3.0;  }  else {  	score -= 10.0;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (tag.DtdType == null) {  	score += 3.0;  }  else {  	score -= 10.0;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 3.0;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score -= 10.0;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (!Regex.Match (tagName' @"^[a-zA-z_:][0-9a-zA-Z_:\.\-]*$").Success) {  	score += 2.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 2.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (tagName.Length == 1 && Char.IsDigit (tagName [0])) {  	score += 3.0;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 3.0;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.Compare (tagName.ToUpperInvariant ()' tagName) == 0) {  	this.uppercaseTagCount++;  	if (this.lowercaseTagCount > uppercaseTagCount) {  		score += 0.5;  	}  }  else if (String.Compare (tagName.ToLowerInvariant ()' tagName) == 0) {  	this.lowercaseTagCount++;  	if (this.lowercaseTagCount < uppercaseTagCount) {  		score += 0.5;  	}  }  else {  	this.mixedcaseTagCount++;  	if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  		score += 0.5;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.Compare (tagName.ToUpperInvariant ()' tagName) == 0) {  	this.uppercaseTagCount++;  	if (this.lowercaseTagCount > uppercaseTagCount) {  		score += 0.5;  	}  }  else if (String.Compare (tagName.ToLowerInvariant ()' tagName) == 0) {  	this.lowercaseTagCount++;  	if (this.lowercaseTagCount < uppercaseTagCount) {  		score += 0.5;  	}  }  else {  	this.mixedcaseTagCount++;  	if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  		score += 0.5;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.Compare (tagName.ToUpperInvariant ()' tagName) == 0) {  	this.uppercaseTagCount++;  	if (this.lowercaseTagCount > uppercaseTagCount) {  		score += 0.5;  	}  }  else if (String.Compare (tagName.ToLowerInvariant ()' tagName) == 0) {  	this.lowercaseTagCount++;  	if (this.lowercaseTagCount < uppercaseTagCount) {  		score += 0.5;  	}  }  else {  	this.mixedcaseTagCount++;  	if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  		score += 0.5;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (this.lowercaseTagCount > uppercaseTagCount) {  	score += 0.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 0.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.Compare (tagName.ToLowerInvariant ()' tagName) == 0) {  	this.lowercaseTagCount++;  	if (this.lowercaseTagCount < uppercaseTagCount) {  		score += 0.5;  	}  }  else {  	this.mixedcaseTagCount++;  	if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  		score += 0.5;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.Compare (tagName.ToLowerInvariant ()' tagName) == 0) {  	this.lowercaseTagCount++;  	if (this.lowercaseTagCount < uppercaseTagCount) {  		score += 0.5;  	}  }  else {  	this.mixedcaseTagCount++;  	if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  		score += 0.5;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (this.lowercaseTagCount < uppercaseTagCount) {  	score += 0.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 0.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (this.mixedcaseTagCount < (this.lowercaseTagCount + this.uppercaseTagCount)) {  	score += 0.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 0.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (!this.tags.ContainsKey (tagName)) {  	this.tags.Add (tagName' 0);  	score += 1.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 1.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (this.Depth > 4) {  	score += 1.0;  }  else {  	score -= 2.0;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (this.Depth > 4) {  	score += 1.0;  }  else {  	score -= 2.0;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score -= 2.0;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (score >= 5.0) {  	Pop ();  	this.tags.Remove (tagName);  	this.sb.Length = 0;  	this.sb.Append ("<");  	this.sb.Append (tagName);  	this.state = State.PartialText;  	this.markupErrorsCount++;  	return false;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: while (ch != Entity.EOF && ch != '>') {  	if (ch == '/') {  		tag.IsEmpty = true;  		ch = this.current.ReadChar ();  		if (ch != '>') {  			Log ("Expected empty start tag '/>' sequence instead of '{0}'"' ch);  			this.current.ScanToEnd (null' "Recovering"' ">");  			return false;  		}  		break;  	}  	else if (ch == '<') {  		Log ("Start tag '{0}' is missing '>'"' tagName);  		break;  	}  	string attrName = ScanName (aterm);  	lookaheadBuffer.AddRange (attrName);  	ch = this.current.SkipWhitespace (lookaheadBuffer);  	if (attrName == "'" || attrName == "=" || attrName == ":" || attrName == ";") {  		continue;  	}  	string value = null;  	char quote = '\0';  	if (ch == '=' || ch == '"' || ch == '\'') {  		if (ch == '=') {  			this.current.ReadChar ();  			ch = this.current.SkipWhitespace ();  		}  		if (ch == '\'' || ch == '\"') {  			quote = ch;  			value = ScanLiteral (this.sb' ch);  		}  		else if (ch != '>') {  			string term = avterm;  			value = this.current.ScanToken (this.sb' term' false);  		}  		lookaheadBuffer.Clear ();  	}  	if (attrName.Length > 0) {  		Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  		if (attribute == null) {  			Log ("Duplicate attribute '{0}' ignored"' attrName);  		}  		else {  			ValidateAttribute (tag' attribute);  			if (attribute.DtdType == null) {  				score += 1.0;  			}  			if (quote == '\0') {  				score += 0.5;  			}  			if (String.IsNullOrEmpty (attribute.Value)) {  				score += 0.5;  			}  			if (score >= 5.0) {  				Pop ();  				this.tags.Remove (tagName);  				this.sb.Length = 0;  				this.sb.Append ("<");  				this.sb.Append (tagName);  				this.sb.Append (lookaheadBuffer.ToArray ());  				this.state = State.PartialText;  				this.markupErrorsCount++;  				return false;  			}  		}  	}  	ch = this.current.SkipWhitespace ();  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: while (ch != Entity.EOF && ch != '>') {  	if (ch == '/') {  		tag.IsEmpty = true;  		ch = this.current.ReadChar ();  		if (ch != '>') {  			Log ("Expected empty start tag '/>' sequence instead of '{0}'"' ch);  			this.current.ScanToEnd (null' "Recovering"' ">");  			return false;  		}  		break;  	}  	else if (ch == '<') {  		Log ("Start tag '{0}' is missing '>'"' tagName);  		break;  	}  	string attrName = ScanName (aterm);  	lookaheadBuffer.AddRange (attrName);  	ch = this.current.SkipWhitespace (lookaheadBuffer);  	if (attrName == "'" || attrName == "=" || attrName == ":" || attrName == ";") {  		continue;  	}  	string value = null;  	char quote = '\0';  	if (ch == '=' || ch == '"' || ch == '\'') {  		if (ch == '=') {  			this.current.ReadChar ();  			ch = this.current.SkipWhitespace ();  		}  		if (ch == '\'' || ch == '\"') {  			quote = ch;  			value = ScanLiteral (this.sb' ch);  		}  		else if (ch != '>') {  			string term = avterm;  			value = this.current.ScanToken (this.sb' term' false);  		}  		lookaheadBuffer.Clear ();  	}  	if (attrName.Length > 0) {  		Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  		if (attribute == null) {  			Log ("Duplicate attribute '{0}' ignored"' attrName);  		}  		else {  			ValidateAttribute (tag' attribute);  			if (attribute.DtdType == null) {  				score += 1.0;  			}  			if (quote == '\0') {  				score += 0.5;  			}  			if (String.IsNullOrEmpty (attribute.Value)) {  				score += 0.5;  			}  			if (score >= 5.0) {  				Pop ();  				this.tags.Remove (tagName);  				this.sb.Length = 0;  				this.sb.Append ("<");  				this.sb.Append (tagName);  				this.sb.Append (lookaheadBuffer.ToArray ());  				this.state = State.PartialText;  				this.markupErrorsCount++;  				return false;  			}  		}  	}  	ch = this.current.SkipWhitespace ();  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: while (ch != Entity.EOF && ch != '>') {  	if (ch == '/') {  		tag.IsEmpty = true;  		ch = this.current.ReadChar ();  		if (ch != '>') {  			Log ("Expected empty start tag '/>' sequence instead of '{0}'"' ch);  			this.current.ScanToEnd (null' "Recovering"' ">");  			return false;  		}  		break;  	}  	else if (ch == '<') {  		Log ("Start tag '{0}' is missing '>'"' tagName);  		break;  	}  	string attrName = ScanName (aterm);  	lookaheadBuffer.AddRange (attrName);  	ch = this.current.SkipWhitespace (lookaheadBuffer);  	if (attrName == "'" || attrName == "=" || attrName == ":" || attrName == ";") {  		continue;  	}  	string value = null;  	char quote = '\0';  	if (ch == '=' || ch == '"' || ch == '\'') {  		if (ch == '=') {  			this.current.ReadChar ();  			ch = this.current.SkipWhitespace ();  		}  		if (ch == '\'' || ch == '\"') {  			quote = ch;  			value = ScanLiteral (this.sb' ch);  		}  		else if (ch != '>') {  			string term = avterm;  			value = this.current.ScanToken (this.sb' term' false);  		}  		lookaheadBuffer.Clear ();  	}  	if (attrName.Length > 0) {  		Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  		if (attribute == null) {  			Log ("Duplicate attribute '{0}' ignored"' attrName);  		}  		else {  			ValidateAttribute (tag' attribute);  			if (attribute.DtdType == null) {  				score += 1.0;  			}  			if (quote == '\0') {  				score += 0.5;  			}  			if (String.IsNullOrEmpty (attribute.Value)) {  				score += 0.5;  			}  			if (score >= 5.0) {  				Pop ();  				this.tags.Remove (tagName);  				this.sb.Length = 0;  				this.sb.Append ("<");  				this.sb.Append (tagName);  				this.sb.Append (lookaheadBuffer.ToArray ());  				this.state = State.PartialText;  				this.markupErrorsCount++;  				return false;  			}  		}  	}  	ch = this.current.SkipWhitespace ();  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attrName.Length > 0) {  	Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  	if (attribute == null) {  		Log ("Duplicate attribute '{0}' ignored"' attrName);  	}  	else {  		ValidateAttribute (tag' attribute);  		if (attribute.DtdType == null) {  			score += 1.0;  		}  		if (quote == '\0') {  			score += 0.5;  		}  		if (String.IsNullOrEmpty (attribute.Value)) {  			score += 0.5;  		}  		if (score >= 5.0) {  			Pop ();  			this.tags.Remove (tagName);  			this.sb.Length = 0;  			this.sb.Append ("<");  			this.sb.Append (tagName);  			this.sb.Append (lookaheadBuffer.ToArray ());  			this.state = State.PartialText;  			this.markupErrorsCount++;  			return false;  		}  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attrName.Length > 0) {  	Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  	if (attribute == null) {  		Log ("Duplicate attribute '{0}' ignored"' attrName);  	}  	else {  		ValidateAttribute (tag' attribute);  		if (attribute.DtdType == null) {  			score += 1.0;  		}  		if (quote == '\0') {  			score += 0.5;  		}  		if (String.IsNullOrEmpty (attribute.Value)) {  			score += 0.5;  		}  		if (score >= 5.0) {  			Pop ();  			this.tags.Remove (tagName);  			this.sb.Length = 0;  			this.sb.Append ("<");  			this.sb.Append (tagName);  			this.sb.Append (lookaheadBuffer.ToArray ());  			this.state = State.PartialText;  			this.markupErrorsCount++;  			return false;  		}  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attrName.Length > 0) {  	Attribute attribute = tag.AddAttribute (attrName' value' quote' this.folding == CaseFolding.None);  	if (attribute == null) {  		Log ("Duplicate attribute '{0}' ignored"' attrName);  	}  	else {  		ValidateAttribute (tag' attribute);  		if (attribute.DtdType == null) {  			score += 1.0;  		}  		if (quote == '\0') {  			score += 0.5;  		}  		if (String.IsNullOrEmpty (attribute.Value)) {  			score += 0.5;  		}  		if (score >= 5.0) {  			Pop ();  			this.tags.Remove (tagName);  			this.sb.Length = 0;  			this.sb.Append ("<");  			this.sb.Append (tagName);  			this.sb.Append (lookaheadBuffer.ToArray ());  			this.state = State.PartialText;  			this.markupErrorsCount++;  			return false;  		}  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attribute == null) {  	Log ("Duplicate attribute '{0}' ignored"' attrName);  }  else {  	ValidateAttribute (tag' attribute);  	if (attribute.DtdType == null) {  		score += 1.0;  	}  	if (quote == '\0') {  		score += 0.5;  	}  	if (String.IsNullOrEmpty (attribute.Value)) {  		score += 0.5;  	}  	if (score >= 5.0) {  		Pop ();  		this.tags.Remove (tagName);  		this.sb.Length = 0;  		this.sb.Append ("<");  		this.sb.Append (tagName);  		this.sb.Append (lookaheadBuffer.ToArray ());  		this.state = State.PartialText;  		this.markupErrorsCount++;  		return false;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attribute == null) {  	Log ("Duplicate attribute '{0}' ignored"' attrName);  }  else {  	ValidateAttribute (tag' attribute);  	if (attribute.DtdType == null) {  		score += 1.0;  	}  	if (quote == '\0') {  		score += 0.5;  	}  	if (String.IsNullOrEmpty (attribute.Value)) {  		score += 0.5;  	}  	if (score >= 5.0) {  		Pop ();  		this.tags.Remove (tagName);  		this.sb.Length = 0;  		this.sb.Append ("<");  		this.sb.Append (tagName);  		this.sb.Append (lookaheadBuffer.ToArray ());  		this.state = State.PartialText;  		this.markupErrorsCount++;  		return false;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (attribute == null) {  	Log ("Duplicate attribute '{0}' ignored"' attrName);  }  else {  	ValidateAttribute (tag' attribute);  	if (attribute.DtdType == null) {  		score += 1.0;  	}  	if (quote == '\0') {  		score += 0.5;  	}  	if (String.IsNullOrEmpty (attribute.Value)) {  		score += 0.5;  	}  	if (score >= 5.0) {  		Pop ();  		this.tags.Remove (tagName);  		this.sb.Length = 0;  		this.sb.Append ("<");  		this.sb.Append (tagName);  		this.sb.Append (lookaheadBuffer.ToArray ());  		this.state = State.PartialText;  		this.markupErrorsCount++;  		return false;  	}  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (quote == '\0') {  	score += 0.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 0.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (String.IsNullOrEmpty (attribute.Value)) {  	score += 0.5;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: score += 0.5;  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseStartTag,The following statement contains a magic number: if (score >= 5.0) {  	Pop ();  	this.tags.Remove (tagName);  	this.sb.Length = 0;  	this.sb.Append ("<");  	this.sb.Append (tagName);  	this.sb.Append (lookaheadBuffer.ToArray ());  	this.state = State.PartialText;  	this.markupErrorsCount++;  	return false;  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseComment,The following statement contains a magic number: while (i >= 0) {  	int j = i + 2;  	while (j < value.Length && value [j] == '-') {  		j++;  	}  	if (i > 0) {  		value = value.Substring (0' i - 1) + "-" + value.Substring (j);  	}  	else {  		value = "-" + value.Substring (j);  	}  	i = value.IndexOf ("--");  }  
Magic Number,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ValidateContent,The following statement contains a magic number: if (this.dtd != null) {  	// See if this element is allowed inside the current element.  	// If it isn't' then auto-close elements until we find one  	// that it is allowed to be in.                                    	string name = this.nametable.Add (node.Name.ToUpper ());  	// DTD is in upper case  	int i = 0;  	int top = this.stack.Count - 2;  	if (node.DtdType != null) {  		// it is a known element' let's see if it's allowed in the  		// current context.  		for (i = top; i > 0; i--) {  			Node n = this.stack [i];  			if (n.IsEmpty) {  				// we'll have to pop this one  				continue;  			}  			ElementDecl f = n.DtdType;  			if (f != null) {  				if (f.Name == this.dtd.Name) {  					// can't pop the root element.  					break;  				}  				if (f.CanContain (name' this.dtd)) {  					break;  				}  				else if (!f.EndTagOptional) {  					// If the end tag is not optional then we can't  					// auto-close it.  We'll just have to live with the  					// junk we've found and move on.  					break;  				}  			}  			else {  				// Since we don't understand this tag anyway'  				// we might as well allow this content!  				break;  			}  		}  	}  	if (i == 0) {  		// Tag was not found or is not allowed anywhere' ignore it and   		// continue on.  	}  	else if (i < top) {  		Node n = this.stack [top];  		if (i == top - 1 && name == n.Name) {  			// e.g. p not allowed inside p' not an interesting error.  		}  		else {  			string closing = String.Empty;  			for (int k = top; k >= i + 1; k--) {  				if (closing.Length > 0) {  					closing += "'";  				}  				Node n2 = this.stack [k];  				closing += "<" + n2.Name + ">";  			}  			Log ("Element '{0}' not allowed inside '{1}'' closing {2}."' name' n.Name' closing);  		}  		this.state = State.AutoClose;  		this.newnode = node;  		Pop ();  		// save this new node until we pop the others  		this.poptodepth = i + 1;  	}  }  
Missing Default,FB2Fix,BatchFilesProcessor,C:\repos\Gremlin2_Fb2Fix\BatchFilesProcessor.cs,ProcessElement,The following switch statement is missing a default case: switch (node.NodeType) {  case XmlNodeType.Text:  	string text = node.InnerText;  	text = bullets.Replace (text' new MatchEvaluator (delegate (Match match) {  		fictionBook.ModificationType = ModificationType.Text;  		return "-";  	}));  	text = invalidChars.Replace (text' new MatchEvaluator (delegate (Match match) {  		fictionBook.ModificationType = ModificationType.Text;  		return " ";  	}));  	node.InnerText = text;  	//node.InnerText = invalidChars.Replace(bullets.Replace(node.InnerText' "-")' " ");  	break;  case XmlNodeType.Element:  	ElementDecl elementDecl = this.fb2Dtd.FindElement (node.LocalName);  	if (elementDecl == null) {  		invalidNodes.Add (node as XmlElement);  	}  	break;  }  
Missing Default,FB2Fix,GenreDescriptionElement,C:\repos\Gremlin2_Fb2Fix\FileNameProvider.cs,GenreDescriptionElement,The following switch statement is missing a default case: switch (template) {  case "*GNR*":  	lang = "ru";  	break;  case "*GNE*":  	lang = "en";  	break;  }  
Missing Default,FB2Fix,GenreTable,C:\repos\Gremlin2_Fb2Fix\GenreTable.cs,ReadGenreList,The following switch statement is missing a default case: switch (childElement.LocalName) {  case "genre-descr":  	XmlAttribute langAttribute = childElement.Attributes ["lang"];  	XmlAttribute titleAttribute = childElement.Attributes ["title"];  	if (langAttribute != null && !String.IsNullOrEmpty (langAttribute.Value)) {  		genre.AddDescription (langAttribute.Value' titleAttribute == null ? String.Empty : titleAttribute.Value);  	}  	break;  case "genre-alt":  	XmlAttribute valueAttribute = childElement.Attributes ["value"];  	if (valueAttribute != null && !String.IsNullOrEmpty (valueAttribute.Value)) {  		instance.genreMap [valueAttribute.Value] = genreName.Value;  	}  	break;  }  
Missing Default,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteStartElement,The following switch statement is missing a default case: switch (this.state) {  case Fb2TextWriterState.StartDocument:  	if (String.Compare (localName' "FictionBook") == 0) {  		this.state = Fb2TextWriterState.Root;  	}  	break;  case Fb2TextWriterState.Root:  	if (String.Compare (localName' "description") == 0) {  		this.state = Fb2TextWriterState.Description;  		if (!this.indentHeader) {  			base.Formatting = Formatting.None;  		}  	}  	else if (String.Compare (localName' "body") == 0) {  		base.Formatting = (this.indentBody) ? Formatting.Indented : Formatting.None;  		this.state = Fb2TextWriterState.Body;  	}  	else {  		base.Formatting = Formatting.Indented;  	}  	break;  }  
Missing Default,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteFullEndElement,The following switch statement is missing a default case: switch (this.state) {  case Fb2TextWriterState.Description:  	if (!this.indentHeader) {  		switch (localName) {  		case "title-info":  		case "src-title-info":  		case "document-info":  		case "publish-info":  		case "custom-info":  		case "output":  			writer.WriteLine ();  			break;  		}  	}  	if (String.Compare (localName' "description") == 0) {  		this.state = Fb2TextWriterState.Root;  		writer.WriteLine ();  	}  	break;  case Fb2TextWriterState.Body:  	if (!this.indentBody) {  		switch (localName) {  		case "image":  		case "title":  		case "epigraph":  		case "section":  		case "p":  			writer.WriteLine ();  			break;  		}  	}  	if (String.Compare (localName' "body") == 0) {  		this.state = Fb2TextWriterState.Root;  	}  	break;  }  
Missing Default,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteFullEndElement,The following switch statement is missing a default case: switch (localName) {  case "title-info":  case "src-title-info":  case "document-info":  case "publish-info":  case "custom-info":  case "output":  	writer.WriteLine ();  	break;  }  
Missing Default,FB2Fix,Fb2TextWriter,C:\repos\Gremlin2_Fb2Fix\Fb2TextWriter.cs,WriteFullEndElement,The following switch statement is missing a default case: switch (localName) {  case "image":  case "title":  case "epigraph":  case "section":  case "p":  	writer.WriteLine ();  	break;  }  
Missing Default,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,Open,The following switch statement is missing a default case: switch ((RarError)openStruct.OpenResult) {  case RarError.InsufficientMemory:  	throw new OutOfMemoryException ("Insufficient memory to perform operation.");  case RarError.BadData:  	throw new IOException ("Archive header broken");  case RarError.BadArchive:  	throw new IOException ("File is not a valid archive.");  case RarError.OpenError:  	throw new IOException ("File could not be opened.");  }  
Missing Default,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,ProcessFileError,The following switch statement is missing a default case: switch ((RarError)result) {  case RarError.UnknownFormat:  	throw new OutOfMemoryException ("Unknown archive format.");  case RarError.BadData:  	throw new IOException ("File CRC Error");  case RarError.BadArchive:  	throw new IOException ("File is not a valid archive.");  case RarError.OpenError:  	throw new IOException ("File could not be opened.");  case RarError.CreateError:  	throw new IOException ("File could not be created.");  case RarError.CloseError:  	throw new IOException ("File close error.");  case RarError.ReadError:  	throw new IOException ("File read error.");  case RarError.WriteError:  	throw new IOException ("File write error.");  }  
Missing Default,FB2Fix,Unrar,C:\repos\Gremlin2_Fb2Fix\Unrar.cs,RARCallback,The following switch statement is missing a default case: switch ((CallbackMessages)msg) {  case CallbackMessages.VolumeChange:  	volume = Marshal.PtrToStringAnsi (p1);  	if ((VolumeMessage)p2 == VolumeMessage.Notify) {  		result = OnNewVolume (volume);  	}  	else if ((VolumeMessage)p2 == VolumeMessage.Ask) {  		newVolume = OnMissingVolume (volume);  		if (newVolume.Length == 0) {  			result = -1;  		}  		else {  			if (newVolume != volume) {  				for (int i = 0; i < newVolume.Length; i++) {  					Marshal.WriteByte (p1' i' (byte)newVolume [i]);  				}  				Marshal.WriteByte (p1' newVolume.Length' (byte)0);  			}  			result = 1;  		}  	}  	break;  case CallbackMessages.ProcessData:  	result = OnDataAvailable (p1' p2);  	break;  case CallbackMessages.NeedPassword:  	result = OnPasswordRequired (p1' p2);  	break;  }  
Missing Default,FB2Fix.ObjectModel,FictionBook,C:\repos\Gremlin2_Fb2Fix\ObjectModel\FictionBook.cs,FictionBook,The following switch statement is missing a default case: switch (item.InfoType) {  case "fb2fix-status":  case "librusec-id":  case "previous-id":  	continue;  }  
Missing Default,FB2Fix.Sgml,Entity,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,SetLiteralType,The following switch statement is missing a default case: switch (token) {  case "CDATA":  	LiteralType = LiteralType.CDATA;  	break;  case "SDATA":  	LiteralType = LiteralType.SDATA;  	break;  case "PI":  	LiteralType = LiteralType.PI;  	break;  }  
Missing Default,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following switch statement is missing a default case: switch (w) {  case 0xfefffeff:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderBigEngian ();  case 0xfffefffe:  	index += 4;  	this.encoding = System.Text.Encoding.UTF8;  	return new Ucs4DecoderLittleEndian ();  case 0x3c000000:  	goto case 0xfefffeff;  case 0x0000003c:  	goto case 0xfffefffe;  }  
Missing Default,FB2Fix.Sgml,HtmlStream,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AutoDetectEncoding,The following switch statement is missing a default case: switch (w) {  case 0xfeff:  	index += 2;  	this.encoding = System.Text.Encoding.BigEndianUnicode;  	return UnicodeEncoding.BigEndianUnicode.GetDecoder ();  case 0xfffe:  	index += 2;  	this.encoding = new UnicodeEncoding (false' false);  	return this.encoding.GetDecoder ();  case 0x3c00:  	goto case 0xfeff;  case 0x003c:  	goto case 0xfffe;  }  
Missing Default,FB2Fix.Sgml,Group,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AddConnector,The following switch statement is missing a default case: switch (c) {  case ''':  	gt = GroupType.Sequence;  	break;  case '|':  	gt = GroupType.Or;  	break;  case '&':  	gt = GroupType.And;  	break;  }  
Missing Default,FB2Fix.Sgml,Group,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlParser.cs,AddOccurrence,The following switch statement is missing a default case: switch (c) {  case '?':  	o = Occurrence.Optional;  	break;  case '+':  	o = Occurrence.OneOrMore;  	break;  case '*':  	o = Occurrence.ZeroOrMore;  	break;  }  
Missing Default,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,Read,The following switch statement is missing a default case: switch (this.state) {  case State.Initial:  	this.state = State.Markup;  	this.current.ReadChar ();  	goto case State.Markup;  case State.Eof:  	if (this.current.Parent != null) {  		this.current.Close ();  		this.current = this.current.Parent;  	}  	else {  		return false;  	}  	break;  case State.EndTag:  	if ((string)this.endTag == this.node.Name) {  		Pop ();  		// we're done!  		this.state = State.Markup;  		goto case State.Markup;  	}  	Pop ();  	// close one element  	foundnode = true;  	// return another end element.  	break;  case State.Markup:  	if (this.node.IsEmpty) {  		Pop ();  	}  	Node n = this.node;  	foundnode = ParseMarkup ();  	break;  case State.PartialTag:  	Pop ();  	// remove text node.  	this.state = State.Markup;  	foundnode = ParseTag (this.partial);  	break;  //case State.PseudoStartTag:  //    foundnode = ParseStartTag('<');  //    break;  case State.AutoClose:  	Pop ();  	// close next node.  	if (this.stack.Count <= this.poptodepth) {  		this.state = State.Markup;  		if (this.newnode != null) {  			Push (this.newnode);  			// now we're ready to start the new node.  			this.newnode = null;  			this.state = State.Markup;  		}  		else if (this.node.NodeType == XmlNodeType.Document) {  			this.state = State.Eof;  			goto case State.Eof;  		}  	}  	foundnode = true;  	break;  case State.CData:  	foundnode = ParseCData ();  	break;  case State.Attr:  	goto case State.AttrValue;  case State.AttrValue:  	this.state = State.Markup;  	goto case State.Markup;  case State.Text:  	Pop ();  	goto case State.Markup;  case State.PartialText:  	if (ParseText (this.current.Lastchar' false)) {  		this.node.NodeType = XmlNodeType.Whitespace;  	}  	foundnode = true;  	break;  }  
Missing Default,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ScanName,The following switch statement is missing a default case: switch (this.folding) {  case CaseFolding.ToUpper:  	name = name.ToUpper ();  	break;  case CaseFolding.ToLower:  	name = name.ToLower ();  	break;  }  
Missing Default,FB2Fix.Sgml,SgmlReader,C:\repos\Gremlin2_Fb2Fix\SgmlReader\SgmlReader.cs,ParseCData,The following switch statement is missing a default case: switch (this.partial) {  case '!':  	this.partial = ' ';  	// and pop the comment next time around  	return ParseComment ();  case '?':  	this.partial = ' ';  	// and pop the PI next time around  	return ParsePI ();  case '/':  	this.state = State.EndTag;  	return true;  // we are done!  case ' ':  	break;  // means we just needed to pop the Comment' PI or CDATA.  }  
