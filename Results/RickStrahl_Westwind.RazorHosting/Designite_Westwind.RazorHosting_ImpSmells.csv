Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Westwind.RazorHosting,RazorEngine<TBaseTemplateType>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\RazorEngine.cs,RenderTemplateFromAssembly,The method has 5 parameters. Parameters: assemblyId' model' outputWriter' generatedNamespace' generatedClass
Long Parameter List,Westwind.RazorHosting,RazorTemplateBase,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\TemplateBase\RazorTemplateBase.cs,WriteAttributeTo,The method has 5 parameters. Parameters: writer' name' prefix' suffix' values
Long Identifier,Westwind.RazorHosting,RazorHostContainerException,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\HostContainers\RazorHostContainerException.cs,RazorHostContainerException,The length of the parameter templatePerRequestConfigurationData is 35.
Long Statement,Westwind.RazorHosting,RazorEngine<TBaseTemplateType>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\RazorEngine.cs,CompileTemplate,The length of the statement  "                compilerParameters.OutputAssembly = Path.Combine(Configuration.TempAssemblyPath' "_" + Guid.NewGuid().ToString("n") + ".dll"); " is 126.
Long Statement,Westwind.RazorHosting,RazorEngine<TBaseTemplateType>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\RazorEngine.cs,CreateHost,The length of the statement  "            var context = new GeneratedClassContext("Execute"' "Write"' "WriteLiteral"' "WriteTo"' "WriteLiteralTo"' typeof(HelperResult).FullName' "DefineSection"); " is 153.
Complex Conditional,Westwind.RazorHosting,RazorEngine<TBaseTemplateType>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\RazorEngine.cs,RenderTemplate,The conditional expression  "inferModelType && model != null &&                   !templateText.Trim().StartsWith("@model") &&                   !templateText.Trim().StartsWith("@inherits")"  is complex.
Complex Conditional,Westwind.RazorHosting,RazorStringHostContainer<TBaseTemplate>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\HostContainers\RazorStringHostContainer.cs,RenderTemplate,The conditional expression  "inferModelType && model != null &&                  !templateText.Trim().StartsWith("@model ") &&                  !templateText.Trim().StartsWith("@inherits ")"  is complex.
Complex Conditional,Westwind.RazorHosting,RazorStringHostContainer<TBaseTemplate>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\HostContainers\RazorStringHostContainer.cs,RenderTemplateToFile,The conditional expression  "inferModelType && model != null &&                  !templateText.Trim().StartsWith("@model ") &&                  !templateText.Trim().StartsWith("@inherits ")"  is complex.
Empty Catch Block,Westwind.RazorHosting,RazorEngineFactory<TBaseTemplateType>,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\RazorEngineFactory.cs,CurrentDomain_AssemblyResolve,The method has an empty catch block.
Magic Number,Westwind.RazorHosting,Utilities,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\Core\Utilities.cs,HtmlEncode,The following statement contains a magic number: for (int i = 0; i < len; i++)              {                  switch (text[i])                  {                        case '<':                          sb.Append("&lt;");                          break;                      case '>':                          sb.Append("&gt;");                          break;                      case '"':                          sb.Append("&quot;");                          break;                      case '&':                          sb.Append("&amp;");                          break;                      default:                          if (text[i] > 159)                          {                              // decimal numeric entity                              sb.Append("&#");                              sb.Append(((int)text[i]).ToString(CultureInfo.InvariantCulture));                              sb.Append(";");                          }                          else                              sb.Append(text[i]);                          break;                  }              }
Magic Number,Westwind.RazorHosting,HashCodeCombiner,C:\repos\RickStrahl_Westwind.RazorHosting\Westwind.RazorHosting\TemplateBase\AttributeParsing\HashCodeCombiner.cs,Add,The following statement contains a magic number: _combinedHash64 = ((_combinedHash64 << 5) + _combinedHash64) ^ i;
