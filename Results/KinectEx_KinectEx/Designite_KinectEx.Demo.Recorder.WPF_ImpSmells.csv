Implementation smell,Namespace,Class,File,Method,Description
Complex Method,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,Cyclomatic complexity of the method is 9
Long Statement,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/KinectEx.RecorderDemo.WPF;component/mainwindow.xaml"' System.UriKind.Relative); " is 125.
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,RecordButton_Click,The following statement contains a magic number: int colorCompressionType = ColorCompressionCombo.SelectedIndex / 3;
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,RecordButton_Click,The following statement contains a magic number: int colorCompressionSize = ColorCompressionCombo.SelectedIndex % 3;
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,RecordButton_Click,The following statement contains a magic number: _recorder.ColorRecorderCodec.OutputWidth = 1280;
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,RecordButton_Click,The following statement contains a magic number: _recorder.ColorRecorderCodec.OutputHeight = 720;
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Magic Number,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
Missing Default,KinectEx.RecorderDemo.WPF,MainWindow,D:\research\architectureSmells\repos\KinectEx_KinectEx\src\KinectEx.Demo.Recorder.WPF\MainWindow.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RecordButton = ((System.Windows.Controls.Button)(target));              return;              case 2:              this.BodyCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 3:              this.ColorCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 4:              this.DepthCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 5:              this.InfraredCheckBox = ((System.Windows.Controls.CheckBox)(target));              return;              case 6:              this.ColorCompressionCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 7:              this.SmoothingCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 8:              this.DisplayCombo = ((System.Windows.Controls.ComboBox)(target));              return;              case 9:              this.OutputImage = ((System.Windows.Controls.Image)(target));              return;              }
