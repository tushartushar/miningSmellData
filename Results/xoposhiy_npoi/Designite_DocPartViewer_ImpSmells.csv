Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,ShowDocPartTree,Cyclomatic complexity of the method is 11
Complex Method,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,Cyclomatic complexity of the method is 8
Empty Catch Block,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,ShowDocPartTree,The method has an empty catch block.
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,GetFileData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	int size = 2048;  	byte[] data = new byte[2048];  	while (true) {  		size = s.Read (data' 0' data.Length);  		if (size > 0) {  			ms.Write (data' 0' size);  		}  		else {  			break;  		}  	}  	string text = Encoding.UTF8.GetString (ms.ToArray ());  	ms.Close ();  	return text;  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,GetFileData,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	int size = 2048;  	byte[] data = new byte[2048];  	while (true) {  		size = s.Read (data' 0' data.Length);  		if (size > 0) {  			ms.Write (data' 0' size);  		}  		else {  			break;  		}  	}  	string text = Encoding.UTF8.GetString (ms.ToArray ());  	ms.Close ();  	return text;  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (e.Node.Tag is ZipEntryData) {  	ZipEntryData data = (ZipEntryData)e.Node.Tag;  	if (data.Type == ZipEntryType.File) {  		TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  		UTF8Encoding utf8 = new UTF8Encoding (false);  		byte[] test = Encoding.UTF8.GetBytes (data.Content);  		string xml;  		//remove utf8 string BOM flags   		if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  			xml = utf8.GetString (test' 3' test.Length - 3);  		else  			xml = data.Content;  		xmlDoc.LoadXml (xml);  		using (MemoryStream ms = new MemoryStream ()) {  			using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  				xmlWriter.Indentation = 4;  				xmlWriter.Formatting = System.Xml.Formatting.Indented;  				xmlDoc.WriteContentTo (xmlWriter);  				xmlWriter.Close ();  			}  			string result = Encoding.UTF8.GetString (ms.ToArray ());  			editor.Text = result;  			editor.Refresh ();  		}  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (e.Node.Tag is ZipEntryData) {  	ZipEntryData data = (ZipEntryData)e.Node.Tag;  	if (data.Type == ZipEntryType.File) {  		TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  		UTF8Encoding utf8 = new UTF8Encoding (false);  		byte[] test = Encoding.UTF8.GetBytes (data.Content);  		string xml;  		//remove utf8 string BOM flags   		if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  			xml = utf8.GetString (test' 3' test.Length - 3);  		else  			xml = data.Content;  		xmlDoc.LoadXml (xml);  		using (MemoryStream ms = new MemoryStream ()) {  			using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  				xmlWriter.Indentation = 4;  				xmlWriter.Formatting = System.Xml.Formatting.Indented;  				xmlDoc.WriteContentTo (xmlWriter);  				xmlWriter.Close ();  			}  			string result = Encoding.UTF8.GetString (ms.ToArray ());  			editor.Text = result;  			editor.Refresh ();  		}  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (e.Node.Tag is ZipEntryData) {  	ZipEntryData data = (ZipEntryData)e.Node.Tag;  	if (data.Type == ZipEntryType.File) {  		TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  		UTF8Encoding utf8 = new UTF8Encoding (false);  		byte[] test = Encoding.UTF8.GetBytes (data.Content);  		string xml;  		//remove utf8 string BOM flags   		if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  			xml = utf8.GetString (test' 3' test.Length - 3);  		else  			xml = data.Content;  		xmlDoc.LoadXml (xml);  		using (MemoryStream ms = new MemoryStream ()) {  			using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  				xmlWriter.Indentation = 4;  				xmlWriter.Formatting = System.Xml.Formatting.Indented;  				xmlDoc.WriteContentTo (xmlWriter);  				xmlWriter.Close ();  			}  			string result = Encoding.UTF8.GetString (ms.ToArray ());  			editor.Text = result;  			editor.Refresh ();  		}  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (e.Node.Tag is ZipEntryData) {  	ZipEntryData data = (ZipEntryData)e.Node.Tag;  	if (data.Type == ZipEntryType.File) {  		TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  		UTF8Encoding utf8 = new UTF8Encoding (false);  		byte[] test = Encoding.UTF8.GetBytes (data.Content);  		string xml;  		//remove utf8 string BOM flags   		if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  			xml = utf8.GetString (test' 3' test.Length - 3);  		else  			xml = data.Content;  		xmlDoc.LoadXml (xml);  		using (MemoryStream ms = new MemoryStream ()) {  			using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  				xmlWriter.Indentation = 4;  				xmlWriter.Formatting = System.Xml.Formatting.Indented;  				xmlDoc.WriteContentTo (xmlWriter);  				xmlWriter.Close ();  			}  			string result = Encoding.UTF8.GetString (ms.ToArray ());  			editor.Text = result;  			editor.Refresh ();  		}  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (data.Type == ZipEntryType.File) {  	TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  	UTF8Encoding utf8 = new UTF8Encoding (false);  	byte[] test = Encoding.UTF8.GetBytes (data.Content);  	string xml;  	//remove utf8 string BOM flags   	if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  		xml = utf8.GetString (test' 3' test.Length - 3);  	else  		xml = data.Content;  	xmlDoc.LoadXml (xml);  	using (MemoryStream ms = new MemoryStream ()) {  		using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  			xmlWriter.Indentation = 4;  			xmlWriter.Formatting = System.Xml.Formatting.Indented;  			xmlDoc.WriteContentTo (xmlWriter);  			xmlWriter.Close ();  		}  		string result = Encoding.UTF8.GetString (ms.ToArray ());  		editor.Text = result;  		editor.Refresh ();  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (data.Type == ZipEntryType.File) {  	TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  	UTF8Encoding utf8 = new UTF8Encoding (false);  	byte[] test = Encoding.UTF8.GetBytes (data.Content);  	string xml;  	//remove utf8 string BOM flags   	if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  		xml = utf8.GetString (test' 3' test.Length - 3);  	else  		xml = data.Content;  	xmlDoc.LoadXml (xml);  	using (MemoryStream ms = new MemoryStream ()) {  		using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  			xmlWriter.Indentation = 4;  			xmlWriter.Formatting = System.Xml.Formatting.Indented;  			xmlDoc.WriteContentTo (xmlWriter);  			xmlWriter.Close ();  		}  		string result = Encoding.UTF8.GetString (ms.ToArray ());  		editor.Text = result;  		editor.Refresh ();  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (data.Type == ZipEntryType.File) {  	TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  	UTF8Encoding utf8 = new UTF8Encoding (false);  	byte[] test = Encoding.UTF8.GetBytes (data.Content);  	string xml;  	//remove utf8 string BOM flags   	if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  		xml = utf8.GetString (test' 3' test.Length - 3);  	else  		xml = data.Content;  	xmlDoc.LoadXml (xml);  	using (MemoryStream ms = new MemoryStream ()) {  		using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  			xmlWriter.Indentation = 4;  			xmlWriter.Formatting = System.Xml.Formatting.Indented;  			xmlDoc.WriteContentTo (xmlWriter);  			xmlWriter.Close ();  		}  		string result = Encoding.UTF8.GetString (ms.ToArray ());  		editor.Text = result;  		editor.Refresh ();  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (data.Type == ZipEntryType.File) {  	TextEditorControl editor = e.Node.TreeView.Tag as TextEditorControl;  	UTF8Encoding utf8 = new UTF8Encoding (false);  	byte[] test = Encoding.UTF8.GetBytes (data.Content);  	string xml;  	//remove utf8 string BOM flags   	if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  		xml = utf8.GetString (test' 3' test.Length - 3);  	else  		xml = data.Content;  	xmlDoc.LoadXml (xml);  	using (MemoryStream ms = new MemoryStream ()) {  		using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  			xmlWriter.Indentation = 4;  			xmlWriter.Formatting = System.Xml.Formatting.Indented;  			xmlDoc.WriteContentTo (xmlWriter);  			xmlWriter.Close ();  		}  		string result = Encoding.UTF8.GetString (ms.ToArray ());  		editor.Text = result;  		editor.Refresh ();  	}  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  	xml = utf8.GetString (test' 3' test.Length - 3);  else  	xml = data.Content;  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  	xml = utf8.GetString (test' 3' test.Length - 3);  else  	xml = data.Content;  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: if (test [0] == 0xef && test [1] == 0xbb && test [2] == 0xbf)  	xml = utf8.GetString (test' 3' test.Length - 3);  else  	xml = data.Content;  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: xml = utf8.GetString (test' 3' test.Length - 3);  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: xml = utf8.GetString (test' 3' test.Length - 3);  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: using (MemoryStream ms = new MemoryStream ()) {  	using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  		xmlWriter.Indentation = 4;  		xmlWriter.Formatting = System.Xml.Formatting.Indented;  		xmlDoc.WriteContentTo (xmlWriter);  		xmlWriter.Close ();  	}  	string result = Encoding.UTF8.GetString (ms.ToArray ());  	editor.Text = result;  	editor.Refresh ();  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: using (XmlTextWriter xmlWriter = new XmlTextWriter (ms' utf8)) {  	xmlWriter.Indentation = 4;  	xmlWriter.Formatting = System.Xml.Formatting.Indented;  	xmlDoc.WriteContentTo (xmlWriter);  	xmlWriter.Close ();  }  
Magic Number,DocPartViewer,MainForm,C:\repos\xoposhiy_npoi\trunk\tools\DocPartViewer\DocPartViewer\MainForm.cs,treeDocPart_AfterSelect,The following statement contains a magic number: xmlWriter.Indentation = 4;  
