Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,BenchAUri,The method has 5 parameters. Parameters: uri' numRequests' numThreads' htmlOutput' saveGnuPlotData
Long Parameter List,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,ExecuteProcess,The method has 6 parameters. Parameters: application' cmdline' input' timeoutInMS' output' stdError
Long Statement,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,PrintUsage,The length of the statement  "            Console.WriteLine("    --baseuri <uri>        Base uri to use including credentials/hostname/port/path (Example: http://localhost:80/@api"); " is 140.
Long Statement,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,BuildPathWithUri,The length of the statement  "            filename = Path.GetFileNameWithoutExtension(filename) + "_" + GlobalClock.UtcNow.ToString("yyyyMMdd_HHmm") + Path.GetExtension(filename); " is 137.
Long Statement,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,BuildPathWithUri,The length of the statement  "            string ret = Path.Combine(Path.Combine( PATH_TO_OUTPUT' CleanFileName(new Uri(uri).PathAndQuery.TrimStart('/')))' filename); " is 124.
Magic Number,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,ProcessCmdLineOptions,The following statement contains a magic number: for (int i = 0; i < args.Length; i += 2) {                  string key = args[i];                  string value = ((i + 1) < args.Length) ? args[i + 1] : "";                    switch (key) {                      case "--help":                          PrintUsage();                          break;                      case "--urifile":                          LoadUriFile(value);                          break;                      case "--uri":                          LoadUri(value);                          break;                      case "--threads":                          if (!int.TryParse(value' out NUM_THREADS))                              Die(false' string.Format("Could not parse --threads {0} "' value));                          break;                      case "--requests":                          if (!int.TryParse(value' out NUM_REQUESTS))                              Die(false' string.Format("Could not parse --requests {0} "' value));                          break;                      case "--outputpath":                          PATH_TO_OUTPUT = value;                          break;                      case "--abpath":                          PATH_TO_AB = value;                          break;                      case "--baseuri":                          BASE_URI = value;                          break;                      case "--htmloutput":                          OUTPUT_HTML = true;                          i--;                          break;                      case "--savegnuplot":                          SAVE_GNOPLOT_DATA = true;                          i--;                          break;                      default:                          PrintUsage();                          return;                  }              }
Magic Number,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,PrintUsage,The following statement contains a magic number: Environment.Exit(69);
Magic Number,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,CopyStream,The following statement contains a magic number: byte[] buffer = new byte[32768];
Magic Number,MindTouch.Tools,DreamBench,C:\repos\MindTouch_DReAM\src\mindtouch.bench\Program.cs,CopyStream,The following statement contains a magic number: while (length != 0) {                  long count = source.Read(buffer' 0' buffer.Length);                  if (count > 0) {                      zero_read_counter = 0;                      target.Write(buffer' 0' (int) count);                      result += count;                        // NOTE (steveb): we stop when we've read the expected number of bytes when the length was non-negative'                       //                otherwise we stop when we can't read anymore bytes.                      if (length >= 0) {                          length -= count;                      }                      else if (count == 0) {                          break;                      }                  }                  else if (++zero_read_counter > 10) {                        // let's abort after 10 tries to read more data                      break;                  }              }
