Implementation smell,Namespace,Class,File,Method,Description
Long Statement,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The length of the statement  "            Assert.AreEqual(mockSqsClient.Delivered.Count()' mockSqsClient.Deleted.Count()' "The count of delivered messages and deleted messages does not match and it must"); " is 163.
Long Statement,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The length of the statement  "            Assert.AreEqual(mockSqsClient.Delivered.Count()' posted.Count()' "The number of delivered messages and posted messages does not match and it should"); " is 150.
Long Statement,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_retries_if_sqs_client_throws_on_receive,The length of the statement  "            Assert.IsTrue(Wait.For(() => exceptionSqsClient.Calls > 3' 10.Seconds())' "never got past the first receive call' calls = {0}"' exceptionSqsClient.Calls); " is 154.
Long Statement,MindTouchTest.Sqs.SqsReceiptHandleTests,Equals,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\Equals.cs,equals_for_sqs_receipt_handles_with_the_same_value_are_equal,The length of the statement  "                var sqsReceiptHandles = Enumerable.Repeat(randomValue' 1000).Select(integer => integer.ToString(CultureInfo.InvariantCulture)).ToArray(); " is 137.
Long Statement,MindTouchTest.Sqs.SqsReceiptHandleTests,GetHashCode,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\GetHashCode.cs,hash_codes_for_receipt_handles_with_same_handle_value_are_always_equal,The length of the statement  "                var sqsReceiptHandleHash = new SqsMessageReceipt(sqsReceiptHandle.ToString(CultureInfo.InvariantCulture)).GetHashCode(); " is 120.
Long Statement,MindTouchTest.Sqs.SqsReceiptHandleTests,GetHashCode,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\GetHashCode.cs,hash_codes_for_receipt_handles_with_same_handle_value_are_always_equal,The length of the statement  "                var sqsReceiptHandles = Enumerable.Repeat(sqsReceiptHandle' 1000).Select(integer => integer.ToString(CultureInfo.InvariantCulture).GetHashCode()).ToArray(); " is 156.
Long Statement,MindTouchTest.Sqs.SqsReceiptHandleTests,GetHashCode,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\GetHashCode.cs,hash_codes_for_receipt_handles_with_same_handle_value_are_always_equal,The length of the statement  "                    Assert.AreEqual(sqsReceiptHandleHash' sqsReceiptHandles[j]' string.Format("SqsReceiptHandle '{0}' with hash '{1}'' its clone did not match its hash '{2}'"' sqsReceiptHandle' sqsReceiptHandleHash' sqsReceiptHandles[j])); " is 219.
Magic Number,MindTouchTest.Sqs.Helpers,MockSqsClient,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\Helpers\MockSqsClient.cs,ReceiveMessages,The following statement contains a magic number: var take = (int)Math.Min(10' maxNumberOfMessages);
Magic Number,MindTouchTest.Sqs.InMemorySqsClientTests,DeleteMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\InMemorySqsClientTests\DeleteMessage.cs,Can_delete_message_from_queue,The following statement contains a magic number: var receivedMessages = sqs.ReceiveMessages(new SqsQueueName("bar")' 0.Seconds()' 10).First();
Magic Number,MindTouchTest.Sqs.InMemorySqsClientTests,DeleteMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\InMemorySqsClientTests\DeleteMessage.cs,Can_delete_message_from_queue,The following statement contains a magic number: var remainingMessages = sqs.ReceiveMessages(new SqsQueueName("bar")' 0.Seconds()' 10);
Magic Number,MindTouchTest.Sqs.InMemorySqsClientTests,ReceiveMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\InMemorySqsClientTests\ReceiveMessage.cs,Cannot_receive_a_message_to_a_non_existent_queue,The following statement contains a magic number: sqs.ReceiveMessages(new SqsQueueName("queuename")' 0.Seconds()' 10);
Magic Number,MindTouchTest.Sqs.InMemorySqsClientTests,ReceiveMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\InMemorySqsClientTests\ReceiveMessage.cs,Can_round_trip_message_through_queue,The following statement contains a magic number: var messages = sqs.ReceiveMessages(queueName' 0.Seconds()' 10);
Magic Number,MindTouchTest.Sqs.InMemorySqsClientTests,ReceiveMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\InMemorySqsClientTests\ReceiveMessage.cs,Receiving_from_non_existent_queue_throws,The following statement contains a magic number: sqs.ReceiveMessages(new SqsQueueName("foo")' 0.Seconds()' 10);
Magic Number,MindTouchTest.Sqs.SqsClientTests,DeleteMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsClientTests\DeleteMessage.cs,deleting_same_message_multiple_times_returns_http_200_responses,The following statement contains a magic number: var messages = _client.ReceiveMessages(TEST_QUEUE' 0.1.Seconds()' SqsUtils.MAX_NUMBER_OF_MESSAGES_TO_FETCH);
Magic Number,MindTouchTest.Sqs.SqsClientTests,ReceiveMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsClientTests\ReceiveMessage.cs,when_the_long_poll_internal_is_larger_than_default_nothing_bombs,The following statement contains a magic number: var messages = _client.ReceiveMessages(TEST_QUEUE' 22.Seconds()' SqsUtils.MAX_NUMBER_OF_MESSAGES_TO_FETCH);
Magic Number,MindTouchTest.Sqs.SqsClientTests,SendMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsClientTests\SendMessage.cs,sending_a_message_with_a_delay_works,The following statement contains a magic number: _client.SendMessage(queue' new XDoc("event")                                                 .Start("page")                                                 .Elem("page"' "/a/b/c")                                                 .End().ToCompactString()' 30.Seconds());
Magic Number,MindTouchTest.Sqs.SqsClientTests,SendMessage,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsClientTests\SendMessage.cs,sending_a_message_with_a_delay_works,The following statement contains a magic number: i < 10
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: mockSqsClient.FillQueue(15);
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: Assert.AreEqual(15' mockSqsClient.Queued.Count' "queue was accessed prematurely");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: Assert.IsTrue(Wait.For(() => mockSqsClient.Queued.Count == 0' 10.Seconds())' "queue did not get depleted in time");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: Assert.IsTrue(                  Wait.For(() => mockSqsClient.ReceiveCalled > 0' 5.Seconds())'                  string.Format("receive called the wrong number of times: Expected {0} != {1}"' 3' mockSqsClient.ReceiveCalled)                  );
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: Assert.IsTrue(                  Wait.For(() => mockSqsClient.ReceiveCalled > 0' 5.Seconds())'                  string.Format("receive called the wrong number of times: Expected {0} != {1}"' 3' mockSqsClient.ReceiveCalled)                  );
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback,The following statement contains a magic number: Assert.AreEqual(15' mockSqsClient.Delivered.Count' "delivered has the wrong number of messages");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: mockSqsClient.FillQueue(15);
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: Assert.AreEqual(15' mockSqsClient.Queued.Count' "queue was accessed prematurely");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: pollster.Listen(new SqsPollingClientSettings(                                  queueName: queueName'                                  callback: posted.AddRange'                                  longPollInterval: 10.Seconds()'                                  maxNumberOfMessages: SqsUtils.MAX_NUMBER_OF_MESSAGES_TO_FETCH'                                  waitTimeOnError: 1.Seconds()));
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: Assert.IsTrue(Wait.For(() => mockSqsClient.Queued.Count == 0' 10.Seconds())' "queue did not get depleted in time");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: Assert.IsTrue(                  Wait.For(() => mockSqsClient.ReceiveCalled > 0' 5.Seconds())'                  string.Format("receive called the wrong number of times: {0} != {1}"' 3' mockSqsClient.ReceiveCalled)                  );
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: Assert.IsTrue(                  Wait.For(() => mockSqsClient.ReceiveCalled > 0' 5.Seconds())'                  string.Format("receive called the wrong number of times: {0} != {1}"' 3' mockSqsClient.ReceiveCalled)                  );
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_pulls_from_sqs_and_calls_callback_but_does_not_automatically_deletes_messages,The following statement contains a magic number: Assert.AreEqual(15' mockSqsClient.Delivered.Count' "delivered has the wrong number of messages");
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_retries_if_sqs_client_throws_on_receive,The following statement contains a magic number: pollster.Listen(new SqsPollingClientSettings(                  queueName: new SqsQueueName("test")'                  callback: msgs => messages++'                   longPollInterval: (0.5).Seconds()'                   maxNumberOfMessages: SqsUtils.MAX_NUMBER_OF_MESSAGES_TO_FETCH'                   waitTimeOnError: (0.5).Seconds()              ));
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_retries_if_sqs_client_throws_on_receive,The following statement contains a magic number: pollster.Listen(new SqsPollingClientSettings(                  queueName: new SqsQueueName("test")'                  callback: msgs => messages++'                   longPollInterval: (0.5).Seconds()'                   maxNumberOfMessages: SqsUtils.MAX_NUMBER_OF_MESSAGES_TO_FETCH'                   waitTimeOnError: (0.5).Seconds()              ));
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_retries_if_sqs_client_throws_on_receive,The following statement contains a magic number: Assert.IsTrue(Wait.For(() => exceptionSqsClient.Calls > 3' 10.Seconds())' "never got past the first receive call' calls = {0}"' exceptionSqsClient.Calls);
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,Listen,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,polling_client_retries_if_sqs_client_throws_on_receive,The following statement contains a magic number: Assert.IsTrue(Wait.For(() => exceptionSqsClient.Calls > 3' 10.Seconds())' "never got past the first receive call' calls = {0}"' exceptionSqsClient.Calls);
Magic Number,MindTouchTest.Sqs.SqsPollingClientTests,ExceptionalSqsClient,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsLongPollClientTests\Listen.cs,ReceiveMessages,The following statement contains a magic number: Calls < 3
Magic Number,MindTouchTest.Sqs.SqsReceiptHandleTests,Equals,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\Equals.cs,equals_for_sqs_receipt_handles_with_the_same_value_are_equal,The following statement contains a magic number: var sqsReceiptHandles = Enumerable.Repeat(randomValue' 1000).Select(integer => integer.ToString(CultureInfo.InvariantCulture)).ToArray();
Magic Number,MindTouchTest.Sqs.SqsReceiptHandleTests,Equals,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\Equals.cs,equals_for_sqs_receipt_handles_with_the_same_value_are_equal,The following statement contains a magic number: i < 1000
Magic Number,MindTouchTest.Sqs.SqsReceiptHandleTests,GetHashCode,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\GetHashCode.cs,hash_codes_for_receipt_handles_with_same_handle_value_are_always_equal,The following statement contains a magic number: var sqsReceiptHandles = Enumerable.Repeat(sqsReceiptHandle' 1000).Select(integer => integer.ToString(CultureInfo.InvariantCulture).GetHashCode()).ToArray();
Magic Number,MindTouchTest.Sqs.SqsReceiptHandleTests,GetHashCode,D:\research\architectureSmells\repos\MindTouch_DReAM\src\tests\MindTouchTest.Sqs\SqsReceiptHandleTests\GetHashCode.cs,hash_codes_for_receipt_handles_with_same_handle_value_are_always_equal,The following statement contains a magic number: i < 1000
