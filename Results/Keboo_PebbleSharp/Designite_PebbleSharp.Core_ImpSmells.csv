Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PebbleSharp.Core,PutBytesClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PutBytes\PutBytesClient.cs,PutBytes,Cyclomatic complexity of the method is 8
Complex Method,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,PebbleSharp.Core.AppMessage,AppMessagePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppMessage\AppMessagePacket.cs,Load,Cyclomatic complexity of the method is 12
Complex Method,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,Cyclomatic complexity of the method is 16
Complex Method,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallFirmwareAsync,Cyclomatic complexity of the method is 11
Long Parameter List,PebbleSharp.Core,FirmwareVersion,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\FirmwareVersion.cs,FirmwareVersion,The method has 6 parameters. Parameters: timestamp' version' commit' isRecovery' hardwarePlatform' metadataVersion
Long Parameter List,PebbleSharp.Core,Unpack,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Unpack.cs,UnpackLE,The method has 5 parameters. Parameters: bytes' index' item1' item2' item3
Long Statement,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,ConnectAsync,The length of the statement  "            //PhoneVersionResponse is received immediately after connecting' and we must respond to it before making any other calls " is 120.
Long Statement,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,OnApplicationMessageReceived,The length of the statement  "            SendMessageNoResponseAsync( Endpoint.ApplicationMessage' new byte[] { 0xFF' response.Values!=null ? response.TransactionId :(byte)0} ); " is 135.
Long Statement,PebbleSharp.Core,PutBytesClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PutBytes\PutBytesClient.cs,PutBytes,The length of the statement  "				byte[] dataHeader = Util.CombineArrays( new byte[] { (byte)PutBytesType.Put }' Util.GetBytes(token)' Util.GetBytes( data.Length ) ); " is 132.
Long Statement,PebbleSharp.Core,PutBytesClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PutBytes\PutBytesClient.cs,PutBytes,The length of the statement  "				var result = await _pebble.SendMessageAsync<PutBytesResponsePacket>( Endpoint.PutBytes' Util.CombineArrays( dataHeader' data ) ); " is 129.
Long Statement,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppAsyncV3,The length of the statement  "				var runStateResult = await _pebble.SendMessageAsync<AppFetchRequestPacket>(Endpoint.AppRunState' startPacket.GetBytes()); " is 121.
Long Statement,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppAsyncV3,The length of the statement  "				var putBytesResponse = await _pebble.PutBytesClient.PutBytes(bundle.App' TransferType.Binary' appInstallId:(uint)runStateResult.AppId); " is 135.
Long Statement,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppAsyncV3,The length of the statement  "					putBytesResponse = await _pebble.PutBytesClient.PutBytes(bundle.Resources' TransferType.Resources' appInstallId:(uint)runStateResult.AppId); " is 140.
Empty Catch Block,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,SendMessageNoResponseAsync,The method has an empty catch block.
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppBank,The following statement contains a magic number: const int MINIMUM_HEADER_SIZE = 9;
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppBank,The following statement contains a magic number: const int appInfoSize = 78;
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppBank,The following statement contains a magic number: uint appCount = Util.GetUInt32(bytes' 5);
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: bytes.Count() != 78
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: Array.Reverse(bytes' 0' 4);
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: Array.Reverse(bytes' 4' 4);
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: Array.Reverse(bytes' 4' 4);
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: Array.Reverse(bytes' 71' 4);
Magic Number,PebbleSharp.Core,AppBank,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppBank.cs,AppFromBytes,The following statement contains a magic number: Array.Reverse(bytes' 71' 4);
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,ProcessBuffer,The following statement contains a magic number: int wordCount = buffer.Length/4;
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,ProcessBuffer,The following statement contains a magic number: buffer.Length%4 != 0
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,ProcessBuffer,The following statement contains a magic number: crc = ProcessWord(GetUInt32(buffer' i*4)' crc);
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,GetUInt32,The following statement contains a magic number: var size = Math.Min(buffer.Length - start' 4);
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,GetUInt32,The following statement contains a magic number: var rv = new byte[4];
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,GetUInt32,The following statement contains a magic number: size < 4
Magic Number,PebbleSharp.Core,Crc32,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Crc32.cs,ProcessWord,The following statement contains a magic number: Enumerable.Range(0' 32)
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,Pebble,The following statement contains a magic number: ResponseTimeout = TimeSpan.FromSeconds( 5 );
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,NotificationAsync,The following statement contains a magic number: parts = parts.Take( 2 ).Concat( new[] { timeStamp } ).Concat( parts.Skip( 2 ) ).ToArray();
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,NotificationAsync,The following statement contains a magic number: parts = parts.Take( 2 ).Concat( new[] { timeStamp } ).Concat( parts.Skip( 2 ) ).ToArray();
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,NotificationFacebookAsync,The following statement contains a magic number: await NotificationAsync( 2' sender' body );
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,NotificationTwitterAsync,The following statement contains a magic number: await NotificationAsync( 3' sender' body );
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,SetNowPlayingAsync,The following statement contains a magic number: byte[] data = Util.CombineArrays( new byte[] { 16 }' artistBytes' albumBytes' trackBytes );
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,SetTimeAsync,The following statement contains a magic number: byte[] data = Util.CombineArrays( new byte[] { 2 }' timestamp );
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,BadPingAsync,The following statement contains a magic number: byte[] cookie = { 1' 2' 3' 4' 5' 6' 7 };
Magic Number,PebbleSharp.Core,Pebble,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Pebble.cs,RemoveAppAsync,The following statement contains a magic number: byte[] msg = Util.CombineArrays( new byte[] { 2 }'                                              Util.GetBytes( app.ID )'                                              Util.GetBytes( app.Index ) );
Magic Number,PebbleSharp.Core,PebbleProtocol,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PebbleProtocol.cs,SendMessage,The following statement contains a magic number: payload.Length > 2048
Magic Number,PebbleSharp.Core,PebbleProtocol,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PebbleProtocol.cs,ReadAndProcessBytes,The following statement contains a magic number: switch ( _WaitingState )              {                  case WaitingStates.NewMessage:                      if ( _byteStream.Count >= 4 )                      {                          // Read new payload size and endpoint                          _CurrentPayloadSize = Util.GetUInt16( ReadBytes( 2 ) );                          _CurrentEndpoint = Util.GetUInt16( ReadBytes( 2 ) );                            _WaitingState = WaitingStates.Payload;                          return true;                      }                      break;                  case WaitingStates.Payload:                      if ( _byteStream.Count >= _CurrentPayloadSize )                      {                          // All of the payload's been received' so read it.                          var buffer = ReadBytes( _CurrentPayloadSize );                          RawMessageReceived( this' new RawMessageReceivedEventArgs( _CurrentEndpoint' buffer ) );                          // Reset state                          _WaitingState = WaitingStates.NewMessage;                          _CurrentEndpoint = 0;                          _CurrentPayloadSize = 0;                          return true;                      }                      break;              }
Magic Number,PebbleSharp.Core,PebbleProtocol,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PebbleProtocol.cs,ReadAndProcessBytes,The following statement contains a magic number: switch ( _WaitingState )              {                  case WaitingStates.NewMessage:                      if ( _byteStream.Count >= 4 )                      {                          // Read new payload size and endpoint                          _CurrentPayloadSize = Util.GetUInt16( ReadBytes( 2 ) );                          _CurrentEndpoint = Util.GetUInt16( ReadBytes( 2 ) );                            _WaitingState = WaitingStates.Payload;                          return true;                      }                      break;                  case WaitingStates.Payload:                      if ( _byteStream.Count >= _CurrentPayloadSize )                      {                          // All of the payload's been received' so read it.                          var buffer = ReadBytes( _CurrentPayloadSize );                          RawMessageReceived( this' new RawMessageReceivedEventArgs( _CurrentEndpoint' buffer ) );                          // Reset state                          _WaitingState = WaitingStates.NewMessage;                          _CurrentEndpoint = 0;                          _CurrentPayloadSize = 0;                          return true;                      }                      break;              }
Magic Number,PebbleSharp.Core,PebbleProtocol,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PebbleProtocol.cs,ReadAndProcessBytes,The following statement contains a magic number: switch ( _WaitingState )              {                  case WaitingStates.NewMessage:                      if ( _byteStream.Count >= 4 )                      {                          // Read new payload size and endpoint                          _CurrentPayloadSize = Util.GetUInt16( ReadBytes( 2 ) );                          _CurrentEndpoint = Util.GetUInt16( ReadBytes( 2 ) );                            _WaitingState = WaitingStates.Payload;                          return true;                      }                      break;                  case WaitingStates.Payload:                      if ( _byteStream.Count >= _CurrentPayloadSize )                      {                          // All of the payload's been received' so read it.                          var buffer = ReadBytes( _CurrentPayloadSize );                          RawMessageReceived( this' new RawMessageReceivedEventArgs( _CurrentEndpoint' buffer ) );                          // Reset state                          _WaitingState = WaitingStates.NewMessage;                          _CurrentEndpoint = 0;                          _CurrentPayloadSize = 0;                          return true;                      }                      break;              }
Magic Number,PebbleSharp.Core,ProgressValue,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\ProgressValue.cs,ProgressValue,The following statement contains a magic number: progressPercentage < 0 || progressPercentage > 100
Magic Number,PebbleSharp.Core,AppVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppVersionResponse.cs,AppVersionResponse,The following statement contains a magic number: PlatformFlags = 50;
Magic Number,PebbleSharp.Core,AppVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppVersionResponse.cs,AppVersionResponse,The following statement contains a magic number: ResponseVersion = 2;
Magic Number,PebbleSharp.Core,AppVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppVersionResponse.cs,AppVersionResponse,The following statement contains a magic number: MajorVersion = 3;
Magic Number,PebbleSharp.Core,AppVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppVersionResponse.cs,AppVersionResponse,The following statement contains a magic number: MinorVersion = 6;
Magic Number,PebbleSharp.Core,Util,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Util.cs,GetDateTimeFromTimestamp,The following statement contains a magic number: return new DateTime( 1970' 1' 1' 0' 0' 0' DateTimeKind.Unspecified ).AddSeconds( timestamp );
Magic Number,PebbleSharp.Core,Util,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Util.cs,GetTimestampFromDateTime,The following statement contains a magic number: return (int)( dateTime - new DateTime( 1970' 1' 1' 0' 0' 0' dateTime.Kind ) ).TotalSeconds;
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,ToString,The following statement contains a magic number: return                  string.Format(                      "{0:x2}{1:x2}{2:x2}{3:x2}-{4:x2}{5:x2}-{6:x2}{7:x2}-{8:x2}{9:x2}-{10:x2}{11:x2}{12:x2}{13:x2}{14:x2}{15:x2}"'                      _data[0]' _data[1]' _data[2]' _data[3]' _data[4]' _data[5]' _data[6]' _data[7]' _data[8]' _data[9]'                      _data[10]'                      _data[11]' _data[12]' _data[13]' _data[14]' _data[15] );
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,PebbleSharp.Core,UUID,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\UUID.cs,StringToByteArray,The following statement contains a magic number: return Enumerable.Range(0' hex.Length)                               .Where(x => x % 2 == 0)                               .Select(x => Convert.ToByte(hex.Substring(x' 2)' 16))                               .ToArray();
Magic Number,PebbleSharp.Core,AppFetchRequestPacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Apps\AppFetchRequestPacket.cs,Load,The following statement contains a magic number: UUID = new UUID(payload.Skip(1).Take(16).ToArray());
Magic Number,PebbleSharp.Core,AppFetchRequestPacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Apps\AppFetchRequestPacket.cs,Load,The following statement contains a magic number: AppId = BitConverter.ToInt32(payload' 17);
Magic Number,PebbleSharp.Core,PutBytesClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PutBytes\PutBytesClient.cs,PutBytes,The following statement contains a magic number: const int BUFFER_SIZE = 2000;
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following statement contains a magic number: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,Load,The following statement contains a magic number: Firmware = ParseVersion(payload.Skip(1).Take(47).ToArray());
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,Load,The following statement contains a magic number: RecoveryFirmware = ParseVersion(payload.Skip(48).Take(47).ToArray());
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,Load,The following statement contains a magic number: RecoveryFirmware = ParseVersion(payload.Skip(48).Take(47).ToArray());
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: string version = Util.GetString(data' 4' 32);
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: string version = Util.GetString(data' 4' 32);
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: string commit = Util.GetString(data' 36' 8);
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: string commit = Util.GetString(data' 36' 8);
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: bool isRecovery = BitConverter.ToBoolean(data' 44);
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: byte hardwarePlatform = data[45];
Magic Number,PebbleSharp.Core.Responses,FirmwareVersionResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\FirmwareVersionResponse.cs,ParseVersion,The following statement contains a magic number: byte metadataVersion = data[46];
Magic Number,PebbleSharp.Core.Responses,PingResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\PingResponse.cs,Load,The following statement contains a magic number: payload.Length < 5
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: errorPayload == null || errorPayload.Length < 24
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: byte level = errorPayload[4];
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: byte messageSize = errorPayload[5];
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: ushort lineNumber = Util.GetUInt16(errorPayload' 6);
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: string fileName = Util.GetString(errorPayload' 8' 16);
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: string fileName = Util.GetString(errorPayload' 8' 16);
Magic Number,PebbleSharp.Core.Responses,ResponseBase,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\ResponseBase.cs,SetError,The following statement contains a magic number: string message = Util.GetString(errorPayload' 24' messageSize);
Magic Number,PebbleSharp.Core.Responses,SystemMessageResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\SystemMessageResponse.cs,Load,The following statement contains a magic number: payload.Length >= 2
Magic Number,PebbleSharp.Core.Responses,TimeResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\TimeResponse.cs,Load,The following statement contains a magic number: payload.Length != 5
Magic Number,PebbleSharp.Core.AppMessage,AppMessagePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppMessage\AppMessagePacket.cs,Load,The following statement contains a magic number: ApplicationId = new UUID(bytes.Skip(index).Take(16).ToArray());
Magic Number,PebbleSharp.Core.AppMessage,AppMessagePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppMessage\AppMessagePacket.cs,Load,The following statement contains a magic number: index += 16;
Magic Number,PebbleSharp.Core.AppMessage,AppMessagePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppMessage\AppMessagePacket.cs,Load,The following statement contains a magic number: index += 4;
Magic Number,PebbleSharp.Core.AppMessage,AppMessagePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\AppMessage\AppMessagePacket.cs,Load,The following statement contains a magic number: index += 2;
Magic Number,PebbleSharp.Core.BlobDB,AppMetaData,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\AppMetaData.cs,GetBytes,The following statement contains a magic number: name = name.Substring(0' 96);
Magic Number,PebbleSharp.Core.BlobDB,AppMetaData,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\AppMetaData.cs,GetBytes,The following statement contains a magic number: name.Length > 96
Magic Number,PebbleSharp.Core.BlobDB,AppMetaData,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\AppMetaData.cs,GetBytes,The following statement contains a magic number: name = name.PadRight(96' '\0');
Magic Number,PebbleSharp.Core.BlobDB,BlobDBClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\BlobDBClient.cs,GenerateToken,The following statement contains a magic number: return (ushort)_random.Next(1' (2 ^ 16) - 1);
Magic Number,PebbleSharp.Core.BlobDB,BlobDBClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\BlobDBClient.cs,GenerateToken,The following statement contains a magic number: return (ushort)_random.Next(1' (2 ^ 16) - 1);
Magic Number,PebbleSharp.Core.BlobDB,BlobDBResponsePacket,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\BlobDB\BlobDBResponsePacket.cs,Load,The following statement contains a magic number: Response = (BlobStatus)payload[2];
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppAsync,The following statement contains a magic number: versionComponents[0] < 3
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,The following statement contains a magic number: progress.Report( new ProgressValue( "Getting current apps"' 20 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,The following statement contains a magic number: progress.Report( new ProgressValue( "Transferring app to Pebble"' 40 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,The following statement contains a magic number: progress.Report( new ProgressValue( "Transferring app resources to Pebble"' 60 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,The following statement contains a magic number: progress.Report( new ProgressValue( "Adding app"' 80 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallAppLegacyV2,The following statement contains a magic number: progress.Report( new ProgressValue( "Done"' 100 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallFirmwareAsync,The following statement contains a magic number: progress.Report( new ProgressValue( "Transfering firmware resources"' 25 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallFirmwareAsync,The following statement contains a magic number: progress.Report( new ProgressValue( "Transfering firmware"' 50 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallFirmwareAsync,The following statement contains a magic number: progress.Report( new ProgressValue( "Completing firmware install"' 75 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,InstallFirmwareAsync,The following statement contains a magic number: progress.Report( new ProgressValue( "Done installing firmware"' 100 ) );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,RemoveAppByUUID,The following statement contains a magic number: byte[] data = Util.CombineArrays( new byte[] { 2 }' uuid.Data );
Magic Number,PebbleSharp.Core.Install,InstallClient,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Install\InstallClient.cs,AddApp,The following statement contains a magic number: byte[] data = Util.CombineArrays( new byte[] { 3 }' Util.GetBytes( (uint)index ) );
Missing Default,PebbleSharp.Core,PebbleProtocol,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\PebbleProtocol.cs,ReadAndProcessBytes,The following switch statement is missing a default case: switch ( _WaitingState )              {                  case WaitingStates.NewMessage:                      if ( _byteStream.Count >= 4 )                      {                          // Read new payload size and endpoint                          _CurrentPayloadSize = Util.GetUInt16( ReadBytes( 2 ) );                          _CurrentEndpoint = Util.GetUInt16( ReadBytes( 2 ) );                            _WaitingState = WaitingStates.Payload;                          return true;                      }                      break;                  case WaitingStates.Payload:                      if ( _byteStream.Count >= _CurrentPayloadSize )                      {                          // All of the payload's been received' so read it.                          var buffer = ReadBytes( _CurrentPayloadSize );                          RawMessageReceived( this' new RawMessageReceivedEventArgs( _CurrentEndpoint' buffer ) );                          // Reset state                          _WaitingState = WaitingStates.NewMessage;                          _CurrentEndpoint = 0;                          _CurrentPayloadSize = 0;                          return true;                      }                      break;              }
Missing Default,PebbleSharp.Core.Responses,AppbankResponse,D:\research\architectureSmells\repos\Keboo_PebbleSharp\PebbleSharp.Core\Responses\AppbankResponse.cs,Load,The following switch statement is missing a default case: switch (ResponseType)              {                  case AppbankResponseType.Apps:                      AppBank = new AppBank(payload);                      break;                  case AppbankResponseType.AppUUIDs:                      uint installedApps = Util.GetUInt32(payload' 1);                      if (CheckExpectedSize(payload' (int) ( installedApps*16 + 5 )))                      {                          for (int i = 5; i < payload.Length; i += 16)                          {                              UUID uuid = Util.GetUUID(payload' i);                              if (uuid != null)                                  AppUUIDs.Add(uuid);                          }                      }                      break;                  case AppbankResponseType.AppVersionInformation:                      if (CheckExpectedSize(payload' 67))                      {                          ushort version = Util.GetUInt16(payload' 1);                          string name = Util.GetString(payload' 3' 32);                          string company = Util.GetString(payload' 35' 32);                          //var app = new AppBank.App();                          //app.Name = name;                          //app.Company = company;                          //app.Version = version;                      }                      break;                  case AppbankResponseType.AppUUID:                      if (CheckExpectedSize(payload' 17))                      {                          UUID = Util.GetUUID(payload' 1);                      }                      break;              }
