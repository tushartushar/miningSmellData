Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: int new_he = pMesh.Faces.SplitFace(0' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.GetFaceVertices(0).Length);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.GetFaceVertices(1).Length);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(new int[] { 8' 0' 2 }' pMesh.Faces.GetHalfedges(0));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(new int[] { 8' 0' 2 }' pMesh.Faces.GetHalfedges(0));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(new int[] { 9' 4' 6 }' pMesh.Faces.GetHalfedges(1));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(new int[] { 9' 4' 6 }' pMesh.Faces.GetHalfedges(1));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitFace,The following statement contains a magic number: Assert.AreEqual(new int[] { 9' 4' 6 }' pMesh.Faces.GetHalfedges(1));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Faces.SplitFace(1' 4));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Faces.SplitFace(4' 1));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Faces.SplitFace(0' 2));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotSplitFaceBadArguments,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Faces.SplitFace(0' 6));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: pMesh.Vertices[2].OutgoingHalfedge = 4;
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: pMesh.Vertices[2].OutgoingHalfedge = 4;
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: int h_rtn = pMesh.Faces.MergeFaces(4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 2' 6' 8 }' fhs);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 2' 6' 8 }' fhs);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 2' 6' 8 }' fhs);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices[2].OutgoingHalfedge);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices[2].OutgoingHalfedge);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanMergeFaces,The following statement contains a magic number: Assert.AreEqual(f' pMesh.Halfedges[6].AdjacentFace);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesBoundary,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesBoundary,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CannotMergeFacesAntenna,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Faces.MergeFaces(4));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: int new_he = pMesh.Faces.SplitFace(start_he' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: Assert.AreEqual(6' count);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanRemoveFace,The following statement contains a magic number: Assert.AreEqual(4' count);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.MergeFaces(4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 1' 2' 3 }' pMesh.Faces.GetFaceVertices(0));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 1' 2' 3 }' pMesh.Faces.GetFaceVertices(0));
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanAddManyFaces,The following statement contains a magic number: var faces = new int[][]              {                  new int[] { 0' 1' 2 }'                  new int[] { 3' 2' 1 }              };
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanAddManyFaces,The following statement contains a magic number: var faces = new int[][]              {                  new int[] { 0' 1' 2 }'                  new int[] { 3' 2' 1 }              };
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanAddManyFaces,The following statement contains a magic number: var faces = new int[][]              {                  new int[] { 0' 1' 2 }'                  new int[] { 3' 2' 1 }              };
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanAddManyFaces,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Faces.Count);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(0' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(1' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 3' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 2' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 1' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Vertices.Add(3' 0' 0);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 5' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 5' 4);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 6' 5);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 6' 5);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 6' 5);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 7' 6);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 7' 6);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 7' 6);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 7' 6);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 9' 8);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 9' 8);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 9' 8);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 9' 8);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 10' 9);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 10' 9);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 10' 9);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 10' 9);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(6' 7' 11' 10);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(6' 7' 11' 10);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(6' 7' 11' 10);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(6' 7' 11' 10);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(8' 9' 13' 12);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(8' 9' 13' 12);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(8' 9' 13' 12);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(8' 9' 13' 12);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(9' 10' 14' 13);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(9' 10' 14' 13);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(9' 10' 14' 13);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(9' 10' 14' 13);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(10' 11' 15' 14);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(10' 11' 15' 14);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(10' 11' 15' 14);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: pMesh.Faces.AddFace(10' 11' 15' 14);
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: int id = 4;
Magic Number,Plankton.Test,FaceTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\FaceTest.cs,CanDeleteFaceAndAddFace,The following statement contains a magic number: Assert.AreEqual(9' res);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFindHalfedge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFindHalfedge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFindHalfedge,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(1' 2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFindHalfedge,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(1' 2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFindHalfedge,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Halfedges.FindHalfedge(0' 2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.0' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.0' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.0' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.0' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 1' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 0' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 0' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 3' 6);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 3' 6);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 3' 6);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 6' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 6' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 6' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 2' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 2' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: int he = pMesh.Vertices[4].OutgoingHalfedge;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(29' he);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 1' 5' 2 }' pMesh.Faces.GetFaceVertices(6));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 1' 5' 2 }' pMesh.Faces.GetFaceVertices(6));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 1' 5' 2 }' pMesh.Faces.GetFaceVertices(6));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 5' 1' 4 }' pMesh.Faces.GetFaceVertices(7));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 5' 1' 4 }' pMesh.Faces.GetFaceVertices(7));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(new int[]{ 5' 1' 4 }' pMesh.Faces.GetFaceVertices(7));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: he = pMesh.Vertices[4].OutgoingHalfedge;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreNotEqual(29' he' "Vertex #4 should not be linked to Halfedge #29 post-flip");
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.AreEqual(25' he);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.GetHalfedges(4).Contains(29)
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.GetHalfedges(4).Contains(29)
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.GetHalfedges(2).Contains(28)
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: pMesh.Vertices.GetHalfedges(2).Contains(28)
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.Contains(29' pMesh.Vertices.GetHalfedges(5)'                              "Vertex #5 should now be linked to Halfedge #29");
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.Contains(29' pMesh.Vertices.GetHalfedges(5)'                              "Vertex #5 should now be linked to Halfedge #29");
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanFlipEdge,The following statement contains a magic number: Assert.Contains(28' pMesh.Vertices.GetHalfedges(1)'                              "Vertex #1 should now be linked to Halfedge #28");
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: pMesh.Faces.AddFace(2' 3' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: pMesh.Vertices[2].OutgoingHalfedge = 4;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: pMesh.Vertices[2].OutgoingHalfedge = 4;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: int split_he = 5;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(4' hs[new_he].StartVertex);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new_he' hs.FindHalfedge(4' 2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new_he' hs.FindHalfedge(4' 2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(hs.GetPairHalfedge(new_he)' hs.FindHalfedge(2' 4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(hs.GetPairHalfedge(new_he)' hs.FindHalfedge(2' 4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(split_he' hs.FindHalfedge(0' 4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(hs.GetPairHalfedge(split_he)' hs.FindHalfedge(4' 0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new_he' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Vertices.GetHalfedges(4).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Vertices.GetHalfedges(4).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {9' 5' 0}' pMesh.Vertices.GetHalfedges(0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {9' 5' 0}' pMesh.Vertices.GetHalfedges(0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {11' 6' 3}' pMesh.Vertices.GetHalfedges(2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {11' 6' 3}' pMesh.Vertices.GetHalfedges(2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {11' 6' 3}' pMesh.Vertices.GetHalfedges(2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanSplitEdge,The following statement contains a magic number: Assert.AreEqual(new int[] {11' 6' 3}' pMesh.Vertices.GetHalfedges(2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: Assert.AreEqual(7' h_rtn);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: Assert.AreEqual(new int[] { 2' 4' 6 }' pMesh.Faces.GetHalfedges(0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: Assert.AreEqual(new int[] { 2' 4' 6 }' pMesh.Faces.GetHalfedges(0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseBoundaryEdge,The following statement contains a magic number: Assert.AreEqual(new int[] { 2' 4' 6 }' pMesh.Faces.GetHalfedges(0));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.0' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.0' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.0' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.0' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 3' 4' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 3' 4' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 8' 5);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(3' 6' 7' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(3' 6' 7' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(3' 6' 7' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: pMesh.Faces.AddFace(3' 6' 7' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Faces.Count);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: int h_clps = pMesh.Vertices[4].OutgoingHalfedge;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: int v_suc = pMesh.Vertices.GetHalfedges(4)[1];
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: int h_boundary = pMesh.Vertices[3].OutgoingHalfedge;
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(h_boundary' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Faces.GetHalfedges(0).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.GetHalfedges(1).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Faces.GetHalfedges(2).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Faces.GetHalfedges(2).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.GetHalfedges(3).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.GetHalfedges(3).Length);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseInternalEdge,The following statement contains a magic number: Assert.AreNotEqual(3' pMesh.Halfedges[h].StartVertex);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldVertex,The following statement contains a magic number: int h = pMesh.Halfedges.FindHalfedge(1' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(0' 3' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(1' 3' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(7' 5' 6' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(7' 5' 6' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(7' 5' 6' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: pMesh.Faces.AddFace(7' 5' 6' 8);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: int h_clps = pMesh.Halfedges.FindHalfedge(4' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: int h_clps = pMesh.Halfedges.FindHalfedge(4' 7);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Halfedges[h_succ].AdjacentFace);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(new int[] { 5' 6' 8' 4 }' pMesh.Faces.GetFaceVertices(4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(new int[] { 5' 6' 8' 4 }' pMesh.Faces.GetFaceVertices(4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(new int[] { 5' 6' 8' 4 }' pMesh.Faces.GetFaceVertices(4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(new int[] { 5' 6' 8' 4 }' pMesh.Faces.GetFaceVertices(4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(new int[] { 5' 6' 8' 4 }' pMesh.Faces.GetFaceVertices(4));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(8' count);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.IsTrue(pMesh.Faces[2].IsUnused && pMesh.Faces[3].IsUnused);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.IsTrue(pMesh.Faces[2].IsUnused && pMesh.Faces[3].IsUnused);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(25' pMesh.Halfedges[5].NextHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(25' pMesh.Halfedges[5].NextHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(5' pMesh.Halfedges[25].PrevHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: Assert.AreEqual(5' pMesh.Halfedges[25].PrevHalfedge);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseAdjacentTriangles,The following statement contains a magic number: new int[] { 14' 15' 16' 17' 18' 19 }
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseValenceThreeVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseValenceThreeVertex,The following statement contains a magic number: pMesh.Vertices.Add(1' 1.4' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseValenceThreeVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseValenceThreeVertex,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Faces.Count);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseValenceThreeVertex,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Halfedges.Where(q => q.IsUnused).Count());
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Vertices.Add(-1' -2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Vertices.Add(0' -3' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Vertices.Add(1' -2' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(0' 4' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 1);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 6' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 6' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 6' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: Assert.AreEqual(9' pMesh.Faces.Count);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Halfedges.CollapseEdge(2));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CannotCollapseNonManifoldEdge,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Halfedges.CollapseEdge(6));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(8' pMesh.Halfedges.Count);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 4' 5' 2 }' pMesh.Faces.GetFaceVertices(1));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 4' 5' 2 }' pMesh.Faces.GetFaceVertices(1));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 4' 5' 2 }' pMesh.Faces.GetFaceVertices(1));
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(100' 0' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(100' 100' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(100' 100' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(0' 100' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(50' 50' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Vertices.Add(50' 50' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Faces.AddFace(1' 4' 0);
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Faces.AddFace(new int[] { 1' 2' 3' 0' 4 });
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Faces.AddFace(new int[] { 1' 2' 3' 0' 4 });
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: mesh.Faces.AddFace(new int[] { 1' 2' 3' 0' 4 });
Magic Number,Plankton.Test,HalfedgeTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\HalfedgeTest.cs,CanCollapseSameFace,The following statement contains a magic number: Assert.AreEqual(4' mesh.Faces.GetFaceVertices(1).Length' "face 1 should have 4 vertices");
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(24' pMesh.Halfedges.Count);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexZeroHalfedgesExpected = new int[]{ 13' 5' 6 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexZeroHalfedgesExpected = new int[]{ 13' 5' 6 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexZeroHalfedgesExpected = new int[]{ 13' 5' 6 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(3' vertexZeroHalfedges.Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceTwoHalfedges = pMesh.Faces.GetHalfedges(2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceTwoHalfedgesExpected = new int[]{ 14' 16' 9' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceTwoHalfedgesExpected = new int[]{ 14' 16' 9' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceTwoHalfedgesExpected = new int[]{ 14' 16' 9' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceTwoHalfedgesExpected = new int[]{ 14' 16' 9' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(4' faceTwoHalfedges.Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(0' pMesh.Faces.NakedEdgeCount(2));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceFourVertices = pMesh.Faces.GetFaceVertices(4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceFourVerticesExpected = new int[]{ 4' 7' 3' 0 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceFourVerticesExpected = new int[]{ 4' 7' 3' 0 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] faceFourVerticesExpected = new int[]{ 4' 7' 3' 0 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexOneFacesExpected = new int[]{ 0' 1' 2 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(3' vertexOneFaces.Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexZeroNeighboursExpected = new int[]{ 4' 1' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: int[] vertexZeroNeighboursExpected = new int[]{ 4' 1' 3 };
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(3' vertexZeroNeighbours.Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(13' pMesh.Halfedges.FindHalfedge(0' 4));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(13' pMesh.Halfedges.FindHalfedge(0' 4));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCreateCubeFromFaceVertex,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Halfedges.FindHalfedge(1' 3));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: Assert.AreEqual(new int[] { 2' 3' 0' 1 }' dual.Vertices.GetVertexFaces(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanDualCube,The following statement contains a magic number: Assert.AreEqual(new int[] { 2' 3' 0' 1 }' dual.Vertices.GetVertexFaces(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.2' 0.5' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(-0.2' 0.5' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.2' 0.5' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.2' 0.5' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.2' 0.0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Vertices[0].OutgoingHalfedge);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 4' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 4' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Vertices.NakedEdgeCount(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(11' pMesh.Vertices[0].OutgoingHalfedge);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(6' 5' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(6' 5' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices.NakedEdgeCount(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(15' pMesh.Vertices[0].OutgoingHalfedge);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices.GetHalfedges(0).Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: pMesh.Faces.AddFace(5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Vertices.NakedEdgeCount(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices.GetHalfedges(0).Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: int f = pMesh.Faces.AddFace(0' 3' 2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: int f = pMesh.Faces.AddFace(0' 3' 2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Vertices.GetHalfedges(0).Length);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Vertices.NakedEdgeCount(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: f = pMesh.Faces.AddFace(0' 5' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanAddFacesAroundNonManifoldVertex,The following statement contains a magic number: f = pMesh.Faces.AddFace(0' 5' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 4' 5' 2);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Vertices.Count);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(8' pMesh.Halfedges.Count);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 2' 3' 1 }' pMesh.Faces.GetFaceVertices(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { 0' 2' 3' 1 }' pMesh.Faces.GetFaceVertices(0));
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanCalculateVolume,The following statement contains a magic number: Assert.AreEqual(1' pMesh.Volume()' 1E-9);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(-0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' -0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' -0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Vertices.Add(0.5' 0.5' 0.5);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(3' 2' 1' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(1' 5' 4' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(2' 6' 5' 1);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(7' 6' 2' 3);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(4' 7' 3' 0);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: pMesh.Faces.AddFace(5' 6' 7' 4);
Magic Number,Plankton.Test,MeshTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\MeshTest.cs,CanTruncateMesh,The following statement contains a magic number: Assert.AreEqual(6' pMesh.Faces.Count);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 4' 1);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: pMesh.Faces.AddFace(2' 4' 1);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(8' pMesh.Halfedges.FindHalfedge(4' 1));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(8' pMesh.Halfedges.FindHalfedge(4' 1));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(4' 3));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(4' 3));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(4' 3));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(7' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(7' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: int h_new = pMesh.Vertices.SplitVertex(8' 2);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: int h_new = pMesh.Vertices.SplitVertex(8' 2);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(12' h_new);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(h_new' pMesh.Halfedges.FindHalfedge(4' 5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(h_new' pMesh.Halfedges.FindHalfedge(4' 5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(1' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 12' 8 }' pMesh.Vertices.GetHalfedges(4));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 12' 8 }' pMesh.Vertices.GetHalfedges(4));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 1' 12' 8 }' pMesh.Vertices.GetHalfedges(4));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 7' 13' 2 }' pMesh.Vertices.GetHalfedges(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 7' 13' 2 }' pMesh.Vertices.GetHalfedges(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 7' 13' 2 }' pMesh.Vertices.GetHalfedges(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitVertex,The following statement contains a magic number: Assert.AreEqual(new int[] { 7' 13' 2 }' pMesh.Vertices.GetHalfedges(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(2' 4' 1);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(2' 4' 1);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(7' 4' 8);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(7' 4' 8);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(7' 4' 8);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: int start_he = 8;
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: Assert.AreEqual(start_he' pMesh.Halfedges.FindHalfedge(4' 8));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: Assert.AreEqual(start_he' pMesh.Halfedges.FindHalfedge(4' 8));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(4' 1));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: Assert.AreEqual(2' pMesh.Halfedges.FindHalfedge(4' 1));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSplitMergeInvariant,The following statement contains a magic number: int new_he = pMesh.Vertices.SplitVertex(start_he' 2);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Halfedges[4].StartVertex);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: Assert.AreEqual(4' pMesh.Halfedges[4].StartVertex);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: Assert.AreEqual(0' pMesh.Halfedges[4].AdjacentFace);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: pMesh.Vertices.EraseCenterVertex(4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: int[] expected = new int[] { 6' 0' 14' 16' 20' 22' 10' 12 };
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: Assert.AreEqual(8' faceHalfedges.Length);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanEraseCenterVertex,The following statement contains a magic number: Assert.AreEqual(-1' pMesh.Vertices[4].OutgoingHalfedge);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: pMesh.Halfedges.CollapseEdge(14);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(vertexCount - 2' pMesh.Vertices.Count);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { -1' 3' 1 }' pMesh.Vertices.GetVertexFaces(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanCompact,The following statement contains a magic number: Assert.AreEqual(new int[] { -1' 3' 1 }' pMesh.Vertices.GetVertexFaces(5));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.IsTrue(pMesh.Vertices.SetVertex(1' 2f' 2f' 2f));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.IsTrue(pMesh.Vertices.SetVertex(1' 2f' 2f' 2f));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.IsTrue(pMesh.Vertices.SetVertex(1' 2f' 2f' 2f));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.AreEqual(2' v.X);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.AreEqual(2' v.Y);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.AreEqual(2' v.Z);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanSetVertex,The following statement contains a magic number: Assert.IsFalse(pMesh.Vertices.SetVertex(3' 0' 0' 0));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: var f = pMesh.Vertices.TruncateVertex(4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: Assert.AreEqual(vertexCount + 3' pMesh.Vertices.Count);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanTruncateVertex,The following statement contains a magic number: Assert.AreEqual(3' pMesh.Vertices.GetValence(v));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: Assert.AreEqual(new PlanktonXYZ(0' 0' 1)' pMesh.Vertices.GetNormal(7));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormal,The following statement contains a magic number: Assert.AreEqual(new PlanktonXYZ(0' 0' 1)' pMesh.Vertices.GetNormal(4));
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(0' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(1' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(2' 2' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(2' 1' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Vertices.Add(2' 0' 0);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(0' 1' 4' 3);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(3' 4' 7' 6);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(1' 2' 5' 4);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: pMesh.Faces.AddFace(4' 5' 8' 7);
Magic Number,Plankton.Test,VertexTest,D:\research\architectureSmells\repos\meshmash_Plankton\src\PlanktonTests\VertexTest.cs,CanGetNormals,The following statement contains a magic number: var expected = Enumerable.Repeat(new PlanktonXYZ(0' 0' 1)' 9).ToArray();
