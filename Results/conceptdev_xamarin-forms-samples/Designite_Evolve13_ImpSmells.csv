Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Evolve13,MenuPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MenuPage.cs,Selected,Cyclomatic complexity of the method is 24
Long Statement,Xamarin.Forms,WrapLayout,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,LayoutChildren,The length of the statement  "			var location = new Rectangle (dingus.Item2.X + x + offset' dingus.Item2.Y + y' dingus.Item2.Width' dingus.Item2.Height); " is 120.
Long Statement,Xamarin.Forms,WrapLayout,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,NaiveLayout,The length of the statement  "		currentList.Add (new Tuple<View' Rectangle> (child' new Rectangle (startX' startY' sizeRequest.Request.Width' sizeRequest.Request.Height))); " is 140.
Long Statement,Xamarin.Forms,WrapLayoutOld,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,OnSizeRequest,The length of the statement  "	double internalWidth = double.IsPositiveInfinity (widthConstraint) ? double.PositiveInfinity : Math.Max (0' widthConstraint); " is 125.
Long Statement,Xamarin.Forms,WrapLayoutOld,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,OnSizeRequest,The length of the statement  "	double internalHeight = double.IsPositiveInfinity (heightConstraint) ? double.PositiveInfinity : Math.Max (0' heightConstraint); " is 128.
Long Statement,Xamarin.Forms,WrapLayoutOld,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,OnSizeRequest,The length of the statement  "	return Orientation == StackOrientation.Vertical ? DoVerticalMeasure (internalWidth' internalHeight) : DoHorizontalMeasure (internalWidth' internalHeight); " is 154.
Magic Number,Evolve13,SessionsPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionsPage.cs,SessionsPage,The following statement contains a magic number: listView = new ListView {  	RowHeight = 40  };  
Magic Number,Evolve13,SpeakersPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPage.cs,SpeakersPage,The following statement contains a magic number: listView = new ListView {  	RowHeight = 40  };  
Magic Number,Evolve13,MapPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MapPage.cs,MapPage,The following statement contains a magic number: map.Pins.Add (pin = new Pin () {  	Label = "Evolve 2013"'  	Position = new Position (30.26535' -97.738613)'  	Type = PinType.Place  });  
Magic Number,Evolve13,MapPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MapPage.cs,MapPage,The following statement contains a magic number: map.Pins.Add (pin = new Pin () {  	Label = "Evolve 2013"'  	Position = new Position (30.26535' -97.738613)'  	Type = PinType.Place  });  
Magic Number,Evolve13,FavoritesPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\FavoritesPage.cs,FavoritesPage,The following statement contains a magic number: listView = new ListView {  	RowHeight = 40  };  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,SessionCell,The following statement contains a magic number: label = new Label {  	YAlign = TextAlignment.Center'  	Font = Font.SystemFontOfSize (10)  };  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,SessionCell,The following statement contains a magic number: layout = new StackLayout {  	Padding = new Thickness (20' 0' 0' 0)'  	Orientation = StackOrientation.Horizontal'  	HorizontalOptions = LayoutOptions.StartAndExpand'  	Children =  {  		text'  		fav  	}  };  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 75)  	this.Height = 110;  else if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: this.Height = 110;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 60)  	this.Height = 80;  else if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: this.Height = 80;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: if (session.Title.Length > 30)  	this.Height = 60;  else  	this.Height = 40;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: this.Height = 60;  
Magic Number,Evolve13,SessionCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SessionCell.cs,OnBindingContextChanged,The following statement contains a magic number: this.Height = 40;  
Magic Number,Evolve13,MenuHeader,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MenuHeader.cs,MenuHeader,The following statement contains a magic number: Height = 60;  
Magic Number,Evolve13,MenuHeader,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MenuHeader.cs,MenuHeader,The following statement contains a magic number: View = new StackLayout {  	Padding = new Thickness (20)'  	BackgroundColor = App.HeaderTint'  	Children =  {  		label  	}  };  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakersPageWrap,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakersPageWrap.cs,SpeakersPageWrap,The following statement contains a magic number: foreach (var speaker in speakers) {  	// configure cell for wrap  	var cell = new StackLayout {  		WidthRequest = 50'  		HeightRequest = 50'  		BackgroundColor = Color.FromRgb (222' 222' 222)'  		Children =  {  			new Image {  				Source = speaker.HeadshotUrl'  				VerticalOptions = LayoutOptions.Start'  				//BackgroundColor = Color.Blue'  				WidthRequest = 30'  				HeightRequest = 30  			}'  			new Label {  				Text = speaker.Name'  				FontSize = 9'  				LineBreakMode = LineBreakMode.TailTruncation'  				VerticalOptions = LayoutOptions.Start'  				HorizontalOptions = LayoutOptions.Center  			}  		}  	};  	// add touch handling to show next page  	var tapGestureRecognizer = new TapGestureRecognizer ();  	tapGestureRecognizer.CommandParameter = speaker;  	tapGestureRecognizer.Tapped += (sender' e) => {  		var speakr = ((TappedEventArgs)e).Parameter as Speaker;  		var sp = new SpeakerPage ();  		sp.BindingContext = speakr;  		Navigation.PushAsync (sp);  	};  	cell.GestureRecognizers.Add (tapGestureRecognizer);  	// add to wrap layout  	layout.Children.Add (cell);  }  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: label = new Label {  	YAlign = TextAlignment.Center'  	Font = Font.SystemFontOfSize (10)  };  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: photo = new Image {  	WidthRequest = 38'  	HeightRequest = 38'  };  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: photo = new Image {  	WidthRequest = 38'  	HeightRequest = 38'  };  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: mask = new Image {  	Source = "roundmask.png"'  	WidthRequest = 38'  	HeightRequest = 38'  };  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: mask = new Image {  	Source = "roundmask.png"'  	WidthRequest = 38'  	HeightRequest = 38'  };  
Magic Number,Evolve13,SpeakerCell,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\SpeakerCell.cs,SpeakerCell,The following statement contains a magic number: layout = new StackLayout {  	Padding = new Thickness (10' 0' 0' 0)'  	Orientation = StackOrientation.Horizontal'  	HorizontalOptions = LayoutOptions.StartAndExpand'  	Children =  {  		photoGrid'  		text  	}  };  
Magic Number,Xamarin.Forms,WrapLayout,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Controls\WrapLayout.cs,LayoutChildren,The following statement contains a magic number: foreach (var t in layout) {  	var offset = (int)((width - t.Last ().Item2.Right) / 2);  	foreach (var dingus in t) {  		var location = new Rectangle (dingus.Item2.X + x + offset' dingus.Item2.Y + y' dingus.Item2.Width' dingus.Item2.Height);  		LayoutChildIntoBoundingRegion (dingus.Item1' location);  	}  }  
Missing Default,Evolve13,MenuPage,F:\newReposMay17\conceptdev_xamarin-forms-samples\Evolve13\Evolve13\Views\MenuPage.cs,Selected,The following switch statement is missing a default case: switch (item) {  case "Sessions":  	if (sessions == null)  		sessions = new NavigationPage (new SessionsPage ()) {  			BarBackgroundColor = App.NavTint  		};  	master.Detail = sessions;  	break;  case "Speakers":  	if (speakers == null) {  		//					speakers = new NavigationPage (new SpeakersPage ()) { BarBackgroundColor = App.NavTint };  		//TODO: finish WrapLayout demo  		speakers = new NavigationPage (new SpeakersPageWrap ()) {  			BarBackgroundColor = App.NavTint  		};  	}  	master.Detail = speakers;  	break;  case "Favorites":  	if (favorites == null)  		favorites = new NavigationPage (new FavoritesPage ()) {  			BarBackgroundColor = App.NavTint  		};  	master.Detail = favorites;  	break;  case "Room Plan":  	master.Detail = new NavigationPage (new FloorplanPage ()) {  		BarBackgroundColor = App.NavTint  	};  	break;  case "Map":  	master.Detail = new NavigationPage (new MapPage ()) {  		BarBackgroundColor = App.NavTint  	};  	break;  case "About":  	master.Detail = new NavigationPage (new AboutPage ()) {  		BarBackgroundColor = App.NavTint  	};  	break;  }  
