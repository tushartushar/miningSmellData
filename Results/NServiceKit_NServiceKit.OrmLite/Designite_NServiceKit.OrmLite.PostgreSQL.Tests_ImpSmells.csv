Implementation smell,Namespace,Class,File,Method,Description
Long Method,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has 329 lines of code.
Long Method,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The method has 183 lines of code.
Long Statement,NServiceKit.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,_insertManually,The length of the statement  "                cmd.CommandText = @"INSERT INTO ""TypeWithByteArrayField"" (""Id""'""Content"") VALUES (@Id' @Content) --manual parameterized insert";" is 134.
Long Statement,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' ev);" is 126.
Long Statement,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The length of the statement  "                db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' ev);" is 124.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_GetById,The length of the statement  "			OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = new PrefixNamingStrategy" is 134.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_GetById,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id= "999"' AlbumId = "112"' AlbumName="ElectroShip"' Name = "MyNameIsBatman"};" is 142.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_query_by_example,The length of the statement  "			OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = new PrefixNamingStrategy" is 134.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_with_query_by_example,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" };" is 146.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "			OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = new PrefixNamingStrategy" is 134.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" };" is 146.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" };" is 146.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "			OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = OrmLite.OrmLiteConfig.DialectProvider.NamingStrategy = new PrefixNamingStrategy" is 134.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteCreateTableWithNamigStrategyTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteCreateTableWithNamigStrategyTests.cs,Can_get_data_from_TableWithNamigStrategy_AfterChangingNamingStrategy,The length of the statement  "				ModelWithOnlyStringFields m = new ModelWithOnlyStringFields() { Id = "998"' AlbumId = "112"' AlbumName = "ElectroShip"' Name = "QueryByExample" };" is 146.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The length of the statement  "				var rows = db.Query<ModelWithFieldsOfDifferentTypes>("SELECT * FROM \"ModelWithFieldsOfDifferentTypes\" where \"Id\" = :Id "'" is 125.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });" is 224.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });" is 224.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });" is 216.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});" is 225.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});" is 223.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});" is 223.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});" is 224.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });" is 222.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });" is 228.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });" is 223.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });" is 223.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });" is 221.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});" is 220.
Long Statement,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The length of the statement  "			authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' " is 160.
Long Statement,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Create_Tables_With_Schema_in_PostgreSQL,The length of the statement  "                    (@"SELECT '[' || n.nspname || '].[' || c.relname ||']' FROM pg_class c LEFT JOIN pg_namespace n ON n.oid = c.relnamespace WHERE c.relname = 'Users' AND n.nspname = 'TestSchema'");" is 179.
Empty Catch Block,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Empty Catch Block,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The method has an empty catch block.
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,CreatePostgreSQLTablesTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\CreatePostgreSQLTablesTests.cs,can_create_tables_after_UseUnicode_or_DefaultStringLenght_changed,The following statement contains a magic number: OrmLiteConfig.DialectProvider.DefaultStringLength = 98765;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_expression,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_select_with_string,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 2' EnumValue = SomeEnum.Value1 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: con.Save(new TypeWithEnum { Id = 3' EnumValue = SomeEnum.Value2 });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,EnumTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\EnumTests.cs,CanQueryByEnumValue_using_where_with_AnonType,The following statement contains a magic number: Assert.AreEqual(2' target.Count());
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,OrmLiteExecuteProcedureTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteExecuteProcedureTests.cs,Can_execute_stored_procedure_with_array_arguments,The following statement contains a magic number: db.ExecuteProcedure(new NServiceKitFunction                                         {                                             StringValues = new[] { "NServiceKit"' "Thoughtfully Architected" }'                                             IntegerValues = new[] { 1' 2' 3 }                                         });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,OrmLiteExecuteProcedureTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteExecuteProcedureTests.cs,Can_execute_stored_procedure_with_array_arguments,The following statement contains a magic number: db.ExecuteProcedure(new NServiceKitFunction                                         {                                             StringValues = new[] { "NServiceKit"' "Thoughtfully Architected" }'                                             IntegerValues = new[] { 1' 2' 3 }                                         });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,getSampleObject,The following statement contains a magic number: var testByteArray = new byte[256];
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests,TypeWithByteArrayFieldTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\TypeWithByteArrayFieldTests.cs,getSampleObject,The following statement contains a magic number: i < 256
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4 + 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_constant_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 10 - 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var a = 4;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var b = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var a = 10;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var b = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_variable_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_add_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4) + GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AdditiveExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AdditiveExpressionsTest.cs,Can_select_method_subtract_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(10) - GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid" });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUseCase,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10' City = "Mexico"' LastActivity = DateTime.Today });
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int year = DateTime.Today.AddYears(-20).Year;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var lastDay = new DateTime(year' 12' 31);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: int expected = 5;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 7;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: var earnings = 50;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Earnings <= 50);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Where().Where(rn => rn.Rate == 10 && rn.City == city);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == "Mexico");
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: result = db.Select<Author>(rn => rn.Rate == 10 && rn.City == a.City);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 4;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Victor Grozny"' Birthday = DateTime.Today.AddYears(-18) }' ev);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: db.InsertOnly(new Author() { Active = false' Rate = 0' Name = "Ivan Chorny"' Birthday = DateTime.Today.AddYears(-19) }' ev);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 2;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 14;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 5;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(5);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(0' 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(4' 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: ev.Limit(8' 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,AuthorUseCase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\AuthorUseCase.cs,AuthorUsesCases,The following statement contains a magic number: expected = 6;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_and_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn > 2 && q.IntColumn < 4);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || q.IntColumn < 0);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var a = 10;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var b = 5;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var a = 10;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var b = 5;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3 || a > b);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_or_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_invalid_conditional_or_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ConditionalExpressionTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ConditionalExpressionTest.cs,Can_select_evaluated_conditional_and_valid_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 3'                                    BoolColumn = true'                                    StringColumn = "4"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_int_method_expression,The following statement contains a magic number: var actual = OpenDbConnection().Select<TestType>(q => q.IntColumn == GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != 3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_constant_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: var columnValue = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_variable_int_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn != GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_int_method_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_constant_bool_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_variable_bool_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 3'                 BoolColumn = true'                 StringColumn = "4"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"'                 NullableCol = new TestType { StringColumn = "sometext" }             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_equals_null_espression,The following statement contains a magic number: Assert.AreEqual(actual.Count' 10);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"'                 NullableCol = new TestType { StringColumn = "sometext" }             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,EqualityExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\EqualityExpressionsTest.cs,Can_select_not_equals_null_espression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ExpressionsTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: var random = new Random((int)(DateTime.UtcNow.Ticks ^ (DateTime.UtcNow.Ticks >> 4)));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,ExpressionsTestBase,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\ExpressionsTestBase.cs,EstablishContext,The following statement contains a magic number: o = new TestType                                 {                                     BoolColumn = random.Next()%2 == 0'                                     IntColumn = intVal'                                     StringColumn = Guid.NewGuid().ToString()                                 };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_and_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_or_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,LogicalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\LogicalExpressionsTest.cs,Can_select_logical_xor_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 4*3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 36/3);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_constant_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == 37%10);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var a = 4;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var b = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var a = 36;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var b = 3;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variable_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var a = 37;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var b = 10;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_variablemodulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_multiply_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(4)*GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var expected = new TestType()                                {                                    IntColumn = 12'                                    BoolColumn = true'                                    StringColumn = "test"                                };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_divide_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(36)/GetValue(3));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,MultiplicativeExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\MultiplicativeExpressionsTest.cs,Can_select_method_modulo_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == GetValue(37)%GetValue(10));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,OrmLiteCountTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\OrmLiteCountTests.cs,CanDoCountWithInterfaceAndPredicate,The following statement contains a magic number: Expression<Func<CountTestTable' bool>> exp = q => q.Id == 2;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var tmp = new TestClass<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_int_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == TestClass<int>.StaticMethod(12));
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_int_new_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == new TestClass<int>(12).Property);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var tmp = new TestStruct<int>(12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_struct_int_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_property_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_field_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_static_bool_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,PrimaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\PrimaryExpressionsTest.cs,Can_select_bool_new_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_than_expression,The following statement contains a magic number: Assert.AreEqual(10' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_greater_or_equal_than_expression,The following statement contains a magic number: Assert.AreEqual(11' actual.Count);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,RelationalExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\RelationalExpressionsTest.cs,Can_select_smaller_or_equal_than_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = stringVal             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = stringVal             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = stringVal             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = stringVal             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_contains_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = prefix + "asdfasdfasdf"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = prefix + "'asdfasdfasdf"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = prefix + "\"asdfasdfasdf"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = prefix + "`asdfasdfasdf"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_startsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "asdfasdfasdf" + postfix             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "asdfasd'fasdf" + postfix             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "asdfasd\"fasdf" + postfix             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_double_quote_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 7'                 BoolColumn = true'                 StringColumn = "asdfasd`fasdf" + postfix             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,StringFunctionTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\StringFunctionTests.cs,Can_select_using_endsWith_with_backtick_in_string,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,TestType,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ BoolColumn.GetHashCode();
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,TestType,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\TestType.cs,GetHashCode,The following statement contains a magic number: result = (result*397) ^ (StringColumn != null ? StringColumn.GetHashCode() : 0);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == +12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = -12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_constant_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == -12);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_constant_expression2,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var intVal = +12;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_plus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var intVal = -12;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = -12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_minus_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: object intVal = 12;
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_variable_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = false'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_not_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var expected = new TestType()             {                 IntColumn = 12'                 BoolColumn = true'                 StringColumn = "test"             };
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: EstablishContext(10' expected);
Magic Number,NServiceKit.OrmLite.PostgreSQL.Tests.Expressions,UnaryExpressionsTest,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\Expressions\UnaryExpressionsTest.cs,Can_select_unary_cast_method_expression,The following statement contains a magic number: var actual = con.Select<TestType>(q => q.IntColumn == (int) GetValue((object) 12));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_GetByIds_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Store_from_basic_persistence_provider,The following statement contains a magic number: var getRowIds = new[] { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var rowIds = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteBasicPersistenceProviderTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteBasicPersistenceProviderTests.cs,Can_Delete_from_basic_persistence_provider,The following statement contains a magic number: var deleteRowIds = new List<int> { 2' 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteInsertTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row1 = new ModelWithIdAndName1() { Name = "A"' Id = 4 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteInsertTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_retrieve_LastInsertId_from_inserted_table,The following statement contains a magic number: var row2 = new ModelWithIdAndName1() { Name = "B"' Id = 5 };
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteInsertTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_single_quote,The following statement contains a magic number: var row1 = new ModelWithIdAndName1() { Name = @"'"' Id = 55};
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteInsertTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_table_with_blobs,The following statement contains a magic number: Assert.That(newRow.OrderDetails[2].ProductId' Is.EqualTo(row.OrderDetails[2].ProductId));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteInsertTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteInsertTests.cs,Can_insert_table_with_blobs,The following statement contains a magic number: Assert.That(newRow.OrderDetails[2].ProductId' Is.EqualTo(row.OrderDetails[2].ProductId));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetById_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetByIds_int_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_select_scalar_value,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetFirstColumn,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetFirstColumnDistinct,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: n.Times(x => { 					var row = ModelWithIdAndName.Create(x); 					row.Name = x % 2 == 0 ? "OddGroup" : "EvenGroup"; 					db.Insert(row); 				});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup' Has.Count.EqualTo(2));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["OddGroup"]' Has.Count.EqualTo(3));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetLookup,The following statement contains a magic number: Assert.That(lookup["EvenGroup"]' Has.Count.EqualTo(2));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_GetDictionary,The following statement contains a magic number: Assert.That(dictionary' Has.Count.EqualTo(5));
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_subset_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: var rows = db.Query<ModelWithFieldsOfDifferentTypes>("SELECT * FROM \"ModelWithFieldsOfDifferentTypes\" where \"Id\" = :Id "' 					new Dictionary<string' object> {  					{"Id"' 3} 					});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Query_ModelWithFieldsOfDifferentTypes_with_dictionary_parameters,The following statement contains a magic number: Assert.AreEqual(rows[0].Id' 3);
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_Into_ModelWithIdAndName_from_ModelWithFieldsOfDifferentTypes_table,The following statement contains a magic number: var rowIds = new List<int>(new[] { 1' 2' 3 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteSelectTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteSelectTests.cs,Can_Select_In_for_string_value,The following statement contains a magic number: const int n = 5;
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Demis Bellot"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 99.9m' Comments = "CSharp books"' Rate = 10' City = "London"' FloatProperty=10.25f' DoubleProperty=3.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Angel Colmenares"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 50.0m' Comments = "CSharp books"' Rate = 5' City = "Bogota"'FloatProperty=7.59f'DoubleProperty=4.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Adam Witco"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 80.0m' Comments = "Math Books"' Rate = 9' City = "London"'FloatProperty=15.5f'DoubleProperty=5.42 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Claudia Espinel"' Birthday = DateTime.Today.AddYears(-23)' Active = true' Earnings = 60.0m' Comments = "Cooking books"' Rate = 10' City = "Bogota"'FloatProperty=0.57f' DoubleProperty=8.76});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Libardo Pajaro"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 80.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=8.43f' DoubleProperty=7.35});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Jorge Garzon"' Birthday = DateTime.Today.AddYears(-28)' Active = true' Earnings = 70.0m' Comments = "CSharp books"' Rate = 9' City = "Bogota"' FloatProperty=1.25f' DoubleProperty=0.3652});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Alejandro Isaza"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 70.0m' Comments = "Java books"' Rate = 0' City = "Bogota"' FloatProperty=1.5f' DoubleProperty=100.563});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Wilmer Agamez"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 30.0m' Comments = "Java books"' Rate = 0' City = "Cartagena"' FloatProperty=3.5f'DoubleProperty=7.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Rodger Contreras"' Birthday = DateTime.Today.AddYears(-25)' Active = true' Earnings = 90.0m' Comments = "CSharp books"' Rate = 8' City = "Cartagena"' FloatProperty=0.25f'DoubleProperty=9.23 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Chuck Benedict"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "CSharp books"' Rate = 8' City = "London"' FloatProperty=9.95f'DoubleProperty=4.91 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "James Benedict II"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.5m' Comments = "Java books"' Rate = 5' City = "Berlin"'FloatProperty=4.44f'DoubleProperty=6.41 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Ethan Brown"' Birthday = DateTime.Today.AddYears(-20)' Active = true' Earnings = 45.0m' Comments = "CSharp books"' Rate = 5' City = "Madrid"' FloatProperty=6.67f' DoubleProperty=8.05 });
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Xavi Garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 75.0m' Comments = "CSharp books"' Rate = 9' City = "Madrid"' FloatProperty=1.25f' DoubleProperty=3.99});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,OrmLiteGetScalarTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\OrmLiteGetScalarTests.cs,Can_get_scalar_value,The following statement contains a magic number: authors.Add(new Author() { Name = "Luis garzon"' Birthday = DateTime.Today.AddYears(-22)' Active = true' Earnings = 85.0m' Comments = "CSharp books"' Rate = 10'  				City = "Mexico"'  				LastActivity= DateTime.Today'  				NRate=5' 				FloatProperty=1.25f' 				NFloatProperty=3.15f' 				DoubleProperty= 1.25' 				NDoubleProperty= 8.25 			});
Magic Number,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 2' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: db.Insert(new User { Id = 3' Name = "B"' CreatedDate = DateTime.Now });
Magic Number,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowsB' Has.Count.EqualTo(2));
Magic Number,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
Magic Number,NServiceKit.OrmLite.Tests,SchemaTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.PostgreSQL.Tests\SchemaTests.cs,Can_Perform_CRUD_Operations_On_Table_With_Schema,The following statement contains a magic number: Assert.That(rowIds' Is.EquivalentTo(new List<long> { 2' 3 }));
