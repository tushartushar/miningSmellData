Implementation smell,Namespace,Class,File,Method,Description
Long Method,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The method has 139 lines of code.
Long Method,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The method has 184 lines of code.
Complex Method,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,Cyclomatic complexity of the method is 18
Complex Method,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,Cyclomatic complexity of the method is 20
Complex Method,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,Cyclomatic complexity of the method is 12
Complex Method,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameters,Cyclomatic complexity of the method is 11
Long Parameter List,Massive,DynamicModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Massive\Massive.cs,All,The method has 5 parameters. Parameters: where' orderBy' limit' columns' args
Long Parameter List,Massive,DynamicModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Massive\Massive.cs,Paged,The method has 6 parameters. Parameters: where' orderBy' columns' pageSize' currentPage' args
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Execute,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The method has 7 parameters. Parameters: cnn' sql' param' transaction' buffered' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,QueryMultiple,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,QueryInternal,The method has 6 parameters. Parameters: cnn' sql' param' transaction' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMap,The method has 9 parameters. Parameters: cnn' sql' map' param' transaction' buffered' splitOn' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMapImpl,The method has 10 parameters. Parameters: cnn' sql' map' param' transaction' splitOn' commandTimeout' commandType' reader' identity
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,SetupCommand,The method has 7 parameters. Parameters: cnn' transaction' sql' paramReader' obj' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,ExecuteCommand,The method has 7 parameters. Parameters: cnn' transaction' sql' paramReader' obj' commandTimeout' commandType
Long Parameter List,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The method has 5 parameters. Parameters: type' reader' startBound' length' returnNullIfFirstMissing
Long Parameter List,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The method has 6 parameters. Parameters: sql' commandType' connection' type' parametersType' otherTypes
Long Parameter List,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The method has 7 parameters. Parameters: sql' commandType' connectionString' type' parametersType' otherTypes' gridIndex
Long Parameter List,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Add,The method has 5 parameters. Parameters: name' value' dbType' direction' size
Long Statement,Massive,DynamicModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Massive\Massive.cs,All,The length of the statement  "                sql += orderBy.Trim().StartsWith("order by"' StringComparison.CurrentCultureIgnoreCase) ? orderBy : " ORDER BY " + orderBy; " is 123.
Long Statement,Massive,DynamicModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Massive\Massive.cs,Paged,The length of the statement  "            var sql = string.Format("SELECT {0} FROM (SELECT ROW_NUMBER() OVER (ORDER BY {2}) AS Row' {0} FROM {3} {4}) AS Paged "' columns' pageSize' orderBy' TableName' where); " is 166.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "            var compiledGetPost = CompiledQuery.Compile((Linq2Sql.DataClassesDataContext ctx' int id) => ctx.Posts.First(p => p.Id == id));" is 127.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "            tests.Add(id => l2scontext3.ExecuteQuery<Post>("select * from Posts where Id = {0}"' id).ToList()' "Linq 2 SQL ExecuteQuery");" is 126.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "			//tests.Add(id => entityContext.ExecuteStoreQuery<Post>("select * from Posts where Id = {0}"' id).ToList()' "Entity framework ExecuteStoreQuery");" is 146.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "			tests.Add(id => mapperConnection.Query<Post>("select * from Posts where Id = @Id"' new { Id = id }).ToList()' "Mapper Query");" is 126.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "			//tests.Add(id => mapperConnection2.Query("select * from Posts where Id = @Id"' new { Id = id }).ToList()' "Dynamic Mapper Query");" is 131.
Long Statement,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The length of the statement  "            tests.Add(id => massiveModel.Query("select * from Posts where Id = @0"' massiveConnection' id).ToList()' "Dynamic Massive ORM Query");" is 134.
Long Statement,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,PassInIntArray,The length of the statement  "            connection.Query<int>("select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids"' new { Ids = new int[] { 1' 2' 3 }.AsEnumerable() }) " is 167.
Long Statement,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestStringList,The length of the statement  "			connection.Query<string>("select * from (select 'a' as x union all select 'b' union all select 'c') as T where x in @strings"' new { strings = new[] { "a"' "b"' "c" } }) " is 169.
Long Statement,SqlMapper,Program,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Program.cs,RunTests,The length of the statement  "            foreach (var method in typeof(Tests).GetMethods(BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)) " is 121.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetBindByName,The length of the statement  "				var method = new DynamicMethod(commandType.Name + "_BindByName"' null' new Type[] { typeof(IDbCommand)' typeof(bool) }); " is 120.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,LookupDbType,The length of the statement  "			throw new NotSupportedException(string.Format("The member {0} of type {1} cannot be used as a parameter value"' name' type)); " is 125.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Execute,The length of the statement  "			return ExecuteCommand(cnn' transaction' sql' (object)param == null ? null : info.ParamReader' (object)param' commandTimeout' commandType); " is 138.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,QueryMultiple,The length of the statement  "			Identity identity = new Identity(sql' commandType' cnn' typeof(GridReader)' (object)param == null ? null : ((object)param).GetType()' null); " is 140.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The length of the statement  "			return MultiMap<TFirst' TSecond' DontMap' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 162.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The length of the statement  "			return MultiMap<TFirst' TSecond' TThird' DontMap' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 161.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Query,The length of the statement  "			return MultiMap<TFirst' TSecond' TThird' TFourth' DontMap' TReturn>(cnn' sql' map' param as object' transaction' buffered' splitOn' commandTimeout' commandType); " is 161.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMap,The length of the statement  "			var results = MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>(cnn' sql' map' param' transaction' splitOn' commandTimeout' commandType' null' null); " is 163.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMapImpl,The length of the statement  "			identity = identity ?? new Identity(sql' commandType' cnn' typeof(TFirst)' (object)param == null ? null : ((object)param).GetType()' new[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth) }); " is 225.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMapImpl,The length of the statement  "					var deserializers = GenerateDeserializers(new Type[] { typeof(TFirst)' typeof(TSecond)' typeof(TThird)' typeof(TFourth)' typeof(TFifth) }' splitOn' reader); " is 156.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiMapImpl,The length of the statement  "				Func<IDataReader' TReturn> mapIt = GenerateMapper<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>(deserializer' otherDeserializers' map); " is 140.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The length of the statement  "					return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)); " is 152.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The length of the statement  "					return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)); " is 196.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The length of the statement  "					return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r)); " is 238.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,PackListParameters,The length of the statement  "					command.CommandText = Regex.Replace(command.CommandText' @"[?@:]" + Regex.Escape(namePrefix)' "(SELECT NULL WHERE 1 = 0)"); " is 123.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,FilterParameters,The length of the statement  "			return parameters.Where(p => Regex.IsMatch(sql' "[@:]" + p.Name + "([^a-zA-Z0-9_]+|$)"' RegexOptions.IgnoreCase | RegexOptions.Multiline)); " is 139.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "			var dm = new DynamicMethod(string.Format("ParamInfo{0}"' Guid.NewGuid())' null' new[] { typeof(IDbCommand)' typeof(object) }' type' true); " is 138.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "			il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetProperty("Parameters").GetGetMethod()' null); // stack is now [parameters] " is 126.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.EmitCall(OpCodes.Callvirt' typeof(IDbCommand).GetMethod("CreateParameter")' null);// stack is now [parameters] [parameters] [parameter] " is 138.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("ParameterName").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 157.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("DbType").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 150.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Direction").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 153.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.Emit(OpCodes.Callvirt' prop.GetGetMethod()); // stack is [parameters] [parameters] [parameter] [parameter] [typed-value] " is 123.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "						il.EmitCall(OpCodes.Callvirt' prop.PropertyType.GetMethod("ToArray"' BindingFlags.Public | BindingFlags.Instance)' null); " is 121.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "				il.EmitCall(OpCodes.Callvirt' typeof(IDataParameter).GetProperty("Value").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 149.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The length of the statement  "					il.EmitCall(OpCodes.Callvirt' typeof(IDbDataParameter).GetProperty("Size").GetSetMethod()' null);// stack is now [parameters] [parameters] [parameter] " is 150.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetStructDeserializer,The length of the statement  "			// no point using special per-type handling here; it boils down to the same' plus not all are supported anyway (see: SqlDataReader.GetChar - not supported!) " is 156.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "			var dm = new DynamicMethod(string.Format("Deserialize{0}"' Guid.NewGuid())' typeof(object)' new[] { typeof(IDataReader) }' true); " is 129.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "				throw new ArgumentException("When using the multi-mapping APIs ensure you set the splitOn param if you have keys other than Id"' "splitOn"); " is 140.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "							let prop = properties.FirstOrDefault(p => string.Equals(p.Name' n' StringComparison.Ordinal)) // property case sensitive first " is 126.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "								  ?? properties.FirstOrDefault(p => string.Equals(p.Name' n' StringComparison.OrdinalIgnoreCase)) // property case insensitive second " is 131.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "							let field = prop != null ? null : (fields.FirstOrDefault(p => string.Equals(p.Name' n' StringComparison.Ordinal)) // field case sensitive third " is 143.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "								?? fields.FirstOrDefault(p => string.Equals(p.Name' n' StringComparison.OrdinalIgnoreCase))) // field case insensitive fourth " is 125.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "				il.Emit(OpCodes.Newobj' type.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null)); " is 144.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "							memberType == typeof(char) ? "ReadChar" : "ReadNullableChar"' BindingFlags.Static | BindingFlags.Public)' null); // stack is now [target][target][typed-value] " is 158.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "							il.EmitCall(OpCodes.Call' typeof(Type).GetMethod("GetTypeFromHandle")' null);// stack is now [target][target][enum-type] " is 120.
Long Statement,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetTypeDeserializer,The length of the statement  "							il.Emit(OpCodes.Newobj' memberType.GetConstructor(new Type[] { typeof(byte[]) }));// stack is now [target][target][binary] " is 122.
Long Statement,SqlMapper,GridReader,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,MultiReadInternal,The length of the statement  "					foreach (var r in SqlMapper.MultiMapImpl<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>(null' null' func' null' null' splitOn' null' null' reader' identity)) " is 161.
Long Statement,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Add,The length of the statement  "			parameters[Clean(name)] = new ParamInfo() { Name = name' Value = value' ParameterDirection = direction ?? ParameterDirection.Input' DbType = dbType' Size = size }; " is 163.
Long Statement,SqlMapper,DbString,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameter,The length of the statement  "			param.DbType = IsAnsi ? (IsFixedLength ? DbType.AnsiStringFixedLength : DbType.AnsiString) : (IsFixedLength ? DbType.StringFixedLength : DbType.String); " is 152.
Complex Conditional,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GetBindByName,The conditional expression  "prop != null && prop.CanWrite && prop.PropertyType == typeof(bool)  				&& ((indexers = prop.GetIndexParameters()) == null || indexers.Length == 0)  				&& (setter = prop.GetSetMethod()) != null"  is complex.
Magic Number,Massive,DynamicModel,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Massive\Massive.cs,CreateUpdateCommand,The following statement contains a magic number: var keys = sbKeys.ToString().Substring(0' sbKeys.Length - 4);
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,PerformanceTests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,Run,The following statement contains a magic number: tests.Add(id =>              {                 idParam.Value = id;                  using (var reader = postCommand.ExecuteReader())                 {                     reader.Read();                     var post = new Post();                     post.Id = reader.GetInt32(0);                     post.Text = reader.GetNullableString(1);                     post.CreationDate = reader.GetDateTime(2);                     post.LastChangeDate = reader.GetDateTime(3);                      post.Counter1 = reader.GetNullableValue<int>(4);                     post.Counter2 = reader.GetNullableValue<int>(5);                     post.Counter3 = reader.GetNullableValue<int>(6);                     post.Counter4 = reader.GetNullableValue<int>(7);                     post.Counter5 = reader.GetNullableValue<int>(8);                     post.Counter6 = reader.GetNullableValue<int>(9);                     post.Counter7 = reader.GetNullableValue<int>(10);                     post.Counter8 = reader.GetNullableValue<int>(11);                     post.Counter9 = reader.GetNullableValue<int>(12);                 }             }' "hand coded");
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,SelectListInt,The following statement contains a magic number: connection.Query<int>("select 1 union all select 2 union all select 3")                .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,SelectListInt,The following statement contains a magic number: connection.Query<int>("select 1 union all select 2 union all select 3")                .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,PassInIntArray,The following statement contains a magic number: connection.Query<int>("select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids"' new { Ids = new int[] { 1' 2' 3 }.AsEnumerable() })               .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,PassInIntArray,The following statement contains a magic number: connection.Query<int>("select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids"' new { Ids = new int[] { 1' 2' 3 }.AsEnumerable() })               .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,PassInIntArray,The following statement contains a magic number: connection.Query<int>("select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids"' new { Ids = new int[] { 1' 2' 3 }.AsEnumerable() })               .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,PassInIntArray,The following statement contains a magic number: connection.Query<int>("select * from (select 1 as Id union all select 2 union all select 3) as X where Id in @Ids"' new { Ids = new int[] { 1' 2' 3 }.AsEnumerable() })               .IsSequenceEqual(new[] { 1' 2' 3 });
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestDoubleParam,The following statement contains a magic number: connection.Query<double>("select @d"' new { d = 0.1d }).First()                  .IsEquals(0.1d);
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestDoubleParam,The following statement contains a magic number: connection.Query<double>("select @d"' new { d = 0.1d }).First()                  .IsEquals(0.1d);
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestExecuteCommand,The following statement contains a magic number: connection.Execute(@"      set nocount on       create table #t(i int)       set nocount off       insert #t       select @a a union all select @b       set nocount on       drop table #t"' new {a=1' b=2 }).IsEquals(2);
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestExecuteCommand,The following statement contains a magic number: connection.Execute(@"      set nocount on       create table #t(i int)       set nocount off       insert #t       select @a a union all select @b       set nocount on       drop table #t"' new {a=1' b=2 }).IsEquals(2);
Magic Number,SqlMapper,Tests,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\PerformanceTests.cs,TestMassiveStrings,The following statement contains a magic number: var str = new string('X'' 20000);
Magic Number,SqlMapper,Program,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\Program.cs,RunPerformanceTests,The following statement contains a magic number: test.Run(500);
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)  			{  				case 1:  					return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));  				case 2:  					return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));  				case 3:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30  				case 4:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));  #endif  				default:  					throw new NotSupportedException();  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)  			{  				case 1:  					return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));  				case 2:  					return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));  				case 3:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30  				case 4:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));  #endif  				default:  					throw new NotSupportedException();  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,GenerateMapper,The following statement contains a magic number: switch (otherDeserializers.Length)  			{  				case 1:  					return r => ((Func<TFirst' TSecond' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r));  				case 2:  					return r => ((Func<TFirst' TSecond' TThird' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r));  				case 3:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r));  #if !CSHARP30  				case 4:  					return r => ((Func<TFirst' TSecond' TThird' TFourth' TFifth' TReturn>)map)((TFirst)deserializer(r)' (TSecond)otherDeserializers[0](r)' (TThird)otherDeserializers[1](r)' (TFourth)otherDeserializers[2](r)' (TFifth)otherDeserializers[3](r));  #endif  				default:  					throw new NotSupportedException();  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,PackListParameters,The following statement contains a magic number: listParam.Size = 4000;
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,PackListParameters,The following statement contains a magic number: item != null && ((string)item).Length > 4000
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The following statement contains a magic number: EmitInt32(il' 4000);
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,CreateParamInfoGenerator,The following statement contains a magic number: EmitInt32(il' 4000);
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,SqlMapper,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,EmitInt32,The following statement contains a magic number: switch (value)  			{  				case -1: il.Emit(OpCodes.Ldc_I4_M1); break;  				case 0: il.Emit(OpCodes.Ldc_I4_0); break;  				case 1: il.Emit(OpCodes.Ldc_I4_1); break;  				case 2: il.Emit(OpCodes.Ldc_I4_2); break;  				case 3: il.Emit(OpCodes.Ldc_I4_3); break;  				case 4: il.Emit(OpCodes.Ldc_I4_4); break;  				case 5: il.Emit(OpCodes.Ldc_I4_5); break;  				case 6: il.Emit(OpCodes.Ldc_I4_6); break;  				case 7: il.Emit(OpCodes.Ldc_I4_7); break;  				case 8: il.Emit(OpCodes.Ldc_I4_8); break;  				default:  					if (value >= -128 && value <= 127)  					{  						il.Emit(OpCodes.Ldc_I4_S' (sbyte)value);  					}  					else  					{  						il.Emit(OpCodes.Ldc_I4' value);  					}  					break;  			}
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = 17;
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + commandType.GetHashCode();
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + gridIndex.GetHashCode();
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (sql == null ? 0 : sql.GetHashCode());
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (type == null ? 0 : type.GetHashCode());
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (t == null ? 0 : t.GetHashCode());
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (connectionString == null ? 0 : connectionString.GetHashCode());
Magic Number,SqlMapper,Identity,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Identity,The following statement contains a magic number: hashCode = hashCode * 23 + (parametersType == null ? 0 : parametersType.GetHashCode());
Magic Number,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameters,The following statement contains a magic number: p.Size = 4000;
Magic Number,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameters,The following statement contains a magic number: s.Length <= 4000
Magic Number,SqlMapper,DbString,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameter,The following statement contains a magic number: param.Size = 4000;
Magic Number,SqlMapper,DbString,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,AddParameter,The following statement contains a magic number: Length == -1 && Value != null && Value.Length <= 4000
Missing Default,SqlMapper,DynamicParameters,C:\research\architectureSmells\repos\NServiceKit_NServiceKit.OrmLite\src\dapper-dot-net\SqlMapper.cs,Clean,The following switch statement is missing a default case: switch (name[0])  				{  					case '@':  					case ':':  					case '?':  						return name.Substring(1);  				}
