Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NServiceKit.OrmLite.Sqlite,SqliteOrmLiteDialectProviderBase,C:\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.Sqlite\SqliteOrmLiteDialectProviderBase.cs,CreateConnection,Cyclomatic complexity of the method is 8
Long Parameter List,NServiceKit.OrmLite.Sqlite,SqliteOrmLiteDialectProviderBase,C:\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.Sqlite\SqliteOrmLiteDialectProviderBase.cs,GetColumnDefinition,The method has 8 parameters. Parameters: fieldName' fieldType' isPrimaryKey' autoIncrement' isNullable' fieldLength' scale' defaultValue
Long Statement,NServiceKit.OrmLite.Sqlite,SqliteOrmLiteDialectProviderBase,C:\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.Sqlite\SqliteOrmLiteDialectProviderBase.cs,GetColumnDefinition,The length of the statement  "            var ret = base.GetColumnDefinition(fieldName' fieldType' isPrimaryKey' autoIncrement' isNullable' fieldLength' scale' defaultValue); " is 132.
Magic Number,NServiceKit.OrmLite.Sqlite,SqliteExpressionVisitor<T>,C:\repos\NServiceKit_NServiceKit.OrmLite\src\NServiceKit.OrmLite.Sqlite\SqliteExpressionVisitor.cs,VisitColumnAccessMethod,The following statement contains a magic number: switch (m.Method.Name)              {                  case "Substring":                      var startIndex = Int32.Parse(args[0].ToString()) + 1;                      if (args.Count == 2)                      {                          var length = Int32.Parse(args[1].ToString());                          statement = string.Format("substr({0}' {1}' {2})"' quotedColName' startIndex' length);                      }                      else                          statement = string.Format("substr({0}' {1})"' quotedColName' startIndex);                      break;                  default:                      return base.VisitColumnAccessMethod(m);              }
