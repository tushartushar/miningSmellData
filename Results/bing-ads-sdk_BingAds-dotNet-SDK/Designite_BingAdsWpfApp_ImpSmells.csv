Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,Cyclomatic complexity of the method is 8
Long Identifier,BingAdsWpfApp,OAuthHelper,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\OAuthHelper.cs,AuthorizeDesktopMobileAuthCodeGrant,The length of the parameter oAuthDesktopMobileAuthCodeGrant is 31.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The length of the statement  "			DeveloperToken = (SandboxCheckBox.IsChecked == false) ? Settings.Default ["DeveloperToken"].ToString () : Settings.Default ["DeveloperTokenSandbox"].ToString () " is 160.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The length of the statement  "		OutputStatusMessage (string.Format ("Couldn't get OAuth tokens. Error: {0}. Description: {1}"' ex.Details.Error' ex.Details.Description)); " is 138.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The length of the statement  "				return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n"; " is 179.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The length of the statement  "		OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message)))); " is 131.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The length of the statement  "		OutputStatusMessage (string.Join ("; "' ex.Detail.OperationErrors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message)))); " is 140.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,OutputStatusMessage,The length of the statement  "		// Remember that OutputStatusMessage is called from HandleReceiveMessage' which is assigned to a delegate of the example base class. " is 132.
Long Statement,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,OutputStatusMessage,The length of the statement  "		// Since the example base class is executed outside of the main thread i.e. RunAsync' you must check to make sure this thread " is 125.
Long Statement,BingAdsWpfApp,OAuthHelper,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\OAuthHelper.cs,AuthorizeDesktopMobileAuthCodeGrant,The length of the statement  "	// each instance will refresh your access token automatically if they detect the AuthenticationTokenExpired (109) error code.  " is 125.
Long Statement,BingAdsWpfApp,OAuthHelper,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\OAuthHelper.cs,AuthorizeDesktopMobileAuthCodeGrant,The length of the statement  "	oAuthDesktopMobileAuthCodeGrant.NewOAuthTokensReceived += (sender' tokens) => SaveRefreshToken (tokens.NewRefreshToken); " is 120.
Long Statement,BingAdsWpfApp,OAuthHelper,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\OAuthHelper.cs,AuthorizeInBrowser,The length of the statement  "	var browserWindow = new BrowserWindow (authentication.GetAuthorizationEndpoint ()' authentication.RedirectionUri.AbsolutePath); " is 127.
Long Statement,BingAdsWpfApp,OAuthHelper,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\OAuthHelper.cs,AuthorizeImplicitlyInBrowser,The length of the statement  "	var browserWindow = new BrowserWindow (authentication.GetAuthorizationEndpoint ()' authentication.RedirectionUri.AbsolutePath); " is 127.
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: try {  	Authentication authentication;  	if (OAuthCheckBox.IsChecked == true) {  		authentication = await OAuthHelper.AuthorizeDesktopMobileAuthCodeGrant ();  		var authenticationToken = ((OAuthDesktopMobileAuthCodeGrant)(authentication)).OAuthTokens.AccessToken;  	}  	else {  		authentication = new PasswordAuthentication (UserNameTextBox.Text' UserNamePasswordBox.Password);  	}  	ClearUserData ();  	// Get user's CustomerId and AccountId  	_authorizationData = new AuthorizationData {  		Authentication = authentication'  		DeveloperToken = (SandboxCheckBox.IsChecked == false) ? Settings.Default ["DeveloperToken"].ToString () : Settings.Default ["DeveloperTokenSandbox"].ToString ()  	};  	_customerService = new ServiceClient<ICustomerManagementService> (_authorizationData);  	var user = await GetUserAsync (null);  	UserNameTextBox.Text = user.UserName;  	// Search for the accounts that matches the specified criteria.  	var accounts = await SearchAccountsByUserIdAsync (user.Id);  	// Store the parent customer identifier in the second dimension of the array.  	_accountCustomerIds = new long?[accounts.Length' 2];  	for (var i = 0; i < accounts.Length; i++) {  		AccountIdsComboBox.Items.Add (accounts [i].Id);  		_accountCustomerIds [i' 0] = accounts [i].Id;  		_accountCustomerIds [i' 1] = accounts [i].ParentCustomerId;  	}  	AccountIdsComboBox.SelectedIndex = 0;  	SetAuthorizationDataByAccountIndex (AccountIdsComboBox.SelectedIndex);  	if (accounts.Length > 0)  		RunButton.IsEnabled = true;  }  // Catch authentication exceptions  catch (OAuthTokenRequestException ex) {  	OutputStatusMessage (string.Format ("Couldn't get OAuth tokens. Error: {0}. Description: {1}"' ex.Details.Error' ex.Details.Description));  }  // Catch Customer Management service exceptions  catch (FaultException<Microsoft.BingAds.CustomerManagement.AdApiFaultDetail> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error =>  {  		if ((error.Code == 105) || (error.Code == 106)) {  			return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  		}  		return string.Format ("{0}: {1}"' error.Code' error.Message);  	})));  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (FaultException<Microsoft.BingAds.CustomerManagement.ApiFault> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.OperationErrors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (HttpRequestException ex) {  	OutputStatusMessage (ex.Message);  }  finally {  	SwitchUserButton.IsEnabled = true;  }  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: try {  	Authentication authentication;  	if (OAuthCheckBox.IsChecked == true) {  		authentication = await OAuthHelper.AuthorizeDesktopMobileAuthCodeGrant ();  		var authenticationToken = ((OAuthDesktopMobileAuthCodeGrant)(authentication)).OAuthTokens.AccessToken;  	}  	else {  		authentication = new PasswordAuthentication (UserNameTextBox.Text' UserNamePasswordBox.Password);  	}  	ClearUserData ();  	// Get user's CustomerId and AccountId  	_authorizationData = new AuthorizationData {  		Authentication = authentication'  		DeveloperToken = (SandboxCheckBox.IsChecked == false) ? Settings.Default ["DeveloperToken"].ToString () : Settings.Default ["DeveloperTokenSandbox"].ToString ()  	};  	_customerService = new ServiceClient<ICustomerManagementService> (_authorizationData);  	var user = await GetUserAsync (null);  	UserNameTextBox.Text = user.UserName;  	// Search for the accounts that matches the specified criteria.  	var accounts = await SearchAccountsByUserIdAsync (user.Id);  	// Store the parent customer identifier in the second dimension of the array.  	_accountCustomerIds = new long?[accounts.Length' 2];  	for (var i = 0; i < accounts.Length; i++) {  		AccountIdsComboBox.Items.Add (accounts [i].Id);  		_accountCustomerIds [i' 0] = accounts [i].Id;  		_accountCustomerIds [i' 1] = accounts [i].ParentCustomerId;  	}  	AccountIdsComboBox.SelectedIndex = 0;  	SetAuthorizationDataByAccountIndex (AccountIdsComboBox.SelectedIndex);  	if (accounts.Length > 0)  		RunButton.IsEnabled = true;  }  // Catch authentication exceptions  catch (OAuthTokenRequestException ex) {  	OutputStatusMessage (string.Format ("Couldn't get OAuth tokens. Error: {0}. Description: {1}"' ex.Details.Error' ex.Details.Description));  }  // Catch Customer Management service exceptions  catch (FaultException<Microsoft.BingAds.CustomerManagement.AdApiFaultDetail> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error =>  {  		if ((error.Code == 105) || (error.Code == 106)) {  			return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  		}  		return string.Format ("{0}: {1}"' error.Code' error.Message);  	})));  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (FaultException<Microsoft.BingAds.CustomerManagement.ApiFault> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.OperationErrors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (HttpRequestException ex) {  	OutputStatusMessage (ex.Message);  }  finally {  	SwitchUserButton.IsEnabled = true;  }  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: try {  	Authentication authentication;  	if (OAuthCheckBox.IsChecked == true) {  		authentication = await OAuthHelper.AuthorizeDesktopMobileAuthCodeGrant ();  		var authenticationToken = ((OAuthDesktopMobileAuthCodeGrant)(authentication)).OAuthTokens.AccessToken;  	}  	else {  		authentication = new PasswordAuthentication (UserNameTextBox.Text' UserNamePasswordBox.Password);  	}  	ClearUserData ();  	// Get user's CustomerId and AccountId  	_authorizationData = new AuthorizationData {  		Authentication = authentication'  		DeveloperToken = (SandboxCheckBox.IsChecked == false) ? Settings.Default ["DeveloperToken"].ToString () : Settings.Default ["DeveloperTokenSandbox"].ToString ()  	};  	_customerService = new ServiceClient<ICustomerManagementService> (_authorizationData);  	var user = await GetUserAsync (null);  	UserNameTextBox.Text = user.UserName;  	// Search for the accounts that matches the specified criteria.  	var accounts = await SearchAccountsByUserIdAsync (user.Id);  	// Store the parent customer identifier in the second dimension of the array.  	_accountCustomerIds = new long?[accounts.Length' 2];  	for (var i = 0; i < accounts.Length; i++) {  		AccountIdsComboBox.Items.Add (accounts [i].Id);  		_accountCustomerIds [i' 0] = accounts [i].Id;  		_accountCustomerIds [i' 1] = accounts [i].ParentCustomerId;  	}  	AccountIdsComboBox.SelectedIndex = 0;  	SetAuthorizationDataByAccountIndex (AccountIdsComboBox.SelectedIndex);  	if (accounts.Length > 0)  		RunButton.IsEnabled = true;  }  // Catch authentication exceptions  catch (OAuthTokenRequestException ex) {  	OutputStatusMessage (string.Format ("Couldn't get OAuth tokens. Error: {0}. Description: {1}"' ex.Details.Error' ex.Details.Description));  }  // Catch Customer Management service exceptions  catch (FaultException<Microsoft.BingAds.CustomerManagement.AdApiFaultDetail> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error =>  {  		if ((error.Code == 105) || (error.Code == 106)) {  			return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  		}  		return string.Format ("{0}: {1}"' error.Code' error.Message);  	})));  	OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (FaultException<Microsoft.BingAds.CustomerManagement.ApiFault> ex) {  	OutputStatusMessage (string.Join ("; "' ex.Detail.OperationErrors.Select (error => string.Format ("{0}: {1}"' error.Code' error.Message))));  }  catch (HttpRequestException ex) {  	OutputStatusMessage (ex.Message);  }  finally {  	SwitchUserButton.IsEnabled = true;  }  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: _accountCustomerIds = new long?[accounts.Length' 2];  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error =>  {  	if ((error.Code == 105) || (error.Code == 106)) {  		return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  	}  	return string.Format ("{0}: {1}"' error.Code' error.Message);  })));  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: OutputStatusMessage (string.Join ("; "' ex.Detail.Errors.Select (error =>  {  	if ((error.Code == 105) || (error.Code == 106)) {  		return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  	}  	return string.Format ("{0}: {1}"' error.Code' error.Message);  })));  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: if ((error.Code == 105) || (error.Code == 106)) {  	return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  }  
Magic Number,BingAdsWpfApp,MainWindow,C:\repos\bing-ads-sdk_BingAds-dotNet-SDK\examples\BingAdsExamples\BingAdsWpfApp\MainWindow.xaml.cs,AuthenticateUser,The following statement contains a magic number: if ((error.Code == 105) || (error.Code == 106)) {  	return "Authorization data is missing or incomplete for the specified environment.\n" + "To run the examples switch users or contact support for help with the following error.\n";  }  
