Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Fix.AspNet,Bridge,C:\repos\FixProject_Fix\src\Fix.AspNet\Bridge.cs,RunContext,The following statement contains a magic number: return task                  .ContinueWith(t =>                                    {                                        if (t.Exception != null)                                        {                                            context.Response.StatusCode = 500;                                                                                        foreach (Exception ex in t.Exception.InnerExceptions)                                            {                                                context.AddError(ex);                                            }                                        }                                        else if (!env.ContainsKey(OwinKeys.ResponseStatusCode))                                        {                                            context.Response.StatusCode = 404;                                        }                                        else                                        {                                            context.Response.StatusCode = (int)env[OwinKeys.ResponseStatusCode];                                        }                                          if (env.ContainsKey(OwinKeys.ResponseHeaders))                                        {                                            WriteHeaders((IDictionary<string' string[]>)env[OwinKeys.ResponseHeaders]' context);                                        }                                        return TaskHelper.Completed();                                      }' TaskContinuationOptions.None)                  .Unwrap()                  .ContinueWith(t => SetOwinCallCompleted(t' tcs));
Magic Number,Fix.AspNet,Bridge,C:\repos\FixProject_Fix\src\Fix.AspNet\Bridge.cs,RunContext,The following statement contains a magic number: return task                  .ContinueWith(t =>                                    {                                        if (t.Exception != null)                                        {                                            context.Response.StatusCode = 500;                                                                                        foreach (Exception ex in t.Exception.InnerExceptions)                                            {                                                context.AddError(ex);                                            }                                        }                                        else if (!env.ContainsKey(OwinKeys.ResponseStatusCode))                                        {                                            context.Response.StatusCode = 404;                                        }                                        else                                        {                                            context.Response.StatusCode = (int)env[OwinKeys.ResponseStatusCode];                                        }                                          if (env.ContainsKey(OwinKeys.ResponseHeaders))                                        {                                            WriteHeaders((IDictionary<string' string[]>)env[OwinKeys.ResponseHeaders]' context);                                        }                                        return TaskHelper.Completed();                                      }' TaskContinuationOptions.None)                  .Unwrap()                  .ContinueWith(t => SetOwinCallCompleted(t' tcs));
