Implementation smell,Namespace,Class,File,Method,Description
Long Statement,RefactorThis.GraphDiff.Internal,DebugExtensions,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\DebugExtensions.cs,DumpTrackedEntities,The length of the statement  "                            builder.AppendFormat("  {0}: changed from '{1}' to '{2}'"' propertyValue.Key' propertyValue.OriginalValue' propertyValue.CurrentValue).AppendLine(); " is 148.
Long Statement,RefactorThis.GraphDiff.Internal,Extensions,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Extensions.cs,GetPrimaryKeyFieldsFor,The length of the statement  "            return metadata.KeyMembers.Select(k => entityType.GetProperty(k.Name' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public)).ToList();" is 150.
Long Statement,RefactorThis.GraphDiff.Internal,GraphDiffer<T>,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\GraphDiffer.cs,Merge,The length of the statement  "                    throw new InvalidOperationException("GraphDiff supports detached entities only at this time. Please try AsNoTracking() or detach your entites before calling the UpdateGraph method");" is 182.
Long Statement,RefactorThis.GraphDiff.Internal,GraphDiffer<T>,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\GraphDiffer.cs,CreateEqualsExpression,The length of the statement  "            return Expression.Equal(Expression.Property(parameter' keyProperty)' Expression.Constant(keyProperty.GetValue(entity' null)' keyProperty.PropertyType));" is 152.
Long Statement,RefactorThis.GraphDiff.Internal.Graph,CollectionGraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\CollectionGraphNode.cs,CreateMissingCollection,The length of the statement  "            var collectionType = !Accessor.PropertyType.IsInterface ? Accessor.PropertyType : typeof(List<>).MakeGenericType(elementType); " is 126.
Long Statement,RefactorThis.GraphDiff.Internal.Graph,GraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\GraphNode.cs,AttachCyclicNavigationProperty,The length of the statement  "                    .Select(navigation => childType.GetProperty(navigation.Name' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public))" is 131.
Long Statement,RefactorThis.GraphDiff.Internal.Graph,GraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\GraphNode.cs,AttachRequiredNavigationProperties,The length of the statement  "                var navigationPropertyInfo = entityType.GetProperty(navigationProperty.Name' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public);" is 147.
Long Statement,RefactorThis.GraphDiff.Internal.Graph,GraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\GraphNode.cs,EnsureConcurrency,The length of the statement  "                    .Where(member => member.TypeUsage.Facets.Any(facet => facet.Name == "ConcurrencyMode" && (ConcurrencyMode)facet.Value == ConcurrencyMode.Fixed))" is 144.
Long Statement,RefactorThis.GraphDiff.Internal.Graph,GraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\GraphNode.cs,EnsureConcurrency,The length of the statement  "                    .Select(member => entityType.GetProperty(member.Name' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public))" is 124.
Complex Conditional,RefactorThis.GraphDiff.Internal.Graph,GraphNode,C:\research\architectureSmells\repos\refactorthis_GraphDiff\GraphDiff\GraphDiff\Internal\Graph\GraphNode.cs,EnsureConcurrency,The conditional expression  "(obj1 == null || obj2 == null) ||                     (type == typeof (byte[]) && !((byte[]) obj1).SequenceEqual((byte[]) obj2)) ||                     (type != typeof (byte[]) && !obj1.Equals(obj2))"  is complex.
