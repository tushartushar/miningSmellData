Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateProductInfo,The method has 5 parameters. Parameters: productPriceInCents' itemCount' vat' discount' order
Long Identifier,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The length of the parameter orderDiscountWithAmountForOrderMock is 35.
Long Identifier,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,,The length of the parameter _discountCalculationServiceMock is 31.
Long Identifier,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The length of the parameter defaultOrderDiscountWithAmount is 30.
Long Identifier,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,,The length of the parameter DiscountMockRange1PriceInCents is 30.
Long Identifier,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,,The length of the parameter DiscountMockRange2PriceInCents is 30.
Long Identifier,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,,The length of the parameter DiscountMockRange3PriceInCents is 30.
Long Identifier,uWebshop.Test.Mocks,MockHttpContextWrapper,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockHttpContextWrapper.cs,,The length of the parameter PathPointsToPhysicalFileTimesCalled is 35.
Long Identifier,uWebshop.Test.Stubs,StubCMSApplicationNotInBackend,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubCMSApplicationNotInBackend.cs,,The length of the parameter _catalogRepositoryCMSNodeUrlName is 32.
Long Identifier,uWebshop.Test.Stubs,StubCMSApplicationNotInBackend,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubCMSApplicationNotInBackend.cs,,The length of the parameter _categoryRepositoryCMSNodeUrlName is 33.
Long Identifier,uWebshop.Test.Stubs,StubCMSApplicationNotInBackend,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubCMSApplicationNotInBackend.cs,,The length of the parameter _paymentProviderRepositoryCMSNodeName is 37.
Long Identifier,uWebshop.Test.Stubs,StubCMSApplicationNotInBackend,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubCMSApplicationNotInBackend.cs,,The length of the parameter _paymentProviderSectionCMSNodeName is 34.
Long Identifier,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,,The length of the parameter _catalogUrlResolvingServiceMock is 31.
Long Identifier,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The length of the parameter expectedNumberOfDiscountedItems is 31.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The length of the statement  "			IOC.CouponCodeService.SetupNewMock().Setup(m => m.GetAllForDiscount(1234)).Returns(new List<Coupon> {new Coupon(1234' "code"' 7)'}); " is 132.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1000' DiscountOrderCondition.None' 0); " is 129.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The length of the statement  "			var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(2199' 2)); " is 144.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,Setup,The length of the statement  "			_orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 145.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,Setup,The length of the statement  "			_orderDiscount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(195' DiscountOrderCondition.None' 0); " is 130.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,CallingHasDiscountForOrderOnListWithDiscount_ShouldCallDiscountAmountForOrderOnOrderCalculatorOnce,The length of the statement  "			_discountCalculationServiceMock.Verify(m => m.DiscountAmountForOrder(_orderDiscountMock.Object' _orderInfo' It.IsAny<bool>())' Times.Once()); " is 141.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The length of the statement  "			_discountCalculationServiceMock.Setup(m => m.DiscountAmountForOrder(_orderDiscountMock.Object' It.IsAny<OrderInfo>()' It.IsAny<bool>())).Returns(0); " is 148.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The length of the statement  "			_discountCalculationServiceMock.Setup(m => m.DiscountAmountForOrder(orderDiscountWithAmountForOrderMock.Object' It.IsAny<OrderInfo>()' It.IsAny<bool>())).Returns(1000); " is 168.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The length of the statement  "			_discountCalculationServiceMock.Verify(m => m.DiscountAmountForOrder(It.IsAny<IOrderDiscount>()' _orderInfo' It.IsAny<bool>())' Times.Exactly(2)); " is 146.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,Setup,The length of the statement  "			_orderServiceMock.Setup(m => m.GetApplicableOrderLines(_orderInfo' It.IsAny<List<int>>())).Returns(_orderInfo.OrderLines); " is 122.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,Setup,The length of the statement  "			IOC.DiscountCalculationService.SetupNewMock().Setup(m => m.DiscountAmountForOrder(It.IsAny<IOrderDiscount>()' It.IsAny<OrderInfo>()' It.IsAny<bool>())).Returns(1); " is 163.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,Setup,The length of the statement  "			_orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 135.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,OrderAmountAboveMinimum_ShouldReturnDiscount,The length of the statement  "			Assert.AreEqual(_mockDiscount.Object' _discountService.GetApplicableDiscountsForOrder(_orderInfo' _orderInfo.Localization).Single()); " is 133.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,CounterEnabledFalse_ShouldReturnDiscount,The length of the statement  "			Assert.AreEqual(_mockDiscount.Object' _discountService.GetApplicableDiscountsForOrder(_orderInfo' _orderInfo.Localization).Single()); " is 133.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,CounterEnabledTrueAndCounterAboveZero_ShouldReturnDiscount,The length of the statement  "			Assert.AreEqual(_mockDiscount.Object' _discountService.GetApplicableDiscountsForOrder(_orderInfo' _orderInfo.Localization).Single()); " is 133.
Long Statement,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,RequiredItemIdsEmpty_ShouldReturnDiscount,The length of the statement  "			Assert.AreEqual(_mockDiscount.Object' _discountService.GetApplicableDiscountsForOrder(_orderInfo' _orderInfo.Localization).Single()); " is 133.
Long Statement,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The length of the statement  "			var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}}; " is 133.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlsRewritingServiceTests,RedirectPermanentOldCatalogUrlsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\RedirectPermanentOldCatalogUrlsTests.cs,Setup,The length of the statement  "			IOC.UwebshopConfiguration.Use(new TestUwebshopConfiguration { PermanentRedirectOldCatalogUrls = true' LegacyCategoryUrlIdentifier = "categoryidentifier"' LegacyProductUrlIdentifier = "productidentifier" }); " is 206.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,CouponCodeTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\CouponCodeTests.cs,bla1,The length of the statement  "			IO.Container.Resolve<IOrderService>().UseStoredDiscounts(orderInfo' new List<IOrderDiscount> { new OrderDiscount(StoreHelper.CurrentLocalization'discount' orderInfo) }); " is 169.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,DiscountApplicationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\DiscountApplicationTest.cs,AddingACouponToAnIncompleteOrderAfterDeserialization_ShouldApplyCouponDiscount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 148.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,DiscountApplicationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\DiscountApplicationTest.cs,AddingACouponToAnIncompleteOrderAfterDeserialization_ShouldApplyCouponDiscount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(100' DiscountOrderCondition.None' 0); " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithSingleProductAndApplicableNewPriceDiscount_ShouldGiveProductPriceMinusDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 1)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2)); " is 205.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2); " is 141.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2)); " is 205.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2); " is 141.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 1)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 1)); " is 205.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.OnTheXthItem' 2); " is 139.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShippingsCosts,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShippingsCosts.cs,FreeShippingDiscount_ShouldGiveDiscountAmountEqualToShippingCosts,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 148.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage100,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Amount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Amount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(234' DiscountOrderCondition.None' 0); " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,AmountLargerThanOrderAmount,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 138.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,AmountLargerThanOrderAmount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0); " is 129.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 148.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The length of the statement  "			DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50)); " is 273.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 148.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The length of the statement  "			DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50)); " is 274.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 148.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The length of the statement  "			DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50)); " is 274.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(21306' 2' 21)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3995' 1' 0)); " is 223.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The length of the statement  "			var defaultOrderDiscountWithAmount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(50000' DiscountOrderCondition.None' 0); " is 152.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The length of the statement  "			DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' defaultOrderDiscountWithAmount' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(25)); " is 191.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10000' DiscountOrderCondition.None' 0); " is 130.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The length of the statement  "			IOC.OrderUpdatingService.Resolve().AddOrUpdateOrderLine(orderInfo' 0' TestProductService.ProductId1' "update"' 1' new List<int>()); " is 131.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The length of the statement  "			order.OrderDiscountsFactory = () => IO.Container.Resolve<IOrderDiscountService>().GetApplicableDiscountsForOrder(order' order.Localization).ToList(); " is 149.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The length of the statement  "			order.OrderDiscountsFactory = () => IO.Container.Resolve<IOrderDiscountService>().GetApplicableDiscountsForOrder(order' order.Localization).ToList(); " is 149.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(500' DiscountOrderCondition.None' 0); " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The length of the statement  "			order.OrderDiscountsFactory = () => IO.Container.Resolve<IOrderDiscountService>().GetApplicableDiscountsForOrder(order' order.Localization).ToList(); " is 149.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The length of the statement  "			//var vatAmountFromWithoutVat = VatCalculator.VatAmountFromWithoutVat(absoluteDiscountAmount' AverageOrderVatPercentage); " is 121.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(500' DiscountOrderCondition.None' 0); " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The length of the statement  "			order.OrderDiscountsFactory = () => IO.Container.Resolve<IOrderDiscountService>().GetApplicableDiscountsForOrder(order' order.Localization).ToList(); " is 149.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,CustomValidationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\CustomValidationTest.cs,ThatCustomErrorIsRunAndReceivesCorrectArgument,The length of the statement  "			var info = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 143.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The length of the statement  "			var productInfo = new ProductInfo {IsDiscounted = false' Vat = 19' ItemCount = 2' OriginalPriceInCents = 3500' Ranges = new List<Range>()}; " is 139.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithVariants,The length of the statement  "			var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()}; " is 123.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The length of the statement  "			var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()}; " is 123.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The length of the statement  "			var productInfo = new ProductInfo { Id = 1234' IsDiscounted = false' Vat = 0' OriginalPriceInCents = 1000' Ranges = new List<Range>() }; " is 136.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The length of the statement  "			IOC.CMSEntityRepository.SetupNewMock().Setup(m => m.GetByGlobalId(1234)).Returns(new UwbsNode {Id = 1234' NodeTypeAlias = Product.NodeAlias}); " is 142.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10' DiscountOrderCondition.None' 0); " is 127.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The length of the statement  "			var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()}; " is 123.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,Snelheid,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(195' 1)); " is 137.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The length of the statement  "			product.ProductVariants = new List<ProductVariantInfo> { DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(500) }; " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The length of the statement  "			product.ProductVariants = new List<ProductVariantInfo> { DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(500) }; " is 128.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,NiceUrlTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\NiceUrlTests.cs,CallingNiceUrl_WithoutArguments_ShouldCallStoreServiceWithFalseCanonical,The length of the statement  "			_urlService.Verify(m => m.ProductUsingCurrentCategoryPathOrCurrentCategoryOrCanonical(_product' _product.Localization)); " is 120.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,NiceUrlTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\NiceUrlTests.cs,CallingNiceUrl_WithFalseCanonical_ShouldCallStoreServiceWithFalseCanonical,The length of the statement  "			_urlService.Verify(m => m.ProductUsingCurrentCategoryPathOrCurrentCategoryOrCanonical(_product' _product.Localization)); " is 120.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,OrderablePropertyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\OrderablePropertyTests.cs,Orderable_StockTrueVariantFalseBackorderFalseStock100_ShouldReturnTrue,The length of the statement  "			var product = new Product { UseVariantStock = false' StockStatus = true' BackorderStatus = false' VariantGroups = Enumerable.Empty<IProductVariantGroup>()' ProductVariantGroupsFactory = () => new List<IProductVariantGroup>()' }; " is 228.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,OrderablePropertyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\OrderablePropertyTests.cs,OrderableTestCases_NoVariants,The length of the statement  "			var product = new Product { UseVariantStock = false' StockStatus = stockStatus' BackorderStatus = backOrderStatus' VariantGroups = Enumerable.Empty<IProductVariantGroup>()' ProductVariantGroupsFactory = () => new List<IProductVariantGroup>()' }; " is 245.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,Setup,The length of the statement  "			_product.VariantGroups = new List<IProductVariantGroup>{ new ProductVariantGroup(""'new List<ProductVariant> {_variant}'1)}; " is 124.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The length of the statement  "			IOC.ProductDiscountService.SetupNewMock().Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(1000); " is 160.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The length of the statement  "			setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = true' }); " is 230.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The length of the statement  "			setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900); " is 130.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The length of the statement  "			//setupNewMock.Verify(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())); " is 120.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The length of the statement  "			setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = false' }); " is 231.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The length of the statement  "			setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900); " is 130.
Long Statement,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The length of the statement  "			_variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}}; " is 136.
Long Statement,uWebshop.Test.Domain.Services,CatalogUrlResolvingServiceTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Services\CatalogUrlResolvingServiceTests.cs,Setup,The length of the statement  "			categoryServiceMock.Setup(m => m.GetAll(It.IsAny<ILocalization>()' It.IsAny<bool>())).Returns(new List<Category> {_category}); " is 126.
Long Statement,uWebshop.Test.Domain.Services,CatalogUrlResolvingServiceTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Services\CatalogUrlResolvingServiceTests.cs,Setup,The length of the statement  "			categoryServiceMock.Setup(m => m.GetById(It.IsAny<int>()' It.IsAny<ILocalization>()' It.IsAny<bool>())).Returns((Category) null); " is 129.
Long Statement,uWebshop.Test.Domain.Services,CatalogUrlResolvingServiceTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Services\CatalogUrlResolvingServiceTests.cs,Setup,The length of the statement  "			IOC.CMSEntityRepository.SetupNewMock().Setup(m => m.GetByGlobalId(It.IsAny<int>())).Returns(new UwbsNode {NodeTypeAlias = Catalog.CategoryRepositoryNodeAlias}); " is 160.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The length of the statement  "			_source = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1)); " is 142.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The length of the statement  "			var price = Price.CreateDiscountedRanged(BasketTotalBeforeDiscount()' null' _source.PricesAreIncludingVAT' _source.AverageOrderVatPercentage' null' i => i - _source.DiscountAmountInCents' _source.Localization); " is 210.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,BasketTotalBeforeDiscount,The length of the statement  "			return _source.OrderLines.Sum(orderline => orderline.AmountInCents) + _source.ShippingProviderAmountInCents + _source.PaymentProviderPriceInCents; " is 146.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The length of the statement  "			var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(6000' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 }); " is 166.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The length of the statement  "			order.OrderDiscountsFactory = () => IO.Container.Resolve<IOrderDiscountService>().GetApplicableDiscountsForOrder(order' order.Localization).ToList(); " is 149.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The length of the statement  "			var price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>()); " is 146.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The length of the statement  "			price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>()); " is 142.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The length of the statement  "			price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>()); " is 142.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,TestSummedPrice,The length of the statement  "			var price = new SummedPrice(new[] { basePriceMock.Object }' true' 19' StoreHelper.CurrentLocalization' IOC.VatCalculationStrategy.Resolve()); " is 141.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10' DiscountOrderCondition.OnTheXthItem' 2); " is 135.
Long Statement,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The length of the statement  "			var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5995' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 })); " is 230.
Long Statement,uWebshop.Test.Repositories,TestCountryRepository,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Repositories\TestCountriesRepository.cs,GetAllCountries,The length of the statement  "			return new List<Country> {new Country {Code = "NL"' Name = "Netherlands"}' new Country {Code = "GB"' Name = "United Kingdom"}' new Country {Code = "US"' Name = "United States"}' new Country {Code = "MX"' Name = "Mexico"}'}; " is 223.
Long Statement,uWebshop.Test.Repositories,TestVATCountryRepository,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Repositories\TestCountriesRepository.cs,GetAllCountries,The length of the statement  "			return new List<Country> {new Country {Code = "NL"' Name = "Netherlands"}' new Country {Code = "GB"' Name = "United Kingdom"}'}; " is 128.
Long Statement,uWebshop.Test.Repositories,TestStoreService,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Repositories\TestStoreService.cs,GetCurrentLocalization,The length of the statement  "			return Localization.CreateLocalization(currentStore' new RegionInfo(currentStore.DefaultCurrencyCultureInfo.LCID).ISOCurrencySymbol); " is 133.
Long Statement,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateMockCMSEntityRepository,The length of the statement  "			cmsEntityRepoMock.Setup(m => m.GetByGlobalId(It.IsAny<int>())).Returns((int id) => uwbsNodes.FirstOrDefault(entity => entity.Id == id)); " is 136.
Long Statement,uWebshop.Test.Services.OrderNumberService,ThreadSafetyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderNumberService\ThreadSafetyTests.cs,TestAgainstRaceHazard,The length of the statement  "			// todo: how to get this deterministic (force which thread goes first without delaying the test or forcing total execution order) " is 129.
Long Statement,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The length of the statement  "			IOC.ProductService.SetupNewMock().Setup(m => m.GetById(1234' It.IsAny<ILocalization>()' It.IsAny<bool>())).Returns(new Product { Id = 1234' UseVariantStock = true }); " is 166.
Long Statement,uWebshop.Test,IOC,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\IOC.cs,IntegrationTest,The length of the statement  "			ProductDiscountRepository.SetupNewMock().Setup(m => m.GetAll(It.IsAny<ILocalization>())).Returns(new List<DiscountProduct>()); " is 126.
Long Statement,uWebshop.Test,IOC,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\IOC.cs,IntegrationTest,The length of the statement  "			//CountriesRepository.Use(new UwebshopApplicationCachedCountriesRepository()); // werken nog niet ivm HtppContext.Current " is 121.
Long Statement,uWebshop.Test,Generate,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\IOC.cs,GenerateIOCBoilerplateCode,The length of the statement  "			//	Console.WriteLine("		public " + propertyInfo.PropertyType.Name + " " + propertyInfo.Name + " { get { return " + propertyInfo.Name + "Factory(); } } public Func<" + propertyInfo.PropertyType.Name + "> " + propertyInfo.Name + "Factory { get; set; }"); " is 252.
Long Statement,uWebshop.Test,Generate,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\IOC.cs,GenerateIOCBoilerplateCode,The length of the statement  "			//	Console.WriteLine("		public static IOCBuilder<" + propertyInfo.PropertyType.Name + "> " + propertyInfo.Name + " { get { return new IOCBuilder<" + propertyInfo.PropertyType.Name + ">(factory => Dependencies." + propertyInfo.Name + "Factory = factory); } }"); " is 260.
Long Statement,uWebshop.Test,Generate,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\IOC.cs,GenerateIOCBoilerplateCode,The length of the statement  "				Console.WriteLine("		public static IOCBuilder<" + iType.Name + "> " + iType.Name.Substring(1) + " { get { return Config<" + iType.Name + ">(); } }"); " is 149.
Long Statement,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithPercentage,The length of the statement  "			return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1234' DiscountType = DiscountType.Percentage' DiscountValue = percentage * 100' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' }; " is 466.
Long Statement,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithAmount,The length of the statement  "			return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1235' DiscountType = DiscountType.Amount' DiscountValue = amountInCents' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' }; " is 459.
Long Statement,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithFreeShipping,The length of the statement  "			return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1236' DiscountType = DiscountType.FreeShipping' CouponCode = ""' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' NumberOfItemsCondition = 0' DiscountValue = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' }; " is 447.
Long Statement,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithNewPrice,The length of the statement  "			return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1237' DiscountType = DiscountType.NewPrice' DiscountValue = amountInCents' CouponCode = ""' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' NumberOfItemsCondition = setSize' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' }; " is 461.
Long Statement,uWebshop.Test,Extensions,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,ToDiscountOrder,The length of the statement  "			//return new OrderDiscount { OriginalId = 1235' DiscountType = DiscountType.Amount' DiscountValue = amountInCents' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>() }; " is 329.
Long Statement,uWebshop.Test,Extensions,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,ToDiscountOrder,The length of the statement  "			return new DiscountOrder {AffectedOrderlines = orderDiscount.AffectedOrderlines' Id = orderDiscount.Id' Condition = orderDiscount.Condition' CounterEnabled = orderDiscount.CounterEnabled' CouponCode = orderDiscount.CouponCode' DiscountType = orderDiscount.DiscountType' DiscountValue = orderDiscount.DiscountValue' Disabled = orderDiscount.Disabled' NumberOfItemsCondition = orderDiscount.NumberOfItemsCondition' MemberGroups = orderDiscount.MemberGroups' RequiredItemIds = orderDiscount.RequiredItemIds' MinimalOrderAmount = orderDiscount.MinimalOrderAmount' Localization = orderDiscount.Localization}; " is 603.
Long Statement,uWebshop.Test.Stubs,StubStore,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubStore.cs,CreateDefaultStore,The length of the statement  "			return new StubStore { NodeTypeAlias = "uwbsStore"' Alias = "TestStore"' DefaultCountryCode = "NL"' Id = 1' GlobalVat = 19'  " is 123.
Long Statement,uWebshop.Test.Stubs,StubStore,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubStore.cs,CreateDefaultStore,The length of the statement  "				CanonicalStoreURL = "http://my.uwebshop.com/"' SortOrder = 1' Culture = "nl-NL"' CountryCode = "NL"' CurrencyCulture = "nl-NL"' UseStock = true'  " is 144.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,CategoryUrls,The length of the statement  "			Assert.AreEqual(storeUrl + "?resolvedCategoryId=123&category=" + categoryUrl + querystring.Replace('?'' '&')' _wrapper.RewritePathCalledValue); " is 143.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,ProductUrls,The length of the statement  "			Assert.AreEqual(storeUrl + "?resolvedProductId=456&category=" + categoryUrl + "&product=" + productUrl.Replace("/"' "") + querystring.Replace('?'' '&')' _wrapper.RewritePathCalledValue); " is 186.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,PaymentProvider,The length of the statement  "			_wrapper = new MockHttpContextWrapper("/" + cmsApp.GetPaymentProviderRepositoryCMSNodeUrlName() + "/" + cmsApp.GetPaymentProviderSectionCMSNodeUrlName() + "/something.aspx/?qs=1"); " is 180.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,PaymentProvider,The length of the statement  "			IOC.Config<IPaymentProviderService>().SetupNewMock().Setup(m => m.GetPaymentProviderWithName("something"' It.IsAny<ILocalization>())).Returns(new PaymentProvider {Name = "something"}); " is 184.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,SetupResolverAndSplitter,The length of the statement  "			IOC.StoreUrlService.SetupNewMock().Setup(m => m.GetStoreUrlsWithoutDomain()).Returns(new[] {new StoreUrl {Store = StoreHelper.GetCurrentStore()' Url = storeUrl}}); " is 163.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,SetupResolverAndSplitter,The length of the statement  "			_catalogUrlResolvingServiceMock.Setup(m => m.GetCategoryPathFromUrlName(categoryUrl)).Returns(new []{ new Category { Id = 123 }}); " is 130.
Long Statement,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,SetupResolverAndSplitter,The length of the statement  "			_catalogUrlResolvingServiceMock.Setup(m => m.GetProductFromUrlName(categoryUrl' productName)).Returns(new Product {Id = 456}); " is 126.
Long Statement,uWebshop.Test.Domain.Domain_classes.OrderData,PreservationOfDataFromOrderInfoToOrderDataTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderData\PreservationOfDataFromOrderInfoToOrderDataTest.cs,ConversionToOrderDataShouldPreserveValues,The length of the statement  "			var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 1)); " is 137.
Long Statement,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The length of the statement  "			var totalOrderDiscount = includingVat ? orderInfo.DiscountAmountWithVatInCents : orderInfo.DiscountAmountWithoutVatInCents; " is 123.
Long Statement,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The length of the statement  "			Assert.AreEqual(expected * numberOfItemsInOrderLine' line1.Amount.WithVat.ValueInCents + line2.Amount.WithVat.ValueInCents); " is 124.
Long Statement,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The length of the statement  "			var providerFee = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(1' 6000' ShippingRangeType.OrderAmount); " is 120.
Long Statement,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The length of the statement  "			var providerGratis = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(6000' 99900' ShippingRangeType.OrderAmount); " is 127.
Long Statement,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentageList(50' DiscountOrderCondition.PerSetOfXItems' setSize); " is 151.
Long Statement,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The length of the statement  "			Assert.AreEqual(expectedNumberOfDiscountedItems*500 + (itemCount - expectedNumberOfDiscountedItems)*1000' orderInfo.OrderTotalInCents); " is 135.
Long Statement,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsFixedDiscount,The length of the statement  "			var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(50' DiscountOrderCondition.PerSetOfXItems' setSize); " is 143.
Long Statement,uWebshop.Domain.Domain_classes.OrderInfo,ConversionWithDTOsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ConversionWithDTOsTest.cs,OrderInfoToDTOAndBackShouldPreserveValues,The length of the statement  "			var originalOrderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 2)); " is 145.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPriceInclVat,The length of the statement  "			var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object); " is 125.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPriceInclVat,The length of the statement  "			var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object); " is 125.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPrice,The length of the statement  "			var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object); " is 124.
Long Statement,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPrice,The length of the statement  "			var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object); " is 124.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithoutProductIdAndOrderLineId_ShouldNotCallUpdateLine,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Never()); " is 221.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestToUpdateQuantity_ShouldCallUpdateLineOnce,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1)); " is 224.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithActionUpdate_ShouldCallUpdateLineOnceWithActionUpdate,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' It.IsAny<int>()' "update"' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1)); " is 214.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithProductId_ShouldCallUpdateLineOnceWithThatProductId,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' 7' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1)); " is 210.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithOrderLineId_ShouldCallUpdateLineOnceWithThatOrderLineId,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' 2' It.IsAny<int>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1)); " is 210.
Long Statement,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithQuantity_ShouldCallUpdateLineOnceWithThatQuantity,The length of the statement  "			_mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<string>()' 9' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1)); " is 210.
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,AffectedTagsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\AffectedTagsTests.cs,Setup,The following statement contains a magic number: _product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,AffectedTagsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\AffectedTagsTests.cs,DiscountAmountForOrder_TagsMatching_GivesDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,AffectedTagsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\AffectedTagsTests.cs,DiscountAmountForOrder_TagsMatching_GivesDiscount,The following statement contains a magic number: Assert.AreEqual(500' amount);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,AffectedTagsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\AffectedTagsTests.cs,DiscountAmountForOrder_TagsNotMatching_GivesZeroDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: IOC.CouponCodeService.SetupNewMock().Setup(m => m.GetAllForDiscount(1234)).Returns(new List<Coupon> {new Coupon(1234' "code"' 7)'});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: IOC.CouponCodeService.SetupNewMock().Setup(m => m.GetAllForDiscount(1234)).Returns(new List<Coupon> {new Coupon(1234' "code"' 7)'});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: IOC.CouponCodeService.SetupNewMock().Setup(m => m.GetAllForDiscount(1234)).Returns(new List<Coupon> {new Coupon(1234' "code"' 7)'});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1000' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: discount.Id = 1234;
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(2199' 2));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(2199' 2));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,CouponsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CouponsTests.cs,bla,The following statement contains a magic number: Assert.AreEqual(1000' actual);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,PercentageCalculationOverflowRegressionTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\PercentageCalculationOverflowRegressionTest.cs,LargePriceLargePercentage_ShouldHaveNoInternalOverflow,The following statement contains a magic number: var discount = new DiscountProduct{ DiscountType = DiscountType.Percentage' DiscountValue = 5000};
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,PercentageCalculationOverflowRegressionTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\PercentageCalculationOverflowRegressionTest.cs,LargePriceLargePercentage_ShouldHaveNoInternalOverflow,The following statement contains a magic number: var actual = discount.GetAdjustedPrice(1000000);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculator,PercentageCalculationOverflowRegressionTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\PercentageCalculationOverflowRegressionTest.cs,LargePriceLargePercentage_ShouldHaveNoInternalOverflow,The following statement contains a magic number: Assert.AreEqual(500000' actual);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,Setup,The following statement contains a magic number: _orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,Setup,The following statement contains a magic number: _orderDiscount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(195' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,MinimumOrderAmountAndAmountDiscountOnOrderWithSufficientAmount_ShouldAmount,The following statement contains a magic number: _orderDiscount.MinimalOrderAmount = 500;
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,MinimumOrderAmountAndAmountDiscountOnOrderWithSufficientAmount_ShouldAmount,The following statement contains a magic number: Assert.AreEqual(195' _orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,CombinationsOfConditionsAndEffectsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\CombinationsOfConditionsAndEffectsTest.cs,MinimumOrderAmountAndAmountDiscountOnOrderWithInsufficientAmount_ShouldNotGiveDiscount,The following statement contains a magic number: _orderDiscount.MinimalOrderAmount = 1500;
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The following statement contains a magic number: _discountCalculationServiceMock.Setup(m => m.DiscountAmountForOrder(orderDiscountWithAmountForOrderMock.Object' It.IsAny<OrderInfo>()' It.IsAny<bool>())).Returns(1000);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,HasDiscountForOrderExtension,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\HasDiscountForOrderExtension.cs,HasDiscountForOrderOnList_ShouldReturnDiscountsForWichDiscountCalculatorGivesAmountAboveZero,The following statement contains a magic number: _discountCalculationServiceMock.Verify(m => m.DiscountAmountForOrder(It.IsAny<IOrderDiscount>()' _orderInfo' It.IsAny<bool>())' Times.Exactly(2));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,Setup,The following statement contains a magic number: _product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 7);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,Setup,The following statement contains a magic number: _product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 7);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,Setup,The following statement contains a magic number: _product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 4);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,Setup,The following statement contains a magic number: _product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 4);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithoutRanges_ShouldReturnDiscountValue,The following statement contains a magic number: _discountMock.SetupGet(m => m.DiscountValue).Returns(123);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithoutRanges_ShouldReturnDiscountValue,The following statement contains a magic number: Assert.AreEqual(123' actual);
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIds_ShouldCallGetApplicableOrderLinesWithRequiredItemIds,The following statement contains a magic number: _discountMock.SetupGet(m => m.RequiredItemIds).Returns(new List<int> {2342});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIds_ShouldCallGetApplicableOrderLinesWithRequiredItemIds,The following statement contains a magic number: _orderServiceMock.Verify(m => m.GetApplicableOrderLines(_orderInfo' new List<int> {2342})' Times.Once());
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIdsAndAffectedOrderlines_ShouldCallGetApplicableOrderLinesWithAffectedOrderlines,The following statement contains a magic number: _discountMock.SetupGet(m => m.RequiredItemIds).Returns(new List<int> {2342});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIdsAndAffectedOrderlines_ShouldCallGetApplicableOrderLinesWithAffectedOrderlines,The following statement contains a magic number: _discountMock.SetupGet(m => m.AffectedOrderlines).Returns(new List<int> {4636});
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIdsAndAffectedOrderlines_ShouldCallGetApplicableOrderLinesWithAffectedOrderlines,The following statement contains a magic number: _orderServiceMock.Verify(m => m.GetApplicableOrderLines(_orderInfo' new List<int> {2342})' Times.Never());
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountCalculatorTests,RangedDiscountValueForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountCalculator\RangedDiscountValueForOrderTest.cs,DiscountWithRangesAndRequiredItemIdsAndAffectedOrderlines_ShouldCallGetApplicableOrderLinesWithAffectedOrderlines,The following statement contains a magic number: _orderServiceMock.Verify(m => m.GetApplicableOrderLines(_orderInfo' new List<int> {4636})' Times.Once());
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,Setup,The following statement contains a magic number: _orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,OrderAmountAboveMinimum_ShouldReturnDiscount,The following statement contains a magic number: _mockDiscount.SetupGet(m => m.MinimumOrderAmount).Returns(new FakePrice(500));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,OrderAmountBelowMinimum_ShouldNotReturnDiscount,The following statement contains a magic number: _mockDiscount.SetupGet(m => m.MinimumOrderAmount).Returns(new FakePrice(1500));
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,RequiredItemIdsWithOrderContainsItemTrue_ShouldReturnDiscount,The following statement contains a magic number: var itemIds = new List<int> {1234};
Magic Number,uWebshop.Test.Domain.Businesslogic.DiscountService,GetApplicableDiscountsForOrderTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\DiscountService\GetApplicableDiscountsForOrderTest.cs,RequiredItemIdsWithOrderContainsItemFalse_ShouldNotReturnDiscount,The following statement contains a magic number: var itemIds = new List<int> {1234};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,DiscountCoupling,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\DiscountCoupling.cs,BeforeDiscount_ShouldRemoveDiscountCalculation,The following statement contains a magic number: var price = Price.CreateDiscountedRanged(1000' Enumerable.Empty<Range>()' true' 0' null' i => i / 2' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,DiscountCoupling,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\DiscountCoupling.cs,BeforeDiscount_ShouldRemoveDiscountCalculation,The following statement contains a magic number: var price = Price.CreateDiscountedRanged(1000' Enumerable.Empty<Range>()' true' 0' null' i => i / 2' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,DiscountCoupling,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\DiscountCoupling.cs,BeforeDiscount_ShouldRemoveDiscountCalculation,The following statement contains a magic number: Assert.AreEqual(500' price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,DiscountCoupling,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\DiscountCoupling.cs,BeforeDiscount_ShouldRemoveDiscountCalculation,The following statement contains a magic number: Assert.AreEqual(1000' beforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: const int orderCount = 15;
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var ranges = new List<Range> {new Range {From = 1' To = 10' PriceInCents = 500}' new Range {From = 10' To = 20' PriceInCents = 300}};
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: var price = Price.CreateDiscountedRanged(1000' ranges' true' 0' o => orderCount' i => i' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: Assert.AreEqual(500' price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,RangedCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\RangedCalculation.cs,TestingDefaultRangeAndUsingRangesWithCount,The following statement contains a magic number: Assert.AreEqual(300' ranged.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: var price = Price.CreateSimplePrice(1000' false' 10m' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: var price = Price.CreateSimplePrice(1000' false' 10m' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: Assert.AreEqual(1000' price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: Assert.AreEqual(1100' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: Assert.AreEqual(1000' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithoutVat,The following statement contains a magic number: Assert.AreEqual(100' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: var price = Price.CreateSimplePrice(1000' true' 10m' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: var price = Price.CreateSimplePrice(1000' true' 10m' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: Assert.AreEqual(1000' price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: Assert.AreEqual(1000' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: Assert.AreEqual(909' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,PragmaticallyCombinedTestingAllVatOperationsForWithVat,The following statement contains a magic number: Assert.AreEqual(91' vatPrice.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: var amount = 40000;
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: var discount = 1000;
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(40000' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(40000' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(3900' Price.CreateDiscountedRanged(amount' null' false' 10' null  															   ' i => i - discount' null).Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(3900' Price.CreateDiscountedRanged(amount' null' false' 10' null  															   ' i => i - discount' null).Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(42900' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(42900' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(39000' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,CreateDiscountedRanged,The following statement contains a magic number: Assert.AreEqual(39000' Price.CreateDiscountedRanged(amount' null' false' 10' null  																' i => i - discount' null).WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: var amount = 40000;
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: var discount = 1000;
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: var price = Price.CreateDiscountedRanged(amount' null' false' 10' null  					' i => i - discount' null);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: Assert.AreEqual(40000' price.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: Assert.AreEqual(3900' price.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: Assert.AreEqual(42900' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Businesslogic.PriceTests,VatCalculation,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\PriceTests\VatCalculation.cs,WeNeedToFixMultipleUsagesOfTheSamePrice,The following statement contains a magic number: Assert.AreEqual(39000' price.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,CouponCodeTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\CouponCodeTests.cs,bla1,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(12990' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,CouponCodeTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\CouponCodeTests.cs,bla1,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(100);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,CouponCodeTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\CouponCodeTests.cs,bla1,The following statement contains a magic number: Assert.AreEqual(12990' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,CouponCodeTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\CouponCodeTests.cs,bla1,The following statement contains a magic number: Assert.AreEqual(12990' orderInfo.DiscountAmountWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,DiscountApplicationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\DiscountApplicationTest.cs,AddingACouponToAnIncompleteOrderAfterDeserialization_ShouldApplyCouponDiscount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,DiscountApplicationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\DiscountApplicationTest.cs,AddingACouponToAnIncompleteOrderAfterDeserialization_ShouldApplyCouponDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(100' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,DiscountApplicationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\DiscountApplicationTest.cs,AddingACouponToAnIncompleteOrderAfterDeserialization_ShouldApplyCouponDiscount,The following statement contains a magic number: Assert.AreEqual(100' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithSingleProductAndApplicableNewPriceDiscount_ShouldGiveProductPriceMinusDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithSingleProductAndApplicableNewPriceDiscount_ShouldGiveProductPriceMinusDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithSingleProductAndApplicableNewPriceDiscount_ShouldGiveProductPriceMinusDiscountAmount,The following statement contains a magic number: Assert.AreEqual(1995 - 1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithSingleProductAndApplicableNewPriceDiscount_ShouldGiveProductPriceMinusDiscountAmount,The following statement contains a magic number: Assert.AreEqual(1995 - 1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderLine.GrandTotalInCents - 1000*2' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderLine.GrandTotalInCents - 1000*2' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderInfo.OrderLineTotalInCents - 1000*4' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscount_ShouldGiveOrderLineTotalMinusFourTimesTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderInfo.OrderLineTotalInCents - 1000*4' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithOneLineTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderInfo.OrderLineTotalInCents - 1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 2)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.PerSetOfXItems' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoLinesTwoProductsAndApplicableNewPriceDiscountWithPerSetOfItemsCondition_ShouldGiveOrderLineTotalMinusTwoTimesTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(orderInfo.OrderLineTotalInCents - 2000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 1)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1995' 1)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1899' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.OnTheXthItem' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithNewPrice(1000' DiscountOrderCondition.OnTheXthItem' 2);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(1899 - 1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NewPriceDiscountTypeTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NewPriceDiscountTypeTest.cs,DiscountAmountForOrderOnOrderWithTwoOrderLinesAndApplicableNewPriceDiscountWithOnTheXthItemCondition_ShouldGiveCheapestProductPriceTotalMinusTheDiscountAmount,The following statement contains a magic number: Assert.AreEqual(1899 - 1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShippingsCosts,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShippingsCosts.cs,FreeShippingDiscount_ShouldGiveDiscountAmountEqualToShippingCosts,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShippingsCosts,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShippingsCosts.cs,FreeShippingDiscount_ShouldGiveDiscountAmountEqualToShippingCosts,The following statement contains a magic number: orderInfo.ShippingProviderAmountInCents = 195;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,MembershipTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\MembershipTest.cs,Setup,The following statement contains a magic number: _discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,MembershipTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\MembershipTest.cs,Setup,The following statement contains a magic number: _orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(  				DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,MembershipTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\MembershipTest.cs,DiscountWithMembergroupShouldGiveDiscountForUserInThatGroup,The following statement contains a magic number: Assert.AreEqual(500' discountAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage,The following statement contains a magic number: Assert.AreEqual(500' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage100,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage100,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(100);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Percentage100,The following statement contains a magic number: Assert.AreEqual(1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Amount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Amount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(234' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,Amount,The following statement contains a magic number: Assert.AreEqual(234' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,AmountLargerThanOrderAmount,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,AmountLargerThanOrderAmount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,AmountLargerThanOrderAmount,The following statement contains a magic number: Assert.AreEqual(1000' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedAmountAndPercentage,The following statement contains a magic number: Assert.AreEqual(734' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentage,The following statement contains a magic number: Assert.AreEqual(1000' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(1234' DiscountOrderCondition.None' 0)' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The following statement contains a magic number: Assert.AreEqual(1000' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,CombinedTooLargeAmountAndPercentageOrderLineTotalInCentsShouldBeNull,The following statement contains a magic number: Assert.AreEqual(1000' orderInfo.OrderLineTotalWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(21306' 2' 21)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3995' 1' 0));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(21306' 2' 21)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3995' 1' 0));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(21306' 2' 21)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3995' 1' 0));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(21306' 2' 21)' DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3995' 1' 0));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: var defaultOrderDiscountWithAmount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(50000' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: DefaultFactoriesAndSharedFunctionality.SetDiscountsOnOrderInfo(orderInfo' defaultOrderDiscountWithAmount' DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(25));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: Assert.AreEqual(46607' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,NoConditionsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\NoConditionsTest.cs,RecreateBug20121127,The following statement contains a magic number: Assert.AreEqual(46607' orderInfo.DiscountAmountWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(12990' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10000' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(10000' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(10000' orderInfo.DiscountAmountWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(2990' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(10000' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(10000' orderInfo.DiscountAmountWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderDiscounts,ShouldOnlyBeAppliedWhenOrderIncompleteTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\ShouldOnlyBeAppliedWhenOrderIncompleteTest.cs,RecreateBug20130117_,The following statement contains a magic number: Assert.AreEqual(2990' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: productInfo.Id = 5678;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: productInfo.Vat = 10;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(1000' line.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(909' order.GetAmount(false' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(1000' basket.ChargedOrderAmount.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: orderUpdateService.AddOrUpdateOrderLine(order' 0' 5678' "update"' 2' new int[0]);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: orderUpdateService.AddOrUpdateOrderLine(order' 0' 5678' "update"' 2' new int[0]);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(2' productInfo.Quantity);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(2' line.SellableUnits.Count());
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(2000' line.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(2000' order.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,UpdatingAnOrderlineShouldBeReflectedInAmount,The following statement contains a magic number: Assert.AreEqual(2000' basket.ChargedOrderAmount.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(true' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(909' order.GetAmount(false' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' order.GetAmount(true' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(455' order.GetAmount(false' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' price.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(909' price.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(91' price.BeforeDiscount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(455' price.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(45' price.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(454' price.Discount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(1100' order.GetAmount(true' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(false' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(550' order.GetAmount(true' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(500' order.GetAmount(false' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(1100' price.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' price.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(100' price.BeforeDiscount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(550' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(50' price.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(550' price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,PercentageDiscountExncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.Discount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(500' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: var absoluteDiscountAmount = 500;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: var AverageOrderVatPercentage = 10m;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(45' vatAmountFromWithVat);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(true' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(909' order.GetAmount(false' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' order.GetAmount(true' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(455' order.GetAmount(false' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(1000' price.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(909' price.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(91' price.BeforeDiscount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(455' price.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(45' price.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountIncludingVat,The following statement contains a magic number: Assert.AreEqual(454' price.Discount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(500' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(1100' order.GetAmount(true' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(false' false' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(550' order.GetAmount(true' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(500' order.GetAmount(false' true' true));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(1100' price.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(1000' price.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(100' price.BeforeDiscount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(550' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(50' price.Vat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(550' price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,AmountDiscountExcludingVat,The following statement contains a magic number: Assert.AreEqual(500' price.Discount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: productInfo.Id = 5678;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: productInfo.Vat = 10;
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1000' order.GetAmount(false' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1000' line.GetAmount(false' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1100' order.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1100' line.GetAmount(true' false' false));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1100' order.ChargedAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1100' order.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1000' order.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GetAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GetAmountTests.cs,BasicTests,The following statement contains a magic number: Assert.AreEqual(1100' basket.ChargedOrderAmount.ValueInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,CustomValidationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\CustomValidationTest.cs,ThatCustomErrorIsRunAndReceivesCorrectArgument,The following statement contains a magic number: var info = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 19' ItemCount = 2' OriginalPriceInCents = 3500' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 19' ItemCount = 2' OriginalPriceInCents = 3500' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 19' ItemCount = 2' OriginalPriceInCents = 3500' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(19' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(559' productInfo.VatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(2941' productInfo.PriceWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(3500' productInfo.PriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(7000' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(5882' orderInfo.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,ThatVATAmountIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(7000' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithVariants,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithVariants,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithVariants,The following statement contains a magic number: productInfo.ProductVariants.Add(new ProductVariantInfo {PriceInCents = 100});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithVariants,The following statement contains a magic number: Assert.AreEqual(1100' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: productInfo.ProductVariants.Add(new ProductVariantInfo {PriceInCents = 100});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: Assert.AreEqual(550' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: Assert.AreEqual(6' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: Assert.AreEqual(519' orderInfo.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: Assert.AreEqual(550' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscount,The following statement contains a magic number: Assert.AreEqual(1100' orderInfo.OrderLines.First().GrandTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: var productInfo = new ProductInfo { Id = 1234' IsDiscounted = false' Vat = 0' OriginalPriceInCents = 1000' Ranges = new List<Range>() };
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: var productInfo = new ProductInfo { Id = 1234' IsDiscounted = false' Vat = 0' OriginalPriceInCents = 1000' Ranges = new List<Range>() };
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: IOC.CMSEntityRepository.SetupNewMock().Setup(m => m.GetByGlobalId(1234)).Returns(new UwbsNode {Id = 1234' NodeTypeAlias = Product.NodeAlias});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: IOC.CMSEntityRepository.SetupNewMock().Setup(m => m.GetByGlobalId(1234)).Returns(new UwbsNode {Id = 1234' NodeTypeAlias = Product.NodeAlias});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10' DiscountOrderCondition.None' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: discount.AffectedOrderlines = new List<int>{1234};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: Assert.AreEqual(10' orderInfo.DiscountAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: Assert.AreEqual(990' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: Assert.AreEqual(990' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,GrandTotalWithOrderDiscoun214t,The following statement contains a magic number: Assert.AreEqual(990' orderInfo.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: var productInfo = new ProductInfo {IsDiscounted = false' Vat = 6' OriginalPriceInCents = 1000' Ranges = new List<Range>()};
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: productInfo.ProductVariants.Add(new ProductVariantInfo {PriceInCents = -100});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(900' sellableUnit.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(51' line.VatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(849' line.SubTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(425' orderInfo.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(450' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(6' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(450' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(900' orderInfo.OrderLines.First().GrandTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,SomeRegressionTest,The following statement contains a magic number: Assert.AreEqual(900' productInfo.PriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderInfoTests,GrandTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\GrandTotalTest.cs,Snelheid,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(195' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Amount,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Amount,The following statement contains a magic number: product.DiscountAmountInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Amount,The following statement contains a magic number: Assert.AreEqual(900' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Amount,The following statement contains a magic number: Assert.AreEqual(100' product.ProductDiscountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Amount,The following statement contains a magic number: Assert.AreEqual(1000' product.RangedOriginalPrice);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Percentage,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Percentage,The following statement contains a magic number: product.DiscountPercentage = 10;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Percentage,The following statement contains a magic number: Assert.AreEqual(900' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Percentage,The following statement contains a magic number: Assert.AreEqual(100' product.ProductDiscountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,Percentage,The following statement contains a magic number: Assert.AreEqual(1000' product.RangedOriginalPrice);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: product.ProductVariants = new List<ProductVariantInfo> { DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(500) };
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: product.DiscountAmountInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: Assert.AreEqual(1400' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: Assert.AreEqual(100' product.ProductDiscountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,AmountIncludingVariant,The following statement contains a magic number: Assert.AreEqual(1500' product.RangedOriginalPrice);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: product.ProductVariants = new List<ProductVariantInfo> { DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(500) };
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: product.DiscountAmountInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: Assert.AreEqual(1400' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: Assert.AreEqual(100' product.ProductDiscountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountCalculations,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountCalculations.cs,PercentageIncludingVariant,The following statement contains a magic number: Assert.AreEqual(1500' product.RangedOriginalPrice);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountOnProductWithVariantTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountOnProductWithVariantTest.cs,PercentageProductDiscountOnProductWithVariant_ShouldGiveDiscountThatTakesVariantEffectIntoAccount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateProductDiscountPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountOnProductWithVariantTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountOnProductWithVariantTest.cs,PercentageProductDiscountOnProductWithVariant_ShouldGiveDiscountThatTakesVariantEffectIntoAccount,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' discount);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountOnProductWithVariantTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountOnProductWithVariantTest.cs,PercentageProductDiscountOnProductWithVariant_ShouldGiveDiscountThatTakesVariantEffectIntoAccount,The following statement contains a magic number: var variant = DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(-200);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductDiscount,ProductDiscountOnProductWithVariantTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductDiscount\ProductDiscountOnProductWithVariantTest.cs,PercentageProductDiscountOnProductWithVariant_ShouldGiveDiscountThatTakesVariantEffectIntoAccount,The following statement contains a magic number: Assert.AreEqual(400' productInfo.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,OrderablePropertyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\OrderablePropertyTests.cs,Orderable_StockTrueVariantFalseBackorderFalseStock100_ShouldReturnTrue,The following statement contains a magic number: IOC.StockService.SetupNewMock().Setup(m => m.GetStockForUwebshopEntityWithId(It.IsAny<int>()' null)).Returns(100);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,Setup,The following statement contains a magic number: _product = new Product {OriginalPriceInCents = 1000' Id = 12234' Ranges = new List<Range>()' Vat = 21m};
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,Setup,The following statement contains a magic number: _product = new Product {OriginalPriceInCents = 1000' Id = 12234' Ranges = new List<Range>()' Vat = 21m};
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,Setup,The following statement contains a magic number: _product = new Product {OriginalPriceInCents = 1000' Id = 12234' Ranges = new List<Range>()' Vat = 21m};
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,Setup,The following statement contains a magic number: _variant = new ProductVariant {OriginalPriceInCents = 100};
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: IOC.ProductDiscountService.SetupNewMock().Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: IOC.ProductDiscountService.SetupNewMock().Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: IOC.ProductDiscountService.SetupNewMock().Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(1000);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(1000' _product.Price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(100' _variant.Price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_NotDiscounted_GivesProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(1100' _variant.PriceIncludingProduct(_product).ValueInCents());
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = true' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = true' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = true' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(900' _product.Price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(100' _variant.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountExcludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(1000' _variant.PriceIncludingProductPriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = false' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = false' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetDiscountByProductId(12234' It.IsAny<ILocalization>()' It.IsAny<OrderInfo>())).Returns(new DiscountProduct { DiscountValue = 10 * 100' DiscountType = DiscountType.Percentage' ExcludeVariants = false' });
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: setupNewMock.Setup(m => m.GetAdjustedPriceForProductWithId(12234' It.IsAny<ILocalization>()' 1000' It.IsAny<int>())).Returns(900);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(1000' _product.OriginalPriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(900' _product.Price.ValueInCents());
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,ProductIncludingVariantPricesTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductIncludingVariantPricesTests.cs,PriceIncludingProductPriceInCents_ProductDiscountIncludingVariants_GivesDiscountedProductPlusVariant,The following statement contains a magic number: Assert.AreEqual(990' _variant.PriceIncludingProductPriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,NoRoundingIsRequired,The following statement contains a magic number: _product.OriginalPriceInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,NoRoundingIsRequired,The following statement contains a magic number: _product.Vat = 19;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,NoRoundingIsRequired,The following statement contains a magic number: Assert.AreEqual(19' _product.VatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,NoRoundingIsRequired,The following statement contains a magic number: Assert.AreEqual(119' _product.OriginalPriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmounIsRoundedDown,The following statement contains a magic number: _product.OriginalPriceInCents = 101;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmounIsRoundedDown,The following statement contains a magic number: _product.Vat = 19;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmounIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(19' _product.VatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmounIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(101' _product.OriginalPriceWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmounIsRoundedDown,The following statement contains a magic number: Assert.AreEqual(120' _product.OriginalPriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmountIsRoundedDownWithPricesIncludingVat,The following statement contains a magic number: _product.OriginalPriceInCents = 120;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmountIsRoundedDownWithPricesIncludingVat,The following statement contains a magic number: _product.Vat = 19;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmountIsRoundedDownWithPricesIncludingVat,The following statement contains a magic number: Assert.AreEqual(19' _product.VatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmountIsRoundedDownWithPricesIncludingVat,The following statement contains a magic number: Assert.AreEqual(101' _product.OriginalPriceWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductTests,RoundingAndVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\RoundingAndVatTest.cs,ThatVATAmountIsRoundedDownWithPricesIncludingVat,The following statement contains a magic number: Assert.AreEqual(120' _product.OriginalPriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.Ranges = new List<Range> {new Range {From = 0' To = 2' PriceInCents = 100}' new Range {From = 3' To = 999' PriceInCents = 50}};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _variant.PriceInCents = 200;
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,Setup,The following statement contains a magic number: _product = new ProductInfo {ProductVariants = new List<ProductVariantInfo> {_variant}' ItemCount = 5};
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,VerifyRangesCoupling,The following statement contains a magic number: Assert.AreEqual(50' _variant.RangedPriceInCents);
Magic Number,uWebshop.Test.Domain.Model.ProductVariantInfoTests,RangedPriceInCentsTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Model\ProductVariantInfoTests\RangedPriceInCentsTests.cs,VerifyOrderTotalItemCount,The following statement contains a magic number: Assert.AreEqual(10' _variant.OrderTotalItemCount);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: _source = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(500' IO.Container.Resolve<IDiscountCalculationService>().DiscountAmountForOrder(discount' _source));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(500' _source.DiscountAmountInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(500' price.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(500' price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(6000' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 });
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(6000' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 });
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(6000' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 });
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' order.OrderLineTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' basket.OrderAmount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' basket.OrderAmount.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(25);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' order.OrderLineTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' order.OrderLines.Single().ProductInfo.PriceInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(1000' IOC.DiscountCalculationService.Actual().Resolve().DiscountAmountForOrder(discount' order));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(1000' order.DiscountAmountInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' order.OrderLineTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(3000' basket.OrderAmount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' basket.OrderAmount.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' basket.OrderAmount.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(3361' basket.OrderAmount.BeforeDiscount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' oldLine.Amount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' oldLine.Amount.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: var price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' price.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' price.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: price = new SummedPrice(new[] { oldLine.Amount }' true' 19' StoreHelper.CurrentLocalization' IO.Container.Resolve<IVatCalculationStrategy>());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' line.Amount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(4000' line.Amount.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(1000' basket.OrderAmount.Discount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(840' basket.OrderAmount.Discount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140116,The following statement contains a magic number: Assert.AreEqual(1000' basket.OrderAmount.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,TestSummedPrice,The following statement contains a magic number: var price = new SummedPrice(new[] { basePriceMock.Object }' true' 19' StoreHelper.CurrentLocalization' IOC.VatCalculationStrategy.Resolve());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: var product = new ProductInfo { OriginalPriceInCents = 990000' DiscountAmountInCents = 990000 - 100000 };
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: var product = new ProductInfo { OriginalPriceInCents = 990000' DiscountAmountInCents = 990000 - 100000 };
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: var product = new ProductInfo { OriginalPriceInCents = 990000' DiscountAmountInCents = 990000 - 100000 };
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(990000' product.Price.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(100000' product.Price.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,ProductInfo_PriceCalculationRegressionTest,The following statement contains a magic number: Assert.AreEqual(890000' product.Price.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(10' 5);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(10' 5);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(750' 3);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(750' 3);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: Assert.AreEqual(10' unit.PriceInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: Assert.AreEqual(50' newDiscount);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: Assert.AreEqual(2300' orderNewDiscount);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: Assert.AreEqual(2300' orderDiscount);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140321,The following statement contains a magic number: Assert.AreEqual(50' line.DiscountInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 0);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 20);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 20);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(2000' order.SubtotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(2200' order.GrandtotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(200' order.VatTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(2000' basket.OrderAmount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(2200' basket.OrderAmount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140626,The following statement contains a magic number: Assert.AreEqual(200' basket.OrderAmount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(4000' 1' 0);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1800' 1' 20);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: var product2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1800' 1' 20);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(5800' order.SubtotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(6160' order.GrandtotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(360' order.VatTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(5800' basket.OrderAmount.WithoutVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(6160' basket.OrderAmount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140627,The following statement contains a magic number: Assert.AreEqual(360' basket.OrderAmount.Vat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(400' 10);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: var product1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(400' 10);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10' DiscountOrderCondition.OnTheXthItem' 2);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(10' DiscountOrderCondition.OnTheXthItem' 2);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(50' basketLine.Amount.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(4000' basketLine.Amount.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(3950' basketLine.Amount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(50' line.Amount.Discount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(4000' line.Amount.BeforeDiscount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderAmountTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmountRegressionTest20140408,The following statement contains a magic number: Assert.AreEqual(3950' line.Amount.WithVat.ValueInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5995' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 }));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5995' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 }));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: var order = DefaultFactoriesAndSharedFunctionality.CreateIncompleteOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5995' 1' 19' new DiscountProduct { DiscountType = DiscountType.Amount' DiscountValue = 2000 }));
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: Assert.AreEqual(3995' order.OrderLineTotalInCents);
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: Assert.AreEqual(3995' basket.OrderLineTotal.ValueInCents());
Magic Number,uWebshop.Test.Public_API.BasketTests,OrderLineTotal,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Public API\BasketTests\OrderAmountTests.cs,DiscountAmount,The following statement contains a magic number: Assert.AreEqual(3995' basket.OrderLineTotal.BeforeDiscount.ValueInCents());
Magic Number,uWebshop.Test.Repositories,TestProductService,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Repositories\TestProductService.cs,CreateProductInfoByProductId,The following statement contains a magic number: return DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductInfoTests,EffectsOfVariantOnProductPrices,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductInfoTests\EffectsOfVariantOnProductPrices.cs,ProductInfoPriceInCents_ShouldIncludeVariantPriceInCents,The following statement contains a magic number: variant.PriceInCents = 5000;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductInfoTests,EffectsOfVariantOnProductPrices,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductInfoTests\EffectsOfVariantOnProductPrices.cs,ProductInfoPriceInCents_ShouldIncludeVariantPriceInCents,The following statement contains a magic number: Assert.AreEqual(5000' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductInfoTests,EffectsOfVariantOnProductPrices,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductInfoTests\EffectsOfVariantOnProductPrices.cs,ProductInfoPriceInCents_ShouldIncludeDiscountedVariantPriceInCents,The following statement contains a magic number: variant.PriceInCents = 5000;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductInfoTests,EffectsOfVariantOnProductPrices,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductInfoTests\EffectsOfVariantOnProductPrices.cs,ProductInfoPriceInCents_ShouldIncludeDiscountedVariantPriceInCents,The following statement contains a magic number: variant.DiscountPercentage = 50;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductInfoTests,EffectsOfVariantOnProductPrices,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductInfoTests\EffectsOfVariantOnProductPrices.cs,ProductInfoPriceInCents_ShouldIncludeDiscountedVariantPriceInCents,The following statement contains a magic number: Assert.AreEqual(2500' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Services.MultiStoreEntityServiceTests,TestEntityServiceToRepoCoupling,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Services\MultiStoreEntityServiceTests\TestCachingOfMultiStoreEntityService.cs,GetById_CallingTwice_ShouldCallRepoTwice,The following statement contains a magic number: _productRepositoryMock.Verify(m => m.GetById(1' _localization)' Times.Exactly(2));
Magic Number,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateDiscountMock,The following statement contains a magic number: var range1 = new Range {From = 0' To = 5' PriceInCents = DiscountMockRange1PriceInCents};
Magic Number,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateDiscountMock,The following statement contains a magic number: var range2 = new Range {From = 5' To = 10' PriceInCents = DiscountMockRange2PriceInCents};
Magic Number,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateDiscountMock,The following statement contains a magic number: var range2 = new Range {From = 5' To = 10' PriceInCents = DiscountMockRange2PriceInCents};
Magic Number,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateDiscountMock,The following statement contains a magic number: var range3 = new Range {From = 10' To = 15' PriceInCents = DiscountMockRange3PriceInCents};
Magic Number,uWebshop.Test.Mocks,MockConstructors,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Mocks\MockConstructors.cs,CreateDiscountMock,The following statement contains a magic number: var range3 = new Range {From = 10' To = 15' PriceInCents = DiscountMockRange3PriceInCents};
Magic Number,uWebshop.Test.Services.OrderNumberService,ThreadSafetyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderNumberService\ThreadSafetyTests.cs,TestAgainstRaceHazard,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,uWebshop.Test.Services.OrderNumberService,ThreadSafetyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderNumberService\ThreadSafetyTests.cs,TestAgainstRaceHazard,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,uWebshop.Test.Services.OrderNumberService,ThreadSafetyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderNumberService\ThreadSafetyTests.cs,IntegrationTest,The following statement contains a magic number: order.DatabaseId = 1234;
Magic Number,uWebshop.Test.Services.OrderNumberService,ThreadSafetyTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderNumberService\ThreadSafetyTests.cs,IntegrationTest,The following statement contains a magic number: mock.Verify(m => m.AssignNewOrderNumberToOrder(1234' StoreHelper.CurrentStoreAlias' It.IsAny<int>()));
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: var productDiscount = DefaultFactoriesAndSharedFunctionality.CreateProductDiscountPercentage(36);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: productDiscount.RangesString = new List<Range> {new Range {From = 1' To = 20' PriceInCents = 10000}}.ToRangesString();
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: productDiscount.RangesString = new List<Range> {new Range {From = 1' To = 20' PriceInCents = 10000}}.ToRangesString();
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5000' 5' productDiscount);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(5000' 5' productDiscount);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: Assert.AreEqual(10000' productDiscount.RangedDiscountValue(15));
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: Assert.AreEqual(10000' productDiscount.RangedDiscountValue(15));
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: Assert.AreEqual(100' product.DiscountPercentage);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: IOC.ProductService.SetupNewMock().Setup(m => m.GetById(1234' It.IsAny<ILocalization>()' It.IsAny<bool>())).Returns(new Product { Id = 1234' UseVariantStock = true });
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,TestAddOrUpdateOrderLine,The following statement contains a magic number: IOC.ProductService.SetupNewMock().Setup(m => m.GetById(1234' It.IsAny<ILocalization>()' It.IsAny<bool>())).Returns(new Product { Id = 1234' UseVariantStock = true });
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: var variant = DefaultFactoriesAndSharedFunctionality.CreateProductVariantInfo(10);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: variant.Id = 1234;
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2);
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: order.OrderLines.Single().OrderLineId = 2345;
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: orderUpdatingService.AddOrUpdateOrderLine(order' 2345' 0' "update"' 5' new List<int>());
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: orderUpdatingService.AddOrUpdateOrderLine(order' 2345' 0' "update"' 5' new List<int>());
Magic Number,uWebshop.Test.Services.OrderUpdatingsServiceTests,AddOrUpdateOrderlineTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\OrderUpdatingsServiceTests\AddOrUpdateOrderlineTests.cs,UpdatingOrderlineItemCountWithoutVariantInformation_ShouldDeleteVariants,The following statement contains a magic number: Assert.AreEqual(5' order.OrderLines.Single().ProductInfo.ItemCount);
Magic Number,uWebshop.Test.Services,PaymentProviderServiceTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Services\PaymentProviderServiceTests.cs,LoadData_ShouldCallReloadDataOnRepository,The following statement contains a magic number: var paymentProvider = new PaymentProvider(1234);
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateProductInfo,The following statement contains a magic number: return CreateProductInfo(productPriceInCents' itemCount' 19' discount);
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithPercentage,The following statement contains a magic number: return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1234' DiscountType = DiscountType.Percentage' DiscountValue = percentage * 100' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' };
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithPercentage,The following statement contains a magic number: return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1234' DiscountType = DiscountType.Percentage' DiscountValue = percentage * 100' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' };
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithAmount,The following statement contains a magic number: return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1235' DiscountType = DiscountType.Amount' DiscountValue = amountInCents' CouponCode = ""' NumberOfItemsCondition = setSize' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' };
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithFreeShipping,The following statement contains a magic number: return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1236' DiscountType = DiscountType.FreeShipping' CouponCode = ""' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' NumberOfItemsCondition = 0' DiscountValue = 0' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' };
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateDefaultOrderDiscountWithNewPrice,The following statement contains a magic number: return new OrderDiscount(StoreHelper.CurrentLocalization) { OriginalId = 1237' DiscountType = DiscountType.NewPrice' DiscountValue = amountInCents' CouponCode = ""' Condition = orderCondition' RequiredItemIds = new List<int> { }' MemberGroups = new List<string>()' MinimalOrderAmount = 0' NumberOfItemsCondition = setSize' AffectedOrderlines = new List<int>()' Localization = StoreHelper.CurrentLocalization' AffectedProductTags = Enumerable.Empty<string>()' };
Magic Number,uWebshop.Test,DefaultFactoriesAndSharedFunctionality,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\DefaultFactoriesAndSharedFunctionality.cs,CreateProductDiscountPercentage,The following statement contains a magic number: return new DiscountProduct {DiscountValue = percentage*100' DiscountType = DiscountType.Percentage};
Magic Number,uWebshop.Test.Stubs,StubStore,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubStore.cs,CreateDefaultStore,The following statement contains a magic number: return new StubStore { NodeTypeAlias = "uwbsStore"' Alias = "TestStore"' DefaultCountryCode = "NL"' Id = 1' GlobalVat = 19'   				CanonicalStoreURL = "http://my.uwebshop.com/"' SortOrder = 1' Culture = "nl-NL"' CountryCode = "NL"' CurrencyCulture = "nl-NL"' UseStock = true'   				UseStoreSpecificStock = false'   				CurrencyCodes = new[] { "EUR"' "USD" }'   				Currencies = new[]  					{  						new Currency { ISOCurrencySymbol = "EUR"' Ratio = 1' CurrencySymbol = "€" }'   						new Currency { ISOCurrencySymbol = "USD"' Ratio = 1.1m' CurrencySymbol = "$" }  					}' };
Magic Number,uWebshop.Test.Stubs,StubStore,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Stubs\StubStore.cs,CreateDefaultStore,The following statement contains a magic number: return new StubStore { NodeTypeAlias = "uwbsStore"' Alias = "TestStore"' DefaultCountryCode = "NL"' Id = 1' GlobalVat = 19'   				CanonicalStoreURL = "http://my.uwebshop.com/"' SortOrder = 1' Culture = "nl-NL"' CountryCode = "NL"' CurrencyCulture = "nl-NL"' UseStock = true'   				UseStoreSpecificStock = false'   				CurrencyCodes = new[] { "EUR"' "USD" }'   				Currencies = new[]  					{  						new Currency { ISOCurrencySymbol = "EUR"' Ratio = 1' CurrencySymbol = "€" }'   						new Currency { ISOCurrencySymbol = "USD"' Ratio = 1.1m' CurrencySymbol = "$" }  					}' };
Magic Number,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,Speed,The following statement contains a magic number: i < 1000
Magic Number,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,Speed,The following statement contains a magic number: Console.WriteLine((DateTime.Now - startTime).TotalMilliseconds/1000);
Magic Number,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,SetupResolverAndSplitter,The following statement contains a magic number: _catalogUrlResolvingServiceMock.Setup(m => m.GetCategoryPathFromUrlName(categoryUrl)).Returns(new []{ new Category { Id = 123 }});
Magic Number,uWebshop.Test.Domain.Businesslogic.UwebshopUrlRewritingServiceTests,UwebshopUrlRewritingServiceIntegrationTests,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Businesslogic\UwebshopUrlRewritingServiceTests\UwebshopUrlRewritingServiceIntegrationTests.cs,SetupResolverAndSplitter,The following statement contains a magic number: _catalogUrlResolvingServiceMock.Setup(m => m.GetProductFromUrlName(categoryUrl' productName)).Returns(new Product {Id = 456});
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderData,PreservationOfDataFromOrderInfoToOrderDataTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderData\PreservationOfDataFromOrderInfoToOrderDataTest.cs,ConversionToOrderDataShouldPreserveValues,The following statement contains a magic number: var orderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 1));
Magic Number,uWebshop.Test.Domain.Domain_classes.OrderData,PreservationOfDataFromOrderInfoToOrderDataTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderData\PreservationOfDataFromOrderInfoToOrderDataTest.cs,ConversionToOrderDataShouldPreserveValues,The following statement contains a magic number: orderInfo.Discounts.Add(DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(10));
Magic Number,uWebshop.Test.AppliedDiscountsInformationTest,AppliedDiscountsInformationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AppliedDiscountsInformationTest.cs,OrderInfoWithApplicableDiscount_ShouldReturnInformationOnThatDiscount,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.AppliedDiscountsInformationTest,AppliedDiscountsInformationTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AppliedDiscountsInformationTest.cs,OrderInfoWithApplicableDiscount_ShouldReturnInformationOnThatDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(10);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineOneProductShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineOneProductShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineOneProductShouldGiveEqual,The following statement contains a magic number: Assert.AreEqual(19' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineTwoProductsShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineTwoProductsShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineTwoProductsShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,SingleLineTwoProductsShouldGiveEqual,The following statement contains a magic number: Assert.AreEqual(19' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsSameVatShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsSameVatShouldGiveEqual,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsSameVatShouldGiveEqual,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsSameVatShouldGiveEqual,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsSameVatShouldGiveEqual,The following statement contains a magic number: Assert.AreEqual(19' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(100000' 10' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesTwoProductsDifferentVatShouldGiveAverage,The following statement contains a magic number: Assert.AreEqual(12.5' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: Assert.AreEqual((2m*19 + 6)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: Assert.AreEqual((2m*19 + 6)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: Assert.AreEqual((2m*19 + 6)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverage,The following statement contains a magic number: Assert.AreEqual((2m*19 + 6)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 2' 19);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 0);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: Assert.AreEqual((2m*19)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: Assert.AreEqual((2m*19)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,AverageVatPercentageTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\AverageVatPercentageTest.cs,TwoLinesThreeProductsDifferentVatShouldGiveWeightedAverageWithVatExempt,The following statement contains a magic number: Assert.AreEqual((2m*19)/3' orderInfo.AverageOrderVatPercentage);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: orderInfo.ShippingProviderAmountInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: Assert.AreEqual(100' orderInfo.ShippingProviderAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: Assert.AreEqual(100' orderInfo.ShippingProviderCostsWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: Assert.AreEqual(94' orderInfo.ShippingProviderCostsWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedIncludingVat,The following statement contains a magic number: Assert.AreEqual(6' orderInfo.ShippingProviderVatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: orderInfo.ShippingProviderAmountInCents = 94;
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: Assert.AreEqual(94' orderInfo.ShippingProviderAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: Assert.AreEqual(100' orderInfo.ShippingProviderCostsWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: Assert.AreEqual(94' orderInfo.ShippingProviderCostsWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderVatTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ShippingProviderVatTest.cs,ThatVatRelatedPricesAreCorrectlyCalculatedExcludingVat,The following statement contains a magic number: Assert.AreEqual(6' orderInfo.ShippingProviderVatAmountInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithOneLine_ShouldGiveVatAmountOfProduct,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' numberOfItemsInOrderLine' vat);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: var productInfo1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' numberOfItemsInOrderLine' vat);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3500' numberOfItemsInOrderLine' vat);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: Assert.AreEqual(2250 * numberOfItemsInOrderLine' totalOrderDiscount);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: var expected = includingVat || vat < 1 ? 4500 : 4950;
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,OrderWithTwoLinesAndDiscount_ShouldGiveVatAmountOfProductMinusOrderDiscount,The following statement contains a magic number: var expected = includingVat || vat < 1 ? 4500 : 4950;
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: var productInfo1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1100' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: var productInfo1 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1100' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3850' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: var productInfo2 = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(3850' 1' 10);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentage(50);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual((1000 + 3500)' summedParts);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual((1000 + 3500)' summedParts);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual((1000 + 3500) / 2' summedParts);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual((1000 + 3500) / 2' summedParts);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual((1000 + 3500) / 2' summedParts);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(2250' orderInfo.DiscountAmountWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(4950' orderInfo.OrderLines.Sum(orderline => orderline.AmountInCents));
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(50 + 175' orderInfo.TotalVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(50 + 175' orderInfo.TotalVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(2475' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(2250' orderInfo.SubtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(2250 + 225' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(2250 + 225' orderInfo.GrandtotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(50 + 175' orderInfo.TotalVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,VatTotalTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\VatTotalTest.cs,MultipleAssertsIncludingVat,The following statement contains a magic number: Assert.AreEqual(50 + 175' orderInfo.TotalVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: product.Ranges = new List<Range> {new Range {From = 3' PriceInCents = 900' To = 999999999}};
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: product.Ranges = new List<Range> {new Range {From = 3' PriceInCents = 900' To = 999999999}};
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: product.Ranges = new List<Range> {new Range {From = 3' PriceInCents = 900' To = 999999999}};
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: Assert.AreEqual(1000' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: product.ItemCount = 3;
Magic Number,uWebshop.Test.Domain.Domain_classes,ProductRangePriceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductTests\ProductRangePriceTest.cs,CachingShouldHaveNoEffectOnRangeCalculation,The following statement contains a magic number: Assert.AreEqual(900' product.PriceInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,ShippingProviderShouldNotBeApplicableWhenEndRangeEqualsOrderlinesAmount_WhenIncludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,ShippingProviderShouldNotBeApplicableWhenEndRangeEqualsOrderlinesAmount_WhenIncludingVat,The following statement contains a magic number: var provider = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(0' 1000' ShippingRangeType.OrderAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,ShippingProviderShouldNotBeApplicableWhenEndRangeEqualsOrderlinesAmount_WhenExcludingVat,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,ShippingProviderShouldNotBeApplicableWhenEndRangeEqualsOrderlinesAmount_WhenExcludingVat,The following statement contains a magic number: var provider = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(0' 1000' ShippingRangeType.OrderAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(2650' 1);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The following statement contains a magic number: var providerFee = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(1' 6000' ShippingRangeType.OrderAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The following statement contains a magic number: var providerGratis = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(6000' 99900' ShippingRangeType.OrderAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes,ShippingProviderRangesApplicabilityTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProvider\RangesApplicabilityTest.cs,RecreateBugReport20121025,The following statement contains a magic number: var providerGratis = DefaultFactoriesAndSharedFunctionality.CreateShippingProvider(6000' 99900' ShippingRangeType.OrderAmount);
Magic Number,uWebshop.Test.Domain.Domain_classes.ShippingProviderMethodTests,PriceCalculationServiceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProviderMethodTests\PriceCalculationServiceTests.cs,CallingPriceInCentsOnMethodWithCalculationService_ShouldReturnValueFromCalculationService,The following statement contains a magic number: service.Implementation = method => { method.PriceInCents = 123; };
Magic Number,uWebshop.Test.Domain.Domain_classes.ShippingProviderMethodTests,PriceCalculationServiceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProviderMethodTests\PriceCalculationServiceTests.cs,CallingPriceInCentsOnMethodWithCalculationService_ShouldReturnValueFromCalculationService,The following statement contains a magic number: Assert.AreEqual(123' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.ShippingProviderMethodTests,PriceCalculationServiceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProviderMethodTests\PriceCalculationServiceTests.cs,CallingPriceInCentsOnMethodWithoutCalculationService_ShouldReturnPriceInCents,The following statement contains a magic number: _shippingProviderMethod.PriceInCents = 234;
Magic Number,uWebshop.Test.Domain.Domain_classes.ShippingProviderMethodTests,PriceCalculationServiceTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ShippingProviderMethodTests\PriceCalculationServiceTests.cs,CallingPriceInCentsOnMethodWithoutCalculationService_ShouldReturnPriceInCents,The following statement contains a magic number: Assert.AreEqual(234' actual);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The following statement contains a magic number: productInfo.OriginalPriceInCents = 1000;
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithPercentageList(50' DiscountOrderCondition.PerSetOfXItems' setSize);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The following statement contains a magic number: Assert.AreEqual(expectedNumberOfDiscountedItems*500 + (itemCount - expectedNumberOfDiscountedItems)*1000' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsPercentageDiscount,The following statement contains a magic number: Assert.AreEqual(expectedNumberOfDiscountedItems*500 + (itemCount - expectedNumberOfDiscountedItems)*1000' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsFixedDiscount,The following statement contains a magic number: var productInfo = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' itemCount);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsFixedDiscount,The following statement contains a magic number: var discount = DefaultFactoriesAndSharedFunctionality.CreateDefaultOrderDiscountWithAmount(50' DiscountOrderCondition.PerSetOfXItems' setSize);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsFixedDiscount,The following statement contains a magic number: Assert.AreEqual(itemCount*1000 - expectedNumberOfDiscounts*50' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.Discounts,PerSetOfXItemsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderDiscounts\PerSetOfXItemsTest.cs,ThatPercentDiscountIsAppliedToCorrectNumberOfItemsFixedDiscount,The following statement contains a magic number: Assert.AreEqual(itemCount*1000 - expectedNumberOfDiscounts*50' orderInfo.OrderTotalInCents);
Magic Number,uWebshop.Domain.Domain_classes.OrderInfo,ConversionWithDTOsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ConversionWithDTOsTest.cs,OrderInfoToDTOAndBackShouldPreserveValues,The following statement contains a magic number: var originalOrderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 2));
Magic Number,uWebshop.Domain.Domain_classes.OrderInfo,ConversionWithDTOsTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\OrderInfoTests\ConversionWithDTOsTest.cs,OrderInfoToDTOAndBackShouldPreserveValues,The following statement contains a magic number: var originalOrderInfo = DefaultFactoriesAndSharedFunctionality.CreateOrderInfo(DefaultFactoriesAndSharedFunctionality.CreateProductInfo(995' 2));
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPriceInclVat,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPriceInclVat,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPriceInclVat,The following statement contains a magic number: variantinfo.PriceInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPriceInclVat,The following statement contains a magic number: Assert.AreEqual(1100' product.PriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPriceInclVat,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPriceInclVat,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 19' null' _orderInfoMockIncludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPriceInclVat,The following statement contains a magic number: variantinfo.PriceInCents = -100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPriceInclVat,The following statement contains a magic number: Assert.AreEqual(900' product.PriceWithVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPrice,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPrice,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPrice,The following statement contains a magic number: variantinfo.PriceInCents = 100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsAddedToPrice,The following statement contains a magic number: Assert.AreEqual(1100' product.PriceWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPrice,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPrice,The following statement contains a magic number: var product = DefaultFactoriesAndSharedFunctionality.CreateProductInfo(1000' 1' 6' null' _orderInfoMockExcludingVAT.Object);
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPrice,The following statement contains a magic number: variantinfo.PriceInCents = -100;
Magic Number,uWebshop.Test.Domain.Domain_classes.ProductVariantTest,VariantAddedValueTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Domain classes\ProductVariant\VariantAddedValueTest.cs,ThatCorrectAmountIsSubractedFromPrice,The following statement contains a magic number: Assert.AreEqual(900' product.PriceWithoutVatInCents);
Magic Number,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithProductId_ShouldCallUpdateLineOnceWithThatProductId,The following statement contains a magic number: _mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' 7' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1));
Magic Number,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithOrderLineId_ShouldCallUpdateLineOnceWithThatOrderLineId,The following statement contains a magic number: _mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' 2' It.IsAny<int>()' It.IsAny<string>()' It.IsAny<int>()' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1));
Magic Number,uWebshop.Test.Domain.Helper_classes.AddProductTest,AddProductTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\BasketRequestHandler\AddProductTest.cs,RequestWithQuantity_ShouldCallUpdateLineOnceWithThatQuantity,The following statement contains a magic number: _mock.Verify(a => a.AddOrUpdateOrderLine(It.IsAny<OrderInfo>()' It.IsAny<int>()' It.IsAny<int>()' It.IsAny<string>()' 9' It.IsAny<IEnumerable<int>>()' It.IsAny<Dictionary<string' string>>())' Times.Exactly(1));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,CaclulatingBackAndForthShouldReturnSamePrice,The following statement contains a magic number: Assert.AreEqual(amount' VatCalculator.WithoutVat(VatCalculator.WithVat(amount' 19)' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,CaclulatingBackAndForthShouldReturnSamePrice,The following statement contains a magic number: Assert.AreEqual(amount' VatCalculator.WithoutVat(VatCalculator.WithVat(amount' 19)' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,CaclulatingBackAndForthShouldReturnSamePrice,The following statement contains a magic number: Console.WriteLine(VatCalculator.WithoutVat(amount' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,CaclulatingBackAndForthShouldReturnSamePrice,The following statement contains a magic number: Assert.AreEqual(amount' VatCalculator.WithVat(VatCalculator.WithoutVat(amount' 19)' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,CaclulatingBackAndForthShouldReturnSamePrice,The following statement contains a magic number: Assert.AreEqual(amount' VatCalculator.WithVat(VatCalculator.WithoutVat(amount' 19)' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(84' VatCalculator.WithoutVat(100' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(84' VatCalculator.WithoutVat(100' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(84' VatCalculator.WithoutVat(100' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(85' VatCalculator.WithoutVat(101' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(85' VatCalculator.WithoutVat(101' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVat,The following statement contains a magic number: Assert.AreEqual(85' VatCalculator.WithoutVat(101' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,VatAmountFromWithVat,The following statement contains a magic number: Assert.AreEqual(vatAmount' VatCalculator.VatAmountFromWithVat(amountWithVat' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,VatAmountFromWithoutVat,The following statement contains a magic number: Assert.AreEqual(vatAmount' VatCalculator.VatAmountFromWithoutVat(amountWithVat' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithVatFromWithoutVat,The following statement contains a magic number: Assert.AreEqual(amountWithVat' VatCalculator.WithVat(amountWithoutVat' 19));
Magic Number,uWebshop.Test.Domain.Helper_classes.VatCalculatorTest,VatCalculatorTest,D:\research\architectureSmells\repos\uWebshop_uWebshop-Releases\Tests\uWebshop.Test\Domain\Helper classes\VatCalculator\VatCalculatorTest.cs,WithoutVatFromWithVat,The following statement contains a magic number: Assert.AreEqual(amountWithoutVat' VatCalculator.WithoutVat(amountWithVat' 19));
