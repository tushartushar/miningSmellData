Implementation smell,Namespace,Class,File,Method,Description
Long Method,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The method has 181 lines of code.
Complex Method,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PopulateTreeViewWithAfd,Cyclomatic complexity of the method is 8
Complex Method,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,Cyclomatic complexity of the method is 41
Complex Method,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,Cyclomatic complexity of the method is 10
Complex Method,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,Cyclomatic complexity of the method is 33
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,PreproMeta,Cyclomatic complexity of the method is 18
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,VerificaLogicas,Cyclomatic complexity of the method is 21
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,Cyclomatic complexity of the method is 17
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,HazAlternativas,Cyclomatic complexity of the method is 13
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,Cyclomatic complexity of the method is 15
Complex Method,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,PolacaInv,Cyclomatic complexity of the method is 30
Long Parameter List,ERPolacaInversa.AFD,Afd,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\AFD\AFD.cs,CreaAristas,The method has 6 parameters.
Long Parameter List,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The method has 5 parameters.
Long Statement,ERPolacaInversa.AFD,Afd,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\AFD\AFD.cs,CreaAristas,The length of the statement  "	foreach (var nodo in sigPos.Select (destino => GetNodoFromArray (nodos.Union (newEst)' destino)).Where (nodo => nodo != null)) { " is 128.
Long Statement,ERPolacaInversa.Arbol,Arbol,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Arbol\Arbol.cs,EsNuleable,The length of the statement  "	if (EsUnario (nodo.Id) && (nodo.Id != '+') || (nodo.Id == '.' && ((nodo.Izquierdo.EsAnulable && nodo.Derecho.EsAnulable))) || (nodo.Id == '|' && (nodo.Izquierdo.EsAnulable || nodo.Derecho.EsAnulable))) { " is 203.
Long Statement,ERPolacaInversa.Arbol,Arbol,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Arbol\Arbol.cs,EsMetacaracter,The length of the statement  "	return dato == '*' || dato == '+' || dato == '?' || dato == '.' || dato == ')' || dato == '(' || dato == '[' || dato == ']' || dato == '-' || dato == '|' || dato == '\\' || dato == '#'; " is 185.
Long Statement,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PopulateTreeViewWithAfd,The length of the statement  "				this.tVAceptaciones.Nodes [1].Nodes [inc].Nodes.Add ("con " + listafd.Aristas [i].Id.ToString () + " hacia " + listafd.Aristas [i].Nodo.Id.ToString ()); " is 152.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30); " is 143.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30); " is 144.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5); " is 142.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5); " is 143.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30); " is 144.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y); " is 139.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15); " is 143.
Long Statement,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The length of the statement  "				g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15); " is 144.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The length of the statement  "		else if (i == 1 && (atras == "(" || atras == "[") && (caracter == "*" || caracter == "+" || caracter == "|" || caracter == "-")) { " is 130.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The length of the statement  "		else if ((caracter == "|" && atras == "|") || (caracter == "." && atras == "\\" && !bandprepro) || (caracter == "-" && atras != "\\" && !bandfunc) || (caracter == ")" && atras == "|") || (atras == "|" && (caracter == "*" || caracter == "+" || caracter == "?"))) { " is 263.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The length of the statement  "		else if (!bandfunc && i > 0 && atras != "(" && atras != "\\" && atras != "[" && atras != "|" && atras != "-" && (Escaracterval (caracter) || caracter == "\\" || caracter == "[" || caracter == "(")) { " is 199.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,HazAlternativas,The length of the statement  "		else if ((pos == "\\") && (ubicacion == (cadena.Length) - 1))//Para verificar que el ultimo dato no sea un dato de  estos/  " is 122.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,HazAlternativas,The length of the statement  "		else if (bandmeta && (!contienecaracter (pos)))//Si despues de un / no le sigue un metacaracter entonces es mala la expresion regular " is 133.
Long Statement,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,HazAlternativas,The length of the statement  "		else if ((sabermeta + 1 == i) && bandmeta && (i != tam - 1) && (pos == "*" || pos == "+" || pos == "?" || pos == "." || pos == ")" || pos == "(" || pos == "[" || pos == "]" || pos == "-" || pos == "|" || pos == "\\" || pos == "#")) { " is 233.
Complex Conditional,ERPolacaInversa.Arbol,Arbol,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Arbol\Arbol.cs,EsNuleable,The conditional expression  "EsUnario (nodo.Id) && (nodo.Id != '+') || (nodo.Id == '.' && ((nodo.Izquierdo.EsAnulable && nodo.Derecho.EsAnulable))) || (nodo.Id == '|' && (nodo.Izquierdo.EsAnulable || nodo.Derecho.EsAnulable))"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,VerificaLogicas,The conditional expression  "bandabre && (dato == "[" || dato == "]" || dato == "(" || dato == ")") && (incremento == detuviste + 1)"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,VerificaLogicas,The conditional expression  "ini == "+" || ini == "*" || ini == "?" || ini == "|" || ini == "-" || ini == ")" || ini == "]""  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,VerificaLogicas,The conditional expression  "cadena == "()" || cadena == "[]" || cadena == "(" || cadena == ")" || cadena == "[" || cadena == "]""  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The conditional expression  "i > 0 && (caracter == "[" && atras != "|" && atras != "(" && atras != "[" && atras != "-" && atras != "\\")"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The conditional expression  "i == 1 && (atras == "(" || atras == "[") && (caracter == "*" || caracter == "+" || caracter == "|" || caracter == "-")"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The conditional expression  "(caracter == "|" && atras == "|") || (caracter == "." && atras == "\\" && !bandprepro) || (caracter == "-" && atras != "\\" && !bandfunc) || (caracter == ")" && atras == "|") || (atras == "|" && (caracter == "*" || caracter == "+" || caracter == "?"))"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,Concatenalternativa,The conditional expression  "!bandfunc && i > 0 && atras != "(" && atras != "\\" && atras != "[" && atras != "|" && atras != "-" && (Escaracterval (caracter) || caracter == "\\" || caracter == "[" || caracter == "(")"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,HazAlternativas,The conditional expression  "(sabermeta + 1 == i) && bandmeta && (i != tam - 1) && (pos == "*" || pos == "+" || pos == "?" || pos == "." || pos == ")" || pos == "(" || pos == "[" || pos == "]" || pos == "-" || pos == "|" || pos == "\\" || pos == "#")"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,PolacaInv,The conditional expression  "pila.Peek () == '*' || pila.Peek () == '+' || pila.Peek () == '?' || pila.Peek () == '.'"  is complex.
Complex Conditional,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,PolacaInv,The conditional expression  "pila.Peek () == '*' || pila.Peek () == '+' || pila.Peek () == '?' || pila.Peek () == '.' || pila.Peek () == '|'"  is complex.
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre == null) {  	cabeza.X = (pBArbol.Width / 2) + 350;  	cabeza.Y = 30;  	cabeza.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre == null) {  	cabeza.X = (pBArbol.Width / 2) + 350;  	cabeza.Y = 30;  	cabeza.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre == null) {  	cabeza.X = (pBArbol.Width / 2) + 350;  	cabeza.Y = 30;  	cabeza.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.X = (pBArbol.Width / 2) + 350;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.X = (pBArbol.Width / 2) + 350;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.Y = 30;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre != null) {  	if (cabeza.visitado != true) {  		cabeza.X = cabeza.Padre.X - 75;  		cabeza.Y = cabeza.Padre.Y + 50;  		cabeza.visitado = true;  	}  	if (cabeza.Id == '#')  		cabeza.X = cabeza.Padre.X + 75;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre != null) {  	if (cabeza.visitado != true) {  		cabeza.X = cabeza.Padre.X - 75;  		cabeza.Y = cabeza.Padre.Y + 50;  		cabeza.visitado = true;  	}  	if (cabeza.Id == '#')  		cabeza.X = cabeza.Padre.X + 75;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre != null) {  	if (cabeza.visitado != true) {  		cabeza.X = cabeza.Padre.X - 75;  		cabeza.Y = cabeza.Padre.Y + 50;  		cabeza.visitado = true;  	}  	if (cabeza.Id == '#')  		cabeza.X = cabeza.Padre.X + 75;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.visitado != true) {  	cabeza.X = cabeza.Padre.X - 75;  	cabeza.Y = cabeza.Padre.Y + 50;  	cabeza.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.visitado != true) {  	cabeza.X = cabeza.Padre.X - 75;  	cabeza.Y = cabeza.Padre.Y + 50;  	cabeza.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.X = cabeza.Padre.X - 75;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.Y = cabeza.Padre.Y + 50;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Id == '#')  	cabeza.X = cabeza.Padre.X + 75;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.X = cabeza.Padre.X + 75;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Derecho != null) {  	if (cabeza.Padre != null) {  		cabeza.Derecho.X = cabeza.X + 75;  		cabeza.Derecho.Y = cabeza.Y + 50;  		cabeza.Derecho.visitado = true;  	}  	PintaArbol (cabeza.Derecho' dib);  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Derecho != null) {  	if (cabeza.Padre != null) {  		cabeza.Derecho.X = cabeza.X + 75;  		cabeza.Derecho.Y = cabeza.Y + 50;  		cabeza.Derecho.visitado = true;  	}  	PintaArbol (cabeza.Derecho' dib);  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre != null) {  	cabeza.Derecho.X = cabeza.X + 75;  	cabeza.Derecho.Y = cabeza.Y + 50;  	cabeza.Derecho.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: if (cabeza.Padre != null) {  	cabeza.Derecho.X = cabeza.X + 75;  	cabeza.Derecho.Y = cabeza.Y + 50;  	cabeza.Derecho.visitado = true;  }  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.Derecho.X = cabeza.X + 75;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,PintaArbol,The following statement contains a magic number: cabeza.Derecho.Y = cabeza.Y + 50;  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: if (cabeza.Padre != null)  	dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: if (cabeza.Padre != null)  	dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: if (cabeza.Padre != null)  	dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: if (cabeza.Padre != null)  	dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawLine (lapiz' cabeza.X + 20' cabeza.Y + 20' cabeza.Padre.X + 20' cabeza.Padre.Y + 20);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' cabeza.X' cabeza.Y' 35' 35);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' cabeza.X' cabeza.Y' 35' 35);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.FillEllipse (relleno' cabeza.X' cabeza.Y' 34' 34);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.FillEllipse (relleno' cabeza.X' cabeza.Y' 34' 34);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawString (cabeza.EsAnulable.ToString ()' fuente2' coloranul' cabeza.X' cabeza.Y + 35);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawString (pripos' fuente2' colorprimpos' cabeza.X - 50' cabeza.Y + 10);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawString (pripos' fuente2' colorprimpos' cabeza.X - 50' cabeza.Y + 10);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawString (ultpos' fuente2' colorultipos' cabeza.X + 38' cabeza.Y + 10);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,dibuja,The following statement contains a magic number: dib.DrawString (ultpos' fuente2' colorultipos' cabeza.X + 38' cabeza.Y + 10);  
Magic Number,ERPolacaInversa,Form1,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\Form1.cs,MuestraSigPos,The following statement contains a magic number: this.dGVSigPos.DefaultCellStyle.Font = new Font ("Tahoma"' 11);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaNodosAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	ope = (double)((((teta * i) + teta) * (Math.PI)) / 180);  	opex = (Math.Cos (ope));  	opey = (Math.Sin (ope));  	xteta = (int)(xcen + ((longi) * (opex)));  	yteta = (int)(ycen - ((longi) * (opey)));  	AfdNodos [i].X = xteta;  	AfdNodos [i].Y = yteta;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaNodosAfd,The following statement contains a magic number: ope = (double)((((teta * i) + teta) * (Math.PI)) / 180);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int i = 0; i < AfdNodos.Count; i++) {  	for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  		//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  		tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  		tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  		//c hacia adelante y hacia arriba   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band1 = true;  			}  			if (band1) {  				if (letra1r == "")  					letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1r++;  				}  			}  			else {  				if (letra1 == "")  					letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr1++;  				}  			}  			tamafue1 = tam;  			tamafue1a = tam2;  		}  		//c hacia atras y hacia arriba  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band2 = true;  			}  			if (band2) {  				if (letra2r == "")  					letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2r++;  				}  			}  			else {  				if (letra2 == "")  					letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr2++;  				}  			}  			tamafue2 = tam;  			tamafue2a = tam2;  		}  		//   		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  				for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  					if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  						band3 = true;  			}  			if (band3) {  				if (letra3r == "")  					letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3r++;  				}  			}  			else {  				if (letra3 == "")  					letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr3++;  				}  			}  			tamafue3 = tam;  			tamafue3a = tam2;  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  			if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  				g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  			}  			else {  				if (letra4 == "")  					letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  				else {  					letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  					inletr4++;  				}  				tamafue4 = tam;  				tamafue4a = tam2;  			}  			//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		//Igualdades que casi no existen' posible omitir las en y  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  			g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  			if (letcurv == "")  				letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  			else  				letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			incurv++;  		}  		if (incurv != 0) {  			creaVuelta (AfdNodos [i]' g' 1);  			g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  		}  		g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  		g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  		g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  		g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  		if (band1)  			g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  		if (band2)  			g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  		if (band3)  			g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  		if (band4)  			g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  	}  	band1 = false;  	band2 = false;  	band3 = false;  	band4 = false;  	incurv = 0;  	inletr2 = 0;  	inletr1 = 0;  	inletr3 = 0;  	inletr4 = 0;  	letcurv = "";  	letra1 = "";  	letra2 = "";  	letra3 = "";  	letra4 = "";  	dibuja (AfdNodos [i]' g);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: for (int j = 0; j < AfdNodos [i].Aristas.Count; j++) {  	//HazFlechas(AfdNodos[i]' AfdNodos[i].Aristas[j].Nodo);  	tam = ((AfdNodos [i].X) + (AfdNodos [i].Aristas [j].Nodo.X));  	tam2 = ((AfdNodos [i].Y) + (AfdNodos [i].Aristas [j].Nodo.Y));  	//c hacia adelante y hacia arriba   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band1 = true;  		}  		if (band1) {  			if (letra1r == "")  				letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1r++;  			}  		}  		else {  			if (letra1 == "")  				letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr1++;  			}  		}  		tamafue1 = tam;  		tamafue1a = tam2;  	}  	//c hacia atras y hacia arriba  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band2 = true;  		}  		if (band2) {  			if (letra2r == "")  				letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2r++;  			}  		}  		else {  			if (letra2 == "")  				letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr2++;  			}  		}  		tamafue2 = tam;  		tamafue2a = tam2;  	}  	//   	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  			for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  				if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  					band3 = true;  		}  		if (band3) {  			if (letra3r == "")  				letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3r++;  			}  		}  		else {  			if (letra3 == "")  				letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr3++;  			}  		}  		tamafue3 = tam;  		tamafue3a = tam2;  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  		if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  			g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  		}  		else {  			if (letra4 == "")  				letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  			else {  				letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  				inletr4++;  			}  			tamafue4 = tam;  			tamafue4a = tam2;  		}  		//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	//Igualdades que casi no existen' posible omitir las en y  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  		g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	if (AfdNodos [i].Id.ToString () == AfdNodos [i].Aristas [j].Nodo.Id.ToString ()) {  		if (letcurv == "")  			letcurv = AfdNodos [i].Aristas [j].Id.ToString ();  		else  			letcurv = letcurv + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		incurv++;  	}  	if (incurv != 0) {  		creaVuelta (AfdNodos [i]' g' 1);  		g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  	}  	g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  	g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  	g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  	g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  	if (band1)  		g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  	if (band2)  		g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  	if (band3)  		g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  	if (band4)  		g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band1 = true;  	}  	if (band1) {  		if (letra1r == "")  			letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1r++;  		}  	}  	else {  		if (letra1 == "")  			letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1++;  		}  	}  	tamafue1 = tam;  	tamafue1a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band1 = true;  	}  	if (band1) {  		if (letra1r == "")  			letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1r++;  		}  	}  	else {  		if (letra1 == "")  			letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1++;  		}  	}  	tamafue1 = tam;  	tamafue1a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band1 = true;  	}  	if (band1) {  		if (letra1r == "")  			letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1r++;  		}  	}  	else {  		if (letra1 == "")  			letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1++;  		}  	}  	tamafue1 = tam;  	tamafue1a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band1 = true;  	}  	if (band1) {  		if (letra1r == "")  			letra1r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1r = letra1r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1r++;  		}  	}  	else {  		if (letra1 == "")  			letra1 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra1 = letra1 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr1++;  		}  	}  	tamafue1 = tam;  	tamafue1a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band2 = true;  	}  	if (band2) {  		if (letra2r == "")  			letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2r++;  		}  	}  	else {  		if (letra2 == "")  			letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2++;  		}  	}  	tamafue2 = tam;  	tamafue2a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band2 = true;  	}  	if (band2) {  		if (letra2r == "")  			letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2r++;  		}  	}  	else {  		if (letra2 == "")  			letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2++;  		}  	}  	tamafue2 = tam;  	tamafue2a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band2 = true;  	}  	if (band2) {  		if (letra2r == "")  			letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2r++;  		}  	}  	else {  		if (letra2 == "")  			letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2++;  		}  	}  	tamafue2 = tam;  	tamafue2a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band2 = true;  	}  	if (band2) {  		if (letra2r == "")  			letra2r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2r = letra2r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2r++;  		}  	}  	else {  		if (letra2 == "")  			letra2 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra2 = letra2 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr2++;  		}  	}  	tamafue2 = tam;  	tamafue2a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band3 = true;  	}  	if (band3) {  		if (letra3r == "")  			letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3r++;  		}  	}  	else {  		if (letra3 == "")  			letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3++;  		}  	}  	tamafue3 = tam;  	tamafue3a = tam2;  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band3 = true;  	}  	if (band3) {  		if (letra3r == "")  			letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3r++;  		}  	}  	else {  		if (letra3 == "")  			letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3++;  		}  	}  	tamafue3 = tam;  	tamafue3a = tam2;  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band3 = true;  	}  	if (band3) {  		if (letra3r == "")  			letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3r++;  		}  	}  	else {  		if (letra3 == "")  			letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3++;  		}  	}  	tamafue3 = tam;  	tamafue3a = tam2;  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].Id > AfdNodos [i].Aristas [j].Nodo.Id) {  		for (int m = 0; m < AfdNodos [i].Aristas [j].Nodo.Aristas.Count; m++)  			if (AfdNodos [i].Aristas [j].Nodo.Aristas [m].Nodo.Id == AfdNodos [i].Id)  				band3 = true;  	}  	if (band3) {  		if (letra3r == "")  			letra3r = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3r = letra3r + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3r++;  		}  	}  	else {  		if (letra3 == "")  			letra3 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra3 = letra3 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr3++;  		}  	}  	tamafue3 = tam;  	tamafue3a = tam2;  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 5' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  	if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  		g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  	}  	else {  		if (letra4 == "")  			letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  		else {  			letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  			inletr4++;  		}  		tamafue4 = tam;  		tamafue4a = tam2;  	}  	//g.DrawString(AfdNodos[i].Aristas[j].Id.ToString()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 30' AfdNodos [i].Aristas [j].Nodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  else {  	if (letra4 == "")  		letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  	else {  		letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		inletr4++;  	}  	tamafue4 = tam;  	tamafue4a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  else {  	if (letra4 == "")  		letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  	else {  		letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		inletr4++;  	}  	tamafue4 = tam;  	tamafue4a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X + 1) {  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  else {  	if (letra4 == "")  		letra4 = AfdNodos [i].Aristas [j].Id.ToString ();  	else {  		letra4 = letra4 + "'" + AfdNodos [i].Aristas [j].Id.ToString ();  		inletr4++;  	}  	tamafue4 = tam;  	tamafue4a = tam2;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y > AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X == AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y < AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 15' AfdNodos [i].Aristas [j].Nodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X < AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X - 5' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (AfdNodos [i].X > AfdNodos [i].Aristas [j].Nodo.X && AfdNodos [i].Y == AfdNodos [i].Aristas [j].Nodo.Y) {  	g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  	g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawLine (_plumaFlecha' AfdNodos [i].X + 20' AfdNodos [i].Y + 20' AfdNodos [i].Aristas [j].Nodo.X + 35' AfdNodos [i].Aristas [j].Nodo.Y + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (AfdNodos [i].Aristas [j].Id.ToString ()' fuente2' colorprimpos' (int)(tam / 2)' (int)(tam2 / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (incurv != 0) {  	creaVuelta (AfdNodos [i]' g' 1);  	g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (incurv != 0) {  	creaVuelta (AfdNodos [i]' g' 1);  	g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (incurv != 0) {  	creaVuelta (AfdNodos [i]' g' 1);  	g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letcurv' fuente2' coloranul' AfdNodos [i].X - (curva * 2) - 10' AfdNodos [i].Y - 23);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band1)  	g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band1)  	g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band1)  	g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra1r' fuente2' colorprimpos' (int)(tamafue1 / 2)' (int)(tamafue1a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band2)  	g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band2)  	g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band2)  	g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra2r' fuente2' colorprimpos' (int)(tamafue2 / 2)' (int)(tamafue2a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band3)  	g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band3)  	g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band3)  	g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra3r' fuente2' colorprimpos' (int)(tamafue3 / 2)' (int)(tamafue3a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band4)  	g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band4)  	g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: if (band4)  	g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: g.DrawString (letra4r' fuente2' colorprimpos' (int)(tamafue4 / 2)' (int)(tamafue4a / 2) + 40);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.DrawRectangle (pincelbl' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.DrawRectangle (pincelbl' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.DrawRectangle (pincelbl' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.DrawRectangle (pincelbl' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.FillRectangle (colorbl' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.FillRectangle (colorbl' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.FillRectangle (colorbl' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaAristasAfd,The following statement contains a magic number: _graphics.FillRectangle (colorbl' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,creaVuelta,The following statement contains a magic number: if (op == 2)  	g.DrawCurve (_plumaFlechaR' arreglo);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Inicio) {  	dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  	dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Inicio) {  	dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  	dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Inicio) {  	dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  	dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Inicio) {  	dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  	dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Inicio) {  	dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  	dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawString (afdNodo.Type.ToString ()' fuente' coloranul' afdNodo.X - 20' afdNodo.Y - 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawLine (_plumaFlecha' afdNodo.X + 15' afdNodo.Y - 30' afdNodo.X + 15' afdNodo.Y);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X' afdNodo.Y' 36' 36);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X' afdNodo.Y' 36' 36);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.FillEllipse (relleno' afdNodo.X' afdNodo.Y' 35' 35);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.FillEllipse (relleno' afdNodo.X' afdNodo.Y' 35' 35);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawString (afdNodo.Id.ToString ()' fuente' coloranul' afdNodo.X + 5' afdNodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawString (afdNodo.Id.ToString ()' fuente' coloranul' afdNodo.X + 5' afdNodo.Y + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Fin)  	dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Fin)  	dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Fin)  	dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: if (afdNodo.Type == NodoType.Fin)  	dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dibuja,The following statement contains a magic number: dib.DrawEllipse (pincel' afdNodo.X + 2' afdNodo.Y + 2' 31' 31);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 5' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 30' nfy + 5);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && nix > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && nix > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && nix > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && nix > nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && niy < nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 15' nfy + 30);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix < nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx - 5' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix > nfx && niy == nfy)  	_graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawLine (_plumaFlechaR' nix + 20' niy + 20' nfx + 35' nfy + 15);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: if (nix == nfx && niy == nfy)  	creaVuelta (nodoIni' _graphics' 2);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: creaVuelta (nodoIni' _graphics' 2);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawRectangle (pincel' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawRectangle (pincel' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawRectangle (pincel' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawRectangle (pincel' 20' 20' 51' 51);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.FillRectangle (colorultipos' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.FillRectangle (colorultipos' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.FillRectangle (colorultipos' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.FillRectangle (colorultipos' 20' 20' 50' 50);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawString (arista.Id.ToString ()' fuente3' coloranul' 25' 25);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,PintaArista,The following statement contains a magic number: _graphics.DrawString (arista.Id.ToString ()' fuente3' coloranul' 25' 25);  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 300;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 300;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 400;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 400;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 500;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 600;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 700;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 800;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 900;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 900;  
Magic Number,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following statement contains a magic number: seg = 1000;  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if ((ubicacion == 2) || (ubicacion == tamcad - 1)) {  	cadaux = "ERROR";  	return true;  }  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion == 3) {  	for (int j = 0; j <= 1; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4) {  	for (int j = 0; j < 2; j++)  		quitaultimo (ref cadaux);  }  else if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: for (int j = 0; j < 2; j++)  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: if (ubicacion >= 4 && Cuantosdeestetiene (cadena' pos) >= 2) {  	for (int j = 0; j < 3; j++)  		quitaultimo (ref cadaux);  }  else  	quitaultimo (ref cadaux);  
Magic Number,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,GetValue,The following statement contains a magic number: for (int j = 0; j < 3; j++)  	quitaultimo (ref cadaux);  
Missing Default,ERPolacaInversa,FrmAFD,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\FrmAFD.cs,dameSeg,The following switch statement is missing a default case: switch (tiempo) {  case 0:  	seg = 300;  	break;  case 1:  	seg = 300;  	break;  case 2:  	seg = 400;  	break;  case 3:  	seg = 400;  	break;  case 4:  	seg = 500;  	break;  case 5:  	seg = 600;  	break;  case 6:  	seg = 700;  	break;  case 7:  	seg = 800;  	break;  case 8:  	seg = 900;  	break;  case 9:  	seg = 900;  	break;  case 10:  	seg = 1000;  	break;  }  
Missing Default,ERPolacaInversa,RegularExpression,C:\repos\eamoreno_AFDCompi\ERPolacaInversa\ERPI\RegularExpression.cs,VerificaLogicas,The following switch statement is missing a default case: switch (dato) {  case "[":  	corchabres++;  	break;  case "]":  	corchcierras++;  	break;  case "(":  	parbres++;  	break;  case ")":  	parcierras++;  	break;  }  
