Implementation smell,Namespace,Class,File,Method,Description
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportCanada,The length of the statement  "		var tempMinStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.TemperatureMinStationTable).ToArray (); " is 151.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportCanada,The length of the statement  "		var tempMaxStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.TemperatureMaxStationTable).ToArray (); " is 151.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportCanada,The length of the statement  "		var precipStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.PrecipitationStationTable).ToArray (); " is 149.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportTd3200,The length of the statement  "		var tempMinStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.TemperatureMinStationTable).ToArray (); " is 151.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportTd3200,The length of the statement  "		var tempMaxStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.TemperatureMaxStationTable).ToArray (); " is 151.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ImportTd3200,The length of the statement  "		var precipStations = connection.Query<GridStation> ("select Id' Number' GridPoint from " + GridStationDatabase.PrecipitationStationTable).ToArray (); " is 149.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,Export,The length of the statement  "	using (IDbConnection connection = new SqliteConnection (@"Data Source=DataSetExtension.sqlite;Version=3;DateTimeFormat=Ticks")) { " is 129.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ExportGridStations,The length of the statement  "	using (IDbConnection connection = new SqliteConnection (@"Data Source=DataSetExtension.sqlite;Version=3;DateTimeFormat=Ticks")) { " is 129.
Long Statement,DataSetExtension.ConsoleApp,Commands,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Commands.cs,ClearHistoricalCounts,The length of the statement  "	using (IDbConnection connection = new SqliteConnection (@"Data Source=DataSetExtension.sqlite;Version=3;DateTimeFormat=Ticks")) { " is 129.
Magic Number,DataSetExtension.ConsoleApp,Automation,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Automation.cs,Run,The following statement contains a magic number: for (int i = 1999; i < 2010; i++)//years being processed   {  	Console.WriteLine ("Processing " + i);  	Commands.ImportCanadaStations (Path.Combine (InputDirectory' "canada-stations.txt"));  	Commands.ImportStations (Path.Combine (InputDirectory' "COOP.TXT.2007may")' new DateTime (i' 1' 1));  	var previous = i - 1;  	Commands.ImportPrecipitationStations (Path.Combine (OutputDirectory' "prcpinfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMinStations (Path.Combine (OutputDirectory' "tmininfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMaxStations (Path.Combine (OutputDirectory' "tmaxinfo-" + previous + "-historical.txt"));  	if (i == 1999) {  		Commands.ClearHistoricalCounts ();  	}  	Commands.ImportTd3200 (Path.Combine (InputDirectory' "TimeSeries_" + i + ".txt"));  	Commands.ImportCanada (Path.Combine (InputDirectory' "canada.all")' i);  	Commands.CopyDatabase (BackupDirectory' i + ".sqlite");  	Commands.Export (OutputDirectory' i);  	Commands.ExportGridStations (OutputDirectory' i);  	Commands.CopyDatabase (BackupDirectory' i + "-exported.sqlite");  	Commands.DeleteDatabase ();  	//delete database to start fresh with next year  	Console.WriteLine (i + " complete.");  }  
Magic Number,DataSetExtension.ConsoleApp,Automation,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Automation.cs,Run,The following statement contains a magic number: for (int i = 1999; i < 2010; i++)//years being processed   {  	Console.WriteLine ("Processing " + i);  	Commands.ImportCanadaStations (Path.Combine (InputDirectory' "canada-stations.txt"));  	Commands.ImportStations (Path.Combine (InputDirectory' "COOP.TXT.2007may")' new DateTime (i' 1' 1));  	var previous = i - 1;  	Commands.ImportPrecipitationStations (Path.Combine (OutputDirectory' "prcpinfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMinStations (Path.Combine (OutputDirectory' "tmininfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMaxStations (Path.Combine (OutputDirectory' "tmaxinfo-" + previous + "-historical.txt"));  	if (i == 1999) {  		Commands.ClearHistoricalCounts ();  	}  	Commands.ImportTd3200 (Path.Combine (InputDirectory' "TimeSeries_" + i + ".txt"));  	Commands.ImportCanada (Path.Combine (InputDirectory' "canada.all")' i);  	Commands.CopyDatabase (BackupDirectory' i + ".sqlite");  	Commands.Export (OutputDirectory' i);  	Commands.ExportGridStations (OutputDirectory' i);  	Commands.CopyDatabase (BackupDirectory' i + "-exported.sqlite");  	Commands.DeleteDatabase ();  	//delete database to start fresh with next year  	Console.WriteLine (i + " complete.");  }  
Magic Number,DataSetExtension.ConsoleApp,Automation,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Automation.cs,Run,The following statement contains a magic number: for (int i = 1999; i < 2010; i++)//years being processed   {  	Console.WriteLine ("Processing " + i);  	Commands.ImportCanadaStations (Path.Combine (InputDirectory' "canada-stations.txt"));  	Commands.ImportStations (Path.Combine (InputDirectory' "COOP.TXT.2007may")' new DateTime (i' 1' 1));  	var previous = i - 1;  	Commands.ImportPrecipitationStations (Path.Combine (OutputDirectory' "prcpinfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMinStations (Path.Combine (OutputDirectory' "tmininfo-" + previous + "-historical.txt"));  	Commands.ImportTemperatureMaxStations (Path.Combine (OutputDirectory' "tmaxinfo-" + previous + "-historical.txt"));  	if (i == 1999) {  		Commands.ClearHistoricalCounts ();  	}  	Commands.ImportTd3200 (Path.Combine (InputDirectory' "TimeSeries_" + i + ".txt"));  	Commands.ImportCanada (Path.Combine (InputDirectory' "canada.all")' i);  	Commands.CopyDatabase (BackupDirectory' i + ".sqlite");  	Commands.Export (OutputDirectory' i);  	Commands.ExportGridStations (OutputDirectory' i);  	Commands.CopyDatabase (BackupDirectory' i + "-exported.sqlite");  	Commands.DeleteDatabase ();  	//delete database to start fresh with next year  	Console.WriteLine (i + " complete.");  }  
Magic Number,DataSetExtension.ConsoleApp,Automation,C:\repos\sethdeckard_LR-dataset-extension\DataSetExtension.ConsoleApp\Automation.cs,Run,The following statement contains a magic number: if (i == 1999) {  	Commands.ClearHistoricalCounts ();  }  
