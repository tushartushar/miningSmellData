Implementation smell,Namespace,Class,File,Method,Description
Long Method,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The method has 154 lines of code.
Complex Method,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,Cyclomatic complexity of the method is 17
Complex Method,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,Cyclomatic complexity of the method is 34
Complex Method,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,AutomaticDetection,Cyclomatic complexity of the method is 24
Complex Method,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,Cyclomatic complexity of the method is 15
Complex Method,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,Cyclomatic complexity of the method is 9
Complex Method,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,Cyclomatic complexity of the method is 42
Complex Method,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,Cyclomatic complexity of the method is 37
Long Parameter List,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The method has 5 parameters.
Long Statement,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The length of the statement  "	Label6.Text = "Output resolution : " + Convert.ToInt32 (autoParameters.Resolution.Width * dRatio) + "x" + Convert.ToInt32 (autoParameters.Resolution.Height * dRatio); " is 166.
Long Statement,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,ProcessFileLists,The length of the statement  "	MainForm.Log_WriteLine (iExcludeCount + " files excluded' " + argHandler.Count_NoMipmaps + " files without mipmaps. " + (argHandler.Count_ForceNormal + argHandler.Count_ForceNotNormal) + " files will skip normal detection." + argHandler.Count_NoResize + " files will not be resized."); " is 285.
Long Statement,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,ProcessFileLists,The length of the statement  "		MainForm.ReportProgress (Convert.ToInt32 ((iStep / lConvParms.Count) * 100)' "Processing " + Path.GetFileName (c.FilePath) + "' file " + iStep + "\\" + lConvParms.Count); " is 170.
Long Statement,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,ProcessFileLists,The length of the statement  "	MainForm.Log_WriteLine (String.Format ("Conversion done! {0} files processed in {1}ms."' lConvParms.Count' sw.Elapsed.TotalMilliseconds)); " is 138.
Long Statement,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,BackupFiles,The length of the statement  "		MainForm.ReportProgress (Convert.ToInt32 ((iStep / backupList.Count) * 100)' "Reverting " + Path.GetFileName (sBackupFile) + "' file " + iStep + "\\" + backupList.Count); " is 170.
Long Statement,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,OpenToolStripMenuItem1_Click,The length of the statement  "			if (MessageBox.Show ("This folder does not seems to be inside a GameData folder. Proceed anyway?"' "Invalid Directory?"' MessageBoxButtons.YesNo) == DialogResult.Yes) " is 166.
Long Statement,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,RevertFromBackupToolStripMenuItem_Click,The length of the statement  "	if (MessageBox.Show ("This option will revert all converted DDS to their original format in the selected folder' if a backup file is available. Continue?"' "Are you sure?"' MessageBoxButtons.YesNo) == DialogResult.Yes) { " is 220.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,Init,The length of the statement  "	//those are usual format in KSPs mods' but the program can't convert them properly. I'll have to find a way to convert those " is 124.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTextureName,The length of the statement  "	return normalFileNames.Any (name => fileName != null && CultureInfo.CurrentCulture.CompareInfo.IndexOf (fileName' name' CompareOptions.IgnoreCase) >= 0); " is 153.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The length of the statement  "	//the pattern we are looking for is actually "is blue channel always 0xFF?"' this function return true if it does' false otherwise " is 130.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	//test: to avoid memory leak' reset the device before every conversion... As this program can't compile on for x64 OSs' large texture hit memory lmit quite fast... " is 163.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	//there's a known bug with DirectX9 and his way to load TGA files' image buffer is kept in memory even when the texture is disposed. And' of course' .NET's GarbageCollector is not useful AT ALL here... " is 201.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	//normals. Since the AssumeNormalMap() function is able to determine if a file failed to load' this function should be called before anything else " is 146.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	if ((((iInfos.Width < cfg.MinRes_Resize_Width) | (iInfos.Height < cfg.MinRes_Resize_Height)) & (Math.Abs (dRatio - 1) > 0.0001f))) { " is 132.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "		texture = TextureLoader.FromFile (dev' convParams.FilePath' iCorWidth' iCorHeight' 1' Usage.None' Format.R8G8B8' Pool.SystemMemory' Filter.None' Filter.None' 0); " is 161.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "		//t = TextureLoader.FromFile(dev' convParams.FilePath' iCorWidth' iCorHeight' 1' Usage.None' form' Pool.SystemMemory' Filter.None' Filter.None' 0) " is 146.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "		texture = TextureLoader.FromFile (dev' convParams.FilePath' iCorWidth' iCorHeight' 1' Usage.None' Format.A8B8G8R8' Pool.SystemMemory' Filter.None' Filter.None' 0); " is 163.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "		MainForm.Log_WriteLine ("ERR : Unknown file format " + iInfos.Format + "' skipping conversion for " + convParams.FilePath); " is 123.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	MainForm.Log_WriteLine ("    Format : " + form + "' normalmap : " + bNormal + "' res: " + (iCorWidth * dRatio) + "x" + (iCorHeight * dRatio)); " is 142.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The length of the statement  "	texture = TextureLoader.FromStream (dev' gs' (int)(iCorWidth * dRatio)' (int)(iCorHeight * dRatio)' mipmapLevel' Usage.None' form' Pool.SystemMemory' Filter.Triangle | Filter.DitherDiffusion' Filter.Triangle | Filter.DitherDiffusion' 0); " is 237.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The length of the statement  "		MainForm.Log_WriteLine ("    Format : " + form + "' normalmap : " + bNormal + "' res: " + (mbmTemp.Width * dRatio) + "x" + (mbmTemp.Height * dRatio)); " is 150.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The length of the statement  "		if ((((mbmTemp.Width < cfg.MinRes_Resize_Width) | (mbmTemp.Height < cfg.MinRes_Resize_Height)) & (Math.Abs (dRatio - 1) > 0.0001f))) { " is 134.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The length of the statement  "		using (var t = TextureLoader.FromStream (dev' gs' (int)(mbmTemp.Width * dRatio)' (int)(mbmTemp.Height * dRatio)' mipmapLevel' Usage.None' form' Pool.SystemMemory' Filter.Triangle | Filter.Dither' Filter.Triangle | Filter.Dither' 0)) { " is 234.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The length of the statement  "	//since swizzling is only for normals' and those must be saved in dxt5 (or argb8)' might as well ensure the texture is in the correct format. " is 141.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The length of the statement  "		var tTemp = TextureLoader.FromStream (dev' gs' width' height' 1' Usage.None' Format.A8B8G8R8' Pool.SystemMemory' Filter.None' Filter.None' 0); " is 142.
Long Statement,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,MarkAsNormal,The length of the statement  "	//I could write a proper class to read DDS header and set all arguments properly' but this works just as well' and it's quite fast " is 130.
Magic Number,DDS4KSPcs,FolderProcessingParams,C:\repos\Telanor_DDS4KSP\FolderProcessingParams.cs,FolderProcessingParams,The following statement contains a magic number: MinRes_Resize_Height = 64;  
Magic Number,DDS4KSPcs,FolderProcessingParams,C:\repos\Telanor_DDS4KSP\FolderProcessingParams.cs,FolderProcessingParams,The following statement contains a magic number: MinRes_Resize_Width = 64;  
Magic Number,DDS4KSPcs,FolderProcessingParams,C:\repos\Telanor_DDS4KSP\FolderProcessingParams.cs,FolderProcessingParams,The following statement contains a magic number: MinRes_Process_Width = 8;  
Magic Number,DDS4KSPcs,FolderProcessingParams,C:\repos\Telanor_DDS4KSP\FolderProcessingParams.cs,FolderProcessingParams,The following statement contains a magic number: MinRes_Process_Height = 8;  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	//(assume CFG is already instantiated)  	//Format  	CFG.Compressed = RB_format_compressed.Checked;  	CFG.ProcessMBMs = CB_format_incMBM.Checked;  	CFG.ProcessTGAs = CB_format_incTGA.Checked;  	CFG.ProcessPNGs = CB_format_incPNG.Checked;  	CFG.FlipImages = CB_format_FLIPImages.Checked;  	//normals  	CFG.NormalsManagement = CB_normal_ConvSelect.SelectedIndex;  	//mipmaps  	CFG.GenerateMipmaps = CB_mipmap_Generate.Checked;  	//resize  	if (CB_resize_MinResolution.Checked) {  		CFG.MinRes_Resize_Width = Convert.ToInt32 (NUD_resize_MinWidth.Value);  		CFG.MinRes_Resize_Height = Convert.ToInt32 (NUD_resize_MinHeight.Value);  	}  	else {  		CFG.MinRes_Resize_Width = 1;  		CFG.MinRes_Resize_Height = 1;  	}  	switch (CB_resize_Ratio.SelectedIndex) {  	case 0:  		CFG.ResizeRatio = 1;  		break;  	case 1:  		CFG.ResizeRatio = 0.75;  		break;  	case 2:  		CFG.ResizeRatio = 0.5;  		break;  	case 3:  		CFG.ResizeRatio = 0.25;  		break;  	default:  		CFG.ResizeRatio = 1;  		break;  	}  	//misc  	CFG.MinRes_Process_Width = Convert.ToInt32 (NUD_misc_MinWidth.Value);  	CFG.MinRes_Process_Height = Convert.ToInt32 (NUD_misc_MinHeight.Value);  	CFG.DeleteFilesOnSuccess = RB_misc_DeleteFiles.Checked;  	CFG.BackupFile = RB_misc_KeepBackups.Checked;  	CFG.IgnoreExceptions = CB_misc_IgnoreExceptions.Checked;  	return DialogResult.OK;  }  else {  	return DialogResult.Cancel;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	//(assume CFG is already instantiated)  	//Format  	CFG.Compressed = RB_format_compressed.Checked;  	CFG.ProcessMBMs = CB_format_incMBM.Checked;  	CFG.ProcessTGAs = CB_format_incTGA.Checked;  	CFG.ProcessPNGs = CB_format_incPNG.Checked;  	CFG.FlipImages = CB_format_FLIPImages.Checked;  	//normals  	CFG.NormalsManagement = CB_normal_ConvSelect.SelectedIndex;  	//mipmaps  	CFG.GenerateMipmaps = CB_mipmap_Generate.Checked;  	//resize  	if (CB_resize_MinResolution.Checked) {  		CFG.MinRes_Resize_Width = Convert.ToInt32 (NUD_resize_MinWidth.Value);  		CFG.MinRes_Resize_Height = Convert.ToInt32 (NUD_resize_MinHeight.Value);  	}  	else {  		CFG.MinRes_Resize_Width = 1;  		CFG.MinRes_Resize_Height = 1;  	}  	switch (CB_resize_Ratio.SelectedIndex) {  	case 0:  		CFG.ResizeRatio = 1;  		break;  	case 1:  		CFG.ResizeRatio = 0.75;  		break;  	case 2:  		CFG.ResizeRatio = 0.5;  		break;  	case 3:  		CFG.ResizeRatio = 0.25;  		break;  	default:  		CFG.ResizeRatio = 1;  		break;  	}  	//misc  	CFG.MinRes_Process_Width = Convert.ToInt32 (NUD_misc_MinWidth.Value);  	CFG.MinRes_Process_Height = Convert.ToInt32 (NUD_misc_MinHeight.Value);  	CFG.DeleteFilesOnSuccess = RB_misc_DeleteFiles.Checked;  	CFG.BackupFile = RB_misc_KeepBackups.Checked;  	CFG.IgnoreExceptions = CB_misc_IgnoreExceptions.Checked;  	return DialogResult.OK;  }  else {  	return DialogResult.Cancel;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	//(assume CFG is already instantiated)  	//Format  	CFG.Compressed = RB_format_compressed.Checked;  	CFG.ProcessMBMs = CB_format_incMBM.Checked;  	CFG.ProcessTGAs = CB_format_incTGA.Checked;  	CFG.ProcessPNGs = CB_format_incPNG.Checked;  	CFG.FlipImages = CB_format_FLIPImages.Checked;  	//normals  	CFG.NormalsManagement = CB_normal_ConvSelect.SelectedIndex;  	//mipmaps  	CFG.GenerateMipmaps = CB_mipmap_Generate.Checked;  	//resize  	if (CB_resize_MinResolution.Checked) {  		CFG.MinRes_Resize_Width = Convert.ToInt32 (NUD_resize_MinWidth.Value);  		CFG.MinRes_Resize_Height = Convert.ToInt32 (NUD_resize_MinHeight.Value);  	}  	else {  		CFG.MinRes_Resize_Width = 1;  		CFG.MinRes_Resize_Height = 1;  	}  	switch (CB_resize_Ratio.SelectedIndex) {  	case 0:  		CFG.ResizeRatio = 1;  		break;  	case 1:  		CFG.ResizeRatio = 0.75;  		break;  	case 2:  		CFG.ResizeRatio = 0.5;  		break;  	case 3:  		CFG.ResizeRatio = 0.25;  		break;  	default:  		CFG.ResizeRatio = 1;  		break;  	}  	//misc  	CFG.MinRes_Process_Width = Convert.ToInt32 (NUD_misc_MinWidth.Value);  	CFG.MinRes_Process_Height = Convert.ToInt32 (NUD_misc_MinHeight.Value);  	CFG.DeleteFilesOnSuccess = RB_misc_DeleteFiles.Checked;  	CFG.BackupFile = RB_misc_KeepBackups.Checked;  	CFG.IgnoreExceptions = CB_misc_IgnoreExceptions.Checked;  	return DialogResult.OK;  }  else {  	return DialogResult.Cancel;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	//(assume CFG is already instantiated)  	//Format  	CFG.Compressed = RB_format_compressed.Checked;  	CFG.ProcessMBMs = CB_format_incMBM.Checked;  	CFG.ProcessTGAs = CB_format_incTGA.Checked;  	CFG.ProcessPNGs = CB_format_incPNG.Checked;  	CFG.FlipImages = CB_format_FLIPImages.Checked;  	//normals  	CFG.NormalsManagement = CB_normal_ConvSelect.SelectedIndex;  	//mipmaps  	CFG.GenerateMipmaps = CB_mipmap_Generate.Checked;  	//resize  	if (CB_resize_MinResolution.Checked) {  		CFG.MinRes_Resize_Width = Convert.ToInt32 (NUD_resize_MinWidth.Value);  		CFG.MinRes_Resize_Height = Convert.ToInt32 (NUD_resize_MinHeight.Value);  	}  	else {  		CFG.MinRes_Resize_Width = 1;  		CFG.MinRes_Resize_Height = 1;  	}  	switch (CB_resize_Ratio.SelectedIndex) {  	case 0:  		CFG.ResizeRatio = 1;  		break;  	case 1:  		CFG.ResizeRatio = 0.75;  		break;  	case 2:  		CFG.ResizeRatio = 0.5;  		break;  	case 3:  		CFG.ResizeRatio = 0.25;  		break;  	default:  		CFG.ResizeRatio = 1;  		break;  	}  	//misc  	CFG.MinRes_Process_Width = Convert.ToInt32 (NUD_misc_MinWidth.Value);  	CFG.MinRes_Process_Height = Convert.ToInt32 (NUD_misc_MinHeight.Value);  	CFG.DeleteFilesOnSuccess = RB_misc_DeleteFiles.Checked;  	CFG.BackupFile = RB_misc_KeepBackups.Checked;  	CFG.IgnoreExceptions = CB_misc_IgnoreExceptions.Checked;  	return DialogResult.OK;  }  else {  	return DialogResult.Cancel;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	//(assume CFG is already instantiated)  	//Format  	CFG.Compressed = RB_format_compressed.Checked;  	CFG.ProcessMBMs = CB_format_incMBM.Checked;  	CFG.ProcessTGAs = CB_format_incTGA.Checked;  	CFG.ProcessPNGs = CB_format_incPNG.Checked;  	CFG.FlipImages = CB_format_FLIPImages.Checked;  	//normals  	CFG.NormalsManagement = CB_normal_ConvSelect.SelectedIndex;  	//mipmaps  	CFG.GenerateMipmaps = CB_mipmap_Generate.Checked;  	//resize  	if (CB_resize_MinResolution.Checked) {  		CFG.MinRes_Resize_Width = Convert.ToInt32 (NUD_resize_MinWidth.Value);  		CFG.MinRes_Resize_Height = Convert.ToInt32 (NUD_resize_MinHeight.Value);  	}  	else {  		CFG.MinRes_Resize_Width = 1;  		CFG.MinRes_Resize_Height = 1;  	}  	switch (CB_resize_Ratio.SelectedIndex) {  	case 0:  		CFG.ResizeRatio = 1;  		break;  	case 1:  		CFG.ResizeRatio = 0.75;  		break;  	case 2:  		CFG.ResizeRatio = 0.5;  		break;  	case 3:  		CFG.ResizeRatio = 0.25;  		break;  	default:  		CFG.ResizeRatio = 1;  		break;  	}  	//misc  	CFG.MinRes_Process_Width = Convert.ToInt32 (NUD_misc_MinWidth.Value);  	CFG.MinRes_Process_Height = Convert.ToInt32 (NUD_misc_MinHeight.Value);  	CFG.DeleteFilesOnSuccess = RB_misc_DeleteFiles.Checked;  	CFG.BackupFile = RB_misc_KeepBackups.Checked;  	CFG.IgnoreExceptions = CB_misc_IgnoreExceptions.Checked;  	return DialogResult.OK;  }  else {  	return DialogResult.Cancel;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (CB_resize_Ratio.SelectedIndex) {  case 0:  	CFG.ResizeRatio = 1;  	break;  case 1:  	CFG.ResizeRatio = 0.75;  	break;  case 2:  	CFG.ResizeRatio = 0.5;  	break;  case 3:  	CFG.ResizeRatio = 0.25;  	break;  default:  	CFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (CB_resize_Ratio.SelectedIndex) {  case 0:  	CFG.ResizeRatio = 1;  	break;  case 1:  	CFG.ResizeRatio = 0.75;  	break;  case 2:  	CFG.ResizeRatio = 0.5;  	break;  case 3:  	CFG.ResizeRatio = 0.25;  	break;  default:  	CFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (CB_resize_Ratio.SelectedIndex) {  case 0:  	CFG.ResizeRatio = 1;  	break;  case 1:  	CFG.ResizeRatio = 0.75;  	break;  case 2:  	CFG.ResizeRatio = 0.5;  	break;  case 3:  	CFG.ResizeRatio = 0.25;  	break;  default:  	CFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (CB_resize_Ratio.SelectedIndex) {  case 0:  	CFG.ResizeRatio = 1;  	break;  case 1:  	CFG.ResizeRatio = 0.75;  	break;  case 2:  	CFG.ResizeRatio = 0.5;  	break;  case 3:  	CFG.ResizeRatio = 0.25;  	break;  default:  	CFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (CB_resize_Ratio.SelectedIndex) {  case 0:  	CFG.ResizeRatio = 1;  	break;  case 1:  	CFG.ResizeRatio = 0.75;  	break;  case 2:  	CFG.ResizeRatio = 0.5;  	break;  case 3:  	CFG.ResizeRatio = 0.25;  	break;  default:  	CFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: CFG.ResizeRatio = 0.75;  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: CFG.ResizeRatio = 0.5;  
Magic Number,DDS4KSPcs,FolderDialog,C:\repos\Telanor_DDS4KSP\FolderDialog.cs,CustomShowDialog,The following statement contains a magic number: CFG.ResizeRatio = 0.25;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (ShowDialog () == DialogResult.OK) {  	var imgCFG = new ImageManager.ConversionParameters (sFilePath);  	var folderCFG = new FolderProcessingParams ();  	if (CheckBox1.Checked) {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.Generate;  		folderCFG.GenerateMipmaps = true;  	}  	else {  		imgCFG.MipmapSetting = ImageManager.MipmapSetting.DontGenerate;  		folderCFG.GenerateMipmaps = false;  	}  	if (CheckBox2.Checked) {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  		folderCFG.NormalsManagement = 1;  	}  	else {  		imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  		folderCFG.NormalsManagement = 2;  	}  	switch ((Formats)ComboBox1.SelectedIndex) {  	case Formats.DXT1:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  		folderCFG.Compressed = true;  		break;  	case Formats.DXT5:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  		folderCFG.Compressed = true;  		break;  	case Formats.R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  		folderCFG.Compressed = false;  		break;  	case Formats.A8R8G8B8:  		imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  		folderCFG.Compressed = false;  		break;  	}  	imgCFG.ResizeSetting = ImageManager.ResizeSetting.AllowResize;  	switch (ComboBox2.SelectedIndex) {  	case 0:  		folderCFG.ResizeRatio = 1;  		break;  	case 1:  		folderCFG.ResizeRatio = 0.75;  		break;  	case 2:  		folderCFG.ResizeRatio = 0.5;  		break;  	case 3:  		folderCFG.ResizeRatio = 0.25;  		break;  	default:  		folderCFG.ResizeRatio = 1;  		break;  	}  	folderCFG.DeleteFilesOnSuccess = CheckBox3.Checked;  	folderCFG.BackupFile = false;  	if (imgCFG.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (imgCFG' folderCFG);  	else  		ImageManager.ConvertFileToDDS (imgCFG' folderCFG);  	return DialogResult.OK;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: if (CheckBox2.Checked) {  	imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNormal;  	folderCFG.NormalsManagement = 1;  }  else {  	imgCFG.NormalMapConversion = ImageManager.NormalMapConversion.ForceNotNormal;  	folderCFG.NormalsManagement = 2;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: folderCFG.NormalsManagement = 2;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	folderCFG.ResizeRatio = 1;  	break;  case 1:  	folderCFG.ResizeRatio = 0.75;  	break;  case 2:  	folderCFG.ResizeRatio = 0.5;  	break;  case 3:  	folderCFG.ResizeRatio = 0.25;  	break;  default:  	folderCFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	folderCFG.ResizeRatio = 1;  	break;  case 1:  	folderCFG.ResizeRatio = 0.75;  	break;  case 2:  	folderCFG.ResizeRatio = 0.5;  	break;  case 3:  	folderCFG.ResizeRatio = 0.25;  	break;  default:  	folderCFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	folderCFG.ResizeRatio = 1;  	break;  case 1:  	folderCFG.ResizeRatio = 0.75;  	break;  case 2:  	folderCFG.ResizeRatio = 0.5;  	break;  case 3:  	folderCFG.ResizeRatio = 0.25;  	break;  default:  	folderCFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	folderCFG.ResizeRatio = 1;  	break;  case 1:  	folderCFG.ResizeRatio = 0.75;  	break;  case 2:  	folderCFG.ResizeRatio = 0.5;  	break;  case 3:  	folderCFG.ResizeRatio = 0.25;  	break;  default:  	folderCFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	folderCFG.ResizeRatio = 1;  	break;  case 1:  	folderCFG.ResizeRatio = 0.75;  	break;  case 2:  	folderCFG.ResizeRatio = 0.5;  	break;  case 3:  	folderCFG.ResizeRatio = 0.25;  	break;  default:  	folderCFG.ResizeRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: folderCFG.ResizeRatio = 0.75;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: folderCFG.ResizeRatio = 0.5;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following statement contains a magic number: folderCFG.ResizeRatio = 0.25;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	dRatio = 1;  	break;  case 1:  	dRatio = 0.75;  	break;  case 2:  	dRatio = 0.5;  	break;  case 3:  	dRatio = 0.25;  	break;  default:  	dRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	dRatio = 1;  	break;  case 1:  	dRatio = 0.75;  	break;  case 2:  	dRatio = 0.5;  	break;  case 3:  	dRatio = 0.25;  	break;  default:  	dRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	dRatio = 1;  	break;  case 1:  	dRatio = 0.75;  	break;  case 2:  	dRatio = 0.5;  	break;  case 3:  	dRatio = 0.25;  	break;  default:  	dRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	dRatio = 1;  	break;  case 1:  	dRatio = 0.75;  	break;  case 2:  	dRatio = 0.5;  	break;  case 3:  	dRatio = 0.25;  	break;  default:  	dRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: switch (ComboBox2.SelectedIndex) {  case 0:  	dRatio = 1;  	break;  case 1:  	dRatio = 0.75;  	break;  case 2:  	dRatio = 0.5;  	break;  case 3:  	dRatio = 0.25;  	break;  default:  	dRatio = 1;  	break;  }  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: dRatio = 0.75;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: dRatio = 0.5;  
Magic Number,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,ComboBox2_SelectedIndexChanged,The following statement contains a magic number: dRatio = 0.25;  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,RefreshInfo,The following statement contains a magic number: if (updateForm) {  	var pathSplit = sFolderPath.Split ('\\');  	MainForm.DisplaySelectedFolder (pathSplit [pathSplit.Length - 2] + "\\" + pathSplit.Last ());  }  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,RefreshInfo,The following statement contains a magic number: MainForm.DisplaySelectedFolder (pathSplit [pathSplit.Length - 2] + "\\" + pathSplit.Last ());  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,ProcessFileLists,The following statement contains a magic number: foreach (var c in lConvParms) {  	if (c.FileType == ImageManager.FileType.MBM)  		ImageManager.ConvertMBMtoDDS (c' cfg);  	else  		ImageManager.ConvertFileToDDS (c' cfg);  	iStep += 1;  	MainForm.ReportProgress (Convert.ToInt32 ((iStep / lConvParms.Count) * 100)' "Processing " + Path.GetFileName (c.FilePath) + "' file " + iStep + "\\" + lConvParms.Count);  	MainForm.Log_WriteLine ("---");  	Application.DoEvents ();  }  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,ProcessFileLists,The following statement contains a magic number: MainForm.ReportProgress (Convert.ToInt32 ((iStep / lConvParms.Count) * 100)' "Processing " + Path.GetFileName (c.FilePath) + "' file " + iStep + "\\" + lConvParms.Count);  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,BackupFiles,The following statement contains a magic number: foreach (var s in backupList) {  	var sBackupFile = s.Replace (".ddsified"' "");  	var sDDSToDelete = Path.ChangeExtension (sBackupFile' "dds");  	if (File.Exists (sDDSToDelete))  		File.Delete (sDDSToDelete);  	if (File.Exists (sBackupFile)) {  		if (!dontAskAgain) {  			var dialog = new OverwriteFileDialog ();  			yesNo = (dialog.CustomShowDialog (sBackupFile' out dontAskAgain' ref deleteBackups) == DialogResult.Yes);  		}  		if (yesNo) {  			File.Delete (sBackupFile);  			File.Move (s' sBackupFile);  			MainForm.Log_WriteLine ("Reverting " + sDDSToDelete + " to " + sBackupFile);  		}  		else {  			if (deleteBackups)  				File.Delete (s);  			MainForm.Log_WriteLine ("Skipping backup of " + sBackupFile);  		}  	}  	else {  		File.Move (s' sBackupFile);  		MainForm.Log_WriteLine ("Reverting " + sDDSToDelete + " to " + sBackupFile);  	}  	iStep += 1;  	MainForm.ReportProgress (Convert.ToInt32 ((iStep / backupList.Count) * 100)' "Reverting " + Path.GetFileName (sBackupFile) + "' file " + iStep + "\\" + backupList.Count);  	MainForm.Log_WriteLine ("---");  	Application.DoEvents ();  }  
Magic Number,DDS4KSPcs,FolderLoader,C:\repos\Telanor_DDS4KSP\FolderLoader.cs,BackupFiles,The following statement contains a magic number: MainForm.ReportProgress (Convert.ToInt32 ((iStep / backupList.Count) * 100)' "Reverting " + Path.GetFileName (sBackupFile) + "' file " + iStep + "\\" + backupList.Count);  
Magic Number,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,StartupCheckControls,The following statement contains a magic number: lbl_PBInfos.Top = TB_Log.Bottom + 10;  
Magic Number,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,StartupCheckControls,The following statement contains a magic number: PB_main.Top = lbl_PBInfos.Bottom + 10;  
Magic Number,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,StartupCheckControls,The following statement contains a magic number: GB_frm_main.Height = PB_main.Bottom + 10;  
Magic Number,DDS4KSPcs,MainForm,C:\repos\Telanor_DDS4KSP\MainForm.cs,StartupCheckControls,The following statement contains a magic number: Height = GB_frm_main.Bottom + MS_frm_main.Bottom + 10;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: try {  	using (var t = TextureLoader.FromFile (dev' filePath)) {  		using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  			var buff = new byte[gs1.Length];  			gs1.Read (buff' 0' (int)gs1.Length);  			var ii = TextureLoader.ImageInformationFromFile (filePath);  			var iStep = 3;  			if (ii.Format == Format.A8R8G8B8)  				iStep = 4;  			var startIndex = 0x1f;  			while (startIndex < gs1.Length) {  				if (buff [startIndex] != 0xff) {  					bBool = false;  					startIndex = (int)gs1.Length;  				}  				startIndex += iStep;  			}  		}  	}  }  catch (Exception) {  	failToLoad = true;  	MainForm.Log_WriteLine ("ERR : Can't read " + filePath + "' skipping file.");  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: try {  	using (var t = TextureLoader.FromFile (dev' filePath)) {  		using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  			var buff = new byte[gs1.Length];  			gs1.Read (buff' 0' (int)gs1.Length);  			var ii = TextureLoader.ImageInformationFromFile (filePath);  			var iStep = 3;  			if (ii.Format == Format.A8R8G8B8)  				iStep = 4;  			var startIndex = 0x1f;  			while (startIndex < gs1.Length) {  				if (buff [startIndex] != 0xff) {  					bBool = false;  					startIndex = (int)gs1.Length;  				}  				startIndex += iStep;  			}  		}  	}  }  catch (Exception) {  	failToLoad = true;  	MainForm.Log_WriteLine ("ERR : Can't read " + filePath + "' skipping file.");  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: using (var t = TextureLoader.FromFile (dev' filePath)) {  	using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  		var buff = new byte[gs1.Length];  		gs1.Read (buff' 0' (int)gs1.Length);  		var ii = TextureLoader.ImageInformationFromFile (filePath);  		var iStep = 3;  		if (ii.Format == Format.A8R8G8B8)  			iStep = 4;  		var startIndex = 0x1f;  		while (startIndex < gs1.Length) {  			if (buff [startIndex] != 0xff) {  				bBool = false;  				startIndex = (int)gs1.Length;  			}  			startIndex += iStep;  		}  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: using (var t = TextureLoader.FromFile (dev' filePath)) {  	using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  		var buff = new byte[gs1.Length];  		gs1.Read (buff' 0' (int)gs1.Length);  		var ii = TextureLoader.ImageInformationFromFile (filePath);  		var iStep = 3;  		if (ii.Format == Format.A8R8G8B8)  			iStep = 4;  		var startIndex = 0x1f;  		while (startIndex < gs1.Length) {  			if (buff [startIndex] != 0xff) {  				bBool = false;  				startIndex = (int)gs1.Length;  			}  			startIndex += iStep;  		}  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  	var buff = new byte[gs1.Length];  	gs1.Read (buff' 0' (int)gs1.Length);  	var ii = TextureLoader.ImageInformationFromFile (filePath);  	var iStep = 3;  	if (ii.Format == Format.A8R8G8B8)  		iStep = 4;  	var startIndex = 0x1f;  	while (startIndex < gs1.Length) {  		if (buff [startIndex] != 0xff) {  			bBool = false;  			startIndex = (int)gs1.Length;  		}  		startIndex += iStep;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: using (var gs1 = TextureLoader.SaveToStream (ImageFileFormat.Tga' t)) {  	var buff = new byte[gs1.Length];  	gs1.Read (buff' 0' (int)gs1.Length);  	var ii = TextureLoader.ImageInformationFromFile (filePath);  	var iStep = 3;  	if (ii.Format == Format.A8R8G8B8)  		iStep = 4;  	var startIndex = 0x1f;  	while (startIndex < gs1.Length) {  		if (buff [startIndex] != 0xff) {  			bBool = false;  			startIndex = (int)gs1.Length;  		}  		startIndex += iStep;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: if (ii.Format == Format.A8R8G8B8)  	iStep = 4;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,DetectNormalFromTexturePattern,The following statement contains a magic number: iStep = 4;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorWidth % 4) != 0))  	iCorWidth += (4 - (iCorWidth % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorWidth % 4) != 0))  	iCorWidth += (4 - (iCorWidth % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorWidth % 4) != 0))  	iCorWidth += (4 - (iCorWidth % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: iCorWidth += (4 - (iCorWidth % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: iCorWidth += (4 - (iCorWidth % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorHeight % 4) != 0))  	iCorHeight += (4 - (iCorHeight % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorHeight % 4) != 0))  	iCorHeight += (4 - (iCorHeight % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: if (((iCorHeight % 4) != 0))  	iCorHeight += (4 - (iCorHeight % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: iCorHeight += (4 - (iCorHeight % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following statement contains a magic number: iCorHeight += (4 - (iCorHeight % 4));  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following statement contains a magic number: switch (convParams.OutputFormat) {  case OutputFormat.AutoUncompressed:  	if (mbmTemp.IsNormal)  		form = Format.A8R8G8B8;  	else if (mbmTemp.ColorDepth == 24)  		form = Format.R8G8B8;  	else  		form = Format.A8R8G8B8;  	break;  case OutputFormat.AutoCompressed:  	form = mbmTemp.ColorDepth == 24 ? Format.Dxt1 : Format.Dxt5;  	break;  case OutputFormat.ForceArgb8:  	form = Format.A8R8G8B8;  	break;  case OutputFormat.ForceRgb8:  	form = Format.R8G8B8;  	break;  case OutputFormat.ForceDXT5:  	form = Format.Dxt5;  	break;  case OutputFormat.ForceDXT1:  	form = Format.Dxt1;  	break;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following statement contains a magic number: switch (convParams.OutputFormat) {  case OutputFormat.AutoUncompressed:  	if (mbmTemp.IsNormal)  		form = Format.A8R8G8B8;  	else if (mbmTemp.ColorDepth == 24)  		form = Format.R8G8B8;  	else  		form = Format.A8R8G8B8;  	break;  case OutputFormat.AutoCompressed:  	form = mbmTemp.ColorDepth == 24 ? Format.Dxt1 : Format.Dxt5;  	break;  case OutputFormat.ForceArgb8:  	form = Format.A8R8G8B8;  	break;  case OutputFormat.ForceRgb8:  	form = Format.R8G8B8;  	break;  case OutputFormat.ForceDXT5:  	form = Format.Dxt5;  	break;  case OutputFormat.ForceDXT1:  	form = Format.Dxt1;  	break;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following statement contains a magic number: if (mbmTemp.IsNormal)  	form = Format.A8R8G8B8;  else if (mbmTemp.ColorDepth == 24)  	form = Format.R8G8B8;  else  	form = Format.A8R8G8B8;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following statement contains a magic number: if (mbmTemp.ColorDepth == 24)  	form = Format.R8G8B8;  else  	form = Format.A8R8G8B8;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following statement contains a magic number: form = mbmTemp.ColorDepth == 24 ? Format.Dxt1 : Format.Dxt5;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var y = 0; y <= height - 1; y++) {  	for (var x = 0; x <= width - 1; x++) {  		var pos = (((y * width) + x) * 4) + headerSize;  		//b = bOri(pos)  		var g = bOri [pos + 1];  		var r = bOri [pos + 2];  		//a = bOri(pos + 3)  		bSwizzled [pos] = 255;  		bSwizzled [pos + 1] = g;  		bSwizzled [pos + 2] = 255;  		bSwizzled [pos + 3] = r;  	}  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: for (var x = 0; x <= width - 1; x++) {  	var pos = (((y * width) + x) * 4) + headerSize;  	//b = bOri(pos)  	var g = bOri [pos + 1];  	var r = bOri [pos + 2];  	//a = bOri(pos + 3)  	bSwizzled [pos] = 255;  	bSwizzled [pos + 1] = g;  	bSwizzled [pos + 2] = 255;  	bSwizzled [pos + 3] = r;  }  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: bSwizzled [pos] = 255;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: bSwizzled [pos + 2] = 255;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: bSwizzled [pos + 2] = 255;  
Magic Number,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,SwizzleImage,The following statement contains a magic number: bSwizzled [pos + 3] = r;  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The following statement contains a magic number: ReadFromRaw (ref b' 4' out iWidth);  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The following statement contains a magic number: ReadFromRaw (ref b' 8' out iHeight);  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The following statement contains a magic number: ReadFromRaw (ref b' 12' out i);  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The following statement contains a magic number: ReadFromRaw (ref b' 16' out iBPP);  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,GetInfo,The following statement contains a magic number: if (iBPP == 24)  	sFormat += "R8G8B8)";  else  	sFormat += "A8R8G8B8)";  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,ReadFromRaw,The following statement contains a magic number: result += Convert.ToInt32 (b [offset + 3]) << 24;  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,ReadFromRaw,The following statement contains a magic number: result += Convert.ToInt32 (b [offset + 3]) << 24;  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,ReadFromRaw,The following statement contains a magic number: result += Convert.ToInt32 (b [offset + 2]) << 16;  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,ReadFromRaw,The following statement contains a magic number: result += Convert.ToInt32 (b [offset + 2]) << 16;  
Magic Number,DDS4KSPcs,MBMLoader,C:\repos\Telanor_DDS4KSP\MBMLoader.cs,ReadFromRaw,The following statement contains a magic number: result += Convert.ToInt32 (b [offset + 1]) << 8;  
Missing Default,DDS4KSPcs,SingleFileDialog,C:\repos\Telanor_DDS4KSP\SingleFileDialog.cs,CustomShowDialog,The following switch statement is missing a default case: switch ((Formats)ComboBox1.SelectedIndex) {  case Formats.DXT1:  	imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT1;  	folderCFG.Compressed = true;  	break;  case Formats.DXT5:  	imgCFG.OutputFormat = ImageManager.OutputFormat.ForceDXT5;  	folderCFG.Compressed = true;  	break;  case Formats.R8G8B8:  	imgCFG.OutputFormat = ImageManager.OutputFormat.ForceRgb8;  	folderCFG.Compressed = false;  	break;  case Formats.A8R8G8B8:  	imgCFG.OutputFormat = ImageManager.OutputFormat.ForceArgb8;  	folderCFG.Compressed = false;  	break;  }  
Missing Default,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following switch statement is missing a default case: switch (convParams.NormalMapConversion) {  case NormalMapConversion.Automatic:  	bNormal = AssumeNormalMap (convParams.FilePath' out bLoadFail);  	break;  case NormalMapConversion.ForceNormal:  	bNormal = true;  	break;  }  
Missing Default,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertFileToDDS,The following switch statement is missing a default case: switch (convParams.OutputFormat) {  case OutputFormat.AutoUncompressed:  	if (bNormal)  		form = Format.A8R8G8B8;  	else  		form = Is32BPP (iInfos) ? Format.A8R8G8B8 : Format.R8G8B8;  	break;  case OutputFormat.AutoCompressed:  	if (bNormal)  		form = Format.Dxt5;  	else  		form = Is32BPP (iInfos) ? Format.Dxt5 : Format.Dxt1;  	break;  case OutputFormat.ForceArgb8:  	form = Format.A8R8G8B8;  	break;  case OutputFormat.ForceRgb8:  	form = Format.R8G8B8;  	break;  case OutputFormat.ForceDXT5:  	form = Format.Dxt5;  	break;  case OutputFormat.ForceDXT1:  	form = Format.Dxt1;  	break;  }  
Missing Default,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following switch statement is missing a default case: switch (convParams.OutputFormat) {  case OutputFormat.AutoUncompressed:  	if (mbmTemp.IsNormal)  		form = Format.A8R8G8B8;  	else if (mbmTemp.ColorDepth == 24)  		form = Format.R8G8B8;  	else  		form = Format.A8R8G8B8;  	break;  case OutputFormat.AutoCompressed:  	form = mbmTemp.ColorDepth == 24 ? Format.Dxt1 : Format.Dxt5;  	break;  case OutputFormat.ForceArgb8:  	form = Format.A8R8G8B8;  	break;  case OutputFormat.ForceRgb8:  	form = Format.R8G8B8;  	break;  case OutputFormat.ForceDXT5:  	form = Format.Dxt5;  	break;  case OutputFormat.ForceDXT1:  	form = Format.Dxt1;  	break;  }  
Missing Default,DDS4KSPcs,ImageManager,C:\repos\Telanor_DDS4KSP\ImageManager.cs,ConvertMBMtoDDS,The following switch statement is missing a default case: switch (convParams.NormalMapConversion) {  case NormalMapConversion.Automatic:  	bNormal = mbmTemp.IsNormal;  	break;  case NormalMapConversion.ForceNormal:  	bNormal = true;  	break;  }  
