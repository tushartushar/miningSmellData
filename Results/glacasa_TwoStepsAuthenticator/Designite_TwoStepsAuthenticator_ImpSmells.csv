Implementation smell,Namespace,Class,File,Method,Description
Long Statement,TwoStepsAuthenticator,TimeAuthenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\TimeAuthenticator.cs,CheckCode,The length of the statement  "		if (ConstantTimeEquals (GetCode (secret' checkTime)' code) && (user == null || !UsedCodeManager.IsCodeUsed (checkInterval' code' user))) { " is 138.
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: for (int j = 7; j >= 0; j--) {  	challenge [j] = (byte)((int)chlg & 0xff);  	chlg >>= 8;  }  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: for (int j = 7; j >= 0; j--) {  	challenge [j] = (byte)((int)chlg & 0xff);  	chlg >>= 8;  }  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: chlg >>= 8;  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	truncatedHash <<= 8;  	truncatedHash |= hash [offset + j];  }  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: for (int j = 0; j < 4; j++) {  	truncatedHash <<= 8;  	truncatedHash |= hash [offset + j];  }  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: truncatedHash <<= 8;  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: truncatedHash %= 1000000;  
Magic Number,TwoStepsAuthenticator,Authenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Authenticator.cs,GetCodeInternal,The following statement contains a magic number: return code.PadLeft (6' '0');  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: foreach (char c in input) {  	int cValue = CharToValue (c);  	if (bitsRemaining > 5) {  		mask = cValue << (bitsRemaining - 5);  		curByte = (byte)(curByte | mask);  		bitsRemaining -= 5;  	} else {  		mask = cValue >> (5 - bitsRemaining);  		curByte = (byte)(curByte | mask);  		returnArray [arrayIndex++] = curByte;  		curByte = (byte)(cValue << (3 + bitsRemaining));  		bitsRemaining += 3;  	}  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: if (bitsRemaining > 5) {  	mask = cValue << (bitsRemaining - 5);  	curByte = (byte)(curByte | mask);  	bitsRemaining -= 5;  } else {  	mask = cValue >> (5 - bitsRemaining);  	curByte = (byte)(curByte | mask);  	returnArray [arrayIndex++] = curByte;  	curByte = (byte)(cValue << (3 + bitsRemaining));  	bitsRemaining += 3;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: mask = cValue << (bitsRemaining - 5);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: bitsRemaining -= 5;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: mask = cValue >> (5 - bitsRemaining);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: curByte = (byte)(cValue << (3 + bitsRemaining));  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToBytes,The following statement contains a magic number: bitsRemaining += 3;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: foreach (byte b in input) {  	nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	if (bitsRemaining < 4) {  		nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  		returnArray [arrayIndex++] = ValueToChar (nextChar);  		bitsRemaining += 5;  	}  	bitsRemaining -= 3;  	nextChar = (byte)((b << bitsRemaining) & 31);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: nextChar = (byte)(nextChar | (b >> (8 - bitsRemaining)));  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: if (bitsRemaining < 4) {  	nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	bitsRemaining += 5;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: if (bitsRemaining < 4) {  	nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	bitsRemaining += 5;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: if (bitsRemaining < 4) {  	nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	bitsRemaining += 5;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: if (bitsRemaining < 4) {  	nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  	returnArray [arrayIndex++] = ValueToChar (nextChar);  	bitsRemaining += 5;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: nextChar = (byte)((b >> (3 - bitsRemaining)) & 31);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: bitsRemaining += 5;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: bitsRemaining -= 3;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ToString,The following statement contains a magic number: nextChar = (byte)((b << bitsRemaining) & 31);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 91 && value > 64) {  	return value - 65;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 91 && value > 64) {  	return value - 65;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 91 && value > 64) {  	return value - 65;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: return value - 65;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 56 && value > 49) {  	return value - 24;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 56 && value > 49) {  	return value - 24;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 56 && value > 49) {  	return value - 24;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: return value - 24;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 123 && value > 96) {  	return value - 97;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 123 && value > 96) {  	return value - 97;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: if (value < 123 && value > 96) {  	return value - 97;  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,CharToValue,The following statement contains a magic number: return value - 97;  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: if (b < 26) {  	return (char)(b + 65);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: if (b < 26) {  	return (char)(b + 65);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: return (char)(b + 65);  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: if (b < 32) {  	return (char)(b + 24);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: if (b < 32) {  	return (char)(b + 24);  }  
Magic Number,TwoStepsAuthenticator,Base32Encoding,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\Base32Encoding.cs,ValueToChar,The following statement contains a magic number: return (char)(b + 24);  
Magic Number,TwoStepsAuthenticator,TimeAuthenticator,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\..\TwoStepsAuthenticator.DotnetCore\TimeAuthenticator.cs,CheckCode,The following statement contains a magic number: for (int i = -2; i <= 1; i++) {  	var checkTime = baseTime.AddSeconds (IntervalSeconds * i);  	var checkInterval = GetInterval (checkTime);  	if (ConstantTimeEquals (GetCode (secret' checkTime)' code) && (user == null || !UsedCodeManager.IsCodeUsed (checkInterval' code' user))) {  		codeMatch = true;  		successfulTime = checkTime;  		UsedCodeManager.AddCode (checkInterval' code' user);  	}  }  
Magic Number,TwoStepsAuthenticator,UsedCodesManager,F:\newReposMay17\glacasa_TwoStepsAuthenticator\TwoStepsAuthenticator\UsedCodesManager.cs,UsedCodesManager,The following statement contains a magic number: cleaner = new Timer (TimeSpan.FromMinutes (5).TotalMilliseconds);  
