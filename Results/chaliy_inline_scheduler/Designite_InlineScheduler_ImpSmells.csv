Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,WebApiContrib.Formatters.JsonNet,JsonNetFormatter,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Advanced\Service\Temp\JsonNetFormatter.cs,WriteToStreamAsync,The method has 5 parameters. Parameters: type' value' writeStream' content' transportContext
Long Statement,InlineScheduler.Advanced,JobItem,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Advanced\JobItem.cs,Run,The length of the statement  "                    //_trace.Value.Error("Command " + cmdKey + " failed to execute.\r\n" + ex.Message' new { Exception = ex' Command = cmd }); " is 122.
Long Statement,InlineScheduler,OveralStats,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\OveralStats.cs,ToString,The length of the statement  "            return "Pending: " + PendingJobs + "; Scheduled: " + ScheduledJobs + " Running: " + RunningJobs + "; Current: " + JobsCount; " is 124.
Long Statement,InlineScheduler,SchedulerJobStats,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\SchedulerJobStats.cs,ToString,The length of the statement  "            return "JobKey: " + JobKey + " Status: " + CurrentStatus + " LastRunStarted: " + LastRunStarted + " LastRunCompleted: " + LastRunCompleted + " PreviousRuns Count: " + PreviousRuns.Count; " is 186.
Long Statement,InlineScheduler.Server,InlineSchedulerWebHost,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\InlineSchedulerWebHost.cs,Init,The length of the statement  "                    defaults: new { x_inline_scheduler_prefx = prefix' controller = "Scheduler"' action = "Default"' path = RouteParameter.Optional } " is 129.
Empty Catch Block,InlineScheduler.Advanced.State,TempFolderStateProvider,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Advanced\State\TempFolderStateProvider.cs,Retrieve,The method has an empty catch block.
Magic Number,InlineScheduler.Advanced,StatsHelper,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Advanced\StatsHelper.cs,GatherJobReport,The following statement contains a magic number: var average = Math.Round(jobItem.PreviousRuns.Average(x => (x.Completed - x.Started).TotalSeconds)' 2);
Magic Number,InlineScheduler.Advanced,JobItem,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Advanced\JobItem.cs,UpdateState,The following statement contains a magic number: _previousRuns.RemoveRange(0' _previousRuns.Count - 5);
Magic Number,InlineScheduler.Advanced,JobItem,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Advanced\JobItem.cs,UpdateState,The following statement contains a magic number: _previousRuns.Count > 5
Magic Number,InlineScheduler,Scheduler,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Scheduler.cs,Scheduler,The following statement contains a magic number: _timer.Change(TimeSpan.Zero' TimeSpan.FromMilliseconds(1000));
Magic Number,InlineScheduler,Scheduler,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Scheduler.cs,OnTimerElapsed,The following statement contains a magic number: var applicableDefs = _work.GetApplicableToRun(20);
Magic Number,InlineScheduler,Scheduler,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Scheduler.cs,OnTimerElapsed,The following statement contains a magic number: runningCount < 20
Magic Number,InlineScheduler.Server.Advanced.Hosting,HostingRegistration,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Advanced\Hosting\HostingRegistration.cs,Stop,The following statement contains a magic number: Do.TryWaitUntil(() => _underline.IsRunningJobsNow' TimeSpan.FromSeconds(15));
Magic Number,InlineScheduler.Server.Advanced.Service.Content,Accessor,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Advanced\Service\Content\Accessor.cs,Get,The following statement contains a magic number: msg.Headers.CacheControl = new CacheControlHeaderValue                  {                      Public = true'                      MaxAge = TimeSpan.FromDays(30)                  };
Magic Number,InlineScheduler.Server,InlineSchedulerWebHost,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\InlineSchedulerWebHost.cs,SetUp,The following statement contains a magic number: selfHosted.MaxReceivedMessageSize = 16777216;
Magic Number,InlineScheduler.Server,InlineSchedulerWebHost,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\InlineSchedulerWebHost.cs,SetUp,The following statement contains a magic number: selfHosted.MaxBufferSize = 16777216;
Magic Number,InlineScheduler.Server.Utility,Do,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Utility\Do.cs,TryWaitUntil,The following statement contains a magic number: var iterations = timeout.TotalMilliseconds / 200;
Magic Number,InlineScheduler.Server.Utility,Do,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Utility\Do.cs,TryWaitUntil,The following statement contains a magic number: Thread.Sleep(200);
Missing Default,InlineScheduler.Server.Advanced.Service.Content,Accessor,D:\research\architectureSmells\repos\chaliy_inline_scheduler\src\InlineScheduler\Server\Advanced\Service\Content\Accessor.cs,Get,The following switch statement is missing a default case: switch (extension)              {                  case ".css":                      content.Headers.ContentType = new MediaTypeHeaderValue("text/css");                      break;                    case ".js":                      content.Headers.ContentType = new MediaTypeHeaderValue("application/javascript");                      break;                    case ".gif":                      content.Headers.ContentType = new MediaTypeHeaderValue("image/gif");                      break;                    case ".png":                      content.Headers.ContentType = new MediaTypeHeaderValue("image/png");                      break;              }
