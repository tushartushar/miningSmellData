Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Facts.DiffPlex,TestableDiffer,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,TestCalculateEditLength,The method has 6 parameters. Parameters: A' startA' endA' B' startB' endB
Long Statement,Facts.DiffPlex,CreateCustomDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_throw_if_chunker_is_null,The length of the statement  "                var ex = Record.Exception(() => differ.CreateCustomDiffs("someString"' "otherString"' false' null)) as ArgumentNullException; " is 125.
Long Statement,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_throw_if_oldText_is_null,The length of the statement  "                var ex = Record.Exception(() => differ.CreateWordDiffs(null' "someString"' false' new[] { ' ' })) as ArgumentNullException; " is 123.
Long Statement,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_throw_if_newText_is_null,The length of the statement  "                var ex = Record.Exception(() => differ.CreateWordDiffs("someString"' null' false' new[] { ' ' })) as ArgumentNullException; " is 123.
Long Statement,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_different_separators,The length of the statement  "                var res = differ.CreateWordDiffs(string.Format("z{0}a{0}{0}"' ' ')' string.Format("z{0}v{0}{0}"' ';')' false' new[] { ' '' ';' }); " is 130.
Long Statement,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The length of the statement  "                    .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) })); " is 131.
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_lines_when_first_line_empty,The following statement contains a magic number: Assert.Equal(4' chunks.Length);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_lines_when_first_line_empty,The following statement contains a magic number: Assert.Equal("Second\r\n"' chunks[2]);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_lines_when_first_line_empty,The following statement contains a magic number: Assert.Equal("Last\r\n"' chunks[3]);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_lines_when_last_does_not_end_with_lineending,The following statement contains a magic number: Assert.Equal(3' chunks.Length);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_lines_when_last_does_not_end_with_lineending,The following statement contains a magic number: Assert.Equal("Last"' chunks[2]);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_when_all_lines_are_empty,The following statement contains a magic number: Assert.Equal(3' chunks.Length);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_when_all_lines_are_empty,The following statement contains a magic number: Assert.Equal("\r\n"' chunks[2]);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_when_different_line_ending,The following statement contains a magic number: Assert.Equal(4' chunks.Length);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_when_different_line_ending,The following statement contains a magic number: Assert.Equal("Second\r"' chunks[2]);
Magic Number,Facts.DiffPlex.Chunkers,LineEndingsPreservingChunkerFacts,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\Chunkers\LineEndingsPreservingChunkerFacts.cs,should_split_when_different_line_ending,The following statement contains a magic number: Assert.Equal("Last"' chunks[3]);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_oldText_is_empty_and_newText_is_non_empty,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_newText_is_empty_and_oldText_is_non_empty,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_when_no_deletions,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_when_no_insertions,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[1].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[1].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively_and_ignoring_whitespace,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[1].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateLineDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_oldText_is_empty_and_newText_is_non_empty,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_newText_is_empty_and_oldText_is_non_empty,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_when_no_deletions,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_when_no_insertions,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_multiple_difference,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[1].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[1].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateCharacterDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_ignore_case_when_ignore_case_is_true,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_oldText_is_empty_and_newText_is_non_empty,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_block_when_newText_is_empty_and_oldText_is_non_empty,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_one_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_one_item_list_for_strings_with_one_difference,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks.Count);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(5' res.DiffBlocks[1].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(7' res.DiffBlocks[1].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(4' res.DiffBlocks[1].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(6' res.DiffBlocks[2].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(6' res.DiffBlocks[2].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(1' res.DiffBlocks[2].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(12' res.DiffBlocks[2].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(12' res.DiffBlocks[2].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(1' res.DiffBlocks[2].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(8' res.DiffBlocks[3].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(8' res.DiffBlocks[3].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(1' res.DiffBlocks[3].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(14' res.DiffBlocks[3].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(14' res.DiffBlocks[3].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_two_item_list_for_strings_with_multiple_difference_non_consecutively,The following statement contains a magic number: Assert.Equal(1' res.DiffBlocks[3].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_arbitrary_separators,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_arbitrary_separators,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_different_separators,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_different_separators,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].InsertCountB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_multiple_chained_separators,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_multiple_chained_separators,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_multiple_chained_separators_ending_with_char,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].DeleteStartA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_multiple_chained_separators_ending_with_char,The following statement contains a magic number: Assert.Equal(3' res.DiffBlocks[0].DeleteCountA);
Magic Number,Facts.DiffPlex,CreateWordDiffs,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_diff_for_multiple_chained_separators_ending_with_char,The following statement contains a magic number: Assert.Equal(2' res.DiffBlocks[0].InsertStartB);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_empty_vs_non_empty_string,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_empty_vs_non_empty_string,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_empty_vs_non_empty_string,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_non_empty_vs_empty_string,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_non_empty_vs_empty_string,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_non_empty_vs_empty_string,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_no_modifications_for_same_strings,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: b.HashedPieces = new[] { 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: b.HashedPieces = new[] { 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: b.HashedPieces = new[] { 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_all_modifications_for_unique_strings,The following statement contains a magic number: b.HashedPieces = new[] { 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3' 4 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: b.HashedPieces = new[] { 1' 4' 5 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: b.HashedPieces = new[] { 1' 4' 5 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: Assert.True(a.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: Assert.False(a.Modifications[3]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_two_partially_similar_strings,The following statement contains a magic number: Assert.True(b.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: b.HashedPieces = new[] { 1' 4' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: b.HashedPieces = new[] { 1' 4' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: Assert.False(a.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_two_differences,The following statement contains a magic number: Assert.False(b.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: a.HashedPieces = new[] { 1' 2' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 4' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 4' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: b.HashedPieces = new[] { 1' 2' 4' 3 };
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: Assert.False(a.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: Assert.True(b.Modifications[2]);
Magic Number,Facts.DiffPlex,BuildModificationData,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_modifications_for_strings_with_one_difference,The following statement contains a magic number: Assert.False(b.Modifications[3]);
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_a_if_b_is_empty,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_length_of_b_if_a_is_empty,The following statement contains a magic number: int[] b = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] b = { 1' 2' 3' 0' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: int[] a = { 4' 2' 3' 4' 5' 6' 7' 9 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_correct_length_when_start_and_ends_are_changed,The following statement contains a magic number: Assert.Equal(2' res.EditLength);
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] a = { 1' 2' 3' 4' 5' 6' 7' 8 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] b = { 11' 12' 23' 54' 56 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] b = { 11' 12' 23' 54' 56 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] b = { 11' 12' 23' 54' 56 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] b = { 11' 12' 23' 54' 56 };
Magic Number,Facts.DiffPlex,CalculateEditLength,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Will_return_snake_of_zero_length_for_unique_arrays,The following statement contains a magic number: int[] b = { 11' 12' 23' 54' 56 };
Magic Number,Facts.DiffPlex,ArrayGenerator,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Generate,The following statement contains a magic number: editLength = (aLength + bLength) - 2 * commonLength;
Magic Number,Facts.DiffPlex,ArrayGenerator,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Generate,The following statement contains a magic number: a.Add(2);
Magic Number,Facts.DiffPlex,ArrayGenerator,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\DifferFacts.cs,Generate,The following statement contains a magic number: b.Add(3);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_duplicate_strings,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(text' text' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLines' textLines' new List<DiffBlock>() { new DiffBlock(0' 0' 5' 0) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_oldText_is_empty,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(0' 0' 0' 2) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_oldText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_newText_is_empty,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true'false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(0' 2' 0' 0) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_newText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(0' 5' 0' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(0' 5' 0' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Equal(9' bidiff.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Equal(""' bidiff.Lines[8].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Equal(ChangeType.Deleted' bidiff.Lines[8].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Null(bidiff.Lines[8].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 4' 2' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 4' 2' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 4' 2' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 4' 2' 4) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(12' bidiff.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(2' bidiff.Lines[1].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: i <= 5
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(textLinesNew[i - 4]' bidiff.Lines[i].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(i - 3' bidiff.Lines[i].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: i <= 9
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal("e"' bidiff.Lines[10].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.Lines[10].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(7' bidiff.Lines[10].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(7' bidiff.Lines[10].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal("f"' bidiff.Lines[11].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.Lines[11].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(8' bidiff.Lines[11].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_middle_is_different_documents,The following statement contains a magic number: Assert.Equal(8' bidiff.Lines[11].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> { new DiffBlock(2' 2' 2' 2)' new DiffBlock(5' 1' 5' 1) }));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(11' bidiff.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(2' bidiff.Lines[1].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("a"' bidiff.Lines[2].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Deleted' bidiff.Lines[2].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Null(bidiff.Lines[2].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("b"' bidiff.Lines[3].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Deleted' bidiff.Lines[3].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Null(bidiff.Lines[3].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("z"' bidiff.Lines[4].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Inserted' bidiff.Lines[4].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(3' bidiff.Lines[4].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(3' bidiff.Lines[4].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("y"' bidiff.Lines[5].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Inserted' bidiff.Lines[5].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(4' bidiff.Lines[5].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(4' bidiff.Lines[5].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("c"' bidiff.Lines[6].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.Lines[6].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(5' bidiff.Lines[6].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(5' bidiff.Lines[6].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("d"' bidiff.Lines[7].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Deleted' bidiff.Lines[7].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Null(bidiff.Lines[7].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("w"' bidiff.Lines[8].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Inserted' bidiff.Lines[8].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(6' bidiff.Lines[8].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(6' bidiff.Lines[8].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("e"' bidiff.Lines[9].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.Lines[9].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(7' bidiff.Lines[9].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(7' bidiff.Lines[9].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal("f"' bidiff.Lines[10].Text);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.Lines[10].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(8' bidiff.Lines[10].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_multiple_diff_blocks,The following statement contains a magic number: Assert.Equal(8' bidiff.Lines[10].Position);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Deleted)'                          new DiffPiece("3 "' ChangeType.Deleted)'                          new DiffPiece(" 4 "' ChangeType.Deleted)'                          new DiffPiece("2"' ChangeType.Inserted' 2)'                          new DiffPiece("3"' ChangeType.Inserted' 3)'                          new DiffPiece("4"' ChangeType.Inserted' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Deleted)'                          new DiffPiece("3 "' ChangeType.Deleted)'                          new DiffPiece(" 4 "' ChangeType.Deleted)'                          new DiffPiece("2"' ChangeType.Inserted' 2)'                          new DiffPiece("3"' ChangeType.Inserted' 3)'                          new DiffPiece("4"' ChangeType.Inserted' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Deleted)'                          new DiffPiece("3 "' ChangeType.Deleted)'                          new DiffPiece(" 4 "' ChangeType.Deleted)'                          new DiffPiece("2"' ChangeType.Inserted' 2)'                          new DiffPiece("3"' ChangeType.Inserted' 3)'                          new DiffPiece("4"' ChangeType.Inserted' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Deleted)'                          new DiffPiece("3 "' ChangeType.Deleted)'                          new DiffPiece(" 4 "' ChangeType.Deleted)'                          new DiffPiece("2"' ChangeType.Inserted' 2)'                          new DiffPiece("3"' ChangeType.Inserted' 3)'                          new DiffPiece("4"' ChangeType.Inserted' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_oldText_is_empty,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(0' 0' 0' 2)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_oldText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.OldText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_oldText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.NewText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_newText_is_empty,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(0' 2' 0' 0)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_newText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.OldText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_when_newText_is_empty,The following statement contains a magic number: Assert.Equal(2' bidiff.NewText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(0' 5' 0' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(0' 5' 0' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Equal(5' bidiff.OldText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_unique_strings,The following statement contains a magic number: Assert.Equal(5' bidiff.NewText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(2' 5' 2' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(2' 5' 2' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(2' 5' 2' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(textOld' textNew' true' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(textLinesOld' textLinesNew' new List<DiffBlock> {new DiffBlock(2' 5' 2' 4)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: Assert.Equal(7' bidiff.OldText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: Assert.Equal(7' bidiff.NewText.Lines.Count);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_documents,The following statement contains a magic number: i < 2
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(It.IsAny<string>()' It.IsAny<string>()' false' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(                                   new[] {"m "' "is "' "h"}'                                   new[] {"m "' "ai "' "is "' "n "' "h"}'                                   new List<DiffBlock> {new DiffBlock(1' 0' 1' 1)' new DiffBlock(3' 0' 3' 1)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: differ.Setup(x => x.CreateDiffs(It.IsAny<string>()' It.IsAny<string>()' false' false' It.IsNotNull<IChunker>()))                      .Returns(new DiffResult(                                   new[] {"m "' "is "' "h"}'                                   new[] {"m "' "ai "' "is "' "n "' "h"}'                                   new List<DiffBlock> {new DiffBlock(1' 0' 1' 1)' new DiffBlock(3' 0' 3' 1)}));
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.NewText.Lines[0].SubPieces[2].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Inserted' bidiff.NewText.Lines[0].SubPieces[3].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.NewText.Lines[0].SubPieces[4].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.OldText.Lines[0].SubPieces[2].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Imaginary' bidiff.OldText.Lines[0].SubPieces[3].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_build_diffModel_for_partially_different_lines,The following statement contains a magic number: Assert.Equal(ChangeType.Unchanged' bidiff.OldText.Lines[0].SubPieces[4].Type);
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_1,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_2,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3 "' ChangeType.Unchanged' 3)'                          new DiffPiece(" 4 "' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Will_ignore_whitespace_by_default_3,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Unchanged' 2)'                          new DiffPiece("3"' ChangeType.Unchanged' 3)'                          new DiffPiece("4"' ChangeType.Unchanged' 4)'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.OldText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece(" 2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("2"' ChangeType.Unchanged' 3)'                              }'                          }'                          new DiffPiece("3 "' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                              }'                          }'                          new DiffPiece(" 4 "' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(""' ChangeType.Deleted' 1)'                                  new DiffPiece(" "' ChangeType.Deleted' 2)'                                  new DiffPiece("4"' ChangeType.Unchanged' 3)'                                  new DiffPiece(" "' ChangeType.Deleted' 4)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("2"' ChangeType.Unchanged' 1)'                              }'                          }'                          new DiffPiece("3"' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("4"' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("4"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("2"' ChangeType.Unchanged' 1)'                              }'                          }'                          new DiffPiece("3"' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("4"' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("4"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("2"' ChangeType.Unchanged' 1)'                              }'                          }'                          new DiffPiece("3"' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("4"' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("4"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
Magic Number,Facts.DiffPlex,BuildDiffModel,D:\research\architectureSmells\repos\mmanela_diffplex\Facts.DiffPlex\InlineDiffBuilderFacts.cs,Can_compare_whitespace,The following statement contains a magic number: Assert.Equal(                      model.NewText.Lines'                      new DiffPiece[]                      {                          new DiffPiece("1"' ChangeType.Unchanged' 1)'                          new DiffPiece("2"' ChangeType.Modified' 2)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("2"' ChangeType.Unchanged' 1)'                              }'                          }'                          new DiffPiece("3"' ChangeType.Modified' 3)                          {                              SubPieces =                              {                                  new DiffPiece("3"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("4"' ChangeType.Modified' 4)                          {                              SubPieces =                              {                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece(null' ChangeType.Imaginary)'                                  new DiffPiece("4"' ChangeType.Unchanged' 1)'                                  new DiffPiece(null' ChangeType.Imaginary)'                              }'                          }'                          new DiffPiece("5"' ChangeType.Unchanged' 5)'                      });
