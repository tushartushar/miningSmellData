Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Labo.ServiceModel.Core.Utils.Conversion,ConversionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Conversion\ConversionUtils.cs,ChangeType,Cyclomatic complexity of the method is 19
Complex Method,Labo.ServiceModel.Core.Utils.Conversion,ConversionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Conversion\ConversionUtils.cs,TryConvertByIConvertible,Cyclomatic complexity of the method is 16
Complex Method,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,GetMethodByName,Cyclomatic complexity of the method is 9
Long Parameter List,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,InvokeMethod,The method has 6 parameters.
Long Statement,Labo.ServiceModel.Core.Utils.Conversion,ConversionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Conversion\ConversionUtils.cs,GetConversionException,The length of the statement  "	ConversionException conversionEx = exception == null ? new ConversionException (errorMessage) : new ConversionException (errorMessage' exception); " is 146.
Long Statement,Labo.ServiceModel.Core.Utils,EnumUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\EnumUtils.cs,GetNamesAndValues,The length of the statement  "			dictionary.Add (names [i]' (TUnderlyingType)Convert.ChangeType (values.GetValue (i)' conversionType' CultureInfo.InvariantCulture)); " is 132.
Long Statement,Labo.ServiceModel.Core.Utils,EnumUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\EnumUtils.cs,GetNamesAndValues,The length of the statement  "		EnumUtilsException coreEx = new EnumUtilsException ("An Error Occurred While Getting Names and Values of Enum Type"' exception); " is 128.
Long Statement,Labo.ServiceModel.Core.Utils,EnumUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\EnumUtils.cs,TryParse,The length of the statement  "			bool @equals = ignoreCase ? str.Equals (enumMemberName' StringComparison.InvariantCultureIgnoreCase) : str.Equals (enumMemberName); " is 131.
Long Statement,Labo.ServiceModel.Core.Utils,TypeUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\TypeUtils.cs,IsNumericType,The length of the statement  "	return type == typeof(long) || type == typeof(int) || type == typeof(short) || type == typeof(byte) || type == typeof(float) || type == typeof(double) || type == typeof(decimal); " is 178.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,DynamicMethodCompiler,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\DynamicMethodCompiler.cs,CreateInstantiateObjectHandler,The length of the statement  "		throw new DynamicMethodCompilerException (string.Format (CultureInfo.CurrentCulture' "The type {0} must declare an empty constructor (the constructor may be private' internal' protected' protected internal' or public)."' type)); " is 228.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,DynamicMethodCompiler,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\DynamicMethodCompiler.cs,CreateInstantiateObjectHandler,The length of the statement  "	DynamicMethod dynamicMethod = new DynamicMethod (".ctor"' MethodAttributes.Static | MethodAttributes.Public' CallingConventions.Standard' typeof(object)' null' type' true); " is 172.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,DynamicMethodCompilerCache,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\DynamicMethodCompilerCache.cs,CreateInstance,The length of the statement  "	ConstructorInfo constructorInfo = type.GetConstructor (Constants.CONSTRUCTOR_INFO_BINDING_FLAGS' null' Type.EmptyTypes' null); " is 126.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,InvokeMethod,The length of the statement  "	MethodInfo methodInfo = GetMethodByName (objectType' methodName' parameters.ToDictionary (x => x.Key' y => y.Value.Type)); " is 122.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,InvokeMethod,The length of the statement  "		throw new ReflectionUtilsException (String.Format ("'{0}' method of '{1}' type couldn't be found"' methodName' objectType.AssemblyQualifiedName)); " is 146.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,InvokeMethod,The length of the statement  "		throw new ReflectionUtilsException (String.Format ("'{0}' method parameters count doesn't match the specified parameters count"' methodInfo)); " is 142.
Long Statement,Labo.ServiceModel.Core.Utils.Reflection,ReflectionUtils,C:\repos\QuickOrBeDead_Dynamic-Wcf-Client-Proxy\Labo.ServiceModel.Core\Utils\Reflection\ReflectionUtils.cs,InvokeMethod,The length of the statement  "			throw new ReflectionUtilsException (String.Format ("'{0}' parameter doesn't exist in '{1}' method"' parameterInfo.Name' methodInfo)); " is 133.
