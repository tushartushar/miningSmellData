Implementation smell,Namespace,Class,File,Method,Description
Magic Number,NUnitExtension.RowTest.Sample.VatCalculatorApp,VatCalculator,C:\research\architectureSmells\repos\nunit_nunitv2\addins\RowTest\NUnitExtension.RowTest.Sample\VatCalculatorApp\VatCalculator.cs,GetTaxRate,The following statement contains a magic number: switch(categoryType)  			{  				case VatCategoryType.CategoryA:  					return 0.2m;  					  				case VatCategoryType.CategoryB:  					return 0.15m;  					  				case VatCategoryType.CategoryC:  					return 0.1m;  					  				default:  					throw new ArgumentException(string.Format("Invalid VatCategoryType '{0}'."' categoryType));  			}
Magic Number,NUnitExtension.RowTest.Sample.VatCalculatorApp,VatCalculator,C:\research\architectureSmells\repos\nunit_nunitv2\addins\RowTest\NUnitExtension.RowTest.Sample\VatCalculatorApp\VatCalculator.cs,GetTaxRate,The following statement contains a magic number: switch(categoryType)  			{  				case VatCategoryType.CategoryA:  					return 0.2m;  					  				case VatCategoryType.CategoryB:  					return 0.15m;  					  				case VatCategoryType.CategoryC:  					return 0.1m;  					  				default:  					throw new ArgumentException(string.Format("Invalid VatCategoryType '{0}'."' categoryType));  			}
Magic Number,NUnitExtension.RowTest.Sample.VatCalculatorApp,VatCalculator,C:\research\architectureSmells\repos\nunit_nunitv2\addins\RowTest\NUnitExtension.RowTest.Sample\VatCalculatorApp\VatCalculator.cs,GetTaxRate,The following statement contains a magic number: switch(categoryType)  			{  				case VatCategoryType.CategoryA:  					return 0.2m;  					  				case VatCategoryType.CategoryB:  					return 0.15m;  					  				case VatCategoryType.CategoryC:  					return 0.1m;  					  				default:  					throw new ArgumentException(string.Format("Invalid VatCategoryType '{0}'."' categoryType));  			}
