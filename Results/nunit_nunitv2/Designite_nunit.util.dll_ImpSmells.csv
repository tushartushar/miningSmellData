Implementation smell,Namespace,Class,File,Method,Description
Long Method,NUnit.Util,NUnitProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\NUnitProject.cs,Load,The method has 100 lines of code.
Complex Method,NUnit.Util,AggregatingTestRunner,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\AggregatingTestRunner.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Util,NUnitProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\NUnitProject.cs,Load,Cyclomatic complexity of the method is 20
Complex Method,NUnit.Util,NUnitProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\NUnitProject.cs,Save,Cyclomatic complexity of the method is 14
Complex Method,NUnit.Util,PathUtils,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\PathUtils.cs,RelativePath,Cyclomatic complexity of the method is 12
Complex Method,NUnit.Util,ResultSummarizer,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ResultSummarizer.cs,Summarize,Cyclomatic complexity of the method is 11
Complex Method,NUnit.Util,RuntimeFrameworkSelector,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\RuntimeFrameworkSelector.cs,SelectRuntimeFramework,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Util,DomainManager,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\DomainManager.cs,CreateDomain,Cyclomatic complexity of the method is 12
Complex Method,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,GetNUnitBinDirectory,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,Load,Cyclomatic complexity of the method is 10
Complex Method,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,Cyclomatic complexity of the method is 13
Complex Method,Codeblast,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\CommandLineOptions.cs,GetHelpText,Cyclomatic complexity of the method is 9
Complex Method,NUnit.Util.ProjectConverters,VisualStudioConverter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProjectConverters\VisualStudioConverter.cs,ConvertVSSolution,Cyclomatic complexity of the method is 12
Long Statement,NUnit.Util,TestLoader,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestLoader.cs,LoadTest,The length of the statement  "						lastException = new ApplicationException( string.Format( "Unable to load {0} because it is not located under the AppBase"' exception.FileName )' exception ); " is 157.
Long Statement,NUnit.Util,TestLoader,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestLoader.cs,MakeTestPackage,The length of the statement  "            ProcessModel processModel = (ProcessModel)userSettings.GetSetting("Options.TestLoader.ProcessModel"' ProcessModel.Default); " is 123.
Long Statement,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,Load,The length of the statement  "							outputPath = outputPath.Replace( "$(SolutionDir)"' Path.GetFullPath( Path.GetDirectoryName( projectPath ) ) + Path.DirectorySeparatorChar ); " is 140.
Long Statement,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The length of the statement  "			XmlElement assemblyNameElement = (XmlElement)doc.SelectSingleNode("/msbuild:Project/msbuild:PropertyGroup/msbuild:AssemblyName"' namespaceManager); " is 147.
Long Statement,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The length of the statement  "			XmlElement outputTypeElement = (XmlElement)doc.SelectSingleNode("/msbuild:Project/msbuild:PropertyGroup/msbuild:OutputType"' namespaceManager); " is 143.
Complex Conditional,NUnit.Util,SettingsGroup,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\SettingsGroup.cs,SaveSetting,The conditional expression  "oldValue is string && settingValue is string && (string)oldValue == (string)settingValue ||  					oldValue is int && settingValue is int && (int)oldValue == (int)settingValue ||  					oldValue is bool && settingValue is bool && (bool)oldValue == (bool)settingValue ||  					oldValue is Enum && settingValue is Enum && oldValue.Equals(settingValue)"  is complex.
Complex Conditional,NUnit.Util,TestLoader,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestLoader.cs,MakeTestPackage,The conditional expression  "domainUsage != DomainUsage.Default &&       // Ignore default setting                  domainUsage != DomainUsage.None &&          // Ignore DomainUsage.None in Gui                  (processModel != ProcessModel.Multiple ||                      domainUsage != DomainUsage.Multiple) && // Both process and domain may not be multiple                  !package.Settings.Contains("DomainUsage")"  is complex.
Complex Conditional,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,CharacterSafeString,The conditional expression  "currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)"  is complex.
Complex Conditional,Codeblast,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\CommandLineOptions.cs,IsOption,The conditional expression  "(c[0] == '-' || c[0] == '/' && AllowForwardSlash) && IsOptionNameChar(c[1])"  is complex.
Empty Catch Block,NUnit.Util,ProcessRunner,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProcessRunner.cs,Dispose,The method has an empty catch block.
Empty Catch Block,NUnit.Util,RecentFileEntry,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\RecentFileEntry.cs,Parse,The method has an empty catch block.
Empty Catch Block,NUnit.Util,ServerUtilities,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ServerUtilities.cs,SafeReleaseChannel,The method has an empty catch block.
Empty Catch Block,Codeblast,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\CommandLineOptions.cs,GetOption,The method has an empty catch block.
Magic Number,NUnit.Util,AggregatingTestRunner,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\AggregatingTestRunner.cs,Load,The following statement contains a magic number: TestRunner runner = CreateRunner(this.runnerID * 100 + index + 1);
Magic Number,NUnit.Util,PathUtils,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\PathUtils.cs,GetAssemblyPathFromFileUri,The following statement contains a magic number: uri[start] == '/' && uri[start+2] == ':'
Magic Number,NUnit.Util,ProcessRunner,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProcessRunner.cs,Load,The following statement contains a magic number: this.agent = Services.TestAgency.GetAgent(                          runtimeFramework'                          30000);
Magic Number,NUnit.Util,ServerBase,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ServerBase.cs,Start,The following statement contains a magic number: this.channel = ServerUtilities.GetTcpChannel(uri + "Channel"' port' 100);
Magic Number,NUnit.Util,ServerUtilities,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: return GetTcpChannel( ""' 0' 2 );
Magic Number,NUnit.Util,ServerUtilities,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: return GetTcpChannel( name' port' 2 );
Magic Number,NUnit.Util,ServerUtilities,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ServerUtilities.cs,GetTcpChannel,The following statement contains a magic number: int retries = 10;
Magic Number,NUnit.Util,DomainManager,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\DomainManager.cs,GetPrivateBinPath,The following statement contains a magic number: StringBuilder sb = new StringBuilder(200);
Magic Number,NUnit.Util,DomainUnloader,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\DomainManager.cs,Unload,The following statement contains a magic number: !thread.Join(30000)
Magic Number,NUnit.Util,LegacySettingsConverter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\SettingsService.cs,Convert,The following statement contains a magic number: int maxFiles = this.GetSetting( "RecentProjects.MaxFiles"' 5 );
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,Stop,The following statement contains a magic number: r.Process.WaitForExit(10000);
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,LaunchAgentProcess,The following statement contains a magic number: switch( targetRuntime.Runtime )              {                  case RuntimeType.Mono:                      p.StartInfo.FileName = NUnitConfiguration.MonoExePath;                      string monoOptions = "--runtime=v" + targetRuntime.ClrVersion.ToString(3);                      if (Debugger.IsAttached)                          monoOptions += " --debug";                      p.StartInfo.Arguments = string.Format("{0} \"{1}\" {2}"' monoOptions' agentExePath' arglist);                      break;                  case RuntimeType.Net:                      p.StartInfo.FileName = agentExePath;                        if (targetRuntime.ClrVersion.Build < 0)                          targetRuntime = RuntimeFramework.GetBestAvailableFramework(targetRuntime);                        string envVar = "v" + targetRuntime.ClrVersion.ToString(3);                      p.StartInfo.EnvironmentVariables["COMPLUS_Version"] = envVar;                        p.StartInfo.Arguments = arglist;                      break;                  default:  				    p.StartInfo.FileName = agentExePath;                      p.StartInfo.Arguments = arglist;                      break;  			}
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,LaunchAgentProcess,The following statement contains a magic number: switch( targetRuntime.Runtime )              {                  case RuntimeType.Mono:                      p.StartInfo.FileName = NUnitConfiguration.MonoExePath;                      string monoOptions = "--runtime=v" + targetRuntime.ClrVersion.ToString(3);                      if (Debugger.IsAttached)                          monoOptions += " --debug";                      p.StartInfo.Arguments = string.Format("{0} \"{1}\" {2}"' monoOptions' agentExePath' arglist);                      break;                  case RuntimeType.Net:                      p.StartInfo.FileName = agentExePath;                        if (targetRuntime.ClrVersion.Build < 0)                          targetRuntime = RuntimeFramework.GetBestAvailableFramework(targetRuntime);                        string envVar = "v" + targetRuntime.ClrVersion.ToString(3);                      p.StartInfo.EnvironmentVariables["COMPLUS_Version"] = envVar;                        p.StartInfo.Arguments = arglist;                      break;                  default:  				    p.StartInfo.FileName = agentExePath;                      p.StartInfo.Arguments = arglist;                      break;  			}
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,CreateRemoteAgent,The following statement contains a magic number: int pollTime = 200;
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,GetNUnitBinDirectory,The following statement contains a magic number: (Environment.Version.Major >= 2) == (v.Major >= 2)
Magic Number,NUnit.Util,TestAgency,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\Services\TestAgency.cs,GetNUnitBinDirectory,The following statement contains a magic number: (Environment.Version.Major >= 2) == (v.Major >= 2)
Magic Number,NUnit.Util,TestLoader,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestLoader.cs,InstallWatcher,The following statement contains a magic number: watcher.Setup(1000' TestProject.ActiveConfig.Assemblies.ToArray());
Magic Number,NUnit.Util,TestResultItem,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestResultItem.cs,ToString,The following statement contains a magic number: return string.Format( "{0}:{1}{2}"' testName' Environment.NewLine' message.Substring( 0' 64000 ) );
Magic Number,NUnit.Util,TestResultItem,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestResultItem.cs,ToString,The following statement contains a magic number: message.Length > 64000
Magic Number,NUnit.Util,TestResultItem,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\TestResultItem.cs,GetToolTipMessage,The following statement contains a magic number: return (ReplaceTabs(GetMessage()' 8));
Magic Number,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The following statement contains a magic number: configurationName = condition.Substring(start + 2).Trim(new char[] { ' '' '\'' });
Magic Number,NUnit.Util,VSProject,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\VSProject.cs,LoadMSBuildProject,The following statement contains a magic number: configurationName = configurationName.Substring(0' configurationName.Length - 7);
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,CharacterSafeString,The following statement contains a magic number: currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,CharacterSafeString,The following statement contains a magic number: currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,CharacterSafeString,The following statement contains a magic number: currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,CharacterSafeString,The following statement contains a magic number: currentChar < 32 && (currentChar != 9 && currentChar != 10 && currentChar != 13)
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: xmlWriter.WriteCData(text.Substring(start' illegal - start + 2));
Magic Number,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,WriteCData,The following statement contains a magic number: start = illegal + 2;
Magic Number,Codeblast,CommandLineOptions,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\CommandLineOptions.cs,IsOption,The following statement contains a magic number: opt.Length < 2
Magic Number,NUnit.Util.ProjectConverters,VisualStudioConverter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProjectConverters\VisualStudioConverter.cs,ConvertVSSolution,The following statement contains a magic number: string vsProjectPath = parts[2].Trim(trimchars);
Magic Number,NUnit.Util.ProjectConverters,VisualStudioConverter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProjectConverters\VisualStudioConverter.cs,ConvertVSSolution,The following statement contains a magic number: string vsProjectGuid = parts[3].Trim(trimchars);
Magic Number,NUnit.Util.ProjectConverters,VisualStudioConverter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\ProjectConverters\VisualStudioConverter.cs,LegacyConvertVSSolution,The following statement contains a magic number: string vsProjectPath = parts[2].Trim(trimchars);
Missing Default,NUnit.Util,XmlResultWriter,C:\research\architectureSmells\repos\nunit_nunitv2\src\ClientUtilities\util\XmlResultWriter.cs,WriteResultElement,The following switch statement is missing a default case: switch (result.ResultState)              {                  case ResultState.Ignored:                  case ResultState.NotRunnable:                  case ResultState.Skipped:                      if (result.Message != null)                      	WriteReasonElement(result);                      break;                    case ResultState.Failure:                  case ResultState.Error:                  case ResultState.Cancelled:                      if (!result.Test.IsSuite || result.FailureSite == FailureSite.SetUp)                          WriteFailureElement(result);                      break;                  case ResultState.Success:                  case ResultState.Inconclusive:                      if (result.Message != null)                          WriteReasonElement(result);                      break;              }
