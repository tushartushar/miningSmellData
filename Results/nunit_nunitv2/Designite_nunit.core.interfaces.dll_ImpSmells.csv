Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NUnit.Core.Extensibility,ParameterSet,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\Extensibility\ParameterSet.cs,FromDataSource,Cyclomatic complexity of the method is 12
Complex Conditional,NUnit.Core.Filters,NotFilter,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\Filters\NotFilter.cs,MatchDescendant,The conditional expression  "!test.IsSuite || test.Tests == null || topLevel && test.RunState == RunState.Explicit"  is complex.
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,InitFromFrameworkVersion,The following statement contains a magic number: if (version.Major > 0) // 0 means any version                    switch (version.Major)                  {                      case 1:                          switch (version.Minor)                          {                              case 0:                                  this.clrVersion = Runtime == RuntimeType.Mono                                      ? new Version(1' 1' 4322)                                      : new Version(1' 0' 3705);                                  break;                              case 1:                                  if (Runtime == RuntimeType.Mono)                                      this.frameworkVersion = new Version(1' 0);                                  this.clrVersion = new Version(1' 1' 4322);                                  break;                              default:                                  ThrowInvalidFrameworkVersion(version);                                  break;                          }                          break;                      case 2:                      case 3:                          this.clrVersion = new Version(2' 0' 50727);                          break;                      case 4:                          this.clrVersion = new Version(4' 0' 30319);                          break;                      default:                          ThrowInvalidFrameworkVersion(version);                          break;                  }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,Parse,The following statement contains a magic number: if (parts.Length == 2)             {                 runtime = (RuntimeType)System.Enum.Parse(typeof(RuntimeType)' parts[0]' true);                 string vstring = parts[1];                 if (vstring != "")                     version = new Version(vstring);             }             else if (char.ToLower(s[0]) == 'v')             {                 version = new Version(s.Substring(1));             }             else if (IsRuntimeTypeName(s))             {                 runtime = (RuntimeType)System.Enum.Parse(typeof(RuntimeType)' s' true);             }             else             {                 version = new Version(s);             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: if (monoPrefix != null)             {                 string displayFmt = version != null                     ? "Mono " + version + " - {0} Profile"                     : "Mono {0} Profile";                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/1.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));                     framework.displayName = string.Format(displayFmt' "1.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/2.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));                     framework.displayName = string.Format(displayFmt' "2.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/4.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));                     framework.displayName = string.Format(displayFmt' "4.0");                     frameworks.Add(framework);                 }             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: if (monoPrefix != null)             {                 string displayFmt = version != null                     ? "Mono " + version + " - {0} Profile"                     : "Mono {0} Profile";                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/1.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));                     framework.displayName = string.Format(displayFmt' "1.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/2.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));                     framework.displayName = string.Format(displayFmt' "2.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/4.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));                     framework.displayName = string.Format(displayFmt' "4.0");                     frameworks.Add(framework);                 }             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: if (monoPrefix != null)             {                 string displayFmt = version != null                     ? "Mono " + version + " - {0} Profile"                     : "Mono {0} Profile";                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/1.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));                     framework.displayName = string.Format(displayFmt' "1.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/2.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));                     framework.displayName = string.Format(displayFmt' "2.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/4.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));                     framework.displayName = string.Format(displayFmt' "4.0");                     frameworks.Add(framework);                 }             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: if (monoPrefix != null)             {                 string displayFmt = version != null                     ? "Mono " + version + " - {0} Profile"                     : "Mono {0} Profile";                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/1.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));                     framework.displayName = string.Format(displayFmt' "1.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/2.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));                     framework.displayName = string.Format(displayFmt' "2.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/4.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));                     framework.displayName = string.Format(displayFmt' "4.0");                     frameworks.Add(framework);                 }             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendMonoFramework,The following statement contains a magic number: if (monoPrefix != null)             {                 string displayFmt = version != null                     ? "Mono " + version + " - {0} Profile"                     : "Mono {0} Profile";                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/1.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(1' 1' 4322));                     framework.displayName = string.Format(displayFmt' "1.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/2.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(2' 0' 50727));                     framework.displayName = string.Format(displayFmt' "2.0");                     frameworks.Add(framework);                 }                  if (File.Exists(Path.Combine(monoPrefix' "lib/mono/4.0/mscorlib.dll")))                 {                     RuntimeFramework framework = new RuntimeFramework(RuntimeType.Mono' new Version(4' 0' 30319));                     framework.displayName = string.Format(displayFmt' "4.0");                     frameworks.Add(framework);                 }             }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendDotNetFourFrameworkVersions,The following statement contains a magic number: if (CheckInstallDword(profileKey))              {                  RuntimeFramework framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 0));                  frameworks.Add(framework);                    int release = (int)profileKey.GetValue("Release"' 0);                  if (release > 0)                  {                      framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 5));                      frameworks.Add(framework);                  }              }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendDotNetFourFrameworkVersions,The following statement contains a magic number: if (CheckInstallDword(profileKey))              {                  RuntimeFramework framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 0));                  frameworks.Add(framework);                    int release = (int)profileKey.GetValue("Release"' 0);                  if (release > 0)                  {                      framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 5));                      frameworks.Add(framework);                  }              }
Magic Number,NUnit.Core,RuntimeFramework,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\RuntimeFramework.cs,AppendDotNetFourFrameworkVersions,The following statement contains a magic number: if (CheckInstallDword(profileKey))              {                  RuntimeFramework framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 0));                  frameworks.Add(framework);                    int release = (int)profileKey.GetValue("Release"' 0);                  if (release > 0)                  {                      framework = new RuntimeFramework(RuntimeType.Net' new Version(4' 5));                      frameworks.Add(framework);                  }              }
Missing Default,NUnit.Core,TestResult,C:\repos\nunit_nunitv2\src\NUnitCore\interfaces\TestResult.cs,AddResult,The following switch statement is missing a default case: switch (result.ResultState)              {                  case ResultState.Failure:                  case ResultState.Error:                  case ResultState.NotRunnable:                      if (!this.IsFailure && !this.IsError && this.ResultState != ResultState.NotRunnable)                          this.Failure("One or more child tests had errors"' null' FailureSite.Child);                      break;                  case ResultState.Success:                      if (this.ResultState == ResultState.Inconclusive)                          this.Success();                      break;                  // Removed this case due to bug #928018                  //case ResultState.Ignored:                  //    if (this.ResultState == ResultState.Inconclusive || ResultState == ResultState.Success)                  //        this.SetResult(ResultState.Ignored' "One or more child tests were ignored"' null' FailureSite.Child);                  //    break;                  case ResultState.Cancelled:                      this.SetResult(ResultState.Cancelled' result.Message' null' FailureSite.Child);                      break;              }
