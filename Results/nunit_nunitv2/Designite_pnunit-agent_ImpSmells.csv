Implementation smell,Namespace,Class,File,Method,Description
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Magic Number,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following statement contains a magic number: if( bDaemonMode )              {                  // wait continously                  while (true)                  {                      Thread.Sleep(10000);                  }              }              else              {                  string line;                  while( (line = Console.ReadLine()) != "" )                  {                      switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }                  }              }
Missing Default,PNUnit.Agent,PNUnitAgent,C:\repos\nunit_nunitv2\src\PNUnit\agent\agent.cs,Run,The following switch statement is missing a default case: switch( line )                      {                          case "gc":                              Console.WriteLine("Cleaning up memory {0} Mb"'                                  GC.GetTotalMemory(true)/1024/1024);                              break;                          case "collect":                              Console.WriteLine("Collecting memory {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              GC.Collect();                              Console.WriteLine("Memory collected {0} Mb"'                                  GC.GetTotalMemory(false)/1024/1024);                              break;                      }
Missing Default,PNUnit.Agent,PNUnitTestRunner,C:\repos\nunit_nunitv2\src\PNUnit\agent\PNUnitTestRunner.cs,IsWindows,The following switch statement is missing a default case: switch (Environment.OSVersion.Platform)              {                  case PlatformID.Win32Windows:                  case System.PlatformID.Win32S:                  case PlatformID.Win32NT:                      return true;              }
