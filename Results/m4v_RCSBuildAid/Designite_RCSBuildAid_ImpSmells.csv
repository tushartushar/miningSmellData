Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RCSBuildAid,InFlightReadings,C:\repos\m4v_RCSBuildAid\Plugin\Debug.cs,FixedUpdate,Cyclomatic complexity of the method is 8
Complex Method,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,RCSBuildAid,MarkerForces,C:\repos\m4v_RCSBuildAid\Plugin\MarkerForces.cs,LateUpdate,Cyclomatic complexity of the method is 8
Complex Method,RCSBuildAid,MenuDebug,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuDebug.cs,content,Cyclomatic complexity of the method is 12
Long Identifier,RCSBuildAid,Settings,C:\repos\m4v_RCSBuildAid\Plugin\Settings.cs,,The length of the parameter disable_mod_compatibility_check is 31.
Magic Number,RCSBuildAid,InFlightReadings,C:\repos\m4v_RCSBuildAid\Plugin\Debug.cs,FixedUpdate,The following statement contains a magic number: if (DebugSettings.inFlightAngularInfo) {                  double vel = vessel.angularVelocity.magnitude;                  time += TimeWarp.fixedDeltaTime;                  if (time > 0.1) {                      acc = (vel - oldVel) / time;                      maxAcc = Mathf.Max ((float)maxAcc' Mathf.Abs ((float)acc));                      oldVel = vel;                      time = 0;                  }                  longTime += TimeWarp.fixedDeltaTime;                  if (longTime > 10) {                      maxAcc = 0;                      longTime = 0;                  }                  //Vector3 MOI = vessel.findLocalMOI (vessel.CoM);                  Vector3 MOI = Vector3.zero;                  guiText.text += String.Format (                      "angvel: {0}\n" +                      "angmo: {1}\n" +                      "rotation: {11}\n" +                      "MOI: {2:F3} {3:F3} {4:F3}\n" +                      "vel: {5:F5} rads {6:F5} degs\n" +                      "acc: {7:F5} rads {8:F5} degs\n" +                      "max: {9:F5} rads {10:F5} degs\n"'                       vessel.angularVelocity'                      vessel.angularMomentum'                      MOI.x' MOI.y' MOI.z'                      vel' toDeg (vel)'                      acc' toDeg (acc)'                      maxAcc' toDeg (maxAcc)'                      vessel.transform.rotation);              }
Magic Number,RCSBuildAid,InFlightReadings,C:\repos\m4v_RCSBuildAid\Plugin\Debug.cs,FixedUpdate,The following statement contains a magic number: if (DebugSettings.inFlightAngularInfo) {                  double vel = vessel.angularVelocity.magnitude;                  time += TimeWarp.fixedDeltaTime;                  if (time > 0.1) {                      acc = (vel - oldVel) / time;                      maxAcc = Mathf.Max ((float)maxAcc' Mathf.Abs ((float)acc));                      oldVel = vel;                      time = 0;                  }                  longTime += TimeWarp.fixedDeltaTime;                  if (longTime > 10) {                      maxAcc = 0;                      longTime = 0;                  }                  //Vector3 MOI = vessel.findLocalMOI (vessel.CoM);                  Vector3 MOI = Vector3.zero;                  guiText.text += String.Format (                      "angvel: {0}\n" +                      "angmo: {1}\n" +                      "rotation: {11}\n" +                      "MOI: {2:F3} {3:F3} {4:F3}\n" +                      "vel: {5:F5} rads {6:F5} degs\n" +                      "acc: {7:F5} rads {8:F5} degs\n" +                      "max: {9:F5} rads {10:F5} degs\n"'                       vessel.angularVelocity'                      vessel.angularMomentum'                      MOI.x' MOI.y' MOI.z'                      vel' toDeg (vel)'                      acc' toDeg (acc)'                      maxAcc' toDeg (maxAcc)'                      vessel.transform.rotation);              }
Magic Number,RCSBuildAid,InFlightReadings,C:\repos\m4v_RCSBuildAid\Plugin\Debug.cs,toOrbit,The following statement contains a magic number: const double altitude = 11461728000;
Magic Number,RCSBuildAid,DragAverage,C:\repos\m4v_RCSBuildAid\Plugin\Debug.cs,FixedUpdate,The following statement contains a magic number: if (values.Count > 1000) {                  values.RemoveAt (0);              }
Magic Number,RCSBuildAid,DeltaV,C:\repos\m4v_RCSBuildAid\Plugin\DeltaV.cs,Update,The following statement contains a magic number: burnTime = thrust < 0.001 ? 0 : resource * G * isp / thrust;
Magic Number,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,Awake,The following statement contains a magic number: obj.layer = 2;
Magic Number,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,switchDirection,The following statement contains a magic number: if (Direction == dir) {                  /* disabling due to pressing twice the same key */                  SetDirection(Direction.none);                  if (Mode != PluginMode.Engine) {                      SetMode (PluginMode.none);                  }              } else {                  /* enabling RCS vectors or switching direction */                  if (Mode == PluginMode.none) {                      setPreviousMode();                  }                  SetDirection(dir);                  switch(Mode) {                  case PluginMode.RCS:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No RCS thrusters in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  case PluginMode.Attitude:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No attitude control elements in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  }              }
Magic Number,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,switchDirection,The following statement contains a magic number: if (Direction == dir) {                  /* disabling due to pressing twice the same key */                  SetDirection(Direction.none);                  if (Mode != PluginMode.Engine) {                      SetMode (PluginMode.none);                  }              } else {                  /* enabling RCS vectors or switching direction */                  if (Mode == PluginMode.none) {                      setPreviousMode();                  }                  SetDirection(dir);                  switch(Mode) {                  case PluginMode.RCS:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No RCS thrusters in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  case PluginMode.Attitude:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No attitude control elements in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  }              }
Magic Number,RCSBuildAid,Settings,C:\repos\m4v_RCSBuildAid\Plugin\Settings.cs,LoadConfig,The following statement contains a magic number: window_x         = GetValue ("window_x"        ' 280  );
Magic Number,RCSBuildAid,Settings,C:\repos\m4v_RCSBuildAid\Plugin\Settings.cs,LoadConfig,The following statement contains a magic number: window_y         = GetValue ("window_y"        ' 114  );
Magic Number,RCSBuildAid,MarkerForces,C:\repos\m4v_RCSBuildAid\Plugin\MarkerForces.cs,LateUpdate,The following statement contains a magic number: switch (RCSBuildAid.Mode) {              case PluginMode.RCS:                  /* translation mode' we want to reduce torque */                  transVector.valueTarget = RCSBuildAid.TranslationVector * -1;                  torqueVector.valueTarget = Vector3.zero;                  break;              case PluginMode.Attitude:                  /* rotation mode' we want to reduce translation */                  torqueVector.valueTarget = RCSBuildAid.RotationVector;                  transVector.valueTarget = Vector3.zero;                  break;              case PluginMode.Engine:                  torqueVector.valueTarget = Vector3.zero;                  /* make it proportional to TWR */                  transVector.value = translation.normalized * twr * 5/3;                  switch (EditorDriver.editorFacility) {                  case EditorFacility.VAB:                      transVector.valueTarget = Vector3.up;                      break;                  case EditorFacility.SPH:                      transVector.valueTarget = Vector3.forward;                      break;                  default:                      transVector.valueTarget = Vector3.zero;                      break;                  }                  break;              }
Magic Number,RCSBuildAid,MarkerForces,C:\repos\m4v_RCSBuildAid\Plugin\MarkerForces.cs,LateUpdate,The following statement contains a magic number: switch (RCSBuildAid.Mode) {              case PluginMode.RCS:                  /* translation mode' we want to reduce torque */                  transVector.valueTarget = RCSBuildAid.TranslationVector * -1;                  torqueVector.valueTarget = Vector3.zero;                  break;              case PluginMode.Attitude:                  /* rotation mode' we want to reduce translation */                  torqueVector.valueTarget = RCSBuildAid.RotationVector;                  transVector.valueTarget = Vector3.zero;                  break;              case PluginMode.Engine:                  torqueVector.valueTarget = Vector3.zero;                  /* make it proportional to TWR */                  transVector.value = translation.normalized * twr * 5/3;                  switch (EditorDriver.editorFacility) {                  case EditorFacility.VAB:                      transVector.valueTarget = Vector3.up;                      break;                  case EditorFacility.SPH:                      transVector.valueTarget = Vector3.forward;                      break;                  default:                      transVector.valueTarget = Vector3.zero;                      break;                  }                  break;              }
Magic Number,RCSBuildAid,Style,C:\repos\m4v_RCSBuildAid\Plugin\GUI\Style.cs,setupStyle,The following statement contains a magic number: GUI.skin.toggle.padding = new RectOffset (15' 0' 0' 0);
Magic Number,RCSBuildAid,Style,C:\repos\m4v_RCSBuildAid\Plugin\GUI\Style.cs,setupStyle,The following statement contains a magic number: tinyButton.padding = new RectOffset (0' 2' 0' 3);
Magic Number,RCSBuildAid,Style,C:\repos\m4v_RCSBuildAid\Plugin\GUI\Style.cs,setupStyle,The following statement contains a magic number: tinyButton.padding = new RectOffset (0' 2' 0' 3);
Magic Number,RCSBuildAid,MenuEngines,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuEngines.cs,DrawContent,The following statement contains a magic number: {                  if (RCSBuildAid.Engines.Count != 0) {                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Reference"' MainWindow.style.readoutName);                          MainWindow.ReferenceButton ();                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Torque"' MainWindow.style.readoutName);                          GUILayout.Label (comv.Torque ().magnitude.ToString ("0.### kNm"));                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Thrust"' MainWindow.style.readoutName' GUILayout.Width(40));                          if (GUILayout.Button (Settings.engines_vac ? "Vac" : "ASL"' MainWindow.style.clickLabel' GUILayout.Width(36))) {                              Settings.engines_vac = !Settings.engines_vac;                          }                          GUILayout.Label (comv.Thrust ().magnitude.ToString ("0.## kN"));                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Body"' MainWindow.style.readoutName);                          if (GUILayout.Button (Settings.selected_body.name' MainWindow.style.clickLabel)) {                              MainWindow.cBodyListEnabled = !MainWindow.cBodyListEnabled;                              MainWindow.cBodyListMode = RCSBuildAid.Mode;                          }                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("TWR"' MainWindow.style.readoutName);                          GUILayout.Label (comv.TWR.ToString ("0.##"));                      }                      GUILayout.EndHorizontal ();                      gimbals.DrawContent ();                  } else {                      GUILayout.Label ("No engines attached"' MainWindow.style.centerText);                  }              }
Magic Number,RCSBuildAid,MenuEngines,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuEngines.cs,DrawContent,The following statement contains a magic number: {                  if (RCSBuildAid.Engines.Count != 0) {                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Reference"' MainWindow.style.readoutName);                          MainWindow.ReferenceButton ();                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Torque"' MainWindow.style.readoutName);                          GUILayout.Label (comv.Torque ().magnitude.ToString ("0.### kNm"));                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Thrust"' MainWindow.style.readoutName' GUILayout.Width(40));                          if (GUILayout.Button (Settings.engines_vac ? "Vac" : "ASL"' MainWindow.style.clickLabel' GUILayout.Width(36))) {                              Settings.engines_vac = !Settings.engines_vac;                          }                          GUILayout.Label (comv.Thrust ().magnitude.ToString ("0.## kN"));                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("Body"' MainWindow.style.readoutName);                          if (GUILayout.Button (Settings.selected_body.name' MainWindow.style.clickLabel)) {                              MainWindow.cBodyListEnabled = !MainWindow.cBodyListEnabled;                              MainWindow.cBodyListMode = RCSBuildAid.Mode;                          }                      }                      GUILayout.EndHorizontal ();                      GUILayout.BeginHorizontal ();                      {                          GUILayout.Label ("TWR"' MainWindow.style.readoutName);                          GUILayout.Label (comv.TWR.ToString ("0.##"));                      }                      GUILayout.EndHorizontal ();                      gimbals.DrawContent ();                  } else {                      GUILayout.Label ("No engines attached"' MainWindow.style.centerText);                  }              }
Magic Number,RCSBuildAid,MenuMarkers,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuMarkers.cs,content,The following statement contains a magic number: {                  GUILayout.BeginHorizontal ();                  {                      for (int i = 0; i < 3; i++) {                          MarkerType marker = (MarkerType)i;                          bool visibleBefore = MarkerManager.IsMarkerVisible(marker);                          bool visibleAfter = GUILayout.Toggle (visibleBefore' marker.ToString());                          if (visibleBefore != visibleAfter) {                              MarkerManager.SetMarkerVisibility(marker' visibleAfter);                          }                      }                  }                  GUILayout.EndHorizontal ();                  GUILayout.BeginHorizontal ();                  {                      GUILayout.Label ("Size"' MainWindow.style.sizeLabel);                      Settings.marker_scale = GUILayout.HorizontalSlider (Settings.marker_scale' 0' 1);                  }                  GUILayout.EndHorizontal ();              }
Magic Number,RCSBuildAid,DebugWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuDebug.cs,Button,The following statement contains a magic number: return GUILayout.Button (text' MainWindow.style.smallButton' GUILayout.Width (15));
Magic Number,RCSBuildAid,DebugVesselTree,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuDebug.cs,partRecurse,The following statement contains a magic number: {                  GUILayout.Space (nest * 8);                  if (part.children.Count > 0) {                      if (Button (open ? "-" : "+")) {                          treebranch [id] = !open;                      }                  }                  if (Button ("i")) {                      partinfo [id] = !info;                  }                  GUILayout.Label (part.partInfo.name);              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,OnGUI,The following statement contains a magic number: if (RCSBuildAid.Enabled) {                  if (minimized) {                      winRect.height = Style.main_window_minimized_height;                      winRect = GUI.Window (winID' winRect' drawWindowMinimized' title' style.mainWindowMinimized);                  } else {                      if (Event.current.type == EventType.Layout) {                          winRect.height = Style.main_window_height;                      }                      winRect = GUILayout.Window (winID' winRect' drawWindow' title' style.mainWindow);                        cBodyListEnabled = cBodyListEnabled && (RCSBuildAid.Mode == cBodyListMode);                      if (cBodyListEnabled) {                          if (Event.current.type == EventType.Layout) {                              if ((winRect.x + winRect.width + Style.cbody_list_width + 5) > Screen.width) {                                  winCBodyListRect.x = winRect.x - Style.cbody_list_width - 5;                              } else {                                  winCBodyListRect.x = winRect.x + winRect.width + 5;                              }                                winCBodyListRect.y = winRect.y;                              winCBodyListRect.width = Style.cbody_list_width;                              winCBodyListRect.height = Style.main_window_height;                          }                          winCBodyListRect = GUILayout.Window (winID + 1' winCBodyListRect'                                                                drawBodyListWindow'                                                               "Celestial bodies"' GUI.skin.box);                      }                   }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,OnGUI,The following statement contains a magic number: if (RCSBuildAid.Enabled) {                  if (minimized) {                      winRect.height = Style.main_window_minimized_height;                      winRect = GUI.Window (winID' winRect' drawWindowMinimized' title' style.mainWindowMinimized);                  } else {                      if (Event.current.type == EventType.Layout) {                          winRect.height = Style.main_window_height;                      }                      winRect = GUILayout.Window (winID' winRect' drawWindow' title' style.mainWindow);                        cBodyListEnabled = cBodyListEnabled && (RCSBuildAid.Mode == cBodyListMode);                      if (cBodyListEnabled) {                          if (Event.current.type == EventType.Layout) {                              if ((winRect.x + winRect.width + Style.cbody_list_width + 5) > Screen.width) {                                  winCBodyListRect.x = winRect.x - Style.cbody_list_width - 5;                              } else {                                  winCBodyListRect.x = winRect.x + winRect.width + 5;                              }                                winCBodyListRect.y = winRect.y;                              winCBodyListRect.width = Style.cbody_list_width;                              winCBodyListRect.height = Style.main_window_height;                          }                          winCBodyListRect = GUILayout.Window (winID + 1' winCBodyListRect'                                                                drawBodyListWindow'                                                               "Celestial bodies"' GUI.skin.box);                      }                   }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,OnGUI,The following statement contains a magic number: if (RCSBuildAid.Enabled) {                  if (minimized) {                      winRect.height = Style.main_window_minimized_height;                      winRect = GUI.Window (winID' winRect' drawWindowMinimized' title' style.mainWindowMinimized);                  } else {                      if (Event.current.type == EventType.Layout) {                          winRect.height = Style.main_window_height;                      }                      winRect = GUILayout.Window (winID' winRect' drawWindow' title' style.mainWindow);                        cBodyListEnabled = cBodyListEnabled && (RCSBuildAid.Mode == cBodyListMode);                      if (cBodyListEnabled) {                          if (Event.current.type == EventType.Layout) {                              if ((winRect.x + winRect.width + Style.cbody_list_width + 5) > Screen.width) {                                  winCBodyListRect.x = winRect.x - Style.cbody_list_width - 5;                              } else {                                  winCBodyListRect.x = winRect.x + winRect.width + 5;                              }                                winCBodyListRect.y = winRect.y;                              winCBodyListRect.width = Style.cbody_list_width;                              winCBodyListRect.height = Style.main_window_height;                          }                          winCBodyListRect = GUILayout.Window (winID + 1' winCBodyListRect'                                                                drawBodyListWindow'                                                               "Celestial bodies"' GUI.skin.box);                      }                   }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,nextModeButton,The following statement contains a magic number: if (GUILayout.Button (modeName' style.mainButton' GUILayout.Width (20))) {                  int i = getPluginModeIndex() + step;                  RCSBuildAid.SetMode (getEnabledPluginMode(i));              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,minimizeButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 15' 3' 12' 12)' String.Empty' style.tinyButton)) {                  minimized = !minimized;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,minimizeButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 15' 3' 12' 12)' String.Empty' style.tinyButton)) {                  minimized = !minimized;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,minimizeButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 15' 3' 12' 12)' String.Empty' style.tinyButton)) {                  minimized = !minimized;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,minimizeButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 15' 3' 12' 12)' String.Empty' style.tinyButton)) {                  minimized = !minimized;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,settingsButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 30' 3' 12' 12)' "s"' style.tinyButton)) {                  settings = !settings;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,settingsButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 30' 3' 12' 12)' "s"' style.tinyButton)) {                  settings = !settings;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,settingsButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 30' 3' 12' 12)' "s"' style.tinyButton)) {                  settings = !settings;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,settingsButton,The following statement contains a magic number: if (GUI.Button (new Rect (winRect.width - 30' 3' 12' 12)' "s"' style.tinyButton)) {                  settings = !settings;                  return true;              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,drawBodyListWindow,The following statement contains a magic number: GUILayout.Space(GUI.skin.box.lineHeight + 4);
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,drawBodyListWindow,The following statement contains a magic number: {                  celestialBodyRecurse(Planetarium.fetch.Sun' 5);              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,celestialBodyRecurse,The following statement contains a magic number: foreach (CelestialBody b in body.orbitingBodies) {                  celestialBodyRecurse(b' padding + 10);              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,RotationButtonWithReset,The following statement contains a magic number: {                  if (GUILayout.Button (rotationMap [RCSBuildAid.Direction]' MainWindow.style.smallButton)) {                      int i = (int)RCSBuildAid.Direction;                      i = MainWindow.LoopIndexSelect (1' 6' i);                      RCSBuildAid.SetDirection ((Direction)i);                  }                  if (GUILayout.Button ("R"' MainWindow.style.squareButton)) {                      RCSBuildAid.SetDirection (Direction.none);                  }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,RotationButton,The following statement contains a magic number: if (GUILayout.Button (rotationMap [RCSBuildAid.Direction]' MainWindow.style.smallButton)) {                  int i = (int)RCSBuildAid.Direction;                  i = MainWindow.LoopIndexSelect (1' 6' i);                  RCSBuildAid.SetDirection ((Direction)i);              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,TranslationButton,The following statement contains a magic number: if (GUILayout.Button (translationMap [RCSBuildAid.Direction]' MainWindow.style.smallButton)) {                  int i = (int)RCSBuildAid.Direction;                  i = LoopIndexSelect (1' 6' i);                  RCSBuildAid.SetDirection ((Direction)i);              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,selectNextReference,The following statement contains a magic number: for (int j = 0; j < 3; j++) {                  i = LoopIndexSelect (0' 2' i);                  if (array [i]) {                      found = true;                      break;                  }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,selectNextReference,The following statement contains a magic number: for (int j = 0; j < 3; j++) {                  i = LoopIndexSelect (0' 2' i);                  if (array [i]) {                      found = true;                      break;                  }              }
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,TimeFormat,The following statement contains a magic number: int min = (int)seconds / 60;
Magic Number,RCSBuildAid,MainWindow,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MainWindow.cs,TimeFormat,The following statement contains a magic number: int sec = (int)seconds % 60;
Magic Number,RCSBuildAid,DragForce,C:\repos\m4v_RCSBuildAid\Plugin\DragForce.cs,Awake,The following statement contains a magic number: vector.upperMagnitude = 150;
Magic Number,RCSBuildAid,DragForce,C:\repos\m4v_RCSBuildAid\Plugin\DragForce.cs,Awake,The following statement contains a magic number: vector.maxLength = 2;
Magic Number,RCSBuildAid,MenuParachutes,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuParachutes.cs,updateAltitude,The following statement contains a magic number: float maxAltTerrain = Mathf.Round ((float)(atmAlt * 0.25 / 1000)) * 1000f;
Magic Number,RCSBuildAid,MenuParachutes,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuParachutes.cs,updateAltitude,The following statement contains a magic number: float maxAltTerrain = Mathf.Round ((float)(atmAlt * 0.25 / 1000)) * 1000f;
Magic Number,RCSBuildAid,MenuParachutes,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuParachutes.cs,updateAltitude,The following statement contains a magic number: terrain_height = 0.01010101f * maxAltTerrain * (Mathf.Pow (10' 2 * altSlider) - 1);
Magic Number,RCSBuildAid,MenuParachutes,C:\repos\m4v_RCSBuildAid\Plugin\GUI\MenuParachutes.cs,updateAltitude,The following statement contains a magic number: terrain_height = 0.01010101f * maxAltTerrain * (Mathf.Pow (10' 2 * altSlider) - 1);
Magic Number,RCSBuildAid,GimbalRotation,C:\repos\m4v_RCSBuildAid\Plugin\GimbalRotation.cs,Update,The following statement contains a magic number: if (gimbal == null || (RCSBuildAid.Direction == Direction.none && (Time.time - startTime) * speed > 2)) {                  return;              }
Magic Number,RCSBuildAid,GimbalRotation,C:\repos\m4v_RCSBuildAid\Plugin\GimbalRotation.cs,Update,The following statement contains a magic number: for (int i = 0; i < gimbal.gimbalTransforms.Count; i++) {                  Transform t = gimbal.gimbalTransforms [i];                  Quaternion finalRotation;                  if (gimbal.gimbalLock || (gimbal.part.inverseStage != RCSBuildAid.LastStage)                       || (RCSBuildAid.Mode != PluginMode.Engine)) {                      finalRotation = initRots [i];                  } else {                      float angle = getGimbalRange ();                      Vector3 pivot;                      Vector3 rotationVector = getRotation ();                      /* Get the proyection in the up vector' that one is for roll */                      Vector3 up = RCSBuildAid.ReferenceTransform.up;                      Vector3 roll = Vector3.Dot (rotationVector' up) * up;                      if (roll.sqrMagnitude > 0.01) {                          int dir = (roll.normalized + up).magnitude > 1 ? 1 : -1; /* save roll direction */                          /* translate roll into pitch/yaw rotation */                          Vector3 distance = t.position - RCSBuildAid.ReferenceTransform.transform.position;                          Vector3 new_roll = distance - Vector3.Dot (distance' roll.normalized) * roll.normalized;                          new_roll *= dir;                          /* update rotationVector */                          rotationVector -= roll;                          rotationVector += new_roll;                      }                      pivot = t.InverseTransformDirection (rotationVector);                      finalRotation = initRots [i] * Quaternion.AngleAxis (angle' pivot);                  }                  t.localRotation = Quaternion.Lerp (t.localRotation' finalRotation' (Time.time - startTime) * speed);              }
Magic Number,RCSBuildAid,CelestialBodyExtensions,C:\repos\m4v_RCSBuildAid\Plugin\CelestialBodyExtensions.cs,density,The following statement contains a magic number: return (float)body.GetDensity (body.GetPressure(altitude)' 300);
Magic Number,RCSBuildAid,CelestialBodyExtensions,C:\repos\m4v_RCSBuildAid\Plugin\CelestialBodyExtensions.cs,gravity,The following statement contains a magic number: return (float)body.gMagnitudeAtCenter / Mathf.Pow ((float)body.Radius + altitude' 2);
Magic Number,RCSBuildAid,CoDMarker,C:\repos\m4v_RCSBuildAid\Plugin\CoDMarker.cs,findCenterOfDrag,The following statement contains a magic number: switch (RCSBuildAid.Mode) {              case PluginMode.Parachutes:                  for (int i = 0; i < RCSBuildAid.Parachutes.Count; i++) {                      var parachute = (ModuleParachute)RCSBuildAid.Parachutes [i];                      var part = parachute.part;                      var dc = part.DragCubes;                      #if DEBUG                      var vector = parachute.GetComponent<VectorGraphic> ();                      if (vector == null) {                          vector = parachute.gameObject.AddComponent<VectorGraphic> ();                          vector.setColor (Color.blue);                          vector.minLength = 0.6f;                      }                      #endif                      dc.SetCubeWeight ("DEPLOYED"' 1);                      dc.SetCubeWeight ("SEMIDEPLOYED"' 0);                      dc.SetCubeWeight ("PACKED"' 0);                      dc.SetOcclusionMultiplier (0);                      /* I need to do all this since parachute's drag depends of the                        * orientation of the canopy */                      Transform t = part.FindModelTransform (parachute.canopyName);                      t.rotation = Quaternion.LookRotation (-VelocityDirection' part.transform.forward);                      if (part.symmetryCounterparts != null) {                          float angle = Mathf.Clamp (parachute.spreadAngle * (part.symmetryCounterparts.Count + 1)' 0' 45);                          t.Rotate (angle' 0' 0' Space.Self);                      }                      var rotation = Quaternion.LookRotation (part.partTransform.InverseTransformDirection (t.forward));                      dc.SetDragVectorRotation (rotation);                      #if DEBUG                      vector.value = part.partTransform.InverseTransformDirection(dc.DragVector) * dc.AreaDrag;                      #endif                  }                  break;              }
Magic Number,RCSBuildAid,CoDMarker,C:\repos\m4v_RCSBuildAid\Plugin\CoDMarker.cs,calculateTerminalVelocity,The following statement contains a magic number: return Mathf.Sqrt ((float)((2000 * gravity * mass) / (density * Cd)));
Magic Number,RCSBuildAid,CoDMarker,C:\repos\m4v_RCSBuildAid\Plugin\CoDMarker.cs,calculateDragForce,The following statement contains a magic number: float magnitude = (float)(0.0005 * Cd * density * speed * speed);
Magic Number,RCSBuildAid,DragCubeVector,C:\repos\m4v_RCSBuildAid\Plugin\DragCubeVector.cs,Start,The following statement contains a magic number: v.upperMagnitude = 20;
Magic Number,RCSBuildAid,RCSForce,C:\repos\m4v_RCSBuildAid\Plugin\RCSForce.cs,getThrust,The following statement contains a magic number: float p = module.thrustPercentage / 100;
Magic Number,RCSBuildAid,EngineForce,C:\repos\m4v_RCSBuildAid\Plugin\EngineForce.cs,getThrust,The following statement contains a magic number: float p = Engine.thrustPercentage / 100;
Magic Number,RCSBuildAid,AverageMarker,C:\repos\m4v_RCSBuildAid\Plugin\AverageMarker.cs,UpdatePosition,The following statement contains a magic number: Vector3 position = (CoM1.transform.position + CoM2.transform.position) / 2;
Magic Number,RCSBuildAid,AverageMarker,C:\repos\m4v_RCSBuildAid\Plugin\AverageMarker.cs,UpdatePosition,The following statement contains a magic number: totalMass = (CoM1.mass + CoM2.mass) / 2;
Magic Number,RCSBuildAid,VectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\VectorGraphic.cs,Awake,The following statement contains a magic number: line.SetVertexCount (2);
Magic Number,RCSBuildAid,VectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\VectorGraphic.cs,Awake,The following statement contains a magic number: lineEnd.SetVertexCount(2);
Magic Number,RCSBuildAid,VectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\VectorGraphic.cs,LateUpdate,The following statement contains a magic number: if (line.enabled) {                  /* calc dimentions */                  calcDimentions (out lenght' out width);                    setWidth (width);                    Vector3 norm = value.normalized;                    startPoint = transform.position + norm * offset;                  endPoint = startPoint + norm * lenght;                  Vector3 dir = endPoint - startPoint;                    /* calculate arrow tip lenght */                  float arrowL = Mathf.Clamp (dir.magnitude / 2f' 0f' width * 4);                  Vector3 midPoint = endPoint - dir.normalized * arrowL;                    line.SetPosition (0' startPoint);                  line.SetPosition (1' midPoint);                    lineEnd.SetPosition (0' midPoint);                  lineEnd.SetPosition (1' endPoint);                    showDebugLabel ();              }
Magic Number,RCSBuildAid,MarkerVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\MarkerVectorGraphic.cs,Awake,The following statement contains a magic number: if (lines.Count == 2) {                  target = newLine ();                  lines.Add (target);              } else {                  target = lines [2];              }
Magic Number,RCSBuildAid,MarkerVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\MarkerVectorGraphic.cs,Awake,The following statement contains a magic number: if (lines.Count == 2) {                  target = newLine ();                  lines.Add (target);              } else {                  target = lines [2];              }
Magic Number,RCSBuildAid,MarkerVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\MarkerVectorGraphic.cs,Start,The following statement contains a magic number: target.SetVertexCount (2);
Magic Number,RCSBuildAid,MarkerVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\MarkerVectorGraphic.cs,Start,The following statement contains a magic number: upperMagnitude = 5;
Magic Number,RCSBuildAid,CircularVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CircularVectorGraphic.cs,Start,The following statement contains a magic number: line.SetVertexCount(vertexCount - 3);
Magic Number,RCSBuildAid,CircularVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CircularVectorGraphic.cs,Start,The following statement contains a magic number: lineEnd.SetVertexCount(2);
Magic Number,RCSBuildAid,CircularVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CircularVectorGraphic.cs,LateUpdate,The following statement contains a magic number: if (line.enabled) {                  /* calc width */                  float width = calcDimentionExp(minWidth' maxWidth);                  setWidth (width);                    /* calc radius */                  float radius = calcDimentionExp(minRadius' maxRadius);                    /* Draw our circle */                  float angle = 2 * Mathf.PI / vertexCount;                  const float pha = Mathf.PI * 4f / 9f; /* phase angle' so the circle starts and ends at the                                                   translation vector */                  Func<float' float' float> calcx = (a' r) => r * Mathf.Cos( a - pha);                  Func<float' float' float> calcy = (a' r) => r * Mathf.Sin(-a + pha);                  float x' y' z = 0;                  Vector3 v = Vector3.zero;                  int i = 0;                  for (; i < vertexCount - 3; i++) {                      x = calcx(angle * i' radius);                      y = calcy(angle * i' radius);                      v = new Vector3(x' y' z);                      line.SetPosition(i' v);                  }                    /* Finish with arrow */                  lineEnd.SetPosition(0' v);                  /* do the math for get the arrow tip tangent to the circle' we do this so                   * it doesn't look too broken */                  float radius2 = radius / Mathf.Cos(angle * 2);                  lineEnd.SetPosition(1' new Vector3(calcx (angle * (i + 1)' radius2)'                                                   calcy (angle * (i + 1)' radius2)'                                                   z));              }
Magic Number,RCSBuildAid,CircularVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CircularVectorGraphic.cs,LateUpdate,The following statement contains a magic number: if (line.enabled) {                  /* calc width */                  float width = calcDimentionExp(minWidth' maxWidth);                  setWidth (width);                    /* calc radius */                  float radius = calcDimentionExp(minRadius' maxRadius);                    /* Draw our circle */                  float angle = 2 * Mathf.PI / vertexCount;                  const float pha = Mathf.PI * 4f / 9f; /* phase angle' so the circle starts and ends at the                                                   translation vector */                  Func<float' float' float> calcx = (a' r) => r * Mathf.Cos( a - pha);                  Func<float' float' float> calcy = (a' r) => r * Mathf.Sin(-a + pha);                  float x' y' z = 0;                  Vector3 v = Vector3.zero;                  int i = 0;                  for (; i < vertexCount - 3; i++) {                      x = calcx(angle * i' radius);                      y = calcy(angle * i' radius);                      v = new Vector3(x' y' z);                      line.SetPosition(i' v);                  }                    /* Finish with arrow */                  lineEnd.SetPosition(0' v);                  /* do the math for get the arrow tip tangent to the circle' we do this so                   * it doesn't look too broken */                  float radius2 = radius / Mathf.Cos(angle * 2);                  lineEnd.SetPosition(1' new Vector3(calcx (angle * (i + 1)' radius2)'                                                   calcy (angle * (i + 1)' radius2)'                                                   z));              }
Magic Number,RCSBuildAid,CircularVectorGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CircularVectorGraphic.cs,LateUpdate,The following statement contains a magic number: if (line.enabled) {                  /* calc width */                  float width = calcDimentionExp(minWidth' maxWidth);                  setWidth (width);                    /* calc radius */                  float radius = calcDimentionExp(minRadius' maxRadius);                    /* Draw our circle */                  float angle = 2 * Mathf.PI / vertexCount;                  const float pha = Mathf.PI * 4f / 9f; /* phase angle' so the circle starts and ends at the                                                   translation vector */                  Func<float' float' float> calcx = (a' r) => r * Mathf.Cos( a - pha);                  Func<float' float' float> calcy = (a' r) => r * Mathf.Sin(-a + pha);                  float x' y' z = 0;                  Vector3 v = Vector3.zero;                  int i = 0;                  for (; i < vertexCount - 3; i++) {                      x = calcx(angle * i' radius);                      y = calcy(angle * i' radius);                      v = new Vector3(x' y' z);                      line.SetPosition(i' v);                  }                    /* Finish with arrow */                  lineEnd.SetPosition(0' v);                  /* do the math for get the arrow tip tangent to the circle' we do this so                   * it doesn't look too broken */                  float radius2 = radius / Mathf.Cos(angle * 2);                  lineEnd.SetPosition(1' new Vector3(calcx (angle * (i + 1)' radius2)'                                                   calcy (angle * (i + 1)' radius2)'                                                   z));              }
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: for (int i = 0; i < 6; i++) {                  lines.Add (newLine ());              }
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: foreach (var lineRenderer in lines) {                  lineRenderer.useWorldSpace = false;                  lineRenderer.SetVertexCount (2);                  lineRenderer.SetPosition (0' Vector3.zero);              }
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: lines[2].SetPosition (1' Vector3.right * scale);
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: lines[3].SetPosition (1' Vector3.right * -scale);
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: lines[4].SetPosition (1' Vector3.up * scale);
Magic Number,RCSBuildAid,CrossMarkGraphic,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\CrossMarkGraphic.cs,Awake,The following statement contains a magic number: lines[5].SetPosition (1' Vector3.up * -scale);
Magic Number,RCSBuildAid,ArrowBase,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\ArrowBase.cs,setWidth,The following statement contains a magic number: lineEnd.SetWidth (v2 * 3' 0);
Magic Number,RCSBuildAid,ArrowBase,C:\repos\m4v_RCSBuildAid\Plugin\LineRenderer\ArrowBase.cs,calcDimentionExp,The following statement contains a magic number: float T = 5 / upperMagnitude;
Missing Default,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,SetMode,The following switch statement is missing a default case: switch (new_mode) {              case PluginMode.Engine:                  /* reset gimbals if we're switching to engines */                  SetDirection (Direction.none);                  break;              case PluginMode.Attitude:              case PluginMode.RCS:                  /* these modes should always have a direction */                  SetDirection (previousDirection);                  break;              }
Missing Default,RCSBuildAid,RCSBuildAid,C:\repos\m4v_RCSBuildAid\Plugin\RCSBuildAid.cs,switchDirection,The following switch statement is missing a default case: switch(Mode) {                  case PluginMode.RCS:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No RCS thrusters in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  case PluginMode.Attitude:                      if (RCS.Count == 0) {                          ScreenMessages.PostScreenMessage(                              "No attitude control elements in place."' 3'                              ScreenMessageStyle.LOWER_CENTER);                      }                      break;                  }
Missing Default,RCSBuildAid,Events,C:\repos\m4v_RCSBuildAid\Plugin\Events.cs,onEditorPartEvent,The following switch statement is missing a default case: switch (evt) {              case ConstructionEventType.PartPicked:                  if (part == EditorLogic.RootPart) {                      OnRootPartPicked ();                  }                  break;              case ConstructionEventType.PartDropped:                  if (part == EditorLogic.RootPart) {                      OnRootPartDropped ();                  }                  break;              case ConstructionEventType.PartDeleted:                  if (part == EditorLogic.RootPart) {                      RCSBuildAid.SetActive (false);                  }                  break;              }
Missing Default,RCSBuildAid,CoDMarker,C:\repos\m4v_RCSBuildAid\Plugin\CoDMarker.cs,findCenterOfDrag,The following switch statement is missing a default case: switch (RCSBuildAid.Mode) {              case PluginMode.Parachutes:                  for (int i = 0; i < RCSBuildAid.Parachutes.Count; i++) {                      var parachute = (ModuleParachute)RCSBuildAid.Parachutes [i];                      var part = parachute.part;                      var dc = part.DragCubes;                      #if DEBUG                      var vector = parachute.GetComponent<VectorGraphic> ();                      if (vector == null) {                          vector = parachute.gameObject.AddComponent<VectorGraphic> ();                          vector.setColor (Color.blue);                          vector.minLength = 0.6f;                      }                      #endif                      dc.SetCubeWeight ("DEPLOYED"' 1);                      dc.SetCubeWeight ("SEMIDEPLOYED"' 0);                      dc.SetCubeWeight ("PACKED"' 0);                      dc.SetOcclusionMultiplier (0);                      /* I need to do all this since parachute's drag depends of the                        * orientation of the canopy */                      Transform t = part.FindModelTransform (parachute.canopyName);                      t.rotation = Quaternion.LookRotation (-VelocityDirection' part.transform.forward);                      if (part.symmetryCounterparts != null) {                          float angle = Mathf.Clamp (parachute.spreadAngle * (part.symmetryCounterparts.Count + 1)' 0' 45);                          t.Rotate (angle' 0' 0' Space.Self);                      }                      var rotation = Quaternion.LookRotation (part.partTransform.InverseTransformDirection (t.forward));                      dc.SetDragVectorRotation (rotation);                      #if DEBUG                      vector.value = part.partTransform.InverseTransformDirection(dc.DragVector) * dc.AreaDrag;                      #endif                  }                  break;              }
Missing Default,RCSBuildAid,RCSForce,C:\repos\m4v_RCSBuildAid\Plugin\RCSForce.cs,activeInMode,The following switch statement is missing a default case: switch (mode) {              case PluginMode.RCS:              case PluginMode.Attitude:                  return true;              case PluginMode.Engine:                  return RCSBuildAid.IncludeRCS;              }
Missing Default,RCSBuildAid,EngineForce,C:\repos\m4v_RCSBuildAid\Plugin\EngineForce.cs,activeInMode,The following switch statement is missing a default case: switch (mode) {              case PluginMode.Engine:                  return true;              }
Missing Default,RCSBuildAid,MarkerManager,C:\repos\m4v_RCSBuildAid\Plugin\MarkerManager.cs,SetMarkerVisibility,The following switch statement is missing a default case: switch (marker) {              case MarkerType.CoM:                  Settings.show_marker_com = value;                  break;              case MarkerType.DCoM:                  Settings.show_marker_dcom = value;                  break;              case MarkerType.ACoM:                  Settings.show_marker_acom = value;                  break;              }
