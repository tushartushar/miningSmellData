Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Ninject.Extensions.Factory.Factory,IInstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\IInstanceResolver.cs,Get,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,IInstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\IInstanceResolver.cs,GetAllAsList,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,IInstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\IInstanceResolver.cs,GetAllAsArray,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,InstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\InstanceResolver.cs,Get,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,InstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\InstanceResolver.cs,GetAllAsList,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,InstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\InstanceResolver.cs,GetAllAsArray,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Parameter List,Ninject.Extensions.Factory.Factory,InstanceResolver,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\InstanceResolver.cs,GetAll,The method has 5 parameters. Parameters: type' name' constraint' parameters' fallback
Long Statement,Ninject.Extensions.Factory,BindToExtensions,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\BindToExtensions.cs,ToFactory,The length of the statement  "            var bindingConfiguration = syntax.BindingConfiguration; // Do not pass syntax to the lambda!!! We do not want the lambda referencing the syntax!!!" is 146.
Long Statement,Ninject.Extensions.Factory,BindToExtensions,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\BindToExtensions.cs,ToFactory,The length of the statement  "                .When(r => r.ParentRequest != null && r.ParentRequest.ParentContext.Binding.BindingConfiguration == bindingConfiguration)" is 121.
Long Statement,Ninject.Extensions.Factory,TypeMatchingArgumentInheritanceInstanceProvider,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\TypeMatchingArgumentInheritanceInstanceProvider.cs,GetConstructorArguments,The length of the statement  "                constructorArguments[i] = new TypeMatchingConstructorArgument(parameters[i].ParameterType' (context' target) => arguments[closure]' true);" is 138.
Long Statement,Ninject.Extensions.Factory,FunctionFactory,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Func\FunctionFactory.cs,GetConvertionFunction,The length of the statement  "                return instances => (TService)toArrayMethod.Invoke(null' new[] { castMethod.Invoke(null' new object[] { instances }) });" is 120.
Complex Conditional,Ninject.Extensions.Factory,StandardInstanceProvider,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\StandardInstanceProvider.cs,GetInstance,The conditional expression  "genericType == typeof(IEnumerable<>) ||                     genericType == typeof(ICollection<>) ||                     genericType == typeof(IList<>) ||                     genericType == typeof(List<>)"  is complex.
Complex Conditional,Ninject.Extensions.Factory,FunctionFactory,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Func\FunctionFactory.cs,GetConvertionFunction,The conditional expression  "genericType == typeof(IEnumerable<>) ||                     genericType == typeof(ICollection<>) ||                     genericType == typeof(IList<>) ||                     genericType == typeof(List<>)"  is complex.
Complex Conditional,Ninject.Extensions.Factory,LazyConstructorScorer,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Func\LazyConstructorScorer.cs,Score,The conditional expression  "parameterGenericType == typeof(Func<>)                         || parameterGenericType == typeof(Func<'>)                         || parameterGenericType == typeof(Func<''>)                         || parameterGenericType == typeof(Func<'''>)                         || parameterGenericType == typeof(Func<''''>)                         || parameterGenericType == typeof(Func<'''''>)                         || parameterGenericType == typeof(Func<''''''>)                         || parameterGenericType == typeof(Func<'''''''>)                         || parameterGenericType == typeof(Func<''''''''>)                         || parameterGenericType == typeof(Func<'''''''''>)                         || parameterGenericType == typeof(Func<''''''''''>)                         || parameterGenericType == typeof(Func<'''''''''''>)                         || parameterGenericType == typeof(Func<''''''''''''>)                         || parameterGenericType == typeof(Func<'''''''''''''>)                         || parameterGenericType == typeof(Func<''''''''''''''>)                         || parameterGenericType == typeof(Func<'''''''''''''''>)                         || parameterGenericType == typeof(Func<''''''''''''''''>)"  is complex.
Magic Number,Ninject.Extensions.Factory,BindToExtensions,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\BindToExtensions.cs,NamedLikeFactoryMethod,The following statement contains a magic number: var bindingName = methodName.Substring(3);
Magic Number,Ninject.Extensions.Factory,BindToExtensions,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\BindToExtensions.cs,WhenAnyAncestorNamedLikeFactoryMethod,The following statement contains a magic number: var bindingName = methodName.Substring(3);
Magic Number,Ninject.Extensions.Factory,StandardInstanceProvider,C:\research\architectureSmells\repos\ninject_ninject.extensions.factory\src\Ninject.Extensions.Factory\Factory\StandardInstanceProvider.cs,GetName,The following statement contains a magic number: return methodInfo.Name.StartsWith("Get") ? methodInfo.Name.Substring(3) : null;
