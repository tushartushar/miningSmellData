Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Sympathy,QueryBuilder,C:\repos\boynux_Sympathy\Sympathy\querybuilder.cs,parseKeys,Cyclomatic complexity of the method is 28
Complex Method,Sympathy,SqliteQueryBuilder,C:\repos\boynux_Sympathy\Sympathy\sqlitequerybuilder.cs,selectQuery,Cyclomatic complexity of the method is 10
Complex Method,Sympathy,MSSqlQueryBuilder,C:\repos\boynux_Sympathy\Sympathy\mssqlqueryuilder.cs,selectQuery,Cyclomatic complexity of the method is 16
Long Statement,Sympathy,Manager,C:\repos\boynux_Sympathy\Sympathy\manager.cs,getInsertQuery,The length of the statement  "		if (column != builder.Table.PrimaryKey || builder.Table.PrimaryKey.AccessType != Sympathy.Attributes.AccessTypes.ReadOnly) { " is 124.
Long Statement,Sympathy,Manager,C:\repos\boynux_Sympathy\Sympathy\manager.cs,getInsertQuery,The length of the statement  "	if (builder.Table.PrimaryKey.AccessType == Sympathy.Attributes.AccessTypes.ReadOnly && !builder.Table.PrimaryKey.DefaultValue.Equals (builder.Table.PrimaryKey.getValue (model))) { " is 179.
Long Statement,Sympathy,Manager,C:\repos\boynux_Sympathy\Sympathy\manager.cs,save,The length of the statement  "	if (Table (model).PrimaryKey.AccessType == Sympathy.Attributes.AccessTypes.ReadOnly && handler.QueryBuilder.Type == QueryBuilder.QueryType.Insert && id != null) " is 160.
Long Statement,Sympathy,Manager,C:\repos\boynux_Sympathy\Sympathy\manager.cs,update,The length of the statement  "	if (Table (model).PrimaryKey.AccessType == Sympathy.Attributes.AccessTypes.ReadOnly && handler.QueryBuilder.Type == QueryBuilder.QueryType.Insert) " is 146.
Long Statement,Sympathy,Reflector,C:\repos\boynux_Sympathy\Sympathy\reflector.cs,getColumns,The length of the statement  "	object[] fields = _model.GetType ().GetFields (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.FlattenHierarchy); " is 221.
Long Statement,Sympathy,Reflector,C:\repos\boynux_Sympathy\Sympathy\reflector.cs,afterSerialize,The length of the statement  "	MethodInfo[] methods = _model.GetType ().GetMethods (System.Reflection.BindingFlags.Instance | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.FlattenHierarchy); " is 227.
Long Statement,Sympathy,Column,C:\repos\boynux_Sympathy\Sympathy\column.cs,ToString,The length of the statement  "	return string.Format ("[Column: AccessType={0}' ColumnType={1}' Name={2}' Type={3}]"' AccessType' ColumnType' Name' Type.Name); " is 127.
Long Statement,Sympathy,QueryBuilder,C:\repos\boynux_Sympathy\Sympathy\querybuilder.cs,parseKeys,The length of the statement  "	Dictionary<string' KeyValuePair<Operators' object>> condition = new Dictionary<string' KeyValuePair<Operators' object>> (); " is 123.
Long Statement,Sympathy,SqliteQueryBuilder,C:\repos\boynux_Sympathy\Sympathy\sqlitequerybuilder.cs,selectQuery,The length of the statement  "				else if (item.Value.Value.GetType ().IsArray && typeof(string).IsAssignableFrom (item.Value.Value.GetType ()) && item.Value.Key == Operators.In) { " is 146.
Long Statement,Sympathy,MSSqlQueryBuilder,C:\repos\boynux_Sympathy\Sympathy\mssqlqueryuilder.cs,selectQuery,The length of the statement  "				else if (item.Value.Value.GetType ().IsArray && typeof(string).IsAssignableFrom (item.Value.Value.GetType ()) && item.Value.Key == Operators.In) { " is 146.
Long Statement,Sympathy,MSSqlQueryBuilder,C:\repos\boynux_Sympathy\Sympathy\mssqlqueryuilder.cs,insertQuery,The length of the statement  "	query = string.Format (query' Table.Name' string.Join ("' "' update)' string.Join ("' "' where)' string.Join ("' "' cols)' string.Join ("' "' vals)); " is 149.
Long Statement,Sympathy,MSSqlHandler,C:\repos\boynux_Sympathy\Sympathy\mssqlhandler.cs,connectionEventHandler,The length of the statement  "	Console.WriteLine (string.Format ("connection satate changed from {0} to {1}."' args.OriginalState' args.CurrentState)); " is 120.
Complex Conditional,Sympathy,Utils,C:\repos\boynux_Sympathy\Sympathy\utils.cs,genrateNameFromType,The conditional expression  "(prevLetter >= 'a' && prevLetter <= 'z') || (prevLetter >= '0' && prevLetter <= '9')"  is complex.
Empty Catch Block,Sympathy,Manager,C:\repos\boynux_Sympathy\Sympathy\manager.cs,populateModel,The method has an empty catch block.
Empty Catch Block,Sympathy,Reflector,C:\repos\boynux_Sympathy\Sympathy\reflector.cs,getColumns,The method has an empty catch block.
Empty Catch Block,Sympathy,Reflector,C:\repos\boynux_Sympathy\Sympathy\reflector.cs,afterSerialize,The method has an empty catch block.
