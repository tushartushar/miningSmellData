Implementation smell,Namespace,Class,File,Method,Description
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,The method has 145 lines of code.
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The method has 150 lines of code.
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The method has 125 lines of code.
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The method has 172 lines of code.
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The method has 122 lines of code.
Long Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptMemoryStreamAsync,The method has 124 lines of code.
Complex Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,Cyclomatic complexity of the method is 10
Complex Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,Cyclomatic complexity of the method is 11
Complex Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,Cyclomatic complexity of the method is 18
Complex Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,Cyclomatic complexity of the method is 11
Complex Method,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptMemoryStreamAsync,Cyclomatic complexity of the method is 9
Long Parameter List,StreamCryptor.Model,EncryptedFileHeader,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Model\EncryptedFileHeader.cs,EncryptedFileHeader,The method has 7 parameters. Parameters: currentVersion' nonceLength' chunkBaseNonceLength' unencryptedFileLength' senderPrivateKey' senderPublicKey' recipientPublicKey
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileChunk,The method has 5 parameters. Parameters: unencryptedChunk' chunkNumber' baseNonce' ephemeralKey' isLast
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The method has 5 parameters. Parameters: senderKeyPair' inputFile' outputFolder' fileExtension' maskFileName
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The method has 6 parameters. Parameters: senderKeyPair' recipientPublicKey' inputFile' outputFolder' fileExtension' maskFileName
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The method has 7 parameters. Parameters: senderPrivateKey' senderPublicKey' recipientPublicKey' inputFile' outputFolder' fileExtension' maskFileName
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,The method has 10 parameters. Parameters: senderPrivateKey' senderPublicKey' recipientPublicKey' filename' inputStream' outputFolder' fileExtension' maskFileName' encryptionProgress' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The method has 7 parameters. Parameters: senderKeyPair' inputFile' encryptionProgress' outputFolder' fileExtension' maskFileName' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The method has 8 parameters. Parameters: senderKeyPair' recipientPublicKey' inputFile' encryptionProgress' outputFolder' fileExtension' maskFileName' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The method has 9 parameters. Parameters: senderPrivateKey' senderPublicKey' recipientPublicKey' inputFile' encryptionProgress' outputFolder' fileExtension' maskFileName' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The method has 10 parameters. Parameters: senderPrivateKey' senderPublicKey' recipientPublicKey' inputStream' outputFolder' originalFileName' encryptionProgress' fileExtension' maskFileName' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The method has 6 parameters. Parameters: keyPair' inputFile' outputFolder' decryptionProgress' overWrite' cancellationToken
Long Parameter List,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The method has 6 parameters. Parameters: recipientPrivateKey' inputFile' outputFolder' decryptionProgress' overWrite' cancellationToken
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,GetChunkNonce,The length of the statement  "                throw new ArgumentOutOfRangeException("chunkNumber"' string.Format("chunkNumber must be {0} or positive."' CHUNK_MIN_NUMBER)); " is 126.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The length of the statement  "                var task = Task.Run(async () => await EncryptFileWithStreamAsync(senderKeyPair.PrivateKey' senderKeyPair.PublicKey' senderKeyPair.PublicKey' inputFile' null' outputFolder' fileExtension' maskFileName).ConfigureAwait(false)); " is 224.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The length of the statement  "                var task = Task.Run(async () => await EncryptFileWithStreamAsync(senderKeyPair.PrivateKey' senderKeyPair.PublicKey' recipientPublicKey' inputFile' null' outputFolder' fileExtension' maskFileName).ConfigureAwait(false)); " is 219.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStream,The length of the statement  "                var task = Task.Run(async () => await EncryptFileWithStreamAsync(senderPrivateKey' senderPublicKey' recipientPublicKey' inputFile' null' outputFolder' fileExtension' maskFileName).ConfigureAwait(false)); " is 203.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStream,The length of the statement  "                var task = Task.Run(async () => await DecryptFileWithStreamAsync(keyPair.PrivateKey' inputFile' outputFolder' null' overWrite).ConfigureAwait(false)); " is 150.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStream,The length of the statement  "                var task = Task.Run(async () => await DecryptFileWithStreamAsync(recipientPrivateKey' inputFile' outputFolder' null' overWrite).ConfigureAwait(false)); " is 151.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,The length of the statement  "                throw new ArgumentOutOfRangeException("filename"' string.Format("filename name must be smaller {0} in length."' MAX_FILENAME_LENGTH)); " is 134.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "            return await EncryptFileWithStreamAsync(senderKeyPair.PrivateKey' senderKeyPair.PublicKey' senderKeyPair.PublicKey' inputFile' encryptionProgress' outputFolder' fileExtension' maskFileName' cancellationToken).ConfigureAwait(false); " is 231.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "            return await EncryptFileWithStreamAsync(senderKeyPair.PrivateKey' senderKeyPair.PublicKey' recipientPublicKey' inputFile' encryptionProgress' outputFolder' fileExtension' maskFileName' cancellationToken).ConfigureAwait(false); " is 226.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                throw new ArgumentOutOfRangeException("inputFile"' string.Format("inputFile name must be smaller {0} in length."' MAX_FILENAME_LENGTH)); " is 136.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                        bytesRead = await fileStreamUnencrypted.ReadAsync(unencryptedChunk' 0' CHUNK_LENGTH' cancellationToken).ConfigureAwait(false); " is 126.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                                encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' true); " is 146.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                                    encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' true); " is 146.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                                    encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' false); " is 147.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                                args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength); " is 155.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The length of the statement  "                            encryptedFileFooter.SetFooterChecksum(BitConverter.GetBytes(chunkNumber)' BitConverter.GetBytes(overallChunkLength)' encryptedFileHeader.UnencryptedEphemeralKey' FOOTER_CHECKSUM_LENGTH); " is 186.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The length of the statement  "								encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' true); " is 146.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The length of the statement  "									encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' true); " is 146.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The length of the statement  "									encryptedFileChunk = EncryptFileChunk(readedBytes' chunkNumber' encryptedFileHeader.BaseNonce' encryptedFileHeader.UnencryptedEphemeralKey' false); " is 147.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The length of the statement  "								args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength); " is 155.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The length of the statement  "							encryptedFileFooter.SetFooterChecksum(BitConverter.GetBytes(chunkNumber)' BitConverter.GetBytes(overallChunkLength)' encryptedFileHeader.UnencryptedEphemeralKey' FOOTER_CHECKSUM_LENGTH); " is 186.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "            return await DecryptFileWithStreamAsync(keyPair.PrivateKey' inputFile' outputFolder' decryptionProgress' overWrite' cancellationToken).ConfigureAwait(false); " is 157.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                    EncryptedFileHeader encryptedFileHeader = Serializer.DeserializeWithLengthPrefix<EncryptedFileHeader>(fileStreamEncrypted' PrefixStyle.Base128' 1); " is 147.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                    byte[] ephemeralKey = PublicKeyBox.Open(encryptedFileHeader.Key' encryptedFileHeader.EphemeralNonce' recipientPrivateKey' encryptedFileHeader.SenderPublicKey); " is 159.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        byte[] decryptedPaddedFileName = SecretBox.Open(encryptedFileHeader.Filename' encryptedFileHeader.FilenameNonce' Utils.GetEphemeralEncryptionKey(ephemeralKey)); " is 160.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                            while ((encryptedFileChunk = Serializer.DeserializeWithLengthPrefix<EncryptedFileChunk>(fileStreamEncrypted' PrefixStyle.Base128' 2)) != null) " is 142.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                                    args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength); " is 155.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        encryptedFileFooter = Serializer.DeserializeWithLengthPrefix<EncryptedFileFooter>(fileStreamEncrypted' PrefixStyle.Base128' 3); " is 127.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        encryptedFileFooter.ValidateFooterChecksum(BitConverter.GetBytes(chunkNumber)' BitConverter.GetBytes(overallChunkLength)' ephemeralKey' FOOTER_CHECKSUM_LENGTH); " is 160.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "            return await DecryptFileWithStreamAsync(keyPair.PrivateKey' inputFile' decryptionProgress' cancellationToken).ConfigureAwait(false); " is 132.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                    encryptedFileHeader = Serializer.DeserializeWithLengthPrefix<EncryptedFileHeader>(fileStreamEncrypted' PrefixStyle.Base128' 1); " is 127.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                    byte[] ephemeralKey = PublicKeyBox.Open(encryptedFileHeader.Key' encryptedFileHeader.EphemeralNonce' recipientPrivateKey' encryptedFileHeader.SenderPublicKey); " is 159.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        byte[] encryptedPaddedFileName = SecretBox.Open(encryptedFileHeader.Filename' encryptedFileHeader.FilenameNonce' Utils.GetEphemeralEncryptionKey(ephemeralKey)); " is 160.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                            while ((encryptedFileChunk = Serializer.DeserializeWithLengthPrefix<EncryptedFileChunk>(fileStreamEncrypted' PrefixStyle.Base128' 2)) != null) " is 142.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                                    args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength); " is 155.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        encryptedFileFooter = Serializer.DeserializeWithLengthPrefix<EncryptedFileFooter>(fileStreamEncrypted' PrefixStyle.Base128' 3); " is 127.
Long Statement,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The length of the statement  "                        encryptedFileFooter.ValidateFooterChecksum(BitConverter.GetBytes(chunkNumber)' BitConverter.GetBytes(overallChunkLength)' ephemeralKey' FOOTER_CHECKSUM_LENGTH); " is 160.
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,GetEphemeralEncryptionKey,The following statement contains a magic number: return ArrayHelpers.SubArray(ephemeralKey' 0' 32);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,GetEphemeralHashKey,The following statement contains a magic number: return ArrayHelpers.SubArray(ephemeralKey' 32);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: var le = new byte[8];
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: le[1] = (byte) (((uint) data >> 8) & 0xFF);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: le[2] = (byte) (((uint) data >> 16) & 0xFF);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: le[2] = (byte) (((uint) data >> 16) & 0xFF);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: le[3] = (byte) (((uint) data >> 24) & 0xFF);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,IntegerToLittleEndian,The following statement contains a magic number: le[3] = (byte) (((uint) data >> 24) & 0xFF);
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,GetRandomFileName,The following statement contains a magic number: var array = new string[54]              {                  "0"' "2"' "3"' "4"' "5"' "6"' "8"' "9"'                  "a"' "b"' "c"' "d"' "e"' "f"' "g"' "h"' "j"' "k"' "m"' "n"' "p"' "q"' "r"' "s"' "t"' "u"' "v"' "w"' "x"' "y"' "z"'                  "A"' "B"' "C"' "D"' "E"' "F"' "G"' "H"' "J"' "K"' "L"' "M"' "N"' "P"' "R"' "S"' "T"' "U"' "V"' "W"' "X"' "Y"' "Z"              };
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,StringToPaddedByteArray,The following statement contains a magic number: str.Length > 256
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,StringToPaddedByteArray,The following statement contains a magic number: paddingLength > 256
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,AddPkcs7Padding,The following statement contains a magic number: data.Length > 256
Magic Number,StreamCryptor.Helper,Utils,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Helper\Utils.cs,AddPkcs7Padding,The following statement contains a magic number: paddingLength > 256
Magic Number,StreamCryptor.Model,EncryptedFileHeader,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Model\EncryptedFileHeader.cs,EncryptedFileHeader,The following statement contains a magic number: UnencryptedEphemeralKey = SodiumCore.GetRandomBytes(64);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,GetChunkNonce,The following statement contains a magic number: concatNonce[23] |= 0x80;
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix(fileStreamEncrypted' encryptedFileChunk' PrefixStyle.Base128' 2);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncrypMemoryStreamAsync,The following statement contains a magic number: args.ProgressPercentage =                                  (int)                                      (encryptedFileHeader.UnencryptedFileLength <= 0                                          ? 0                                          : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix(fileStreamEncrypted' encryptedFileChunk' PrefixStyle.Base128' 2);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileWithStreamAsync,The following statement contains a magic number: args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The following statement contains a magic number: Serializer.SerializeWithLengthPrefix(fileStreamEncrypted' encryptedFileChunk' PrefixStyle.Base128' 2);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,EncryptFileStreamWithStreamAsync,The following statement contains a magic number: args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: (encryptedFileChunk = Serializer.DeserializeWithLengthPrefix<EncryptedFileChunk>(fileStreamEncrypted' PrefixStyle.Base128' 2)) != null
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: encryptedFileFooter = Serializer.DeserializeWithLengthPrefix<EncryptedFileFooter>(fileStreamEncrypted' PrefixStyle.Base128' 3);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: args.ProgressPercentage = (int)(encryptedFileHeader.UnencryptedFileLength <= 0 ? 0 : (100 * overallBytesRead) / encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: (encryptedFileChunk = Serializer.DeserializeWithLengthPrefix<EncryptedFileChunk>(fileStreamEncrypted' PrefixStyle.Base128' 2)) != null
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptFileWithStreamAsync,The following statement contains a magic number: encryptedFileFooter = Serializer.DeserializeWithLengthPrefix<EncryptedFileFooter>(fileStreamEncrypted' PrefixStyle.Base128' 3);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptMemoryStreamAsync,The following statement contains a magic number: args.ProgressPercentage =  								    (int)  									    (encryptedFileHeader.UnencryptedFileLength <= 0  										    ? 0  										    : (100*overallBytesRead)/encryptedFileHeader.UnencryptedFileLength);
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptMemoryStreamAsync,The following statement contains a magic number: (encryptedFileChunk =  							    Serializer.DeserializeWithLengthPrefix<EncryptedFileChunk>(inputStream' PrefixStyle.Base128' 2)) != null
Magic Number,StreamCryptor,Cryptor,D:\research\architectureSmells\repos\bitbeans_StreamCryptor\StreamCryptor\Cryptor.cs,DecryptMemoryStreamAsync,The following statement contains a magic number: encryptedFileFooter = Serializer.DeserializeWithLengthPrefix<EncryptedFileFooter>(inputStream'  					    PrefixStyle.Base128' 3);
