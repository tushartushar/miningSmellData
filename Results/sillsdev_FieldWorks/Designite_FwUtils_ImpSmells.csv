Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SIL.FieldWorks.Common.FwUtils,FwApplicationSettingsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwApplicationSettingsBase.cs,MigrateIfNecessary,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.FwUtils,CharacterCategorizer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CharacterCategorizer.cs,WordAndPuncts,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.FwUtils,FLExBridgeHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FLExBridgeHelper.cs,LaunchFieldworksBridge,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.FwUtils,FwLinkArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,FwLinkArgs,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.FwUtils,FwAppArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,FwAppArgs,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.FwUtils,FwAppArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,ParseCommandLine,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.Common.FwUtils,FwAppArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,CommandLineSwitch,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.FwUtils,FwAppArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,ProcessArg,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.FwUtils,StringTable,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\StringTable.cs,GetStringWithRootXPath,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.FwUtils,StylePropsInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\StyleMarkupInfo.cs,CreateStyleLists,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.Common.FwUtils,GraphicsManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\GraphicsManager.cs,Init,Cyclomatic complexity of the method is 8
Long Parameter List,SIL.FieldWorks.Common.FwUtils,CachePair,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CachePair.cs,FindOrCreateSec,The method has 6 parameters. Parameters: hvoReal' clid' hvoOwner' flidOwn' flidName' tss
Long Parameter List,SIL.FieldWorks.Common.FwUtils,CachePair,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CachePair.cs,FindOrCreateSec,The method has 7 parameters. Parameters: hvoReal' clid' hvoOwner' flidOwn' name' flidName' ws
Long Parameter List,SIL.FieldWorks.Common.FwUtils,CachePair,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CachePair.cs,FindOrCreateSecAnalysis,The method has 6 parameters. Parameters: hvoReal' clid' hvoOwner' flidOwn' name' flidName
Long Parameter List,SIL.FieldWorks.Common.FwUtils,CachePair,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CachePair.cs,FindOrCreateSecVern,The method has 6 parameters. Parameters: hvoReal' clid' hvoOwner' flidOwn' name' flidName
Long Parameter List,SIL.FieldWorks.Common.FwUtils,FLExBridgeHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FLExBridgeHelper.cs,LaunchFieldworksBridge,The method has 10 parameters. Parameters: projectFolder' userName' command' projectGuid' fwmodelVersionNumber' liftModelVersionNumber' writingSystemId' onNonBlockerCommandComplete' changesReceived' projectName
Long Parameter List,SIL.FieldWorks.Common.FwUtils,FLExBridgeHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FLExBridgeHelper.cs,LaunchFlexBridge,The method has 6 parameters. Parameters: host' command' args' onNonBlockerCommandComplete' changesReceived' projectName
Long Parameter List,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetTokenInformation,The method has 5 parameters. Parameters: hToken' tokenInfoClass' tokenInformation' tokeInfoLength' returnLength
Long Parameter List,SIL.FieldWorks.Common.FwUtils,InvalidComboInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\QuotationMarks.cs,InvalidComboInfo,The method has 5 parameters. Parameters: level1' level1IsOpener' level2' level2IsOpener' qmark
Long Parameter List,SIL.FieldWorks.Common.FwUtils,TextFileDataSource,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\TextFileDataSource.cs,TextFileDataSource,The method has 6 parameters. Parameters: scrChecksDllFile' scrCheck' fileData' scrRefFormatString' parameters' categorizer
Long Parameter List,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,PeekMessage,The method has 5 parameters. Parameters: msg' hWnd' wFilterMin' wFilterMax' wFlag
Long Parameter List,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,PeekMessageWindows,The method has 5 parameters. Parameters: msg' hWnd' wFilterMin' wFilterMax' wFlag
Long Parameter List,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,SetScrollRange,The method has 5 parameters. Parameters: hWnd' nBar' nMinPos' nMaxPos' fRedraw
Long Parameter List,SIL.FieldWorks.Common.FwUtils,IMessageBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 5 parameters. Parameters: owner' text' caption' buttons' icon
Long Parameter List,SIL.FieldWorks.Common.FwUtils,IMessageBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 10 parameters. Parameters: owner' text' caption' buttons' icon' defaultButton' options' helpFilePath' navigator' param
Long Parameter List,SIL.FieldWorks.Common.FwUtils,MessageBoxUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 10 parameters. Parameters: owner' text' caption' buttons' icon' defaultButton' options' helpFilePath' navigator' param
Long Parameter List,SIL.FieldWorks.Common.FwUtils,MessageBoxUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 9 parameters. Parameters: text' caption' buttons' icon' defaultButton' options' helpFilePath' navigator' param
Long Parameter List,SIL.FieldWorks.Common.FwUtils,MessageBoxUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 5 parameters. Parameters: owner' text' caption' buttons' icon
Long Parameter List,SIL.FieldWorks.Common.FwUtils,MessageBoxAdapter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 5 parameters. Parameters: owner' text' caption' buttons' icon
Long Parameter List,SIL.FieldWorks.Common.FwUtils,MessageBoxAdapter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MessageBoxUtils.cs,Show,The method has 10 parameters. Parameters: owner' text' caption' buttons' icon' defaultButton' options' helpFilePath' navigator' param
Long Parameter List,SIL.FieldWorks.Common.FwUtils,ThreadHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ThreadHelper.cs,ShowMessageBox,The method has 5 parameters. Parameters: owner' text' caption' buttons' icon
Long Parameter List,SIL.FieldWorks.Common.FwUtils,ImagePicture,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ImagePicture.cs,Render,The method has 10 parameters. Parameters: hdc' x' y' cx' cy' xSrc' ySrc' cxSrc' cySrc' prcWBounds
Long Parameter List,SIL.FieldWorks.Common.FwUtils,ImagePicture,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ImagePicture.cs,Render,The method has 10 parameters. Parameters: hdc' x' y' cx' cy' xSrc' ySrc' cxSrc' cySrc' prcWBounds
Long Identifier,SIL.FieldWorks.Common.FwUtils,FwRegistryHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwRegistryHelper.cs,,The length of the parameter OldFieldWorksRegistryKeyNameVersion7 is 36.
Long Identifier,SIL.FieldWorks.Common.FwUtils,FwRegistryHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwRegistryHelper.cs,,The length of the parameter OldFieldWorksRegistryKeyNameVersion8 is 36.
Long Statement,SIL.FieldWorks.Common.FwUtils,FwDirectoryFinder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwDirectoryFinder.cs,GetSubDirectory,The length of the statement  "			else if (!Platform.IsWindows && !Directory.Exists(retval)) // previous Substring(1) causes problem for 'full path' in Linux " is 123.
Long Statement,SIL.FieldWorks.Common.FwUtils,FwRegistryHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwRegistryHelper.cs,SettingsKeyLocalMachineForCurrentOr32BitApp,The length of the statement  "				Registry.LocalMachine.OpenSubKey($@"Software\WOW6432Node\{RegistryHelper.CompanyName}\{RegistryHelper.ProductName}\{string.Join("\\"' subkeys)}"); " is 146.
Long Statement,SIL.FieldWorks.Common.FwUtils,MeasurementUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MeasurementUtils.cs,ExtractMeasurementInMillipoints,The length of the statement  "				if (((ichMsr = str.IndexOf(FwUtilsStrings.kstidIn.Trim())) > 0) || ((ichMsr = str.IndexOf(FwUtilsStrings.kstidInches.Trim())) > 0)) " is 131.
Long Statement,SIL.FieldWorks.Common.FwUtils,SimpleLogger,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\SimpleLogger.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + ". ******************"); " is 122.
Long Statement,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,PostMessage,The length of the statement  "			return Platform.IsWindows ? PostMessageWindows(hWnd' msg' wParam' lParam) : PostMessageLinux(hWnd' msg' wParam' lParam); " is 120.
Long Statement,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetWindowRectLinux,The length of the statement  "				rect = new Rect(temp.Location.X' temp.Location.Y' temp.Location.X + temp.Size.Width' temp.Location.Y + temp.Size.Height); " is 121.
Long Statement,SIL.FieldWorks.Common.FwUtils,GraphicsManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\GraphicsManager.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.FwUtils,GraphicsManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\GraphicsManager.cs,Init,The length of the statement  "					Logger.WriteEvent(String.Format("WARNING: failed to create m_graphics in GraphicsManager.Init({0}' {1}' {2})"' dpix' dpiy' zoom)); " is 130.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,MatchedPairList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MatchedPairs.cs,OpenComparer,The conditional expression  "(x == null && y == null) ||  				(string.IsNullOrEmpty(x.Open) && string.IsNullOrEmpty(y.Open))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,MatchedPairList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MatchedPairs.cs,CloseComparer,The conditional expression  "(x == null && y == null) ||  				(string.IsNullOrEmpty(x.Close) && string.IsNullOrEmpty(y.Close))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,MatchedPairList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MatchedPairs.cs,OpenCodeComparer,The conditional expression  "(x == null && y == null) ||  				(string.IsNullOrEmpty(x.Open) && string.IsNullOrEmpty(y.Open))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,MatchedPairList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MatchedPairs.cs,CloseCodeComparer,The conditional expression  "(x == null && y == null) ||  				(string.IsNullOrEmpty(x.Close) && string.IsNullOrEmpty(y.Close))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,ShowHelp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ShowHelp.cs,ShowHelpTopic,The conditional expression  "helpTopicProvider == null || helpFileKey == null || helpTopicKey == null ||  				string.Empty.Equals(helpFileKey) || string.Empty.Equals(helpTopicKey)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.FwUtils,UserActivityMonitor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\UserActivityMonitor.cs,PreFilterMessage,The conditional expression  "(m.Msg >= (int) Win32.WinMsgs.WM_MOUSE_Min && m.Msg <= (int) Win32.WinMsgs.WM_MOUSE_Max)  				|| (m.Msg >= (int) Win32.WinMsgs.WM_KEY_Min && m.Msg <= (int) Win32.WinMsgs.WM_KEY_Max)"  is complex.
Empty Catch Block,SIL.FieldWorks.Common.FwUtils,FLExBridgeHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FLExBridgeHelper.cs,KillTheHost,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.FwUtils,FwRegistryHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwRegistryHelper.cs,UpgradeUserSettingsIfNeeded,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetCaptionFont,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.FwUtils,AlphaOutline,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\AlphaOutline.cs,NumToAlphaOutline,The following statement contains a magic number: char digit = (char)('A' + ((value - 1) % 26));
Magic Number,SIL.FieldWorks.Common.FwUtils,AlphaOutline,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\AlphaOutline.cs,NumToAlphaOutline,The following statement contains a magic number: int digitCount = ((value - 1) / 26) + 1;
Magic Number,SIL.FieldWorks.Common.FwUtils,AlphaOutline,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\AlphaOutline.cs,AlphaOutlineToNum,The following statement contains a magic number: return ((int)stringValue[0] - (int)'A' + 1) + ((stringValue.Length - 1) * 26);
Magic Number,SIL.FieldWorks.Common.FwUtils,CharEnumeratorForByteArray,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\CharEnumeratorForByteArray.cs,GetEnumerator,The following statement contains a magic number: yield return (char)(m_data[i] | m_data[i + 1] << 8);
Magic Number,SIL.FieldWorks.Common.FwUtils,ConsoleProgress,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ConsoleProgress.cs,ComputeGranularity,The following statement contains a magic number: m_grain = ((m_max - m_min) + 79) / 80;
Magic Number,SIL.FieldWorks.Common.FwUtils,ConsoleProgress,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\ConsoleProgress.cs,ComputeGranularity,The following statement contains a magic number: m_grain = ((m_max - m_min) + 79) / 80;
Magic Number,SIL.FieldWorks.Common.FwUtils,FwDirectoryFinder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwDirectoryFinder.cs,GetDirectory,The following statement contains a magic number: return dir.Length > 2 ? dir : dir + Path.DirectorySeparatorChar;
Magic Number,SIL.FieldWorks.Common.FwUtils,FwLinkArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,FwLinkArgs,The following statement contains a magic number: string query = HttpUtility.UrlDecode(url.Substring(23));
Magic Number,SIL.FieldWorks.Common.FwUtils,FwLinkArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,FwLinkArgs,The following statement contains a magic number: propPair.Length != 2
Magic Number,SIL.FieldWorks.Common.FwUtils,FwLinkArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,Decode,The following statement contains a magic number: value = value.Substring(5);
Magic Number,SIL.FieldWorks.Common.FwUtils,FwLinkArgs,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwLinkArgs.cs,FixSilfwUrlForCurrentProject,The following statement contains a magic number: urlDatabase = properties[i].Substring(9);
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetRcFromString,The following statement contains a magic number: string[] strVals = str.Split("'".ToCharArray()' 4);
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetRcFromString,The following statement contains a magic number: strVals.Length > 2 && Int32.TryParse(strVals[2]' out val)
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetRcFromString,The following statement contains a magic number: strVals.Length > 2 && Int32.TryParse(strVals[2]' out val)
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetRcFromString,The following statement contains a magic number: strVals.Length > 3 && Int32.TryParse(strVals[3]' out val)
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetRcFromString,The following statement contains a magic number: strVals.Length > 3 && Int32.TryParse(strVals[3]' out val)
Magic Number,SIL.FieldWorks.Common.FwUtils,FwUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwUtils.cs,GetSidForProcessToken,The following statement contains a magic number: int bufferLen = 256;
Magic Number,SIL.FieldWorks.Common.FwUtils,LayoutKeyUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\LayoutKeyUtils.cs,GetSuffixedPartOfNamedViewOrDuplicateNode,The following statement contains a magic number: var userModifiedName = stdKeyVals[2];
Magic Number,SIL.FieldWorks.Common.FwUtils,LayoutKeyUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\LayoutKeyUtils.cs,GetSuffixedPartOfNamedViewOrDuplicateNode,The following statement contains a magic number: stdKeyVals[2] = userModifiedName.Substring(0' adjustedIndex);
Magic Number,SIL.FieldWorks.Common.FwUtils,LayoutKeyUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\LayoutKeyUtils.cs,GetSuffixedPartOfNamedViewOrDuplicateNode,The following statement contains a magic number: keyAttributes.Length > 2 && keyAttributes[2] == NameAttr && stdKeyVals.Length > 2
Magic Number,SIL.FieldWorks.Common.FwUtils,LayoutKeyUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\LayoutKeyUtils.cs,GetSuffixedPartOfNamedViewOrDuplicateNode,The following statement contains a magic number: keyAttributes.Length > 2 && keyAttributes[2] == NameAttr && stdKeyVals.Length > 2
Magic Number,SIL.FieldWorks.Common.FwUtils,LayoutKeyUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\LayoutKeyUtils.cs,GetSuffixedPartOfNamedViewOrDuplicateNode,The following statement contains a magic number: keyAttributes.Length > 2 && keyAttributes[2] == NameAttr && stdKeyVals.Length > 2
Magic Number,SIL.FieldWorks.Common.FwUtils,MergeSort,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MergeSort.cs,InternalSort,The following statement contains a magic number: int middle = (left + right) / 2;
Magic Number,SIL.FieldWorks.Common.FwUtils,MergeSort,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\MergeSort.cs,InternalSort,The following statement contains a magic number: int middle = (left + right) / 2;
Magic Number,SIL.FieldWorks.Common.FwUtils,QuotationMarksList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\QuotationMarks.cs,NewList,The following statement contains a magic number: list.EnsureLevelExists(2);
Magic Number,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following statement contains a magic number: var versionParts = appInfoVersion?.Split(new[] {' '}' 3);
Magic Number,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following statement contains a magic number: switch (versionParts?.Length)  			{  				case 3:  				{  					productType = " " + versionParts[2];  					goto case 2;  				}  				case 2:  				{  					int date = Convert.ToInt32(versionParts[1]);  					if (date > 0)  					{  						DateTime dt = DateTime.FromOADate(date);  						productDate = dt.ToString("yyyy/MM/dd");  					}    					goto case 1;  				}  				case 1:  				{  					productVersion = versionParts[0] + productType;  					break;  				}  			}
Magic Number,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following statement contains a magic number: switch (versionParts?.Length)  			{  				case 3:  				{  					productType = " " + versionParts[2];  					goto case 2;  				}  				case 2:  				{  					int date = Convert.ToInt32(versionParts[1]);  					if (date > 0)  					{  						DateTime dt = DateTime.FromOADate(date);  						productDate = dt.ToString("yyyy/MM/dd");  					}    					goto case 1;  				}  				case 1:  				{  					productVersion = versionParts[0] + productType;  					break;  				}  			}
Magic Number,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following statement contains a magic number: switch (versionParts?.Length)  			{  				case 3:  				{  					productType = " " + versionParts[2];  					goto case 2;  				}  				case 2:  				{  					int date = Convert.ToInt32(versionParts[1]);  					if (date > 0)  					{  						DateTime dt = DateTime.FromOADate(date);  						productDate = dt.ToString("yyyy/MM/dd");  					}    					goto case 1;  				}  				case 1:  				{  					productVersion = versionParts[0] + productType;  					break;  				}  			}
Magic Number,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following statement contains a magic number: switch (versionParts?.Length)  			{  				case 3:  				{  					productType = " " + versionParts[2];  					goto case 2;  				}  				case 2:  				{  					int date = Convert.ToInt32(versionParts[1]);  					if (date > 0)  					{  						DateTime dt = DateTime.FromOADate(date);  						productDate = dt.ToString("yyyy/MM/dd");  					}    					goto case 1;  				}  				case 1:  				{  					productVersion = versionParts[0] + productType;  					break;  				}  			}
Magic Number,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetUnicodeRangesForFont,The following statement contains a magic number: var count = Marshal.ReadInt32(glyphSet' 12);
Magic Number,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetUnicodeRangesForFont,The following statement contains a magic number: var range = new FontRange  						{ Low = (ushort)Marshal.ReadInt16(glyphSet' 16 + i * 4) };
Magic Number,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetUnicodeRangesForFont,The following statement contains a magic number: var range = new FontRange  						{ Low = (ushort)Marshal.ReadInt16(glyphSet' 16 + i * 4) };
Magic Number,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetUnicodeRangesForFont,The following statement contains a magic number: range.High = (ushort)(range.Low + Marshal.ReadInt16(glyphSet' 18 + i * 4) - 1);
Magic Number,SIL.FieldWorks.Common.FwUtils,Win32,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\Win32Wrappers.cs,GetUnicodeRangesForFont,The following statement contains a magic number: range.High = (ushort)(range.Low + Marshal.ReadInt16(glyphSet' 18 + i * 4) - 1);
Missing Default,SIL.FieldWorks.Common.FwUtils,FwApplicationSettingsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\FwApplicationSettingsBase.cs,MigrateIfNecessary,The following switch statement is missing a default case: switch ((string) settingElem.Attribute("name"))  						{  							case "UpdateGlobalWSStore":  								UpdateGlobalWSStore = (bool) valueElem;  								break;  							case "WebonaryUser":  								WebonaryUser = (string) valueElem;  								break;  							case "WebonaryPass":  								WebonaryPass = (string) valueElem;  								break;  							case "Reporting":  								XmlReader reader = valueElem.CreateReader();  								reader.MoveToContent();  								string xml = reader.ReadInnerXml();  								Reporting = Xml.XmlSerializationHelper.DeserializeFromString<ReportingSettings>(xml);  								break;  							case "LocalKeyboards":  								LocalKeyboards = (string) valueElem;  								break;  						}
Missing Default,SIL.FieldWorks.Common.FwUtils,VersionInfoProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FwUtils\VersionInfoProvider.cs,ParseInformationalVersion,The following switch statement is missing a default case: switch (versionParts?.Length)  			{  				case 3:  				{  					productType = " " + versionParts[2];  					goto case 2;  				}  				case 2:  				{  					int date = Convert.ToInt32(versionParts[1]);  					if (date > 0)  					{  						DateTime dt = DateTime.FromOADate(date);  						productDate = dt.ToString("yyyy/MM/dd");  					}    					goto case 1;  				}  				case 1:  				{  					productVersion = versionParts[0] + productType;  					break;  				}  			}
