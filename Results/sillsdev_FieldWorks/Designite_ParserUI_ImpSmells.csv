Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.LexText.Controls,TryAWordDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordDlg.cs,InitializeComponent,The method has 134 lines of code.
Long Parameter List,SIL.FieldWorks.LexText.Controls,ParserListener,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserListener.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,EnforceValidValue,The method has 6 parameters. Parameters: elem' parser' item' min' max' useMinIfZero
Long Parameter List,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ReportChangeOfValue,The method has 5 parameters. Parameters: item' value' newValue' min' max
Long Parameter List,SIL.FieldWorks.LexText.Controls,TryAWordSandbox,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordSandbox.cs,TryAWordSandbox,The method has 6 parameters. Parameters: cache' mediator' propertyTable' ss' choices' analysis
Long Identifier,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,,The length of the parameter m_kfragSingleInterlinearAnalysisWithLabels is 42.
Long Statement,SIL.FieldWorks.LexText.Controls,HCTrace,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\HCTrace.cs,CreateResultPage,The length of the statement  "			args.AddParam("prmHCTraceLoadErrorFile"' ""' Path.Combine(Path.GetTempPath()' propertyTable.GetValue<LcmCache>("cache").ProjectId.Name + "HCLoadErrors.xml")); " is 158.
Long Statement,SIL.FieldWorks.LexText.Controls,ImportWordSetDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ImportWordSetDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ImportWordSetDlg)); " is 136.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserListener,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserListener.cs,PropChanged,The length of the statement  "				m_parserConnection.UpdateWordform(m_cache.ServiceLocator.GetInstance<IWfiWordformRepository>().GetObject(hvo)' ParserPriority.High); " is 132.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserListener,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserListener.cs,OnParseAllWords,The length of the statement  "				m_parserConnection.UpdateWordforms(m_cache.ServiceLocator.GetInstance<IWfiWordformRepository>().AllInstances()' ParserPriority.Low); " is 132.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserListener,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserListener.cs,OnDisplayReparseAllWords,The length of the statement  "			// must wait for the queue to empty before we can fill it up again or else we run the risk of breaking the parser thread " is 120.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserListener,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserListener.cs,OnReparseAllWords,The length of the statement  "				m_parserConnection.UpdateWordforms(m_cache.ServiceLocator.GetInstance<IWfiWordformRepository>().AllInstances()' ParserPriority.Low); " is 132.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ParserParametersDlg)); " is 139.
Long Statement,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,PopulateDataGrid,The length of the statement  "			dataGrid.TableStyles.Add(new DataGridTableStyle { MappingName = parser' RowHeadersVisible = false' AllowSorting = false }); " is 123.
Long Statement,SIL.FieldWorks.LexText.Controls,TryAWordDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(TryAWordDlg)); " is 131.
Long Statement,SIL.FieldWorks.LexText.Controls,TryAWordDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordDlg.cs,OnClosed,The length of the statement  "			PropTable.SetProperty("TryAWordDlg-lastWordToTry"' m_wordformTextBox.Text.Trim()' PropertyTable.SettingsGroup.LocalSettings' false); " is 132.
Long Statement,SIL.FieldWorks.LexText.Controls,XAmpleWordGrammarDebugger,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\XAmpleWordGrammarDebugger.cs,CreateSelectedWordGrammarXml,The length of the statement  "			XElement selectedSeqNode = m_wordGrammarDebuggerXml.Root.Elements("seq").ElementAt(int.Parse(nodeId' CultureInfo.InvariantCulture) - 1); " is 136.
Long Statement,SIL.FieldWorks.LexText.Controls,XAmpleWordGrammarDebugger,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\XAmpleWordGrammarDebugger.cs,WriteMorphNodes,The length of the statement  "			XElement failureElem = m_parseResult.Descendants("failure").FirstOrDefault(e => ((string) e.Attribute("id")) == nodeId); " is 120.
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxNulls' 0' 10' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxPrefixes' 0' 25' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxSuffixes' 0' 25' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxInfixes' 0' 7' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxInterfixes' 0' 7' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxRoots' 0' 10' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' XAmple' MaxAnalysesToReturn' -1' 10000' true);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,ValidateValues,The following statement contains a magic number: EnforceValidValue(elem' HC' DelReapps' 0' 10' false);
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,SetDlgInfo,The following statement contains a magic number: m_dataGrid2.TableStyles[0].GridColumnStyles[2].Width = 130;
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,SetDlgInfo,The following statement contains a magic number: m_dataGrid2.TableStyles[0].GridColumnStyles[2].Width = 130;
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,SetDlgInfo,The following statement contains a magic number: m_dataGrid2.TableStyles[0].GridColumnStyles[3].Width = 160;
Magic Number,SIL.FieldWorks.LexText.Controls,ParserParametersDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\ParserParametersDlg.cs,SetDlgInfo,The following statement contains a magic number: m_dataGrid2.TableStyles[0].GridColumnStyles[3].Width = 160;
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_timer.Interval = 10;
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,SetSandboxSizeForVc,The following statement contains a magic number: if (width > 10000)  			{  				//				Debug.Assert(width < 10000); // Is something taking the full available width of MaxInt/2?  				width = 500; // arbitrary' may allow something to work more or less  			}
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,SetSandboxSizeForVc,The following statement contains a magic number: if (width > 10000)  			{  				//				Debug.Assert(width < 10000); // Is something taking the full available width of MaxInt/2?  				width = 500; // arbitrary' may allow something to work more or less  			}
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,SetSandboxSizeForVc,The following statement contains a magic number: var newSize = new Size(width * 72000 / dpiX' m_tryAWordSandbox.RootBox.Height * 72000 / dpiY);
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,SetSandboxSizeForVc,The following statement contains a magic number: var newSize = new Size(width * 72000 / dpiX' m_tryAWordSandbox.RootBox.Height * 72000 / dpiY);
Magic Number,SIL.FieldWorks.LexText.Controls,TryAWordRootSite,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordRootSite.cs,SetSandboxLocation,The following statement contains a magic number: using (new HoldGraphics(this))  			{  				Rectangle rcSrcRoot;  				Rectangle rcDstRoot;  				GetCoordRects(out rcSrcRoot' out rcDstRoot);  				var rgvsli = new SelLevInfo[1];  				//rgvsli[1].ihvo = 0; // first morpheme bundle  				//rgvsli[1].tag = (int)WfiAnalysis.WfiAnalysisTags.kflidMorphBundles;  				rgvsli[0].ihvo = 0;  				rgvsli[0].tag = m_cache.MetaDataCacheAccessor.GetFieldId2(CmObjectTags.kClassId' "Self"' false);  				IVwSelection sel = RootBox.MakeTextSelInObj(0' rgvsli.Length' rgvsli' 0' null' true' false' false' false' false);  				if (sel == null)  				{  					Debug.WriteLine("Could not make selection in SetSandboxLocation");  					m_tryAWordSandbox.Left = 150;  					return; // can't position it accurately.  				}  				Rect rcPrimary' rcSec;  				bool fSplit' fEndBeforeAnchor;  				sel.Location(m_graphicsManager.VwGraphics' rcSrcRoot' rcDstRoot' out rcPrimary' out rcSec'  					out fSplit' out fEndBeforeAnchor);  				if (m_vc.RightToLeft)  				{  					m_tryAWordSandbox.Left = rcPrimary.right - m_tryAWordSandbox.Width;  					m_labelWidth = m_rootb.Width - rcPrimary.right;  				}  				else  				{  					m_tryAWordSandbox.Left = rcPrimary.left;  					m_labelWidth = rcPrimary.left;  				}  			}
Missing Default,SIL.FieldWorks.LexText.Controls,TryAWordDlg,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\TryAWordDlg.cs,CreateResultPage,The following switch statement is missing a default case: switch (m_cache.LanguageProject.MorphologicalDataOA.ActiveParser)  				{  					case "XAmple":  						trace = new XAmpleTrace();  						m_webPageInteractor.WordGrammarDebugger = new XAmpleWordGrammarDebugger(PropTable' result);  						break;  					case "HC":  						trace = new HCTrace();  						m_webPageInteractor.WordGrammarDebugger = null;  						break;  				}
Missing Default,SIL.FieldWorks.LexText.Controls,WebPageInteractor,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\WebPageInteractor.cs,TryGetHvo,The following switch statement is missing a default case: switch (element.TagName.ToLowerInvariant())  				{  					case "table":  					case "span":  					case "th":  					case "td":  						string id = element.GetAttribute("id");  						if (!string.IsNullOrEmpty(id))  							return int.TryParse(id' out hvo);  						break;  				}
Missing Default,SIL.FieldWorks.LexText.Controls,WebPageInteractor,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\WebPageInteractor.cs,HandleDomClick,The following switch statement is missing a default case: switch (elem.GetAttribute("name"))  				{  					case "ShowWordGrammarDetail":  						ShowWordGrammarDetail(elem.GetAttribute("id"));  						break;    					case "TryWordGrammarAgain":  						TryWordGrammarAgain(elem.GetAttribute("id"));  						break;    					case "GoToPreviousWordGrammarPage":  						GoToPreviousWordGrammarPage();  						break;  				}
Missing Default,SIL.FieldWorks.LexText.Controls,WebPageInteractor,C:\repos\sillsdev_FieldWorks\Src\LexText\ParserUI\WebPageInteractor.cs,JumpToToolBasedOnHvo,The following switch statement is missing a default case: switch (cmo.ClassID)  			{  				case MoFormTags.kClassId:					// fall through  				case MoAffixAllomorphTags.kClassId:			// fall through  				case MoStemAllomorphTags.kClassId:			// fall through  				case MoInflAffMsaTags.kClassId:				// fall through  				case MoDerivAffMsaTags.kClassId:			// fall through  				case MoUnclassifiedAffixMsaTags.kClassId:	// fall through  				case MoStemMsaTags.kClassId:				// fall through  				case MoMorphSynAnalysisTags.kClassId:		// fall through  				case MoAffixProcessTags.kClassId:  					sTool = "lexiconEdit";  					parentClassId = LexEntryTags.kClassId;  					break;  				case MoInflAffixSlotTags.kClassId:		// fall through  				case MoInflAffixTemplateTags.kClassId:	// fall through  				case PartOfSpeechTags.kClassId:  					sTool = "posEdit";  					parentClassId = PartOfSpeechTags.kClassId;  					break;  				// still need to test compound rule ones  				case MoCoordinateCompoundTags.kClassId:	// fall through  				case MoEndoCompoundTags.kClassId:		// fall through  				case MoExoCompoundTags.kClassId:  					sTool = "compoundRuleAdvancedEdit";  					parentClassId = cmo.ClassID;  					break;  				case PhRegularRuleTags.kClassId:		// fall through  				case PhMetathesisRuleTags.kClassId:  					sTool = "PhonologicalRuleEdit";  					parentClassId = cmo.ClassID;  					break;  				case PhPhonemeTags.kClassId:  					sTool = "phonemeEdit";  					parentClassId = cmo.ClassID;  					break;  			}
