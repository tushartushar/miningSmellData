Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,Main,The method has 197 lines of code.
Long Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,ShowWelcomeDialog,The method has 156 lines of code.
Long Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,MoveProjectFolders,The method has 113 lines of code.
Long Method,SIL.FieldWorks,WelcomeToFieldWorksDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\WelcomeToFieldWorksDlg.Designer.cs,InitializeComponent,The method has 190 lines of code.
Complex Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,Main,Cyclomatic complexity of the method is 18
Complex Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetUICulture,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,MustCopyFoldersAndFiles,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CheckForMovingExternalLinkDirectory,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,Cyclomatic complexity of the method is 8
Long Parameter List,SIL.FieldWorks,WindowsInstallerQuery,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\WindowsInstallerQuery.cs,MsiGetFeatureInfo,The method has 7 parameters. Parameters: hProduct' szFeature' lpAttributes' lpTitleBuf' cchTitleBuf' lpHelpBuf' cchHelpBuf
Long Parameter List,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,AddGlossToSense,The method has 6 parameters. Parameters: type' lexicalForm' homograph' senseId' language' text
Long Parameter List,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,RemoveGloss,The method has 5 parameters. Parameters: type' lexicalForm' homograph' senseId' language
Long Parameter List,SIL.FieldWorks.LexicalProvider,ILexicalProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\ILexicalProvider.cs,AddGlossToSense,The method has 6 parameters. Parameters: type' lexicalForm' homograph' senseId' language' text
Long Parameter List,SIL.FieldWorks.LexicalProvider,ILexicalProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\ILexicalProvider.cs,RemoveGloss,The method has 5 parameters. Parameters: type' lexicalForm' homograph' senseId' language
Long Parameter List,SIL.FieldWorks.PaObjects,PaLexicalInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\PaObjects\PaLexicalInfo.cs,ShowOpenProject,The method has 5 parameters. Parameters: owner' dialogBounds' dialogSplitterPos' name' server
Long Parameter List,SIL.FieldWorks.PaObjects,PaLexicalInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\PaObjects\PaLexicalInfo.cs,InternalInitialize,The method has 5 parameters. Parameters: name' server' loadOnlyWs' timeToWaitForProcessStart' timeToWaitForLoadingData
Long Parameter List,SIL.FieldWorks.PaObjects,PaLexicalInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\PaObjects\PaLexicalInfo.cs,LoadFwDataForPa,The method has 7 parameters. Parameters: requestor' name' server' loadOnlyWs' timeToWaitForLoadingData' newProcessStarted' foundFwProcess
Long Identifier,SIL.FieldWorks,WelcomeToFieldWorksDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\WelcomeToFieldWorksDlg.Designer.cs,,The length of the parameter m_sampleOrLastProjectLinkLabel is 30.
Long Identifier,SIL.FieldWorks.LexicalProvider,LexicalServiceProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalServiceProvider.cs,,The length of the parameter kSupportedLexicalProviderVersion is 32.
Long Statement,SIL.FieldWorks,MoveProjectsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\MoveProjectsDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MoveProjectsDlg)); " is 135.
Long Statement,SIL.FieldWorks,ProjectId,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ProjectId.cs,CleanUpNameForType,The length of the statement  "			if (SysPath.GetExtension(name) != ext && (FileUtils.SimilarFileExists(name + ext) || !FileUtils.SimilarFileExists(name))) " is 121.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,Main,The length of the statement  "					reportingSettings.OkToPingBasicUsageData = feedbackEnvVar.ToLower().Equals("true") || feedbackEnvVar.ToLower().Equals("yes"); " is 125.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,LaunchRestoreFromCommandLine,The length of the statement  "				RestoreCurrentProject(new FwRestoreProjectSettings(new RestoreProjectSettings(FwDirectoryFinder.ProjectsDirectory' appArgs.Database' appArgs.BackupFile' appArgs.RestoreOptions))' null); " is 185.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,EnsureValidLinkedFilesFolder,The length of the statement  "				MessageBox.Show(String.Format(Properties.Resources.ksInvalidLinkedFilesFolder' linkedFilesFolder)' Properties.Resources.ksErrorCaption); " is 136.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,ShowWelcomeDialog,The length of the statement  "				using (WelcomeToFieldWorksDlg dlg = new WelcomeToFieldWorksDlg(helpTopicProvider' exception' s_noPreviousReportingSettings)) " is 124.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,UpdateProjectsLocation,The length of the statement  "				ExecuteWithAllFwProcessesShutDown(() => MoveProjectFolders(oldFolderForProjects' newFolderForProjects' projectPath' oldProjectId)); " is 131.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,MoveProjectFolders,The length of the statement  "				progressDlg.Title = string.Format(Properties.Resources.ksMovingProjectsCaption' oldFolderForProjects' newFolderForProjects); " is 124.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,IsFieldWorksProjectFolder,The length of the statement  "			var projectFileName = Path.ChangeExtension(Path.Combine(projectFolder' projectName)' LcmFileHelper.ksFwDataXmlFileExtension); " is 125.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RestoreCurrentProject,The length of the statement  "						var restoreService = new ProjectRestoreService(restoreSettings.Settings' s_ui' FwDirectoryFinder.ConverterConsoleExe' FwDirectoryFinder.DbExe); " is 143.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RestoreCurrentProject,The length of the statement  "						if (RestoreProjectDlg.HandleRestoreFileErrors(null' restoreSettings.Settings.Backup.File' () => DoRestore(restoreService))) " is 123.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,BackupProjectForRestore,The length of the statement  "						if (MessageBox.Show(msg' FwCoreDlgs.FwCoreDlgs.ksWarning' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) != DialogResult.Yes) " is 127.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateLcmSettings,The length of the statement  "				sharedXmlBackendCommitLogSize = (int) FwRegistryHelper.FieldWorksRegistryKey.GetValue("SharedXMLBackendCommitLogSize"' 0); " is 122.
Long Statement,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateLcmSettings,The length of the statement  "				sharedXmlBackendCommitLogSize = (int) FwRegistryHelper.FieldWorksRegistryKeyLocalMachine.GetValue("SharedXMLBackendCommitLogSize"' 0); " is 134.
Long Statement,SIL.FieldWorks,WelcomeToFieldWorksDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\WelcomeToFieldWorksDlg.Designer.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WelcomeToFieldWorksDlg)); " is 142.
Long Statement,SIL.FieldWorks,WelcomeToFieldWorksDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\WelcomeToFieldWorksDlg.Designer.cs,InitializeComponent,The length of the statement  "			this.m_openSampleOrLastProjectLink.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.m_openProjectLink_LinkClicked); " is 144.
Long Statement,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,ShowEntry,The length of the statement  "					LexEntryUi.DisplayEntry(FieldWorks.Cache' mediator' propertyTable' propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' " is 131.
Long Statement,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,ShowRelatedWords,The length of the statement  "					LexEntryUi.DisplayRelatedEntries(FieldWorks.Cache' mediator' propertyTable' propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' " is 140.
Long Statement,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,AddGlossToSense,The length of the statement  "						dbAnalysis.ApprovalStatusIcon = (int)Opinions.approves; // Assume the analysis from the external application is user approved " is 125.
Long Statement,SIL.FieldWorks.LexicalProvider,LexicalServiceProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalServiceProvider.cs,GetProviderLocation,The length of the statement  "				var url = LexicalProviderManager.UrlPrefix + LexicalProviderManager.FixPipeHandle(FwUtils.GeneratePipeHandle(projhandle + ":LP")); " is 130.
Complex Conditional,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,DetermineProject,The conditional expression  "(String.IsNullOrEmpty(projId.Name) || projectOpenError != null) &&  				previousStartupStatus != StartupStatus.Failed && !String.IsNullOrEmpty(latestProject)"  is complex.
Complex Conditional,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,DetermineProject,The conditional expression  "fOpenLastEditedProject && projId.IsValid && projectOpenError == null  				&& previousStartupStatus == StartupStatus.Successful"  is complex.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,StartFwApp,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,DisplayError,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,ShutdownApp,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RecordLastAppForProject,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RecordLastAppForProject,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RecordLastAppForProject,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RunOnRemoteClients,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,ReopenProject,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks,RemoteRequest,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\RemoteRequest.cs,BringMainFormToFront,The method has an empty catch block.
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,WaitForOtherApp,The following statement contains a magic number: Thread.Sleep(333);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_btnCancel.Location = new System.Drawing.Point(290' 75);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_btnCancel.Location = new System.Drawing.Point(290' 75);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_btnCancel.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lblMessage.Location = new System.Drawing.Point(12' 9);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lblMessage.Location = new System.Drawing.Point(12' 9);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lblMessage.Size = new System.Drawing.Size(631' 63);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lblMessage.Size = new System.Drawing.Size(631' 63);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(655' 105);
Magic Number,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(655' 105);
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,Main,The following statement contains a magic number: Icu.Wrapper.ConfineIcuVersions(54);
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CommitAndDisposeCache,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,HandleTopLevelError,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CheckForMovingExternalLinkDirectory,The following statement contains a magic number: launchesFlex != 9
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,IsInSingleFWProccessMode,The following statement contains a magic number: return RunOnRemoteClients(kFwRemoteRequest' requestor =>  			{  				Func<bool> invoker = requestor.InSingleProcessMode;  				IAsyncResult ar = invoker.BeginInvoke(null' null);  				while (!ar.IsCompleted)  				{  					if (!ar.AsyncWaitHandle.WaitOne(9000' false))  						return false; // Just continue on  				}  				// We can now ask for the answer.  				if (invoker.EndInvoke(ar))  				{  					requestor.BringMainFormToFront();  					return true; // Should kill this process  				}  				return false; // Need to check the other FW processes  			});
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,TryFindExistingProcess,The following statement contains a magic number: return RunOnRemoteClients(kFwRemoteRequest' requestor =>  			{  				ProjectMatch isMyProject;  				Func<ProjectId' FwAppArgs' ProjectMatch> invoker = requestor.HandleOpenProjectRequest;  				var start = DateTime.Now;  				do  				{  					IAsyncResult ar = invoker.BeginInvoke(project' args' null' null);  					while (!ar.IsCompleted)  					{  						s_fWaitingForUserOrOtherFw = true;  						// Wait until this process knows which project it is loading.  						if (!ar.AsyncWaitHandle.WaitOne(9000' false))  						{  							// timed out.  							if (MessageBox.Show(Properties.Resources.kstidFieldWorksDidNotRespond' Properties.Resources.kstidStartupProblem'  								MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No)  							{  								return true;  							}  						}  					}  					// We can now ask for the answer.  					isMyProject = invoker.EndInvoke(ar);    					if (isMyProject == ProjectMatch.SingleProcessMode)  					{  						Logger.WriteEvent("WEIRD! Detected single FW process mode while this process is trying to open a project.");  						Debug.Fail("We don't think this can happen' but it's no big deal.");  						return true; // Should kill this process  					}  					if (DateTime.Now - start > new TimeSpan(0' 0' 10))  					{  						// Some other process apparently keeps telling us it doesn't know. It's probably stuck in this same loop'  						// waiting for us!  						MessageBox.Show(Properties.Resources.kstidFieldWorksRespondedNotSure' Properties.Resources.kstidStartupProblem'  							MessageBoxButtons.OK' MessageBoxIcon.Warning);  						return true; // pretends some other process has the project opened and is handling the request; this process will quit  					}  				} while (isMyProject == ProjectMatch.DontKnowYet);    				s_fWaitingForUserOrOtherFw = false;  				return (isMyProject == ProjectMatch.ItsMyProject);  			});
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,TryFindExistingProcess,The following statement contains a magic number: return RunOnRemoteClients(kFwRemoteRequest' requestor =>  			{  				ProjectMatch isMyProject;  				Func<ProjectId' FwAppArgs' ProjectMatch> invoker = requestor.HandleOpenProjectRequest;  				var start = DateTime.Now;  				do  				{  					IAsyncResult ar = invoker.BeginInvoke(project' args' null' null);  					while (!ar.IsCompleted)  					{  						s_fWaitingForUserOrOtherFw = true;  						// Wait until this process knows which project it is loading.  						if (!ar.AsyncWaitHandle.WaitOne(9000' false))  						{  							// timed out.  							if (MessageBox.Show(Properties.Resources.kstidFieldWorksDidNotRespond' Properties.Resources.kstidStartupProblem'  								MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.No)  							{  								return true;  							}  						}  					}  					// We can now ask for the answer.  					isMyProject = invoker.EndInvoke(ar);    					if (isMyProject == ProjectMatch.SingleProcessMode)  					{  						Logger.WriteEvent("WEIRD! Detected single FW process mode while this process is trying to open a project.");  						Debug.Fail("We don't think this can happen' but it's no big deal.");  						return true; // Should kill this process  					}  					if (DateTime.Now - start > new TimeSpan(0' 0' 10))  					{  						// Some other process apparently keeps telling us it doesn't know. It's probably stuck in this same loop'  						// waiting for us!  						MessageBox.Show(Properties.Resources.kstidFieldWorksRespondedNotSure' Properties.Resources.kstidStartupProblem'  							MessageBoxButtons.OK' MessageBoxIcon.Warning);  						return true; // pretends some other process has the project opened and is handling the request; this process will quit  					}  				} while (isMyProject == ProjectMatch.DontKnowYet);    				s_fWaitingForUserOrOtherFw = false;  				return (isMyProject == ProjectMatch.ItsMyProject);  			});
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateRemoteRequestListener,The following statement contains a magic number: IDictionary dict = new Hashtable(2);
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateRemoteRequestListener,The following statement contains a magic number: int maxPort = kStartingPort + 100;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,RunOnRemoteClients,The following statement contains a magic number: int maxPort = kStartingPort + processes.Count * 4;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateRequestor,The following statement contains a magic number: !ar.AsyncWaitHandle.WaitOne(1000' false)
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: ulong mem = MiscUtils.GetPhysicalMemoryBytes() / 1048576;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: var processArch = Environment.Is64BitProcess ? 64 : 32;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: var processArch = Environment.Is64BitProcess ? 64 : 32;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: var osArch = Environment.Is64BitOperatingSystem ? 64 : 32;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: var osArch = Environment.Is64BitOperatingSystem ? 64 : 32;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: diskFree /= 1073742;
Magic Number,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,SetupErrorReportInformation,The following statement contains a magic number: diskSize /= 1073742;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.MaxBufferSize *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.MaxReceivedMessageSize *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.MaxBufferPoolSize *= 2;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.ReaderQuotas.MaxBytesPerRead *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.ReaderQuotas.MaxArrayLength *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.ReaderQuotas.MaxDepth *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.ReaderQuotas.MaxNameTableCharCount *= 4;
Magic Number,SIL.FieldWorks.LexicalProvider,LexicalProviderManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderManager.cs,StartProvider,The following statement contains a magic number: pipeBinding.ReaderQuotas.MaxStringContentLength *= 4;
Magic Number,SIL.FieldWorks.PaObjects,PaLexicalInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\PaObjects\PaLexicalInfo.cs,LoadFwDataForPa,The following statement contains a magic number: Thread.Sleep(100);
Missing Default,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,WaitForOtherApp,The following switch statement is missing a default case: switch (m_whatToWaitFor)  			{  				case WaitFor.WindowToActivate:  					m_lblMessage.Text = string.Format(Properties.Resources.kstidThisApplicationIsBusy'  						m_appToStart.ApplicationName' m_appToStart.Cache.ProjectId.Name);  					break;  				case WaitFor.OtherBusyApp:  					m_lblMessage.Text = string.Format(Properties.Resources.kstidOtherApplicationBusy'  						m_appToStart.ApplicationName' m_appToStart.Cache.ProjectId.Name' m_appToWaitFor.ApplicationName);  					break;  				case WaitFor.ModalDialogsToClose:  					m_lblMessage.Text = string.Format(Properties.Resources.kstidOtherApplicationHasDialog'  						m_appToStart.ApplicationName' m_appToStart.Cache.ProjectId.Name' m_appToWaitFor.ApplicationName);  					break;  			}
Missing Default,SIL.FieldWorks,ApplicationBusyDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ApplicationBusyDialog.cs,WaitForOtherApp,The following switch statement is missing a default case: switch (m_whatToWaitFor)  				{  					case WaitFor.WindowToActivate:  						readyToRoll = (m_appToStart.MainWindows.Count > 0);  						break;  					case WaitFor.OtherBusyApp:  						readyToRoll = !DataUpdateMonitor.IsUpdateInProgress();  						break;  					case WaitFor.ModalDialogsToClose:  						readyToRoll = !m_appToWaitFor.IsModalDialogOpen;  						break;  				}
Missing Default,SIL.FieldWorks,ProjectId,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\ProjectId.cs,GetType,The following switch statement is missing a default case: switch (ext)  // Includes period.  				{  					case LcmFileHelper.ksFwDataXmlFileExtension:  						return BackendProviderType.kXML;  				}
Missing Default,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,ShowWelcomeDialog,The following switch statement is missing a default case: switch (dlg.DlgResult)  					{  						case WelcomeToFieldWorksDlg.ButtonPress.New:  							projectToTry = CreateNewProject(dlg' app' helpTopicProvider);  							Debug.Assert(projectToTry == null || projectToTry.IsValid);  							break;  						case WelcomeToFieldWorksDlg.ButtonPress.Open:  							projectToTry = ChooseLangProject(null' helpTopicProvider);  							try  							{  								if (projectToTry != null)  									projectToTry.AssertValid();  							}  							catch (StartupException e)  							{  								exception = e;  							}  							break;  						case WelcomeToFieldWorksDlg.ButtonPress.Link:  							// LT-13943 - this guard keeps the projectToTry from getting blasted by a null when it has  							// a useful projectId (like the initial sample db the first time FLEx is run).  							if (lastProjectId != null && !lastProjectId.Equals(projectToTry))  								projectToTry = lastProjectId; // just making sure!  							Debug.Assert(projectToTry.IsValid);  							break;  						case WelcomeToFieldWorksDlg.ButtonPress.Restore:  							s_allowFinalShutdown = false;  							RestoreProject(null' app);  							s_allowFinalShutdown = true;  							projectToTry = s_projectId; // Restore probably used this process  							break;  						case WelcomeToFieldWorksDlg.ButtonPress.Exit:  							return null; // Should cause the FW process to exit later  						case WelcomeToFieldWorksDlg.ButtonPress.Receive:  							if (!FwNewLangProject.CheckProjectDirectory(null' helpTopicProvider))  								break;  							ObtainedProjectType obtainedProjectType;  							projectToTry = null; // If the user cancels the send/receive' this null will result in a return to the welcome dialog.  							// Hard to say what Form.ActiveForm is here. The splash and welcome dlgs are both gone.  							var projectDataPathname = ObtainProjectMethod.ObtainProjectFromAnySource(Form.ActiveForm'  								helpTopicProvider' out obtainedProjectType);  							if (!string.IsNullOrEmpty(projectDataPathname))  							{  								projectToTry = new ProjectId(BackendProviderType.kXML' projectDataPathname);  								var activeWindow = startingApp.ActiveMainWindow;  								if (activeWindow != null)  								{  									var activeWindowInterface = (IFwMainWnd)activeWindow;  									activeWindowInterface.PropTable.SetProperty("LastBridgeUsed"'  										obtainedProjectType == ObtainedProjectType.Lift ? "LiftBridge" : "FLExBridge"'  										PropertyTable.SettingsGroup.LocalSettings'  										true);  								}  							}  							break;  						case WelcomeToFieldWorksDlg.ButtonPress.Import:  							projectToTry = CreateNewProject(dlg' app' helpTopicProvider);  							if (projectToTry != null)  							{  							var projectLaunched = LaunchProject(args' ref projectToTry);  								if (projectLaunched)  							{  								s_projectId = projectToTry; // Window is open on this project' we must not try to initialize it again.  								var mainWindow = Form.ActiveForm;  									if (mainWindow is IxWindow)  								{  										((IxWindow) mainWindow).Mediator.SendMessage("SFMImport"' null);  								}  								else  								{  									return null;  								}  							}  							else  							{  								return null;  							}  							}  							break;  					}
Missing Default,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,CreateNewProject,The following switch statement is missing a default case: switch (dlg.DisplayDialog(dialogOwner))  				{  					case DialogResult.OK:  						if (dlg.IsProjectNew)  							return new ProjectId(dlg.DatabaseName);  						else  						{  							// The user tried to create a new project which already exists and  							// then choose to open the project. Therefore open the project and return  							// null for the ProjectId so the caller of this method does not try to  							// create a new project.  							ProjectId projectId = new ProjectId(dlg.DatabaseName);  							OpenExistingProject(projectId' app' dialogOwner);  							return null;  						}  					case DialogResult.Abort:  						// If we get an Abort it means that we got an exception in the dialog (e.g.  						// in the OnLoad method). We can't just catch that exception here (probably  						// because of the extra message loop the dialog has)' so we close the dialog  						// and return Abort.  						MessageBox.Show(dialogOwner'  							ResourceHelper.GetResourceString("kstidNewProjError")'  							ResourceHelper.GetResourceString("kstidMiscError"));  						break;  				}
Missing Default,SIL.FieldWorks,FieldWorks,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\FieldWorks.cs,GetDriveMountList,The following switch statement is missing a default case: switch (d.DriveType)  				{  					case DriveType.Fixed:  					case DriveType.Network:  					case DriveType.Removable:  						if (MiscUtils.IsUnix)  							driveMounts.Add(d.Name + (d.Name.EndsWith("/") ? "" : "/"));	// ensure terminated with a slash  						else  							driveMounts.Add(d.Name.ToLowerInvariant());		// Windows produces C:\ D:\ etc.  						break;  				}
Missing Default,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,LexemeTypeAndMorphTypeMatch,The following switch statement is missing a default case: switch (type)  			{  				case LexemeType.Prefix: return morphType.IsPrefixishType;  				case LexemeType.Suffix: return morphType.IsSuffixishType;  				case LexemeType.Stem: return morphType.IsStemType &&  					morphType.Guid != MoMorphTypeTags.kguidMorphPhrase &&  					morphType.Guid != MoMorphTypeTags.kguidMorphDiscontiguousPhrase;  				case LexemeType.Phrase:  					return morphType.Guid == MoMorphTypeTags.kguidMorphPhrase ||  						morphType.Guid == MoMorphTypeTags.kguidMorphDiscontiguousPhrase;  			}
Missing Default,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,GetMorphTypeForLexemeType,The following switch statement is missing a default case: switch (type)  			{  				case LexemeType.Prefix: return repo.GetObject(MoMorphTypeTags.kguidMorphPrefix);  				case LexemeType.Suffix: return repo.GetObject(MoMorphTypeTags.kguidMorphSuffix);  				case LexemeType.Phrase: return repo.GetObject(MoMorphTypeTags.kguidMorphPhrase);  				case LexemeType.Stem: return repo.GetObject(MoMorphTypeTags.kguidMorphStem);  			}
Missing Default,SIL.FieldWorks.LexicalProvider,LexicalProviderImpl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\FieldWorks\LexicalProvider\LexicalProviderImpl.cs,GetLexemeTypeForMorphType,The following switch statement is missing a default case: switch (type.Guid.ToString())  			{  				case MoMorphTypeTags.kMorphCircumfix:  				case MoMorphTypeTags.kMorphInfix:  				case MoMorphTypeTags.kMorphInfixingInterfix:  				case MoMorphTypeTags.kMorphSimulfix:  				case MoMorphTypeTags.kMorphSuprafix:  				case MoMorphTypeTags.kMorphClitic:  				case MoMorphTypeTags.kMorphProclitic:  					// These don't map neatly to a lexeme type' so we just return prefix  					return LexemeType.Prefix;    				case MoMorphTypeTags.kMorphEnclitic:  					// This one also isn't a great match' but there is no better choice  					return LexemeType.Suffix;    				case MoMorphTypeTags.kMorphPrefix:  				case MoMorphTypeTags.kMorphPrefixingInterfix:  					return LexemeType.Prefix;    				case MoMorphTypeTags.kMorphSuffix:  				case MoMorphTypeTags.kMorphSuffixingInterfix:  					return LexemeType.Suffix;    				case MoMorphTypeTags.kMorphPhrase:  				case MoMorphTypeTags.kMorphDiscontiguousPhrase:  					return LexemeType.Phrase;    				case MoMorphTypeTags.kMorphStem:  				case MoMorphTypeTags.kMorphRoot:  				case MoMorphTypeTags.kMorphBoundRoot:  				case MoMorphTypeTags.kMorphBoundStem:  				case MoMorphTypeTags.kMorphParticle:  					return LexemeType.Stem;  			}
