Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,The method has 114 lines of code.
Complex Method,SIL.FieldWorks.Common.RootSites,RootSiteGroup,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSite.cs,Dispose,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,HandleFootnoteAnchorIconSelected,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,ConvertSelToLink,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,MakeSpellCheckMenuOptions,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,GetSuggestions,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,MakeEmbeddedNscSuggestion,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,InsertParagraphBody,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,Cyclomatic complexity of the method is 16
Long Parameter List,SIL.FieldWorks.Common.RootSites,CollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,OpenTable,The method has 9 parameters. Parameters: cCols' vlWidth' mpBorder' vwalign' frmpos' vwrule' mpSpacing' mpPadding' fSelectOneCol
Long Parameter List,SIL.FieldWorks.Common.RootSites,CollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,AddIntPropPic,The method has 5 parameters. Parameters: tag' _vc' frag' nMin' nMax
Long Parameter List,SIL.FieldWorks.Common.RootSites,CollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,AddPictureWithCaption,The method has 8 parameters. Parameters: _pict' tag' _ttpCaption' hvoCmFile' ws' dxmpWidth' dympHeight' _vc
Long Parameter List,SIL.FieldWorks.Common.RootSites,LocationInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,LocationInfo,The method has 5 parameters. Parameters: locationStack' cPropPrev' tag' ichMin' ichLim
Long Parameter List,SIL.FieldWorks.Common.RootSites,LocationInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,LocationInfo,The method has 6 parameters. Parameters: locationStack' cPropPrev' tag' ichMin' ichLim' ws
Long Parameter List,SIL.FieldWorks.Common.RootSites,StringMeasureEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,StringMeasureEnv,The method has 5 parameters. Parameters: baseEnv' sda' hvoRoot' graphics' font
Long Parameter List,SIL.FieldWorks.Common.RootSites,MaxStringWidthForColumnEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,MaxStringWidthForColumnEnv,The method has 5 parameters. Parameters: stylesheet' sda' hvoRoot' graphics' icolumn
Long Parameter List,SIL.FieldWorks.Common.RootSites,PictureWrapper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\PictureWrapper.cs,Render,The method has 10 parameters. Parameters: hdc' x' y' cx' cy' xSrc' ySrc' cxSrc' cySrc' prcWBounds
Long Parameter List,SIL.FieldWorks.Common.RootSites,FwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\FwBaseVc.cs,UpdateProp,The method has 5 parameters. Parameters: vwsel' hvo' tag' frag' tssVal
Long Parameter List,SIL.FieldWorks.Common.RootSites,RequestSelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RequestSelectionHelper.cs,RequestSelectionHelper,The method has 10 parameters. Parameters: hookup' rootb' ihvoRoot' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.RootSites,RootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSite.cs,RequestSelectionAtEndOfUow,The method has 10 parameters. Parameters: rootb' ihvoRoot' cvlsi' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,ShowContextMenu,The method has 8 parameters. Parameters: mousePos' tmAdapter' rootsite' contextMenuName' addToDictMenuName' insertBeforeMenuName' changeMultipleMenuName' fShowSpellingOptions
Long Parameter List,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,MakeSpellCheckMenuOptions,The method has 7 parameters. Parameters: mousePos' rootsite' tmAdapter' menuName' addToDictMenuName' changeMultipleMenuName' insertBeforeMenuName
Long Parameter List,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,GetSuggestions,The method has 9 parameters. Parameters: mousePos' rootsite' hvoObj' tag' wsAlt' wsText' word' dict' nonSpellingError
Long Parameter List,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,AdjustWordBoundary,The method has 5 parameters. Parameters: wsf' tss' forward' ichStart' lim
Long Parameter List,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,MakeEmbeddedNscSuggestion,The method has 9 parameters. Parameters: tssWord' styles' rootb' hvoObj' tag' wsAlt' ichMin' ichLim' tssKeepOrcs
Long Parameter List,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,MakeWssSuggestions,The method has 8 parameters. Parameters: tssWord' wss' rootb' hvoObj' tag' wsAlt' ichMin' ichLim
Long Parameter List,SIL.FieldWorks.Common.RootSites,SpellCorrectMenuItem,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,SpellCorrectMenuItem,The method has 8 parameters. Parameters: rootb' hvoObj' tag' wsAlt' ichMin' ichLim' text' tss
Long Parameter List,SIL.FieldWorks.Common.RootSites,AddToDictMenuItem,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,AddToDictMenuItem,The method has 9 parameters. Parameters: dict' word' rootb' hvoObj' tag' wsAlt' wsText' text' cache
Long Parameter List,SIL.FieldWorks.Common.RootSites,UndoAddToSpellDictAction,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,UndoAddToSpellDictAction,The method has 6 parameters. Parameters: wsText' word' rootb' hvoObj' tag' wsAlt
Long Parameter List,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,InsertParagraphBody,The method has 6 parameters. Parameters: vwenv' paraHvo' frag' fApplyProps' contentType' vc
Long Identifier,SIL.FieldWorks.Common.RootSites,TestCollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,,The length of the parameter m_notedStringPropertyDependencies is 33.
Long Identifier,SIL.FieldWorks.Common.RootSites,TsStringCollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,,The length of the parameter m_fRequestAppendSpaceForFirstWordInNewParagraph is 47.
Long Identifier,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,,The length of the parameter kMaxSpellingSuggestionsInRootMenu is 33.
Long Statement,SIL.FieldWorks.Common.RootSites,PictureWrapper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\PictureWrapper.cs,Render,The length of the statement  "			// See http://blogs.microsoft.co.il/blogs/sasha/archive/2008/07/28/finalizer-vs-application-a-race-condition-from-hell.aspx " is 123.
Long Statement,SIL.FieldWorks.Common.RootSites,RootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSite.cs,GetPossibleWritingSystemsToSelectByInputLanguage,The length of the statement  "			return (from ws in writingSystems.CurrentAnalysisWritingSystems.Union(writingSystems.CurrentVernacularWritingSystems).Union( " is 124.
Long Statement,SIL.FieldWorks.Common.RootSites,RootSiteControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteControl.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + ". ******************"); " is 122.
Long Statement,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,ConvertSelToLink,The length of the statement  "				var filename = StringServices.MarkTextInBldrAsHyperlink(tsb' 0' tsb.Length' clip' hyperlinkStyle' m_cache.LanguageProject.LinkedFilesRootDir); " is 142.
Long Statement,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,ConvertSelToLink,The length of the statement  "					Debug.Assert(m_cache.LangProject.FilePathsInTsStringsOA != null' "Somehow migration #30 did not add the FilePathsInTsStrings CmFolder. Fix by modifying FindOrCreateFolder()"); " is 175.
Long Statement,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,GetSuggestions,The length of the statement  "			// See whether we need the special blue underline' which is used mainly for adjacent words in different writing systems. " is 120.
Long Statement,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,AdjustWordBoundary,The length of the statement  "			for (ich = NextCharIndex(tss' forward' ichStart); !BeyondLim(forward' ich' lim); ich = NextCharIndex(tss' forward' ich)) " is 120.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,GetSuggestions,The conditional expression  "sel == null || !sel.IsRange || sel.SelType != VwSelType.kstText || !SelectionHelper.IsEditable(sel)"  is complex.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,RootSiteControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteControl.cs,OnGotFocus,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,MakeObjFromText,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,MakeObjFromText,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.RootSites,CollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,get_StringWidth,The following statement contains a magic number: dmpy = 10;
Magic Number,SIL.FieldWorks.Common.RootSites,CollectorEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,RenameOutputToPassN,The following statement contains a magic number: tries < 5
Magic Number,SIL.FieldWorks.Common.RootSites,MaxStringWidthForColumnEnv,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\CollectorEnv.cs,GetFontFromWs,The following statement contains a magic number: int fontSize = 14;
Magic Number,SIL.FieldWorks.Common.RootSites,FwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\FwBaseVc.cs,GetStrForGuid,The following statement contains a magic number: Debug.Assert(bstrGuid.Length == 8);
Magic Number,SIL.FieldWorks.Common.RootSites,RootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSite.cs,EstimateHeight,The following statement contains a magic number: return (int)(10 * Zoom);
Magic Number,SIL.FieldWorks.Common.RootSites,RootSiteEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\RootSiteEditingHelper.cs,OnKeyPress,The following statement contains a magic number: e.KeyChar == (char)Keys.Back || e.KeyChar == (char)127
Magic Number,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,SpellCheckProps,The following statement contains a magic number: return -50 - ich;
Magic Number,SIL.FieldWorks.Common.RootSites,SpellCheckHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\SpellCheckHelper.cs,MakeEmbeddedNscSuggestion,The following statement contains a magic number: spCur = -50 - ich;
Magic Number,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case (int)StTextFrags.kfrFootnote:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  					{  						// We need to note this dependency here (for the update of the footnote  						// marker) instead of in the frag for the marker because noting the  						// dependency at the frag for the marker caused some weird problems  						// with the VwNotifiers which caused the view to sometimes update  						// incorrectly. (FWR-1299) It also makes more sense for it to be here  						// since the dependency would be on the whole footnote in either case  						// anyways.  						vwenv.NoteDependency(new int[] { footnote.Owner.Hvo }' new int[] { footnote.OwningFlid }' 1);  					}  					vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  						(int)StTextFrags.kfrFootnotePara);  					break;  				}    				case (int)StTextFrags.kfrText:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					if (hvo == 0)  						return; // leave view empty' better than crashing.  					if (m_fLazy)  					{  						vwenv.AddLazyVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					else  					{  						vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					break;  				}  				case (int)StTextFrags.kfrFootnoteMarker:  				{  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  						DisplayFootnoteMarker(vwenv' footnote);  					break;  				}  				case (int)StTextFrags.kfrLabel:  				{  					// The label is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddString(m_tssLabel);  					break;  				}    				case (int)StTextFrags.kfrPara:  				case (int)StTextFrags.kfrFootnotePara:  				{  					InsertParagraphBody(vwenv' hvo' frag' true' ContentType' this);  					break;  				}    				case (int)StTextFrags.kfrTranslation:  				{  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable' (int)FwTextPropVar.ktpvEnum'  						Editable ? (int)TptEditable.ktptIsEditable : (int)TptEditable.ktptNotEditable);  					// Display the translation' or its user prompt  					ICmTranslation trans = Cache.ServiceLocator.GetInstance<ICmTranslationRepository>().GetObject(hvo);  					if (!InsertTranslationUserPrompt(vwenv' trans))  						vwenv.AddStringAltMember(CmTranslationTags.kflidTranslation' m_wsDefault' this);  					break;  				}  				case (int)StTextFrags.kfrSegmentFreeTranslations:  					// Hvo is one segment of an StTxtPara.  					ISegment seg = Cache.ServiceLocator.GetInstance<ISegmentRepository>().GetObject(hvo);  					if (seg.IsLabel)  					{  						// Added dependencies to get labels to update automatically (FWR-1341' FWR-1342' FWR-1417)  						vwenv.NoteStringValDependency(seg.Paragraph.Hvo' StTxtParaTags.kflidContents' 0' seg.Paragraph.Contents);  						vwenv.NoteDependency(new [] {seg.Paragraph.Hvo}' new [] {StTxtParaTags.kflidSegments}' 1);  						vwenv.AddString(GetBackTransLabelText(seg));  						vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 1200' 0' 0); // a narrow space' font-neutral  					}  					else  					{  						// Hvo is a segment whose Contents are the free/back translation.  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  							(int)ColorUtil.ConvertColorToBGR(SystemColors.Window));  						ITsString tssVal = seg.FreeTranslation.get_String(BackTranslationWS);  						if (tssVal.Length == 0 && !SuppressPrompt(hvo' SegmentTags.kflidFreeTranslation))  						{  							vwenv.NoteDependency(new[] { hvo }' new[] { SegmentTags.kflidFreeTranslation }' 1);  							vwenv.AddProp(SimpleRootSite.kTagUserPrompt' this' SegmentTags.kflidFreeTranslation);  							// Almost invisibly narrow' but the Views code doesn't know it is invisible so it should prevent the prompts collapsing  							// into the margin.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						else  						{  							ITsStrBldr bldr = tssVal.GetBldr();  							bldr.Replace(0' bldr.Length' ""' null); // reduce to empty string in ws.  							// We want it to change back to the prompt if all is deleted.  							vwenv.NoteStringValDependency(hvo' SegmentTags.kflidFreeTranslation' BackTranslationWS' bldr.GetString());  							vwenv.AddStringAltMember(SegmentTags.kflidFreeTranslation' BackTranslationWS' this);  							// This little separator is useful here' too. Temporarily the comment may be displayed this way even when empty'  							// and if there is ordinary text following' it is difficult to get an IP displayed in an empty run.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						vwenv.AddString(OneSpaceString);  					}  					break;  			}
Magic Number,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case (int)StTextFrags.kfrFootnote:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  					{  						// We need to note this dependency here (for the update of the footnote  						// marker) instead of in the frag for the marker because noting the  						// dependency at the frag for the marker caused some weird problems  						// with the VwNotifiers which caused the view to sometimes update  						// incorrectly. (FWR-1299) It also makes more sense for it to be here  						// since the dependency would be on the whole footnote in either case  						// anyways.  						vwenv.NoteDependency(new int[] { footnote.Owner.Hvo }' new int[] { footnote.OwningFlid }' 1);  					}  					vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  						(int)StTextFrags.kfrFootnotePara);  					break;  				}    				case (int)StTextFrags.kfrText:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					if (hvo == 0)  						return; // leave view empty' better than crashing.  					if (m_fLazy)  					{  						vwenv.AddLazyVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					else  					{  						vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					break;  				}  				case (int)StTextFrags.kfrFootnoteMarker:  				{  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  						DisplayFootnoteMarker(vwenv' footnote);  					break;  				}  				case (int)StTextFrags.kfrLabel:  				{  					// The label is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddString(m_tssLabel);  					break;  				}    				case (int)StTextFrags.kfrPara:  				case (int)StTextFrags.kfrFootnotePara:  				{  					InsertParagraphBody(vwenv' hvo' frag' true' ContentType' this);  					break;  				}    				case (int)StTextFrags.kfrTranslation:  				{  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable' (int)FwTextPropVar.ktpvEnum'  						Editable ? (int)TptEditable.ktptIsEditable : (int)TptEditable.ktptNotEditable);  					// Display the translation' or its user prompt  					ICmTranslation trans = Cache.ServiceLocator.GetInstance<ICmTranslationRepository>().GetObject(hvo);  					if (!InsertTranslationUserPrompt(vwenv' trans))  						vwenv.AddStringAltMember(CmTranslationTags.kflidTranslation' m_wsDefault' this);  					break;  				}  				case (int)StTextFrags.kfrSegmentFreeTranslations:  					// Hvo is one segment of an StTxtPara.  					ISegment seg = Cache.ServiceLocator.GetInstance<ISegmentRepository>().GetObject(hvo);  					if (seg.IsLabel)  					{  						// Added dependencies to get labels to update automatically (FWR-1341' FWR-1342' FWR-1417)  						vwenv.NoteStringValDependency(seg.Paragraph.Hvo' StTxtParaTags.kflidContents' 0' seg.Paragraph.Contents);  						vwenv.NoteDependency(new [] {seg.Paragraph.Hvo}' new [] {StTxtParaTags.kflidSegments}' 1);  						vwenv.AddString(GetBackTransLabelText(seg));  						vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 1200' 0' 0); // a narrow space' font-neutral  					}  					else  					{  						// Hvo is a segment whose Contents are the free/back translation.  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  							(int)ColorUtil.ConvertColorToBGR(SystemColors.Window));  						ITsString tssVal = seg.FreeTranslation.get_String(BackTranslationWS);  						if (tssVal.Length == 0 && !SuppressPrompt(hvo' SegmentTags.kflidFreeTranslation))  						{  							vwenv.NoteDependency(new[] { hvo }' new[] { SegmentTags.kflidFreeTranslation }' 1);  							vwenv.AddProp(SimpleRootSite.kTagUserPrompt' this' SegmentTags.kflidFreeTranslation);  							// Almost invisibly narrow' but the Views code doesn't know it is invisible so it should prevent the prompts collapsing  							// into the margin.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						else  						{  							ITsStrBldr bldr = tssVal.GetBldr();  							bldr.Replace(0' bldr.Length' ""' null); // reduce to empty string in ws.  							// We want it to change back to the prompt if all is deleted.  							vwenv.NoteStringValDependency(hvo' SegmentTags.kflidFreeTranslation' BackTranslationWS' bldr.GetString());  							vwenv.AddStringAltMember(SegmentTags.kflidFreeTranslation' BackTranslationWS' this);  							// This little separator is useful here' too. Temporarily the comment may be displayed this way even when empty'  							// and if there is ordinary text following' it is difficult to get an IP displayed in an empty run.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						vwenv.AddString(OneSpaceString);  					}  					break;  			}
Magic Number,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case (int)StTextFrags.kfrFootnote:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  					{  						// We need to note this dependency here (for the update of the footnote  						// marker) instead of in the frag for the marker because noting the  						// dependency at the frag for the marker caused some weird problems  						// with the VwNotifiers which caused the view to sometimes update  						// incorrectly. (FWR-1299) It also makes more sense for it to be here  						// since the dependency would be on the whole footnote in either case  						// anyways.  						vwenv.NoteDependency(new int[] { footnote.Owner.Hvo }' new int[] { footnote.OwningFlid }' 1);  					}  					vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  						(int)StTextFrags.kfrFootnotePara);  					break;  				}    				case (int)StTextFrags.kfrText:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					if (hvo == 0)  						return; // leave view empty' better than crashing.  					if (m_fLazy)  					{  						vwenv.AddLazyVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					else  					{  						vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					break;  				}  				case (int)StTextFrags.kfrFootnoteMarker:  				{  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  						DisplayFootnoteMarker(vwenv' footnote);  					break;  				}  				case (int)StTextFrags.kfrLabel:  				{  					// The label is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddString(m_tssLabel);  					break;  				}    				case (int)StTextFrags.kfrPara:  				case (int)StTextFrags.kfrFootnotePara:  				{  					InsertParagraphBody(vwenv' hvo' frag' true' ContentType' this);  					break;  				}    				case (int)StTextFrags.kfrTranslation:  				{  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable' (int)FwTextPropVar.ktpvEnum'  						Editable ? (int)TptEditable.ktptIsEditable : (int)TptEditable.ktptNotEditable);  					// Display the translation' or its user prompt  					ICmTranslation trans = Cache.ServiceLocator.GetInstance<ICmTranslationRepository>().GetObject(hvo);  					if (!InsertTranslationUserPrompt(vwenv' trans))  						vwenv.AddStringAltMember(CmTranslationTags.kflidTranslation' m_wsDefault' this);  					break;  				}  				case (int)StTextFrags.kfrSegmentFreeTranslations:  					// Hvo is one segment of an StTxtPara.  					ISegment seg = Cache.ServiceLocator.GetInstance<ISegmentRepository>().GetObject(hvo);  					if (seg.IsLabel)  					{  						// Added dependencies to get labels to update automatically (FWR-1341' FWR-1342' FWR-1417)  						vwenv.NoteStringValDependency(seg.Paragraph.Hvo' StTxtParaTags.kflidContents' 0' seg.Paragraph.Contents);  						vwenv.NoteDependency(new [] {seg.Paragraph.Hvo}' new [] {StTxtParaTags.kflidSegments}' 1);  						vwenv.AddString(GetBackTransLabelText(seg));  						vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 1200' 0' 0); // a narrow space' font-neutral  					}  					else  					{  						// Hvo is a segment whose Contents are the free/back translation.  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  							(int)ColorUtil.ConvertColorToBGR(SystemColors.Window));  						ITsString tssVal = seg.FreeTranslation.get_String(BackTranslationWS);  						if (tssVal.Length == 0 && !SuppressPrompt(hvo' SegmentTags.kflidFreeTranslation))  						{  							vwenv.NoteDependency(new[] { hvo }' new[] { SegmentTags.kflidFreeTranslation }' 1);  							vwenv.AddProp(SimpleRootSite.kTagUserPrompt' this' SegmentTags.kflidFreeTranslation);  							// Almost invisibly narrow' but the Views code doesn't know it is invisible so it should prevent the prompts collapsing  							// into the margin.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						else  						{  							ITsStrBldr bldr = tssVal.GetBldr();  							bldr.Replace(0' bldr.Length' ""' null); // reduce to empty string in ws.  							// We want it to change back to the prompt if all is deleted.  							vwenv.NoteStringValDependency(hvo' SegmentTags.kflidFreeTranslation' BackTranslationWS' bldr.GetString());  							vwenv.AddStringAltMember(SegmentTags.kflidFreeTranslation' BackTranslationWS' this);  							// This little separator is useful here' too. Temporarily the comment may be displayed this way even when empty'  							// and if there is ordinary text following' it is difficult to get an IP displayed in an empty run.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						vwenv.AddString(OneSpaceString);  					}  					break;  			}
Magic Number,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,EstimateHeight,The following statement contains a magic number: return (HeightEstimator == null) ? 120 :  				HeightEstimator.EstimateHeight(hvo' frag' dxpAvailWidth);
Missing Default,SIL.FieldWorks.Common.RootSites,FwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\FwBaseVc.cs,DisplayVariant,The following switch statement is missing a default case: switch (frag)  				{  					case kfragGenDateLong:  						str = genDate.ToLongString();  						break;  					case kfragGenDateShort:  						str = genDate.ToShortString();  						break;  					case kfragGenDateSort:  						str = genDate.ToSortString();  						break;  				}
Missing Default,SIL.FieldWorks.Common.RootSites,StVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\RootSite\StVc.cs,Display,The following switch statement is missing a default case: switch(frag)  			{  				case (int)StTextFrags.kfrFootnote:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  					{  						// We need to note this dependency here (for the update of the footnote  						// marker) instead of in the frag for the marker because noting the  						// dependency at the frag for the marker caused some weird problems  						// with the VwNotifiers which caused the view to sometimes update  						// incorrectly. (FWR-1299) It also makes more sense for it to be here  						// since the dependency would be on the whole footnote in either case  						// anyways.  						vwenv.NoteDependency(new int[] { footnote.Owner.Hvo }' new int[] { footnote.OwningFlid }' 1);  					}  					vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  						(int)StTextFrags.kfrFootnotePara);  					break;  				}    				case (int)StTextFrags.kfrText:  				{  					if (HandleEmptyText(vwenv' hvo))  						break;  					if (hvo == 0)  						return; // leave view empty' better than crashing.  					if (m_fLazy)  					{  						vwenv.AddLazyVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					else  					{  						vwenv.AddObjVecItems(StTextTags.kflidParagraphs' this'  							(int)StTextFrags.kfrPara);  					}  					break;  				}  				case (int)StTextFrags.kfrFootnoteMarker:  				{  					IStFootnote footnote = Cache.ServiceLocator.GetInstance<IStFootnoteRepository>().GetObject(hvo);  					if (footnote.DisplayFootnoteMarker)  						DisplayFootnoteMarker(vwenv' footnote);  					break;  				}  				case (int)StTextFrags.kfrLabel:  				{  					// The label is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddString(m_tssLabel);  					break;  				}    				case (int)StTextFrags.kfrPara:  				case (int)StTextFrags.kfrFootnotePara:  				{  					InsertParagraphBody(vwenv' hvo' frag' true' ContentType' this);  					break;  				}    				case (int)StTextFrags.kfrTranslation:  				{  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable' (int)FwTextPropVar.ktpvEnum'  						Editable ? (int)TptEditable.ktptIsEditable : (int)TptEditable.ktptNotEditable);  					// Display the translation' or its user prompt  					ICmTranslation trans = Cache.ServiceLocator.GetInstance<ICmTranslationRepository>().GetObject(hvo);  					if (!InsertTranslationUserPrompt(vwenv' trans))  						vwenv.AddStringAltMember(CmTranslationTags.kflidTranslation' m_wsDefault' this);  					break;  				}  				case (int)StTextFrags.kfrSegmentFreeTranslations:  					// Hvo is one segment of an StTxtPara.  					ISegment seg = Cache.ServiceLocator.GetInstance<ISegmentRepository>().GetObject(hvo);  					if (seg.IsLabel)  					{  						// Added dependencies to get labels to update automatically (FWR-1341' FWR-1342' FWR-1417)  						vwenv.NoteStringValDependency(seg.Paragraph.Hvo' StTxtParaTags.kflidContents' 0' seg.Paragraph.Contents);  						vwenv.NoteDependency(new [] {seg.Paragraph.Hvo}' new [] {StTxtParaTags.kflidSegments}' 1);  						vwenv.AddString(GetBackTransLabelText(seg));  						vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 1200' 0' 0); // a narrow space' font-neutral  					}  					else  					{  						// Hvo is a segment whose Contents are the free/back translation.  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  							(int)ColorUtil.ConvertColorToBGR(SystemColors.Window));  						ITsString tssVal = seg.FreeTranslation.get_String(BackTranslationWS);  						if (tssVal.Length == 0 && !SuppressPrompt(hvo' SegmentTags.kflidFreeTranslation))  						{  							vwenv.NoteDependency(new[] { hvo }' new[] { SegmentTags.kflidFreeTranslation }' 1);  							vwenv.AddProp(SimpleRootSite.kTagUserPrompt' this' SegmentTags.kflidFreeTranslation);  							// Almost invisibly narrow' but the Views code doesn't know it is invisible so it should prevent the prompts collapsing  							// into the margin.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						else  						{  							ITsStrBldr bldr = tssVal.GetBldr();  							bldr.Replace(0' bldr.Length' ""' null); // reduce to empty string in ws.  							// We want it to change back to the prompt if all is deleted.  							vwenv.NoteStringValDependency(hvo' SegmentTags.kflidFreeTranslation' BackTranslationWS' bldr.GetString());  							vwenv.AddStringAltMember(SegmentTags.kflidFreeTranslation' BackTranslationWS' this);  							// This little separator is useful here' too. Temporarily the comment may be displayed this way even when empty'  							// and if there is ordinary text following' it is difficult to get an IP displayed in an empty run.  							vwenv.AddSimpleRect((int)ColorUtil.ConvertColorToBGR(BackColor)' 100' 0' 0);  						}  						vwenv.AddString(OneSpaceString);  					}  					break;  			}
