Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The method has 111 lines of code.
Long Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The method has 122 lines of code.
Long Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The method has 305 lines of code.
Long Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The method has 128 lines of code.
Long Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The method has 162 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_SelectsCorrectNode,The method has 111 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The method has 104 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,Init,The method has 110 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The method has 509 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The method has 135 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists_ExportsReverseNameAndAbbrAndGlossAppend,The method has 143 lines of code.
Long Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The method has 121 lines of code.
Long Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFromConfig83AlphaToBeta10_UpdatesEtymologyCluster,The method has 107 lines of code.
Long Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The method has 172 lines of code.
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,Cyclomatic complexity of the method is 9
Long Parameter List,SIL.FieldWorks.XWorks,BulkEditBarForTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BulkEditBarForTests,The method has 5 parameters. Parameters: bv' spec' mediator' propertyTable' cache
Long Parameter List,SIL.FieldWorks.XWorks,BrowseViewerForTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BrowseViewerForTests,The method has 8 parameters. Parameters: nodeSpec' hvoRoot' fakeFlid' cache' mediator' propertyTable' sortItemProvider' sdaRecordList
Long Parameter List,SIL.FieldWorks.XWorks,BrowseViewerForTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,CreateBulkEditBar,The method has 5 parameters. Parameters: bv' spec' mediator' propertyTable' cache
Long Parameter List,SIL.FieldWorks.XWorks,RecordBrowseViewForTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,CreateBrowseViewer,The method has 8 parameters. Parameters: nodeSpec' hvoRoot' fakeFlid' cache' mediator' propertyTable' sortItemProvider' sda
Long Parameter List,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,GrabSensesWeNeed,The method has 6 parameters. Parameters: green' see' understand' subsense1' subsense2' english1
Long Parameter List,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,SetupPronunciationData,The method has 5 parameters. Parameters: firstPronunciation' firstEntryWithPronunciation' firstEntryWithoutPronunciation' entriesWithoutPronunciations' pronunciations
Long Parameter List,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,SetupAllomorphsData,The method has 5 parameters. Parameters: firstAllomorphOut' firstEntryWithAllomorphOut' firstEntryWithoutAllomorphOut' entriesWithoutAllomorphsOut' allomorphsOut
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateVariantForm,The method has 5 parameters. Parameters: cache' main' variantForm' guid' type
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The method has 5 parameters. Parameters: cache' main' complexForm' guid' subentry
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The method has 5 parameters. Parameters: cache' main' complexForm' subentry' complexFormTypeIndex
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The method has 5 parameters. Parameters: cache' main' complexForm' subentry' typeGuid
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The method has 5 parameters. Parameters: cache' main' complexForm' subentry' complexEntryType
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateLexicalReference,The method has 5 parameters. Parameters: firstEntry' secondEntry' thirdEntry' refTypeName' refTypeReverseName
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateLexRefType,The method has 5 parameters. Parameters: type' name' abbr' revName' revAbbr
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AddSenseToEntry,The method has 5 parameters. Parameters: entry' gloss' wsId' cache' definition
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AddExampleToExtendedNote,The method has 5 parameters. Parameters: sense' noteType' discussion' examples' translation
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The method has 5 parameters. Parameters: complexForm' isUnspecifiedComplexTypeEnabled' variantForm' isUnspecifiedVariantTypeEnabled' isRootBased
Long Parameter List,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyFontInfoInCss,The method has 7 parameters. Parameters: color' bgcolor' fontName' bold' italic' size' css
Long Parameter List,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The method has 5 parameters. Parameters: offset' superscript' underline' underlineColor' css
Long Parameter List,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyParagraphBorderInCss,The method has 6 parameters. Parameters: color' leading' trailing' bottom' top' css
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,VerifyPropChanged,The method has 6 parameters. Parameters: propChangeInfo' hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,MakeEntry,The method has 5 parameters. Parameters: form' gloss' fExclude' hwExclude' suffix
Long Parameter List,SIL.FieldWorks.XWorks,MockNotifyChange,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,MockPublisher,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DoSendPropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,MacroF2,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,Enabled,The method has 5 parameters. Parameters: target' targetField' wsId' start' length
Long Parameter List,SIL.FieldWorks.XWorks,MacroF2,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,RunMacro,The method has 5 parameters. Parameters: target' targetField' wsId' startOffset' length
Long Parameter List,SIL.FieldWorks.XWorks,MacroF4,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,Enabled,The method has 5 parameters. Parameters: target' targetField' wsId' start' length
Long Parameter List,SIL.FieldWorks.XWorks,MacroF4,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,RunMacro,The method has 5 parameters. Parameters: target' targetField' wsId' startOffset' length
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,TextSelInfo,The method has 7 parameters. Parameters: fEndPoint' ptss' ich' fAssocPrev' hvoObj' tag' ws
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,GetHardAndSoftParaProps,The method has 5 parameters. Parameters: cttpMax' _rgpttpPara' _rgpttpHard' _rgpvpsSoft' _cttp
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,PropInfo,The method has 7 parameters. Parameters: fEndPoint' ilev' _hvoObj' _tag' _ihvo' _cpropPrevious' _pvps
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,AllTextSelInfo,The method has 11 parameters. Parameters: _ihvoRoot' cvlsi' _rgvsli' _tagTextProp' _cpropPrevious' _ichAnchor' _ichEnd' _ws' _fAssocPrev' _ihvoEnd' _pttp
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,AllSelEndInfo,The method has 10 parameters. Parameters: fEndPoint' _ihvoRoot' cvlsi' _rgvsli' _tagTextProp' _cpropPrevious' _ich' _ws' _fAssocPrev' _pttp
Long Parameter List,SIL.FieldWorks.XWorks,MockSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,Location,The method has 7 parameters. Parameters: _vg' rcSrc' rcDst' _rdPrimary' _rdSecondary' _fSplit' _fEndBeforeAnchor
Long Parameter List,SIL.FieldWorks.XWorks,MockUploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,MockUploadToWebonaryController,The method has 6 parameters. Parameters: cache' propertyTable' mediator' exceptionResponse' responseContents' responseStatus
Long Parameter List,SIL.FieldWorks.XWorks,XWorksAppTestBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,AddLexeme,The method has 6 parameters. Parameters: addList' lexForm' citationForm' morphTypePoss' gloss' catPoss
Long Parameter List,SIL.FieldWorks.XWorks,XWorksAppTestBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,AddLexeme,The method has 5 parameters. Parameters: addList' lexForm' morphTypePoss' gloss' categoryPoss
Long Parameter List,SIL.FieldWorks.XWorks,XWorksAppTestBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,AddVariantLexeme,The method has 7 parameters. Parameters: addList' origLe' lexForm' morphTypePoss' gloss' categoryPoss' varType
Long Identifier,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_ListChoice_Locations,The length of the parameter firstEntryWithoutPronunciation is 30.
Long Identifier,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,SetupPronunciationData,The length of the parameter firstEntryWithoutPronunciation is 30.
Long Identifier,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_Multilingual,The length of the parameter firstEntryWithoutPronunciation is 30.
Long Identifier,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_SimpleString,The length of the parameter firstEntryWithoutPronunciation is 30.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefinitionOrGloss_HandlePerWS,The length of the parameter senseWithdefinitionOrGlossTwoWs is 31.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EtymologyLanguageWorks,The length of the parameter etymologyWithArabicSrcLanguage is 30.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the parameter subSubSubSenseNumberTwoOneOneOne is 32.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the parameter subSubSubSenseNumberTwoOneOneTwo is 32.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the parameter isUnspecifiedComplexTypeEnabled is 31.
Long Identifier,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the parameter isUnspecifiedVariantTypeEnabled is 31.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the parameter entryOrSenseAsymmetricPairType is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the parameter entryOrSenseUnidirectionalType is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the parameter dictionaryHeadwordImportedStyle is 31.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_SuggestsUniqueLabelIfSameLabelAlreadyExists,The length of the parameter alreadyExistingModelWithSameLabel is 33.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UseUniqueFileNameToAvoidCollision,The length of the parameter alreadyExistingModelWithSameLabel is 33.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,UserRequestsOverwrite_Helper,The length of the parameter alreadyExistingModelWithSameLabel is 33.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the parameter characterStyleBasedOnSomething is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the parameter shippedRootDefaultConfigurationPath is 35.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the parameter shippedRootDefaultConfigurationPath is 35.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,,The length of the parameter XmlOpenTagsThruRootWithAllPublications is 38.
Long Identifier,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryErrorInProcessingHandled,The length of the parameter webonaryProcessingErrorContent is 30.
Long Identifier,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,,The length of the parameter ConfigurationTemplateWithAllPublications is 40.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_NoteInParaOptionsAreMigrated,The length of the parameter migratedNoteDictionaryOptionsNode is 33.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ReferencedHeadwordFieldDescriptionNameAreMigrated,The length of the parameter migratedNoteDictionaryOptionsNode is 33.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the parameter convertedreversalIndexChildNodesType is 36.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the parameter defaultreversalIndexChildNodesType is 34.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,,The length of the parameter CustomFieldUnchangedNameAndLabel is 32.
Long Statement,SIL.FieldWorks.XWorks,AllReversalEntriesRecordListTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AllReversalEntriesRecordListTests.cs,AllReversalIndexes_Init_Test,The length of the statement  "					"When AllReversalEntriesRecordList is called and the Clerk is null then the OwningObject should not be set' i.e. left as Null"); " is 128.
Long Statement,SIL.FieldWorks.XWorks,BrowseViewerForTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,SetFilter,The length of the statement  "						(fci as ListChoiceComboItem).InvokeWithColumnSpecFilter(ListMatchOptions.Any' new List<string>(new string[] { query })); " is 120.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSelection,The length of the statement  "			using (FilterSortItem fsFilter = m_bv.SetFilter("Lexeme Form"' "Filter for..."' "underlying form")) // 'underlying form' " is 120.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_Multilingual,The length of the statement  "			FwOverrideComboBox bulkCopySourceCombo = m_bulkEditBar.GetTabControlChild("m_bulkCopySourceCombo") as FwOverrideComboBox; " is 121.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_Multilingual,The length of the statement  "			NonEmptyTargetControl bcNonEmptyTargetControl = m_bulkEditBar.GetTabControlChild("m_bcNonEmptyTargetControl") as NonEmptyTargetControl; " is 135.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_Multilingual,The length of the statement  "			Assert.AreEqual(lexemeForm' firstEntryWithoutPronunciation.PronunciationsOS[0].Form.VernacularDefaultWritingSystem.Text); " is 121.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_SimpleString,The length of the statement  "			FwOverrideComboBox bulkCopySourceCombo = m_bulkEditBar.GetTabControlChild("m_bulkCopySourceCombo") as FwOverrideComboBox; " is 121.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_StringFields_SimpleString,The length of the statement  "			NonEmptyTargetControl bcNonEmptyTargetControl = m_bulkEditBar.GetTabControlChild("m_bcNonEmptyTargetControl") as NonEmptyTargetControl; " is 135.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ComplexForm_BulkCopy_Comment,The length of the statement  "			FwOverrideComboBox bulkCopySourceCombo = m_bulkEditBar.GetTabControlChild("m_bulkCopySourceCombo") as FwOverrideComboBox; " is 121.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ComplexForm_BulkCopy_Comment,The length of the statement  "			NonEmptyTargetControl bcNonEmptyTargetControl = m_bulkEditBar.GetTabControlChild("m_bcNonEmptyTargetControl") as NonEmptyTargetControl; " is 135.
Long Statement,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,EntryRefs_ListChoice_VariantEntryTypes,The length of the statement  "			ComplexListChooserBEditControl listChoiceControl = m_bulkEditBar.CurrentBulkEditSpecControl as ComplexListChooserBEditControl; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,ChildlessCanDeepClone,The length of the statement  "			var child = new ConfigurableDictionaryNode { After = "after"' IsEnabled = true' SubField = "sub"' IsCustomField = true' HideCustomFields = true' Parent = parent }; " is 163.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,CanDeepClone,The length of the statement  "			var options = new DictionaryNodeListOptions { Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { option } }; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,CanDeepClone,The length of the statement  "			var child = new ConfigurableDictionaryNode { Before = "before"' IsEnabled = true'  CSSClassNameOverride = "class"' Parent = parent }; " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,CanDeepClone,The length of the statement  "			var grandchild = new ConfigurableDictionaryNode { Between = "childBetween"' FieldDescription = "FieldDesc"' Parent = child }; " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,CanDeepClone,The length of the statement  "			var grandsibling = new ConfigurableDictionaryNode { DictionaryNodeOptions = options' Style = "stylish"' LabelSuffix = "1"' Parent = parent }; " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,VerifyDuplicationInner,The length of the statement  "					DictionaryNodeOptionsTests.AssertListWasDeepCloned(((DictionaryNodeWritingSystemOptions)node.DictionaryNodeOptions).Options' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,VerifyDuplicationList,The length of the statement  "				Assert.That(clone[childIndex].Parent' Is.SameAs(cloneParent)' "cloned children were not re-parented within deep-cloned object"); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateIsPutAmongSiblings,The length of the statement  "			Assert.That(parent.Children.Contains(duplicate)' Is.True' "duplicate should be listed among siblings' added to the parent's list of children"); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesHaveUniqueLabelSuffixes,The length of the statement  "			var nodeToDuplicate = new ConfigurableDictionaryNode { Parent = parent' Label = nodeToDuplicateLabel' LabelSuffix = null}; " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesHaveUniqueLabelSuffixes,The length of the statement  "			Assert.That(parent.Children.FindAll(node => node.LabelSuffix == nodeToDuplicate.LabelSuffix).Count' Is.EqualTo(1)' "Should not have any more nodes with the original label suffix. Was the duplicate node's label suffix not changed?"); " is 232.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesHaveUniqueLabelSuffixes,The length of the statement  "			Assert.That(parent.Children.FindAll(node => node.LabelSuffix == duplicate.LabelSuffix).Count' Is.EqualTo(1)' "The duplicate node was not given a unique label suffix among the siblings."); " is 187.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesGroupingNodeChildrenAffectSuffixes,The length of the statement  "			var parent = new ConfigurableDictionaryNode { Children = new List<ConfigurableDictionaryNode> { nodeToDuplicate' groupingNode } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesGroupingNodeChildrenAffectSuffixes,The length of the statement  "			Assert.IsTrue(duplicate.LabelSuffix.EndsWith("2")' "(1) was used in the group' so the suffix should be 2 but is: " + duplicate.LabelSuffix); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesGroupingNodeChildrenAffectSuffixes,The length of the statement  "			Assert.IsTrue(inGroupDup.LabelSuffix.EndsWith("3")' "(2) was used in the group parent' so the suffix should be 3 but is: " + inGroupDup.LabelSuffix); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesSharedGroupingNodeChildrenAffectSuffixes,The length of the statement  "			var sharedGroupRefNode = new ConfigurableDictionaryNode { ReferenceItem = "Shared"' DictionaryNodeOptions = new DictionaryNodeGroupingOptions() }; " is 146.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesSharedGroupingNodeChildrenAffectSuffixes,The length of the statement  "			var root = new ConfigurableDictionaryNode { Children = new List<ConfigurableDictionaryNode> { sharedGroupRefNode' nodeToDuplicate } }; " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesSharedGroupingNodeChildrenAffectSuffixes,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(root' sharedNode)); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesSharedGroupingNodeChildrenAffectSuffixes,The length of the statement  "			Assert.IsTrue(duplicate.LabelSuffix.EndsWith("2")' "(1) was used in the group' so the suffix should be 2 but is: " + duplicate.LabelSuffix); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicatesSharedGroupingNodeChildrenAffectSuffixes,The length of the statement  "			Assert.IsTrue(inGroupDup.LabelSuffix.EndsWith("3")' "(2) was used in the group parent' so the suffix should be 3 but is: " + inGroupDup.LabelSuffix); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateIsPutImmediatelyAfterOriginal,The length of the statement  "			Assert.That(parent.Children[1]' Is.SameAs(duplicate)' "duplicate node should be placed immediately after duplicated node"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateGroupNodeDoesNotDuplicateChildren,The length of the statement  "			var groupNode = new ConfigurableDictionaryNode { Parent = parent' DictionaryNodeOptions = new DictionaryNodeGroupingOptions() }; " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateGroupNodeParentDoesDuplicateGroupNodeChildren,The length of the statement  "			var groupNode = new ConfigurableDictionaryNode { Parent = parent' DictionaryNodeOptions = new DictionaryNodeGroupingOptions() }; " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateSharedNodeDeepClones,The length of the statement  "			var sharedItem = new ConfigurableDictionaryNode { Label = "Shared"' Children = new List<ConfigurableDictionaryNode> { sharedChild } }; " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,ReferencedOrDirectChildren_PrefersReferencedChildren,The length of the statement  "			var parent = new ConfigurableDictionaryNode { Children = new List<ConfigurableDictionaryNode> { child }' ReferencedNode = refNode }; " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,HasCorrectDisplayLabel,The length of the statement  "			Assert.That(nodeWithNullSuffix.DisplayLabel' Is.EqualTo("label")' "DisplayLabel should omit parentheses and suffix if suffix is null"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,HasCorrectDisplayLabelForGroup,The length of the statement  "			var nodeWithNullSuffix = new ConfigurableDictionaryNode { Label = "label"' LabelSuffix = null' DictionaryNodeOptions = new DictionaryNodeGroupingOptions() }; " is 157.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,HasCorrectDisplayLabelForGroup,The length of the statement  "			var nodeWithSuffix = new ConfigurableDictionaryNode { Label = "label2"' LabelSuffix = "suffix2"' DictionaryNodeOptions = new DictionaryNodeGroupingOptions() }; " is 159.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,HasCorrectDisplayLabelForGroup,The length of the statement  "			Assert.That(nodeWithSuffix.DisplayLabel' Is.EqualTo("[label2 (suffix2)]")' "Suffic should be inside the bracket for a grouping node"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMainEntry_MainEntry_True,The length of the statement  "			var mainEntryNode = new ConfigurableDictionaryNode { FieldDescription = "LexEntry"' CSSClassNameOverride = "entry"' Parent = null }; " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMainEntry_MainReversalIndexEntry_True,The length of the statement  "			var mainEntryNode = new ConfigurableDictionaryNode { FieldDescription = "ReversalIndexEntry"' CSSClassNameOverride = "reversalindexentry"' Parent = null }; " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMainEntry_MinorEntry_False,The length of the statement  "			var minorEntryNode = new ConfigurableDictionaryNode { FieldDescription = "LexEntry"' CSSClassNameOverride = "minorentry"' Parent = null }; " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMainEntry_OtherEntry_False,The length of the statement  "			var mainEntryNode = new ConfigurableDictionaryNode { FieldDescription = "LexEntry"' CSSClassNameOverride = "entry"' Parent = null }; " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMainEntry_OtherEntry_False,The length of the statement  "			var someNode = new ConfigurableDictionaryNode { FieldDescription = "MLHeadWord"' CSSClassNameOverride = "mainheadword"' Parent = mainEntryNode }; " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,IsMasterParent,The length of the statement  "			Assert.False(standaloneParent.IsSubordinateParent' "node with only direct children should not be Subordinate Parent (to whom would it subord?)"); " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,TryGetMasterParent,The length of the statement  "			var sharedNode = new ConfigurableDictionaryNode { Label = "Shared"' Children = new List<ConfigurableDictionaryNode> { child } }; " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,TryGetMasterParent,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(root' sharedNode)); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,TryGetMasterParent,The length of the statement  "			Assert.False(masterParent.TryGetMasterParent(out returnedMasterParent)' "The master parent doesn't *have* a master parent' it *is* one"); // SUT " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,TryGetMasterParent,The length of the statement  "			Assert.False(root.TryGetMasterParent(out returnedMasterParent)' "The root node *certainly* doesn't have a master parent"); // SUT " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_LexemeFormConfigurationGeneratesCorrectResult,The length of the statement  "			const string frenchLexForm = "/div[@class='reversalindexentry']/span[@class='reversalform']/span[@lang='en' and text()='ReversalForm']"; " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_ComplexFormOfEntry,The length of the statement  "			const string glossOrSummDefXpath = primaryEntryXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='summDefn']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_ComplexFormOfSense,The length of the statement  "			const string glossOrSummDefXpath = primaryEntryXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='speech']"; " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_VariantFormOfSense,The length of the statement  "			const string refTypeXpath = entryRefTypeXpath + "/span[@class='abbreviation']/span[@lang='en' and text()='sp. var. of']"; " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_VariantFormOfSense,The length of the statement  "			const string glossOrSummDefXpath = primaryEntryXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='speech']"; " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_VariantFormOfEntry,The length of the statement  "			const string refTypeXpath = entryRefTypeXpath + "/span[@class='abbreviation']/span[@lang='en' and text()='sp. var. of']"; " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferencesWork_VariantFormOfEntry,The length of the statement  "			const string glossOrSummDefXpath = primaryEntryXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='summDefn']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "			using (CXGTests.CreateComplexForm(Cache' refer3' primaryEntry' new Guid("00000000-0000-0000-cccc-000000000000")' true)) // Compound " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "			using (CXGTests.CreateVariantForm(Cache' refer2' primaryEntry' new Guid("00000000-0000-0000-bbbb-000000000000")' "Free Variant")) " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "			using (CXGTests.CreateComplexForm(Cache' refer1' primaryEntry' new Guid("00000000-0000-0000-aaaa-000000000000")' true)) // Compound " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "			using (CXGTests.CreateVariantForm(Cache' refer4' primaryEntry' new Guid("00000000-0000-0000-dddd-000000000000")' null)) // no Variant Type " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "			using (CXGTests.CreateVariantForm(Cache' refer5' primaryEntry' new Guid("00000000-0000-0000-eeee-000000000000")' "Spelling Variant")) " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "				var result = ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(reversalEntry' mainRevEntryNode' null' DefaultSettings); // SUT " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "				assertIt.HasSpecifiedNumberOfMatchesForXpath(entryRefTypeXpath' 3); // should be one Complex Form Type and two Variant Types. " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "					+ "span[@class='mainentryref']" + primaryLexemeBit + headwordBit.Replace("{1}"' "{0}") + "]" + primaryLexemeBit + headwordBit; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "				assertIt.HasSpecifiedNumberOfMatchesForXpath(string.Format(adjacentHeadwordXpath' "Component Entry"' "CompSense Entry")' 1); // ordered within heading " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "				assertIt.HasNoMatchForXpath(string.Format(entryRefWithSiblingXpath + "span]" + primaryLexemeBit + headwordBit' null' "Invariant Entry")' " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The length of the statement  "					message: "Invariant Entry is the only typeless entry ref; it should not have any preceding siblings (Types or other Entry Refs)"); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateLetterHeaderIfNeeded_GeneratesHeaderIfNoPreviousHeader,The length of the statement  "				Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateLetterHeaderIfNeeded(entry' ref last' XHTMLWriter' DefaultSettings)); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateLetterHeaderIfNeeded_GeneratesHeaderIfPreviousHeaderDoesNotMatch,The length of the statement  "				Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateLetterHeaderIfNeeded(entry' ref last' XHTMLWriter' DefaultSettings)); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_ReversalStringGeneratesContent,The length of the statement  "			var reversalFormDataPath = string.Format("/div[@class='reversalindexentry']/span[@class='reversalform']/span[text()='{0}']"' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_ReversalStringGeneratesContent,The length of the statement  "			var entryDataPath = string.Format("//span[text()='{0}']"' entryHeadWord.get_NormalizedForm(FwNormalizationMode.knmNFC).Text); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleReferencedSenses,The length of the statement  "			const string senseNumberOne = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 243.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleReferencedSenses,The length of the statement  "			const string senseNumberTwo = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss']"; " is 250.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleReferencedSenses,The length of the statement  "			const string headwordOne = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr']/span[@class='headword']/span[@lang='fr' and child::span[@lang='fr']/a[text()='1']]/span[@lang='fr' and a[text()='Citation']]"; " is 263.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleReferencedSenses,The length of the statement  "			const string headwordTwo = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr']/span[@class='headword']/span[@lang='fr' and child::span[@lang='fr']/a[text()='2']]/span[@lang='fr' and a[text()='Citation']]"; " is 263.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_VernacularFormWithSubSenses,The length of the statement  "			// REVIEW (Hasso) 2016.03: we should probably do something about the leading space in the Sense Number Run' as it is currently in addition to the "between" space. " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_VernacularFormWithSubSenses,The length of the statement  "			const string subSenseOneOne = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr']/span[@class='headword']/span/span/a[text()='1.1']"; " is 191.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_VernacularFormWithSubSensesinReversalSubEntry,The length of the statement  "			const string subSenseOneOne = "/div[@class='reversalindexentry']/span[@class='subentries']/span[@class='subentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr']/span[@class='headword']/span/span/a[text()='1.1']"; " is 241.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "					Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { new DictionaryNodeListOptions.DictionaryNodeOption { Id="reversal" } } " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "					Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { new DictionaryNodeListOptions.DictionaryNodeOption { Id="reversal" } } " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "					Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular" } } " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "					Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { new DictionaryNodeListOptions.DictionaryNodeOption { Id = "reversal" } } " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "			const string sharedGramInfo = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sharedgrammaticalinfo']/span[@class='morphosyntaxanalysis']/span[@class='partofspeech']/span[@lang='en' and text()='n']"; " is 223.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The length of the statement  "			const string separateGramInfo = "/div[@class='reversalindexentry']/span[@class='sensesrs']/span[@class='sensecontent']/span[@class='sensesr']/span[@class='morphosyntaxanalysis']/span[@class='partofspeech']/span[@lang='en']"; " is 224.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateInterestingConfigurationModel,The length of the statement  "			if (configType == DictionaryConfigurationModel.ConfigType.Hybrid || configType == DictionaryConfigurationModel.ConfigType.Root) " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateInterestingConfigurationModel,The length of the statement  "			if (configType == DictionaryConfigurationModel.ConfigType.Hybrid || configType == DictionaryConfigurationModel.ConfigType.Lexeme) " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateInterestingConfigurationModel,The length of the statement  "				FilePath = propertyTable == null ? null : Path.Combine(DictionaryConfigurationListener.GetProjectConfigurationDirectory(propertyTable)' " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,EnsureWritingSystemSetup,The length of the statement  "					cache.LangProject.AddToCurrentVernacularWritingSystems(cache.WritingSystemFactory.get_Engine(wsStr) as CoreWritingSystemDefinition); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,EnsureWritingSystemSetup,The length of the statement  "					cache.LangProject.AddToCurrentAnalysisWritingSystems(cache.WritingSystemFactory.get_Engine(wsStr) as CoreWritingSystemDefinition); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateVariantForm,The length of the statement  "			var varType = owningList.ReallyReallyAllPossibilities.LastOrDefault(poss => poss.Name.AnalysisDefaultWritingSystem.Text == type) as ILexEntryType; " is 146.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateVariantForm,The length of the statement  "			// ILexEntry.MakeVariantOf sets a Type even if null is specified. But we want to test typeless variants' so clear them if null is specified. " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The length of the statement  "				complexEntryTypeRevAbbr.SetAnalysisDefaultWritingSystem(complexEntryTypeAbbrText.Substring(0' complexEntryTypeAbbrText.Length - 3)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateLexicalReference,The length of the statement  "			var lrt = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntryOrSenseSequence' refTypeName' ""' refTypeReverseName' ""); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AddExampleToSense,The length of the statement  "				var type = Cache.ServiceLocator.GetInstance<ICmPossibilityRepository>().GetObject(CmPossibilityTags.kguidTranFreeTranslation); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GetWsOptionsForLanguages,The length of the statement  "			return new DictionaryNodeWritingSystemOptions { Options = DictionaryDetailsControllerTests.ListOfEnabledDNOsFromStrings(languages) }; " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GetListOptionsForItems,The length of the statement  "				Options = DictionaryDetailsControllerTests.ListOfEnabledDNOsFromStrings(checkedItems.Select(id => id.Guid.ToString()).ToList()) " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GetFullyEnabledListOptions,The length of the statement  "			DictionaryNodeListOptions listOptions = useParaOptions ? new DictionaryNodeListAndParaOptions() : new DictionaryNodeListOptions(); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateClerk,The length of the statement  "							<parameters area='lexicon' clerk='entries' layout='Bartholomew' layoutProperty='DictionaryPublicationLayout' editable='false' configureObjectName='Dictionary'/> " is 160.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GeneratorSettings_NullArgsThrowArgumentNull,The length of the statement  "			// ReSharper disable AccessToDisposedClosure // Justification: Assert calls lambdas immediately' so XHTMLWriter is not used after being disposed " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GeneratorSettings_NullArgsThrowArgumentNull,The length of the statement  "			// ReSharper disable ObjectCreationAsStatement // Justification: We expect the constructor to throw' so there's no created object to assign anywhere :) " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GeneratorSettings_NullArgsThrowArgumentNull,The length of the statement  "			Assert.Throws(typeof(ArgumentNullException)' () => new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' (PropertyTable)null' false' false' null)); " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GeneratorSettings_NullArgsThrowArgumentNull,The length of the statement  "			Assert.Throws(typeof(ArgumentNullException)' () => new ConfiguredXHTMLGenerator.GeneratorSettings(null' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null)); " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NullArgsThrowArgumentNull,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NullArgsThrowArgumentNull,The length of the statement  "			Assert.Throws(typeof(ArgumentNullException)' () => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(null' mainEntryNode' null' settings)); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NullArgsThrowArgumentNull,The length of the statement  "			Assert.Throws(typeof(ArgumentNullException)' () => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' (ConfigurableDictionaryNode)null' null' settings)); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NullArgsThrowArgumentNull,The length of the statement  "			Assert.Throws(typeof(ArgumentNullException)' () => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' mainEntryNode' null' null)); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_BadConfigurationThrows,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_HeadwordConfigurationGeneratesCorrectResult,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_HeadwordConfigurationGeneratesCorrectResult,The length of the statement  "			const string frenchHeadwordOfHeadwordTest = "/div[@class='lexentry']/span[@class='headword']/span[@lang='fr']/a[text()='HeadWordTest']"; " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_InvalidUnicodeHeadword_GeneratesErrorResult,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_InvalidUnicodeHeadword_GeneratesErrorResult,The length of the statement  "			const string invalidCharsHeadwordTest = "/div[@class='lexentry']/span[@class='headword']/span[text()='\u0fff\u0fff\u0fff']"; " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SortByHeadwordWithSpecificWsGeneratesLetterHeadings,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SortByHeadwordWithSpecificWsGeneratesLetterHeadings,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new[] { firstAEntry.Hvo }' pubEverything' model' m_propertyTable); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexemeFormConfigurationGeneratesCorrectResult,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexemeFormConfigurationGeneratesCorrectResult,The length of the statement  "			const string frenchLexForm = "/div[@class='lexentry']/span[@class='lexemeformoa']/span[@lang='fr']/a[text()='LexemeFormTest']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_PronunciationLocationGeneratesCorrectResult,The length of the statement  "			const string hereLocation = "/div[@class='lexentry']/span[@class='pronunciations']/span[@class='pronunciation']/span[@class='location']/span[@class='name']/span[@lang='fr' and text()='Here!']"; " is 193.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_PronunciationVideoFileGeneratesAnchorTag,The length of the statement  "			CreateVariantForm(Cache' entry' variant' "Spelling Variant"); // we need a real Variant Type to pass the list options test " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_HeadwordRefConfigurationGeneratesWithTwoWS,The length of the statement  "			var comRefType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntryCollection' comRefTypeName' "cf"' string.Empty' string.Empty); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OneEntryWithSenseAndOneWithoutWorks,The length of the statement  "			var entryTwoHasNoSensesSpan = "/TESTWRAPPER/div[@class='lexentry' and @id='g" + entryTwoId + "']/span[@class='senses']"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefaultRootGeneratesResult,The length of the statement  "				Path.Combine(FwDirectoryFinder.DefaultConfigurations' "Dictionary"' "Root")' DictionaryConfigurationModel.FileExtension); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefaultRootGeneratesResult,The length of the statement  "			var result = ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' dictionaryModel.Parts[0]' DefaultDecorator' settings); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfoShowGramInfoFirst,The length of the statement  "			const string sharedGramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sharedgrammaticalinfo']"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfoShowGramInfoFirst,The length of the statement  "			const string gramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='msas']/span[@class='mlpartofspeech']"; " is 176.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfo_ThirdSenseNotPublished_ShowGramInfoFirst,The length of the statement  "			var mainDictionaryDecorator = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged) Cache.MainCacheAccessor' " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfo_ThirdSenseNotPublished_ShowGramInfoFirst,The length of the statement  "			var xhtmlString = ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' mainEntryNode' mainDictionaryDecorator' settings); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfo_ThirdSenseNotPublished_ShowGramInfoFirst,The length of the statement  "			const string sharedGramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sharedgrammaticalinfo']"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfo_ThirdSenseNotPublished_ShowGramInfoFirst,The length of the statement  "			const string gramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='msa']/span[@class='mlpartofspeech']"; " is 175.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithDifferentGramInfoShowInfoInSenses,The length of the statement  "			const string sharedGramInfoPath = "//div[@class='lexentry']/span[@class='sensesos']/span[@class='sharedgrammaticalinfo']"; " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithDifferentGramInfoShowInfoInSenses,The length of the statement  "			const string gramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='msas']/span[@class='mlpartofspeech']"; " is 176.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithNoGramInfoDisplaysNothingForSharedGramInfo,The length of the statement  "			const string sharedGramInfoPath = "//div[@class='lexentry']/span[@class='sensesos']/span[@class='sharedgrammaticalinfo']"; " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithNoGramInfoDisplaysNothingForSharedGramInfo,The length of the statement  "			const string gramInfoPath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='msas']/span[@class='mlpartofspeech']"; " is 176.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MorphemeType,The length of the statement  "			const string morphTypePath = "//span[@class='morphosyntaxanalysis']/span[@class='morphtypes']/span[@class='morphtype']/span[@class='abbreviation']/span[@lang='en' and text()='sfx']"; " is 182.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CmObjectWithNoEnabledChildrenSkipsSpan,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { gramInfoAbbrev } // There are no enabled children' so this span should be skipped " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SupportsGramAbbrChildOfMSARA,The length of the statement  "			const string gramAbbr1 = xpathThruSense + "/span[@class='morphosyntaxanalysis']/span[@class='interlinearabbrtss']/span[@lang='fr']/span[@lang='fr' and text()='Blah']"; " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SupportsGramAbbrChildOfMSARA,The length of the statement  "			const string gramAbbr2 = xpathThruSense + "/span[@class='morphosyntaxanalysis']/span[@class='interlinearabbrtss']/span[@lang='fr']/span[@lang='en' and text()=':Any']"; " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SupportsGramAbbrChildOfMSARA,The length of the statement  "			const string gramName1 = xpathThruSense + "/span[@class='morphosyntaxanalysis']/span[@class='interlinearnametss']/span[@lang='fr']/span[@lang='fr' and text()='Blah']"; " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SupportsGramAbbrChildOfMSARA,The length of the statement  "			const string gramName2 = xpathThruSense + "/span[@class='morphosyntaxanalysis']/span[@class='interlinearnametss']/span[@lang='fr']/span[@lang='en' and text()=':Any']"; " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefinitionOrGlossWorks,The length of the statement  "			const string senseWithdefinitionOrGloss = "//span[@class='sense']/span[@class='definitionorgloss']/span[text()='gloss']"; " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefinitionOrGlossWorks_WithAbbrev,The length of the statement  "				"//span[@class='sense']/span[@class='definitionorgloss']/span[@class='writingsystemprefix' and normalize-space(text())='Eng']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DefinitionOrGloss_HandlePerWS,The length of the statement  "			const string senseWithdefinitionOrGlossTwoWs = "//span[@class='sense']/span[@class='definitionorgloss' and span[1]='gloss' and span[2]='definition']"; " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "			// LT-19073: Definition and gloss display behaviour for LT-7445 should apply to "Definition (or Gloss)" field in Referenced Complex Froms. " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "			// Check that different combinations of present or missing definition have successful fallback to gloss' and independently of other senses. " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "			var pubMain = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual' typeMain); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='definitionA1']"' 1 }' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='definitionA2']"' 1 }' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='glossB1']"' 1 }' " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='glossB2']"' 1 }' " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='definitionC1']"' 1 }' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='glossC2']"' 1 }' " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='glossD1']"' 1 }' " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormDefinitionOrGloss_HandlePerWS,The length of the statement  "				{ "/div/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='definitionorgloss']/span[.='definitionD2']"' 1 }' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OtherReferencedComplexForms,The length of the statement  "			var complexformentryref = CreateComplexForm(Cache' mainEntry' otherReferencedComplexForm' false' new Guid(complexformoptions.Options.First().Id)); " is 146.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OtherReferencedComplexForms,The length of the statement  "				"//span[@class='complexformsnotsubentries']/span[@class='complexformtypes']/span[@class='complexformtype']/span/span[@lang='en' and text()='{0}']"' " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OtherReferencedComplexForms,The length of the statement  "				"//span[@class='complexformsnotsubentries']/span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='reverseabbr']/span[@lang='en' and text()='{0}']"' " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EtymologyLanguageWorks,The length of the statement  "			const string etymologyWithArabicSrcLanguage = "//span[@class='etymologies']/span[@class='etymology']/span[@class='languages']/span[@class='language']/span[@class='abbreviation']/span[@lang='en' and text()='ar']"; " is 212.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EtymologyLanguageWorks,The length of the statement  "			const string etymologyWithGeorgianNotes = "//span[@class='etymologies']/span[@class='etymology']/span[@class='languagenotes']/span[@lang='en' and text()='Georgian']"; " is 166.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GetPropertyTypeForConfigurationNode_StTextReturnsPrimitive,The length of the statement  "			using (var customField = new CustomFieldForTest(Cache' fieldName' fieldName' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' StTextTags.kClassId' -1' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsMainEntry_ReturnsTrueForMainEntry,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.IsMainEntry(Cache.ServiceLocator.GetInstance<IReversalIndexEntryFactory>().Create()' " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_NullEntryThrowsArgumentNull,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(null' new DictionaryConfigurationModel()' null' null)); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_SelectsDirectionUsingDictionaryNormal,The length of the statement  "				var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(mainEntry' configModel' DefaultDecorator' m_propertyTable); " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_MinorEntryUsesMinorEntryFormatting,The length of the statement  "			var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(minorEntry' configModel' DefaultDecorator' m_propertyTable); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_MinorEntryUnCheckedItemsGenerateNothing,The length of the statement  "			var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(minorEntry' configModel' DefaultDecorator' m_propertyTable); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_DoesNotShowHiddenMinorEntries,The length of the statement  "			var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(minorEntry' configModel' DefaultDecorator' m_propertyTable); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_DoesNotShowMinorEntriesTwice,The length of the statement  "				configModel.Parts.Where(part => part.Label.Contains("Complex")).ForEach(part => part.CSSClassNameOverride = "complexentry"); " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_DoesNotShowMinorEntriesTwice,The length of the statement  "			var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(minorEntry' configModel' DefaultDecorator' m_propertyTable); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexemeBasedConsidersComplexFormsMainEntries,The length of the statement  "			var xhtml = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(complexEntry' configModel' DefaultDecorator' m_propertyTable); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleSenses,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 229.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleSenses,The length of the statement  "			const string senseNumberTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss']"; " is 236.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseNumbersGeneratedForMultipleSenses,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.True); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,ShouldThisSenseBeNumbered_SubSenseNumbersRequestedForMultipleSubSenses,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.SensesOS[0].SensesOS[0]' subSenseNode'testEntry.SensesOS[0].SensesOS)' Is.True); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AreThereEnabledSubsensesWithNumberingStyle_SubsensesEnabledOrNot,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.AreThereEnabledSubsensesWithNumberingStyle(sensesNode)' Is.False' "Should have noticed that there are no enabled subsense nodes"); " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AreThereEnabledSubsensesWithNumberingStyle_SubsensesEnabledOrNot,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.AreThereEnabledSubsensesWithNumberingStyle(sensesNode)' Is.True' "Should have seen the enabled subsense node."); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AreThereEnabledSubsensesWithNumberingStyle_SubsensesHaveNumberingStyleOrNot,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.AreThereEnabledSubsensesWithNumberingStyle(sensesNode)' Is.False' "Should have return false since no numbering style"); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AreThereEnabledSubsensesWithNumberingStyle_SubsensesHaveNumberingStyleOrNot,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.AreThereEnabledSubsensesWithNumberingStyle(sensesNode)' Is.True' "Should have return true since there is a numbering style"); " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNoSenseNumber,The length of the statement  "			Assert.That(testEntry.AllSenses.First().AllSenses.Count' Is.EqualTo(1)' "Test not set up correctly. There should be no subsenses."); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNoSenseNumber,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]/span[@lang='en' and text()='gloss']"; " is 200.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNoSenseNumber,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.False); " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TurnedOffSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The length of the statement  "			const string senseNumberXpath = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sensenumber']"; " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TurnedOffSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.False); " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmptyStyleSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The length of the statement  "			const string senseNumberXpath = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sensenumber']"; " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmptyStyleSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.False); " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubsenseStyleInfluencesSenseNumberShown,The length of the statement  "			const string senseNumberXpath = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sensenumber']"; " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubsenseStyleInfluencesSenseNumberShown,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(senseNumberXpath'1); // Should have sense number on top sense. " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubsenseStyleInfluencesSenseNumberShown,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.True); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NumberingSingleSenseAlsoCountsSubSense,The length of the statement  "			const string SenseOneSubSense = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]/span[@class='senses']/span[@class='sensecontent']//span[@lang='en' and text()='gloss1.1']"; " is 284.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithDifferentNumberingStyle,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='A']]//span[@lang='en' and text()='gloss']"; " is 229.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithDifferentNumberingStyle,The length of the statement  "			const string senseNumberTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='B']]//span[@lang='en' and text()='second gloss']"; " is 236.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithDifferentNumberingStyle,The length of the statement  "			const string subSensesNumberTwoOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='I']]//span[@lang='en' and text()='second gloss2.1']"; " is 317.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithDifferentNumberingStyle,The length of the statement  "			const string subSenseNumberTwoTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='II']]//span[@lang='en' and text()='second gloss2.2']"; " is 317.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithNumberingStyle,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='A']]//span[@lang='en' and text()='gloss']"; " is 229.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithNumberingStyle,The length of the statement  "			const string senseNumberTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='B']]//span[@lang='en' and text()='second gloss']"; " is 236.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithNumberingStyle,The length of the statement  "			const string subSensesNumberTwoOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='second gloss2.1']"; " is 317.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesAndSubSensesWithNumberingStyle,The length of the statement  "			const string subSenseNumberTwoTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss2.2']"; " is 316.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoSenseNumberFIfStyleSaysNoNumbering,The length of the statement  "			const string senseNumberXpath = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sensenumber']"; " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoSenseNumberFIfStyleSaysNoNumbering,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(senseNumberXpath' 0); // Should not have produced sense number if style said not to number it. " is 161.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoSenseNumberFIfStyleSaysNoNumbering,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.False); " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesNoneAndSubSensesWithNumberingStyle,The length of the statement  "			const string subSensesNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='second gloss2.1']"; " is 314.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesNoneAndSubSensesWithNumberingStyle,The length of the statement  "			const string subSenseNumberTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss2.2']"; " is 313.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesGeneratedForMultipleSubSenses,The length of the statement  "			var senseOptions = new DictionaryNodeSenseOptions { AfterNumber = ")"' NumberingStyle = "%d"' NumberEvenASingleSense = true }; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesGeneratedForMultipleSubSenses,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 229.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesGeneratedForMultipleSubSenses,The length of the statement  "			const string senseNumberTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss']"; " is 236.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesGeneratedForMultipleSubSenses,The length of the statement  "			const string subSensesNumberTwoOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='second gloss2.1']"; " is 317.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SensesGeneratedForMultipleSubSenses,The length of the statement  "			const string subSenseNumberTwoTwo = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss2.2']"; " is 316.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleJoined,The length of the statement  "			var SubSubSenseOptions = new DictionaryNodeSenseOptions { NumberingStyle = "%A"' ParentSenseNumberingStyle = "%j"' NumberEvenASingleSense = true }; " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleJoined,The length of the statement  "			const string senseNumber =    "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]"; " is 192.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleJoined,The length of the statement  "			const string subSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2a']]"; " is 264.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleJoined,The length of the statement  "			const string subSubSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2aA']]"; " is 339.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleSeparatedByDot,The length of the statement  "			var SubSubSenseOptions = new DictionaryNodeSenseOptions { NumberingStyle = "%A"' ParentSenseNumberingStyle = "%."' NumberEvenASingleSense = true }; " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleSeparatedByDot,The length of the statement  "			const string senseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]"; " is 189.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleSeparatedByDot,The length of the statement  "			const string subSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2.a']]"; " is 265.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleSeparatedByDot,The length of the statement  "			const string subSubSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2.a.A']]"; " is 341.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleNone,The length of the statement  "			var SubSubSenseOptions = new DictionaryNodeSenseOptions { NumberingStyle = "%A"' ParentSenseNumberingStyle = ""' NumberEvenASingleSense = true }; " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleNone,The length of the statement  "			const string senseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]"; " is 189.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleNone,The length of the statement  "			const string subSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='a']]"; " is 263.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSenseParentSenseNumberingStyleNone,The length of the statement  "			const string subSubSenseNumber = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='A']]"; " is 337.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			var senseOptions = new DictionaryNodeSenseOptions { AfterNumber = ")"' NumberingStyle = "%d"' NumberEvenASingleSense = true }; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string senseNumberOne = senseContent + "/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 171.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string senseNumberTwo = senseContent + "/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss']"; " is 178.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSenseContent = senseContent + "/span[@class='sense']/span[@class='shares senses']/span[@class='sensecontent']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSenseNumberTwoOne = subSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='second gloss2.1']"; " is 196.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSenseNumberTwoTwo = subSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='second gloss2.2']"; " is 196.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSubSenseContent = subSenseContent + "/span[@class='share sense']/span[@class='shares senses']/span[@class='sensecontent']"; " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSubSenseNumberTwoOneOne = subSubSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='matte']"; " is 195.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSubSubSenseContent = subSubSenseContent + "/span[@class='share sense']/span[@class='shares senses']/span[@class='sensecontent']"; " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSubSubSenseNumberTwoOneOneOne = subSubSubSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='matte2.1']"; " is 207.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSubSensesWithNumberingStyle,The length of the statement  "			const string subSubSubSenseNumberTwoOneOneTwo = subSubSubSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='2']]//span[@lang='en' and text()='matte2.2']"; " is 207.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesGramInfoFirstEvenSingleSense,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesGramInfoFirstEvenSingleSense,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new[] { firstEntry.Hvo }' pubEverything' model' m_propertyTable); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesGramInfoFirstEvenSingleSense,The length of the statement  "				const string gramInfoPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[@class='sharedgrammaticalinfo']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='n']"; " is 221.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesGramInfoFirstEvenSingleSense,The length of the statement  "				const string senseNumberPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[2][@class='sensecontent']/span[@class='sensenumber' and text()='1']"; " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesGramInfoFirstEvenSingleSense,The length of the statement  "				const string senseTextPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[2][@class='sensecontent']/span[@class='sense']/span[@class='gloss']/span[@lang='en' and text()='man']"; " is 194.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSensesOfSingleSenses_GetFullNumbers,The length of the statement  "			const string subSenseContent = senseContent + "/span[@class='sense']/span[@class='shares senses']/span[@class='sensecontent']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSensesOfSingleSenses_GetFullNumbers,The length of the statement  "			const string subSenseNumberOneOne = subSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='a']]//span[@lang='en' and text()='subGloss']"; " is 189.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSensesOfSingleSenses_GetFullNumbers,The length of the statement  "			const string subosoSenseContent = subSenseContent + "/span[@class='share sense']/span[@class='shares senses']/span[@class='sensecontent']"; " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSensesOfSingleSenses_GetFullNumbers,The length of the statement  "			const string subosoSenseNumberOneOneOne = subosoSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='a']]//span[@lang='en' and text()='subGloss2.1']"; " is 201.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubSensesOfSingleSenses_GetFullNumbers,The length of the statement  "			const string subosoSenseNumberOneOneTwo = subosoSenseContent + "/span[@class='share sense' and preceding-sibling::span[@class='sensenumber' and text()='b']]//span[@lang='en' and text()='subGloss2.2']"; " is 201.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubentriesSensesDontGetMainEntrySensesNumbers,The length of the statement  "			var senseOptions = new DictionaryNodeSenseOptions { AfterNumber = ")"' NumberingStyle = "%O"' NumberEvenASingleSense = true }; " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubentriesSensesDontGetMainEntrySensesNumbers,The length of the statement  "			const string senseNumberOne = senseContent + "/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 171.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubentriesSensesDontGetMainEntrySensesNumbers,The length of the statement  "			const string subentrySenseContent = senseContent + "/span[@class='sense']/span[@class='subentries']/span[@class='subentry']/span[@class='senses']/span[@class='sensecontent']"; " is 175.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubentriesSensesDontGetMainEntrySensesNumbers,The length of the statement  "			const string subentrySenseNumberOne = subentrySenseContent + "/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='subgloss']"; " is 190.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubentriesSensesDontGetMainEntrySensesNumbers,The length of the statement  "			const string subentrySenseNumberOneOne = subentrySenseContent + "/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1.1']]//span[@lang='en']"; " is 173.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNumberWithNumberEvenOneSenseOption,The length of the statement  "			var result = ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(testEntry' mainEntryNode' DefaultDecorator' DefaultSettings); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNumberWithNumberEvenOneSenseOption,The length of the statement  "			const string senseNumberOne = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and preceding-sibling::span[@class='sensenumber' and text()='1']]//span[@lang='en' and text()='gloss']"; " is 229.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SingleSenseGetsNumberWithNumberEvenOneSenseOption,The length of the statement  "			Assert.That(ConfiguredXHTMLGenerator.ShouldThisSenseBeNumbered(testEntry.AllSenses.First()' sensesNode' testEntry.SensesOS)' Is.True); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseContentWithGuid,The length of the statement  "			var result = ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(testEntry' mainEntryNode' DefaultDecorator' DefaultSettings); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseContentWithGuid,The length of the statement  "			const string senseEntryGuid = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and @entryguid]"; " is 142.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SenseContentWithGuid,The length of the statement  "			string senseEntryGuidstatsWithG = "/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense' and @entryguid='g" + testEntry.Guid + "']"; " is 172.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExampleAndTranslationAreGenerated,The length of the statement  "			var oneSenseWithExample = string.Format(xpathThruExample + "/span[@class='example']/span[@lang='fr' and text()='{0}']"' example); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExampleAndTranslationAreGenerated,The length of the statement  "				"/span[@class='translationcontents']/span[@class='translationcontent']/span[@class='translation']/span[@lang='en' and text()='{0}']"' translation); " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExampleSentenceAndTranslationAreGenerated,The length of the statement  "			const string xpathThruExampleSentence = "/div[@class='lexentry']/span[@class='complexformsnotsubentries']/span[@class='complexformsnotsubentry']/span[@class='examplesentences']/span[@class='examplesentence']"; " is 209.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExampleSentenceAndTranslationAreGenerated,The length of the statement  "				xpathThruExampleSentence + "/span[@class='translations']/span[@class='translation']//span[@lang='en' and text()='{0}']"' translation); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LineSeperatorUnicodeCharBecomesBrElement,The length of the statement  "			const string xpathThruExampleSentence = "/div[@class='lexentry']/span[@class='complexformsnotsubentries']/span[@class='complexformsnotsubentry']/span[@class='examplesentences']/span[@class='examplesentence']"; " is 209.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExtendedNoteChildrenAreGenerated,The length of the statement  "			var xpathThruNoteType = string.Format(extendedNote + "/span[@class='extendednotetypera_name']/span[@lang='en' and text()='{0}']"' noteType); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExtendedNoteChildrenAreGenerated,The length of the statement  "			var xpathThruDiscussion = string.Format(extendedNote + "/span[@class='discussion']/span[@lang='fr' and text()='{0}']"' discussion); " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExtendedNoteChildrenAreGenerated,The length of the statement  "			var oneSenseWithExample = string.Format(xpathThruExample + "/span[@class='example']/span[@lang='fr' and text()='{0}']"' example); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExtendedNoteChildrenAreGenerated,The length of the statement  "				xpathThruExample + "/span[@class='translations']/span[@class='translation']/span[@class='translation']/span[@lang='en' and text()='{0}']"' translation); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ExtendedNoteNoteTypeEmptyAreGenerated,The length of the statement  "			var xpathThruNoteType = string.Format(extendedNote + "/span[@class='extendednotetypera_name']/span[@lang='en' and text()='{0}']"' noteType); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AddExampleToExtendedNote,The length of the statement  "				var type = Cache.ServiceLocator.GetInstance<ICmPossibilityRepository>().GetObject(CmPossibilityTags.kguidTranFreeTranslation); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EnvironmentsAndAllomorphsAreGenerated,The length of the statement  "			const string xPathThruAllomorph = "/div[@class='lexentry']/span[@class='alternateformsos']/span[@class='alternateformso']"; " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EnvironmentsAndAllomorphsAreGenerated,The length of the statement  "				"/span[@class='allomorphenvironments']/span[@class='allomorphenvironment']/span[@class='stringrepresentation']/span[@lang='en' and text()='phoneyEnv']"' 1); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormsIncludesSubentriesAndOtherReferencedComplexForms,The length of the statement  "				"/div[@class='lexentry']/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']//span[@lang='fr']/span[@lang='fr']"' 4); " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForReferencedForms,The length of the statement  "				"//span[@class='visiblevariantentryrefs']/span[@class='visiblevariantentryref']/span[@class='referencedentries']/span[@class='referencedentry']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 2); " is 216.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForReferencedForms,The length of the statement  "				"/div[@class='lexentry']/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 2); " is 180.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForPrimaryEntryReferences,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForPrimaryEntryReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='primaryentryrefs']/span[@class='primaryentryref']/span[@class='referencedentries']/span[@class='referencedentry']/span[@class='headword']/span[@lang='fr']/a[@href]"' 1); " is 313.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForPrimaryEntryReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='primaryentryrefs']/span[@class='primaryentryref']/span[@class='referencedentries']/span[@class='referencedentry']/span[@class='headword']/span[@lang='fr']/a[@href][contains(text()' 'Test')]"' 1); " is 339.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferences,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 4); " is 203.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferencesWithReferencedNodes,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferencesWithReferencedNodes,The length of the statement  "				FieldDescription = "HeadWord"' CSSClassNameOverride = "headword"' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "fr" }) " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferencesWithReferencedNodes,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(mainEntryNode' refdCrossRefsNode)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferencesWithReferencedNodes,The length of the statement  "				"//span[@class='minimallexreferences refdrefs']/span[@class='minimallexreference refdref']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr']//a[@href]"' 4); " is 204.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCrossReferencesOnUnCheckConfigTargets,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForSymmetricCrossReferences,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForSymmetricCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForSymmetricCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en']"; " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForSymmetricCrossReferences,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(anyNameXpath' 1); // ensure there are no spurious names " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardCrossReferences,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeRevName); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseCrossReferences,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseCrossReferences,The length of the statement  "				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeRevName); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardLexicalRelations,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardLexicalRelations,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesForwardNameForForwardLexicalRelations,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeRevName); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLexicalRelationsLabelWithNoRepetition,The length of the statement  "			var refType1 = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLexicalRelationsLabelWithNoRepetition,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseLexicalRelations,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseLexicalRelations,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesReverseNameForReverseLexicalRelations,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeRevName); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalRelationsSortbyNodeOptionsOrder,The length of the statement  "			const string NameXpath = "//span[@class='minimallexreferences']/span[@class='minimallexreference' and position()='{0}']/span[@class='ownertype_name']/span[@lang='en' and text()='{1}']"; " is 185.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeName); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[@lang='en' and text()='{0}']"' refTypeRevName); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "			var badTarget1 = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='gloss']"; " is 166.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr' and text()='{0}']"' secondWord); " is 199.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr' and text()='{0}']"' thirdWord); " is 198.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesAsymmetricRelationsProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr' and text()='{0}']"' firstWord); " is 198.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForSubSenseProperly,The length of the statement  "			CreateLexicalReference(firstEntry' firstEntry.SensesOS[0].SensesOS[0]' legEntry.SensesOS.First()' refTypeName' refTypeRevName); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForSubSenseProperly,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForSubSenseProperly,The length of the statement  "				DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }' DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis) " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForSubSenseProperly,The length of the statement  "				"//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr' and text()='{0}']"' firstHeadword); " is 202.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForSubSenseProperly,The length of the statement  "			var badTarget = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='gloss']"; " is 165.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "			var refType = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(poss => poss.Name.BestAnalysisAlternative.Text == refTypeName); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "				DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }' DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis) " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "					Options = DictionaryDetailsControllerTests.ListOfEnabledDNOsFromStrings(new[] { refType.Guid + ":r"' refType.Guid + ":f" }) " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "			var goodTarget1 = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[text()='Part']/ancestor::span[1]/following-sibling::node()//span[@class='configtarget']/span[@class='gloss']/span[@lang='en' and text()='b2']"; " is 266.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "			var badTarget1 = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[text()='Part']/ancestor::span[1]/following-sibling::node()//span[@class='configtarget']/span[@class='gloss']/span[@lang='en' and text()='b1']"; " is 265.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "			var goodTarget2 = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[text()='Whole']/ancestor::span[1]/following-sibling::node()//span[@class='configtarget']/span[@class='gloss']/span[@lang='en' and text()='b1']"; " is 267.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesConfigTargetsForTreeBetweenSenses,The length of the statement  "			var badTarget2 = "//span[@class='lexsensereferences']/span[@class='lexsensereference']/span[@class='ownertype_name']/span[text()='Whole']/ancestor::span[1]/following-sibling::node()//span[@class='configtarget']/span[@class='gloss']/span[@lang='en' and text()='b2']"; " is 266.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Variant_SelectedItemReturnsTrue,The length of the statement  "			var crazyVariantPoss = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.First(variant => variant.Name.BestAnalysisAlternative.Text == TestVariantName); " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Variant_SelectedItemReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(variantsNode' variantForm.VisibleVariantEntryRefs.First()' variantForm)); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_MinorVariant_SelectedItemReturnsTrue,The length of the statement  "			var crazyVariantPoss = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.First(variant => variant.Name.BestAnalysisAlternative.Text == TestVariantName); " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Variant_UnselectedItemReturnsFalse,The length of the statement  "			var notCrazyVariant = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.FirstOrDefault(variant => variant.Name.BestAnalysisAlternative.Text != TestVariantName); " is 172.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Variant_UnselectedItemReturnsFalse,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(rcfsNode' variantForm.VisibleVariantEntryRefs.First()' variantForm)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_SelectedItemReturnsTrue,The length of the statement  "			var complexTypePoss = Cache.LangProject.LexDbOA.ComplexEntryTypesOA.PossibilitiesOS.First(complex => complex.Name.BestAnalysisAlternative.Text == complexRefName); " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_SelectedItemReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(variantsNode' mainEntry.VisibleComplexFormBackRefs.First()' mainEntry)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_SubentrySelectedItemReturnsTrue,The length of the statement  "			var complexTypePoss = Cache.LangProject.LexDbOA.ComplexEntryTypesOA.PossibilitiesOS.First(complex => complex.Name.BestAnalysisAlternative.Text == complexRefName); " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_SubentrySelectedItemReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(variantsNode' mainEntry.Subentries.First()' mainEntry)); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_UnselectedItemReturnsFalse,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ComplexEntryTypesOA.PossibilitiesOS.First(complex => complex.Name.BestAnalysisAlternative.Text != complexRefName); " is 165.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_UnselectedItemReturnsFalse,The length of the statement  "				DictionaryNodeOptions = GetListOptionsForItems(DictionaryNodeListOptions.ListIds.Complex' new [] { notComplexTypePoss })' " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Complex_UnselectedItemReturnsFalse,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(rcfsNode' mainEntry.VisibleComplexFormBackRefs.First()' mainEntry)); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedItemReturnsTrue,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text == refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedItemReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedItemReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' referencedEntry.MinimalLexReferences.First()' referencedEntry)); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedReverseRelationshipReturnsTrue,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text == refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedReverseRelationshipReturnsTrue,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedReverseRelationshipReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' referencedEntry.MinimalLexReferences.First()' referencedEntry)); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedForwardRelationshipReturnsTrue,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text == refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedForwardRelationshipReturnsTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedForwardRelationshipReturnsTrue,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' referencedEntry.MinimalLexReferences.First()' referencedEntry)); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedBothDirectionsBothReturnTrue,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text == refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedBothDirectionsBothReturnTrue,The length of the statement  "					Options = DictionaryDetailsControllerTests.ListOfEnabledDNOsFromStrings(new [] { notComplexTypePoss.Guid + ":f"' notComplexTypePoss.Guid + ":r"'}) " is 146.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedBothDirectionsBothReturnTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_SelectedBothDirectionsBothReturnTrue,The length of the statement  "			Assert.IsTrue(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' referencedEntry.MinimalLexReferences.First()' referencedEntry)); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_UnselectedItemReturnsFalse,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text != refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_UnselectedItemReturnsFalse,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_Entry_UnselectedItemReturnsFalse,The length of the statement  "			Assert.IsFalse(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' referencedEntry.MinimalLexReferences.First()' referencedEntry)); " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_EntryWithNoOptions_Throws,The length of the statement  "			var notComplexTypePoss = Cache.LangProject.LexDbOA.ReferencesOA.PossibilitiesOS.First(refType => refType.Name.BestAnalysisAlternative.Text == refTypeName); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsListItemSelectedForExport_EntryWithNoOptions_Throws,The length of the statement  "			Assert.Throws<ArgumentException>(() => ConfiguredXHTMLGenerator.IsListItemSelectedForExport(entryReferenceNode' mainEntry.MinimalLexReferences.First()' mainEntry)); " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoncheckedListItemsAreNotGenerated,The length of the statement  "			var notCrazyVariant = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.FirstOrDefault(variant => variant.Name.BestAnalysisAlternative.Text != TestVariantName); " is 172.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoncheckedListItemsAreNotGenerated,The length of the statement  "				FieldDescription = "LexEntry"' IsEnabled = true' Children = new List<ConfigurableDictionaryNode> { headword' variantsNode } " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_NoncheckedListItemsAreNotGenerated,The length of the statement  "				"/div[@class='lexentry']/span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']/span[@lang='fr']"' 0); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CheckedListItemsAreGenerated,The length of the statement  "			var crazyVariant = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.FirstOrDefault(variant => variant.Name.BestAnalysisAlternative.Text == TestVariantName); " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CheckedListItemsAreGenerated,The length of the statement  "				"/div[@class='lexentry']/span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']//span[@lang='fr']/span[@lang='fr']"' 2); " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantTypeIsUncheckedAndHeadwordIsChecked,The length of the statement  "			var crazyVariant = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.FirstOrDefault(variant => variant.Name.BestAnalysisAlternative.Text == TestVariantName); " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantTypeIsUncheckedAndHeadwordIsChecked,The length of the statement  "				"/div[@class='lexentry']/span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']/span[@class='referencedentries']" + " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormsUnderSensesIncludesSubentriesAndOtherReferencedComplexForms,The length of the statement  "				xpathThruSense + "/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']//span[@lang='fr']/span[@lang='fr']"' 4); " is 142.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OneSenseWithSinglePicture,The length of the statement  "			var thumbNailNode = new ConfigurableDictionaryNode { FieldDescription = "PictureFileRA"' CSSClassNameOverride = "photo" }; " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OneSenseWithSinglePicture,The length of the statement  "			var senseNumberNode = new ConfigurableDictionaryNode { FieldDescription = "SenseNumberTSS"' CSSClassNameOverride = "sensenumber" }; " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OneSenseWithSinglePicture,The length of the statement  "			const string oneSenseWithPicture = "/div[@class='lexentry']/span[@class='pictures']/div[@class='picture']/img[@class='photo' and @id]"; " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_OneSenseWithSinglePicture,The length of the statement  "			const string oneSenseWithPictureCaption = "/div[@class='lexentry']/span[@class='pictures']/div[@class='picture']/div[@class='captionContent']/span[@class='caption']//span[text()='caption']"; " is 190.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_PictureWithNonUnicodePathLinksCorrectly,The length of the statement  "			var pictureWithComposedPath = "/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[contains(@src' '" + composedPath + "')]"; " is 147.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_PictureCopiedAndRelativePathUsed,The length of the statement  "				var pictureWithComposedPath = "/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[starts-with(@src' '" + pictureRelativePath + "')]"; " is 157.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MissingPictureFileDoesNotCrashOnCopy,The length of the statement  "				var pictureWithComposedPath = "/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[starts-with(@src' '" + pictureRelativePath + "')]"; " is 157.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The length of the statement  "				var pictureWithComposedPath = "/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[contains(@src' '" + pictureRelativePath + "')]"; " is 154.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The length of the statement  "				// The second file with the same name should have had something appended to the end of the filename but the initial filename should match both entries " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The length of the statement  "				var pictureStartsWith ="/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[contains(@src' '" +filenameWithoutExtension + "')]"; " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The length of the statement  "				Assert.AreEqual(2' Directory.EnumerateFiles(Path.Combine(tempFolder.FullName' "pictures")).Count()' "Wrong number of pictures copied."); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentLinksToTheSamefileWorks,The length of the statement  "				var pictureWithComposedPath = "/div[@class='lexentry']/span[@class='pictures']/span[@class='picture']/img[contains(@src' '" + pictureRelativePath + "')]"; " is 154.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentLinksToTheSamefileWorks,The length of the statement  "				Assert.AreEqual(Directory.EnumerateFiles(Path.Combine(tempFolder.FullName' "pictures")).Count()' 1' "Wrong number of pictures copied."); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='lexentry']/span[@class='customstring']/span[text()='{0}']"' customData); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GetPropertyTypeForConfigurationNode_StringCustomFieldIsPrimitive,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GetPropertyTypeForConfigurationNode_StringCustomFieldIsPrimitive,The length of the statement  "				Assert.AreEqual(ConfiguredXHTMLGenerator.PropertyType.PrimitiveType' ConfiguredXHTMLGenerator.GetPropertyTypeForConfigurationNode(customFieldNode' Cache)); " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldOnSenseGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexSense")' 0' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldOnSenseGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='l']/span[@class='es']/span[@class='e']/span[@class='customstring']/span[text()='{0}']"' customData); " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldOnExampleGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexExampleSentence")' 0' " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldOnExampleGeneratesContent,The length of the statement  "					"/div[@class='l']/span[@class='es']//span[@class='xs']/span[@class='x']/span[@class='customstring']/span[text()='{0}']"' customData); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_StringCustomFieldOnAllomorphGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("MoForm")' 0' " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringCustomFieldGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringCustomFieldGeneratesContent,The length of the statement  "				Cache.MainCacheAccessor.SetMultiStringAlt(testEntry.Hvo' customField.Flid' m_wsEn' TsStringUtils.MakeString(customData' m_wsEn)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringCustomFieldGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='lexentry']/span[@class='customstring']/span[text()='{0}']"' customData); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "				FieldDescription = "EntryCString"' IsCustomField = true' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }) " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "				FieldDescription = "SenseCString"' IsCustomField = true' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }) " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "			using (var entryCustomField = new CustomFieldForTest(Cache' "EntryCString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "			using (var senseCustomField = new CustomFieldForTest(Cache' "SenseCString"' Cache.MetaDataCacheAccessor.GetClassId("LexSense")' 0' " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "				var entryDataPath = string.Format("/div[@class='lexentry']/span[@class='mlrs']/span[@class='mlr']/span[@class='configtargets']/span[@class='configtarget']/span[@class='entrycstring']/span[text()='{0}']"' entryCustomData); " is 221.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "				var senseDataPath = string.Format("/div[@class='lexentry']/span[@class='mlrs']/span[@class='mlr']/span[@class='configtargets']/span[@class='configtarget']/span[@class='sensecstring']/span[text()='{0}']"' senseCustomData); " is 221.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForEntry,The length of the statement  "				AssertThatXmlIn.String(result).HasNoMatchForXpath(senseDataPath' message: "Ref is to Entry; should be no Sense Custom Data"); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				FieldDescription = "EntryCString"' IsCustomField = true' DictionaryNodeOptions = GetWsOptionsForLanguages(new [] { "en" }) " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				FieldDescription = "SenseCString"' IsCustomField = true' DictionaryNodeOptions = GetWsOptionsForLanguages(new [] { "en" }) " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				FieldDescription = "MinimalLexReferences"' CSSClassNameOverride = "mlrs"' Children = new List<ConfigurableDictionaryNode> { targets } " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "			using (var entryCustomField = new CustomFieldForTest(Cache' "EntryCString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "			using (var senseCustomField = new CustomFieldForTest(Cache' "SenseCString"' Cache.MetaDataCacheAccessor.GetClassId("LexSense")' 0' " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				var entryDataPath = string.Format("/div[@class='lexentry']/span[@class='mlrs']/span[@class='mlr']/span[@class='configtargets']/span[@class='configtarget']/span[@class='entrycstring']/span[text()='{0}']"' entryCustomData); " is 221.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				AssertThatXmlIn.String(result).HasNoMatchForXpath(entryDataPath' message: "Ref is to Sense; should be no Entry Custom Data"); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnISenseOrEntryGeneratesContentForSense,The length of the statement  "				var senseDataPath = string.Format("/div[@class='lexentry']/span[@class='mlrs']/span[@class='mlr']/span[@class='configtargets']/span[@class='configtarget']/span[@class='sensecstring']/span[text()='{0}']"' senseCustomData); " is 221.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnRefdLexEntryGeneratesContent,The length of the statement  "			using (var customField = new CustomFieldForTest(Cache' "CustomString"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnRefdLexEntryGeneratesContent,The length of the statement  "				Cache.MainCacheAccessor.SetMultiStringAlt(refdEntry.Hvo' customField.Flid' m_wsEn' TsStringUtils.MakeString(customData' m_wsEn)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CustomFieldOnRefdLexEntryGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='lexentry']/span[@class='vars']/span[@class='var']/span[@class='owningentry_customstring']/span[text()='{0}']"' customData); " is 172.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringDefinition_GeneratesMultilingualSpans,The length of the statement  "			var definitionXpath = "//div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='definition']/span[@lang='en']"; " is 163.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ListItemCustomFieldGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomListItem"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ListItemCustomFieldGeneratesContent,The length of the statement  "				const string customDataPath = "/div[@class='lexentry']/span[@class='customlistitem']/span[@class='name']/span[text()='Djbuti']"; " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiListItemCustomFieldGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomListItems"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiListItemCustomFieldGeneratesContent,The length of the statement  "				Cache.MainCacheAccessor.Replace(testEntry.Hvo' customField.Flid' 0' 0' new [] {possibilityItem1.Hvo' possibilityItem2.Hvo}' 2); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiListItemCustomFieldGeneratesContent,The length of the statement  "				const string customDataPath1 = "/div[@class='lexentry']/span[@class='customlistitems']/span[@class='customlistitem']/span[@class='name']/span[text()='Dallas']"; " is 160.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiListItemCustomFieldGeneratesContent,The length of the statement  "				const string customDataPath2 = "/div[@class='lexentry']/span[@class='customlistitems']/span[@class='customlistitem']/span[@class='name']/span[text()='Barcelona']"; " is 163.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DateCustomFieldGeneratesContent,The length of the statement  "			using(var customField = new CustomFieldForTest(Cache' "CustomDate"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_DateCustomFieldGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='lexentry']/span[@class='customdate' and text()='{0}']"' customData.ToLongDateString()); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_IntegerCustomFieldGeneratesContent,The length of the statement  "			using (var customField = new CustomFieldForTest(Cache' "CustomInteger"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_IntegerCustomFieldGeneratesContent,The length of the statement  "				var customDataPath = string.Format("/div[@class='lexentry']/span[@class='custominteger' and text()='{0}']"' customData); " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiLineCustomFieldGeneratesContent,The length of the statement  "					"/div[@class='lexentry']/div/span[text()='First para Custom string'] | /div[@class='lexentry']/div/span[text()='Second para Custom string']"; " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantOfReferencedHeadWord,The length of the statement  "				"//span[@class='visiblevariantentryrefs']/span[@class='visiblevariantentryref']/span[@class='referencedentries']/span[@class='referencedentry']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']"; " is 203.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionDestinationDoesNotExist,The length of the statement  "			CreateVariantForm(Cache' entry' variant' "Spelling Variant"); // we need a real Variant Type to pass the list options test " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionDestinationDoesNotExist,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' true' true' expectedMediaFolderPath' false' isWebExport); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionDestinationDoesNotExist,The length of the statement  "					Assert.That(result' Contains.Substring("abu2.mp3")' "The automatic audio conversion in the CopyFileSafely method failed"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionDestinationDoesNotExist,The length of the statement  "					Assert.That(result' Contains.Substring("abu2.wav")' "ConfiguredXHTMLGenerator.GenerateXHTMLForEntry returned a string that did not include abu2.wav"); " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionIdenticalFileExists,The length of the statement  "			CreateVariantForm(Cache' entry' variant' "Spelling Variant"); // we need a real Variant Type to pass the list options test " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionIdenticalFileExists,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' true' true' expectedMediaFolderPath' false' isWebExport); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionIdenticalFileExists,The length of the statement  "					Assert.That(result' Contains.Substring("abu2.mp3")' "The automatic audio conversion in the CopyFileSafely method failed"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionIdenticalFileExists,The length of the statement  "					Assert.That(result' Contains.Substring("abu2.wav")' "ConfiguredXHTMLGenerator.GenerateXHTMLForEntry returned a string that did not include abu2.wav"); " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The length of the statement  "			CreateVariantForm(Cache' entry' variant' "Spelling Variant"); // we need a real Variant Type to pass the list options test " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' true' true' expectedMediaFolderPath' false' isWebExport); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The length of the statement  "				// create a fake file with the same name as the destination file but different content than the destination file should have after a conversion " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The length of the statement  "					Assert.That(result' Contains.Substring("abu21.mp3")' "The automatic audio conversion code in the CopyFileSafely method did not change the file name as it should have since a file with the same name but different contents already exists"); " is 238.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The length of the statement  "					Assert.That(result' Contains.Substring("abu2.wav")' "ConfiguredXHTMLGenerator.GenerateXHTMLForEntry returned a string that did not include abu2.wav"); " is 150.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WsAudiowithRelativePaths,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' true' true' "//audio/source/@src"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WsAudioCrashOnPrimarySelection,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' true' true' "//audio/source/@src"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WsAudioCrashOnPrimarySelection,The length of the statement  "				Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' mainEntryNode' null' settings)' "Having an audio ws first should not cause crash."); " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubentryUnderSense,The length of the statement  "				"//span[@class='sense']/span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']/span/span[@lang='en' and text()='{0}']"' " is 177.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubentryUnderSense,The length of the statement  "				"//span[@class='sense']/span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='reverseabbr']/span[@lang='en' and text()='{0}']"' " is 199.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubentry,The length of the statement  "				"//span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']/span/span[@lang='en' and text()='{0}']"' " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubentry,The length of the statement  "				"//span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='reverseabbr']/span[@lang='en' and text()='{0}']"' " is 178.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The length of the statement  "			var otherComplexRefRevAbbr = CreateComplexForm(Cache' isUnderSense ? (ICmObject)lexentry : lexentry.SensesOS.First()' subentry' true' 2) " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(mainEntryNode' sharedSubentryNode)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The length of the statement  "				"//span[@class='subentries subentries']/span[@class='subentry subentry']/span[@class='subentries subentries']/span[@class='subentry subentry']" " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The length of the statement  "				"//span[@class='subentries subentries']/span[@class='subentry subentry']/span[@class='subentries subentries']/span[@class='subentry subentry']" " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The length of the statement  "				+ "/span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='reverseabbr']/span[@lang='en' and text()='{0}']"; " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexForm_WithEmptyList,The length of the statement  "			Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(lexentry' mainEntryNode' null' settings)' "Having an empty complexentrytype list after the click event should not cause crash."); " is 202.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexForm_NoTypeSpecified,The length of the statement  "			const string refTypeXpath = "//span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='complexformtypes']/span[@class='complexformtype']"; " is 178.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexForm_NoTypeSpecified,The length of the statement  "			const string headwordXpath = "//span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='headword']"; " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesSubentry_NoTypeSpecified,The length of the statement  "			const string refTypeXpath = "//span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']"; " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariant_WithEmptyList,The length of the statement  "			Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(lexentry' mainEntryNode' null' settings)' "Having an empty variantentrytype list after the click event should not cause crash."); " is 202.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariant_NoTypeSpecified,The length of the statement  "			const string refTypeXpath = "//span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']/span[@class='variantentrytypesrs']/span[@class='variantentrytypesr']"; " is 180.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariant_NoTypeSpecified,The length of the statement  "			const string headwordXpath = "//span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']/span[@class='headword']"; " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantShowsIfNotHideMinorEntry_ViewDoesntMatter,The length of the statement  "			variantEntryRef.VariantEntryTypesRS[0] = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS[0] as ILexEntryType; " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantShowsIfNotHideMinorEntry_ViewDoesntMatter,The length of the statement  "				Parts = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode()' minorEntryNode }' // dummy main entry node " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantShowsIfNotHideMinorEntry_ViewDoesntMatter,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath("/div[@class='lexentry']/span[@class='headword']"' 1); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantShowsIfNotHideMinorEntry_ViewDoesntMatter,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath("/div[@class='lexentry']/span[@class='headword']"' 1); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedNode_GeneratesBothClasses,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(mainEntryNode' sharedSubentryNode)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedNode_GeneratesBothClasses,The length of the statement  "			const string headwordXpath = "//span[@class='reffingsubs sharedsubentries']/span[@class='reffingsub sharedsubentry']/span[@class='headword']"; " is 142.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMainAndMinorEntries,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath("/div[@class='lexentry']/span[@class='headword']"' 1); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the statement  "			if ((variantForm == FormType.None && complexForm == FormType.None) // A Minor entry makes no sense if it's neither complex nor variant " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the statement  "				|| (complexForm != FormType.None && !isRootBased)) // Only Root-based configurations consider complex forms to be main entries " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the statement  "				Parts = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode()' minorEntryNode }' // dummy main entry node " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The length of the statement  "				AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath("/div[@class='lexentry']/span[@class='headword']"' 1); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsCollectionType,The length of the statement  "			Assert.True(ConfiguredXHTMLGenerator.IsCollectionType(typeof(ILcmVector))' "Custom fields containing list items may no longer work."); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsCollectionType,The length of the statement  "			// Strings and MultiStrings' while enumerable' are not collections as we define them for the purpose of publishing data as XHTML " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,IsCollectionType,The length of the statement  "			Assert.False(ConfiguredXHTMLGenerator.IsCollectionType(assembly.GetType("SIL.LCModel.DomainImpl.VirtualStringAccessor"))); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			var pubMain = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual' typeMain); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			var pubTest = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual' typeTest); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			var captionNode = new ConfigurableDictionaryNode { FieldDescription = "Caption"' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "fr" }) }; " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { mainHeadwordNode' mainPronunciationsNode' sensesNode' pictureNode' subentryNode' variantNode }' " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchFrenchPronunciation = "//span[@class='pronunciations']/span[@class='pronunciation']/span[@class='form']/span[@lang='fr']"; " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				"//span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='definitionorgloss']/span[@lang='en']"; " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				"//span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='examples']/span[@class='example']/span[@class='examplesentence']/span[@lang='fr']"; " is 170.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				"//span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='examples']/span[@class='example']/span[@class='translations']/span[@class='translation']/span[@class='translatedsentence']/span[@lang='en']"; " is 228.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchFrenchPictureCaption = "//span[@class='pictures']/div[@class='picture']/div[@class='captionContent']/span[@class='caption']/span[@lang='fr']"; " is 160.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				"//span[@class='examples']/span[@class='example']/span[@class='translations']/span[@class='translation']/span[@class='translatedsentence']/span[@lang='en' and text()='The body is big.']"; " is 187.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "				"//span[@class='examples']/span[@class='example']/span[@class='translations']/span[@class='translation']/span[@class='translatedsentence']/span[@lang='en' and text()='The corpse is dead.']"; " is 190.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchFrenchSubentry = "//span[@class='subentries']/span[@class='subentry']/span[@class='subentry']/span[@lang='fr']"; " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchMainsubentry = "//span[@class='subentries']/span[@class='subentry']/span[@class='subentry']/span[@lang='fr'and text()='mainsubentry']"; " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchTestsubentry = "//span[@class='subentries']/span[@class='subentry']/span[@class='subentry']/span[@lang='fr'and text()='testsubentry']"; " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The length of the statement  "			const string matchVariantRef = "//span[@class='variantentrytypes']/span[@class='variantentrytype']/span[@class='name']/span[@lang='en']"; " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The length of the statement  "			using (CreateVariantForm(Cache' entryEntry' ve1' new Guid("00000000-0000-0000-0000-000000000001")' "Free Variant")) // unique Type; generated " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The length of the statement  "			using (CreateVariantForm(Cache' entryEntry' ve2' new Guid("00000000-0000-0000-0000-000000000002")' "Spelling Variant")) // unique Type; generated " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The length of the statement  "			using (CreateVariantForm(Cache' entryEntry' ve3' new Guid("00000000-0000-0000-0000-000000000003")' "Free Variant")) // repeat Type; consolidated " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The length of the statement  "			using (CreateVariantForm(Cache' entryEntry' ve4' new Guid("00000000-0000-0000-0000-000000000004")' null)) // no Type; none generated " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The length of the statement  "				const string matchVariantRef = "//span[@class='variantentrytypes']/span[@class='variantentrytype']/span[@class='name']/span[@lang='en']"; " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesShowOnlySelectedListItem,The length of the statement  "			const string matchFreeVariantRef = "//span[@class='variantentrytypes']/span[@class='variantentrytype']/span[@class='name']/span[@lang='en' and text()='Free Variant']"; " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesShowOnlySelectedListItem,The length of the statement  "			const string matchSpellingVariantRef = "//span[@class='variantentrytypes']/span[@class='variantentrytype']/span[@class='name']/span[@lang='en' and text()='Spelling Variant']"; " is 175.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesLabelWithNoRepetition,The length of the statement  "			var pubMain = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual' typeMain); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesLabelWithNoRepetition,The length of the statement  "			const string matchComplexFormRef = "//span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='name']/span[@lang='en']"; " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The length of the statement  "			var pubMain = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual' typeMain); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The length of the statement  "			const string matchComplexFormTypeCompound = "//span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='name']/span[@lang='en' and text()='Compound']"; " is 170.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The length of the statement  "			const string matchComplexFormTypeIdiom = "//span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='name']/span[@lang='en' and text()='Idiom']"; " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The length of the statement  "			const string matchComplexFormName = "//span[@class='visiblecomplexformbackref']/span[@class='headword']/span[@lang='fr']/a"; " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormAndSenseInPara,The length of the statement  "			var glossNode = new ConfigurableDictionaryNode { FieldDescription = "Gloss"' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }) }; " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormAndSenseInPara,The length of the statement  "			const string senseXpath = "div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='gloss']/span[@lang='en' and text()='gloss']"; " is 179.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormAndSenseInPara,The length of the statement  "				"div[@class='lexentry']//span[@class='subentries']/span[@class='subentry']/span[@class='complexformtypes']/span[@class='complexformtype']/span[@class='reverseabbr']/span[@lang='en' and text()='{0}']"' " is 200.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The length of the statement  "			const string complexFormEntryRefXpath = "div[@class='minorentrycomplex']/span[@class='complexformentryrefs']/span[@class='complexformentryref']"; " is 145.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The length of the statement  "			const string glossOrSummXpath1 = complexFormEntryRefXpath + referencedEntriesXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='MainEntrySummaryDefn']"; " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The length of the statement  "			const string glossOrSummXpath2 = complexFormEntryRefXpath + referencedEntriesXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='gloss2']"; " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The length of the statement  "			const string glossOrSummXpath3 = complexFormEntryRefXpath + referencedEntriesXpath + "/span[@class='glossorsummary']/span[@lang='en' and text()='MainEntryS3Defn']"; " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ContinuationParagraphWithEmtpyContentDoesNotGenerateSelfClosingTag,The length of the statement  "			var glossNode = new ConfigurableDictionaryNode { FieldDescription = "Gloss"' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }) }; " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ContinuationParagraphWithEmtpyContentDoesNotGenerateSelfClosingTag,The length of the statement  "			const string senseXpath = "div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='gloss']/span[@lang='en' and text()='gloss']"; " is 179.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The length of the statement  "			var glossNode = new ConfigurableDictionaryNode { FieldDescription = "Gloss"' DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "en" }) }; " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { lexentry1.Hvo' lexentry2.Hvo }' pubEverything' model' m_propertyTable); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { lexentry1.Hvo' lexentry2.Hvo }' null' model' m_propertyTable); " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { lexentry1.Hvo }' pubEverything' model' m_propertyTable); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_SortByNonHeadwordProducesNoLetHead,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_SortByNonHeadwordProducesNoLetHead,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new[] { firstAEntry.Hvo }' pubEverything' model' m_propertyTable); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProducesHeadingsAndEntriesInOrder,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProducesHeadingsAndEntriesInOrder,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { firstAEntry.Hvo' secondAEntry.Hvo' bEntry.Hvo }' pubEverything' model' m_propertyTable); " is 160.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProducesHeadingsAndEntriesInOrder,The length of the statement  "					"Entries generated out of order: first at {0}' second at {1}' third at {2}"' firstHeadwordLoc' secondHeadwordLoc' thirdHeadwordLoc); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_MoreEntriesThanLimitProducesPageDivs,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_MoreEntriesThanLimitProducesPageDivs,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new[] { firstAEntry.Hvo' secondAEntry.Hvo' bEntry.Hvo }' pubEverything' model' m_propertyTable' entriesPerPage: 1); " is 178.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 10); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The length of the statement  "				AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonXPath' 4); // 2 page buttons (top and bottom) " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The length of the statement  "				AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonLastIndexPath' 2); // last page includes the last entry " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The length of the statement  "				AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(entryDivXPath' 10); // 10 entries generated on first page " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The length of the statement  "			const string firstPageButtonXPath = "//div[@class='pages']/span[@class='pagebutton' and @id='currentPageButton' and @startIndex='0' and @endIndex='7']"; " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The length of the statement  "			const string lastPageButtonXPath = "//div[@class='pages']/span[@class='pagebutton' and @startIndex='16' and @endIndex='20']"; " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 8); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ZeroEntriesDoesNotThrow,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ZeroEntriesDoesNotThrow,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 8); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' flidVirtual); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { thirdEntry.Hvo' secondEntry.Hvo' firstEntry.Hvo }' pubEverything' model' m_propertyTable); " is 162.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				const string firstCategPath = "/html/body/div[@class='lexentry']/span[@class='senses']//span[@class='sensecontent']/span[@class='sense']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='n']"; " is 236.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				const string secondCategPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[@class='sharedgrammaticalinfo']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='n']"; " is 224.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				const string thirdCategPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[@class='sharedgrammaticalinfo']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='adj']"; " is 225.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				const string fourthCategPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='adj']"; " is 309.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The length of the statement  "				const string fifthCategPath = "/html/body/div[@class='lexentry']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='morphosyntaxanalysis']/span[@class='mlpartofspeech']/span[@lang='en' and text()='n']"; " is 306.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_DoesNotThrowIfFileIsLocked,The length of the statement  "			var preferredPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(entries' null' model' m_propertyTable); // to get the preferred path " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_DoesNotThrowIfFileIsLocked,The length of the statement  "					Assert.DoesNotThrow(() => actualPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(entries' null' model' m_propertyTable)); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemOfOppositeDirectionGeneratesCorrectResult,The length of the statement  "			const string nestedEn = "/div[@class='lexentry']/span[@class='bib']/span[@lang='he']/span[@dir='rtl']/span[@lang='en']/span[@dir='ltr']"; " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemOfOppositeDirectionGeneratesCorrectResult,The length of the statement  "			const string nestedHe = "/div[@class='lexentry']/span[@class='bib']/span[@lang='he']/span[@dir='rtl']/span[@lang='he']"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemOfOppositeDirectionGeneratesCorrectResult,The length of the statement  "			const string extraDirection = "/div[@class='lexentry']/span[@class='bib']/span[@lang='he']/span[@dir='rtl']/span[@lang='he']/span[@dir='rtl']"; " is 143.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WritingSystemOfSameDirectionGeneratesNoExtraDirectionSpan,The length of the statement  "			var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' m_propertyTable' false' false' null' true); // Right-to-Left " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WritingSystemOfSameDirectionGeneratesNoExtraDirectionSpan,The length of the statement  "			const string nestedEn = "/div[@class='lexentry']/span[@class='bib']/span[@lang='he']/span[@lang='en']/span[@dir='ltr']"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_WritingSystemOfSameDirectionGeneratesNoExtraDirectionSpan,The length of the statement  "			const string extraDirection1 = "/div[@class='lexentry']/span[@class='bib']/span[@lang='he']/span[@lang='he']/span[@dir='rtl']"; " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CrossRefOwnerTypeXpath,The length of the statement  "			return string.Format("//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='ownertype_name']" + " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,HeadwordOrderInCrossRefsXpath,The length of the statement  "			return string.Format("//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']" + " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,HeadwordWsInCrossRefsXpath,The length of the statement  "			return string.Format("//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']" + " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The length of the statement  "			var comRefType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntryCollection' comRefTypeName' "cf"' string.Empty' string.Empty); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The length of the statement  "				CreateLexReference(comRefType' new[] { mainEntry' compareReferencedEntry1' compareReferencedEntry2' compareReferencedEntry3 }); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(crossRefOwnerTypeXpath' 1); // ensure there is only one " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(CrossRefOwnerTypeXpath(comRefTypeName)' 1); // ...the *correct* one " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The length of the statement  "			var comRefType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntryCollection' comRefTypeName' "cf"' string.Empty' string.Empty); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The length of the statement  "			CreateLexReference(comRefType' new List<ICmObject> { mainEntry' compareReferencedEntry5' compareReferencedEntry4' compareReferencedEntry1 }); " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The length of the statement  "			var midAlphabetEntry = CreateInterestingLexEntry(Cache' "omega"' "middle of the Roman alphabet; we're not testing Greek :-)"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The length of the statement  "			var colorType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntrySequence' colorTypeName' "col"' string.Empty' string.Empty); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The length of the statement  "			var greekType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntrySequence' greekTypeName' "grk"' string.Empty' string.Empty); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The length of the statement  "			AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(1' "alpha")' 2); // the first in both " is 134.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Unidirectional_SequencePreserved,The length of the statement  "			var characterType = CreateLexRefType(LexRefTypeTags.MappingTypes.kmtEntryUnidirectional' characterTypeName' "char"' string.Empty' string.Empty); " is 144.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Unidirectional_SequencePreserved,The length of the statement  "			AssertThatXmlIn.String(result).HasNoMatchForXpath(HeadwordOrderInCrossRefsXpath(4' "Stooges")); // Unidirectional excludes the owner " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,ModelForCrossReferences,The length of the statement  "				DictionaryNodeOptions = GetWsOptionsForLanguages(new[] { "fr"' "en" }' DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular) " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "			// Girl is both a whole and a part' but has no other refs. When these targets are alphabetized by headword' their types alternate. " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "				// If we are testing subfields' insert 'SensesOS->Entry'' which returns the same data' but allows us to make LexRefs a subfield. " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "				xpathLexRef = "//div/span[@class='senses']/span[@class='sensecontent']/span[@class='sense']/span[@class='lexrefs']/span[@class='lexref']"; " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "			//Console.WriteLine(ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new[] { manEntry.Hvo' familyEntry.Hvo' girlEntry.Hvo' individualEntry.Hvo }' null' " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "			//	new DictionaryConfigurationModel { Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }' m_mediator)); // full output for diagnostics " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "			AssertThatXmlIn.String(manResult).HasSpecifiedNumberOfMatchesForXpath(xpathLexRef' 2); // antonyms are grouped into one span " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The length of the statement  "			// Ignore if usingSubfield. Justification: Part-Whole direction is miscalculated for field=Entry' subfield=MinimalLexReferences (LT-17571) " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "			using (CreateVariantForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordB")' new Guid("00000000-0000-0000-0000-000000000001"))) " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "			using (CreateVariantForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordA")' new Guid("00000000-0000-0000-0000-000000000003"))) " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "			using (CreateVariantForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordD")' new Guid("00000000-0000-0000-0000-000000000004"))) " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "			using (CreateVariantForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordC")' new Guid("00000000-0000-0000-0000-000000000002"))) " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "					Is.LessThan(result.IndexOf("headwordB"' StringComparison.InvariantCulture))' "variant form not sorted in expected order"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "					Is.LessThan(result.IndexOf("headwordC"' StringComparison.InvariantCulture))' "variant form not sorted in expected order"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantsOfEntryAreOrdered,The length of the statement  "					Is.LessThan(result.IndexOf("headwordD"' StringComparison.InvariantCulture))' "variant form not sorted in expected order"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "			using (var c1 = CreateComplexForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordB")' new Guid("00000000-0000-0000-0000-000000000001")' false)) " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "			using (var c3 = CreateComplexForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordA")' new Guid("00000000-0000-0000-0000-000000000003")' false)) " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "			using (var c2 = CreateComplexForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordD")' new Guid("00000000-0000-0000-0000-000000000004")' false)) " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "			using (var c4 = CreateComplexForm(Cache' lexentry' CreateInterestingLexEntry(Cache' "headwordC")' new Guid("00000000-0000-0000-0000-000000000002")' false)) " is 155.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "					Is.LessThan(result.IndexOf(headwords[1]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "					Is.LessThan(result.IndexOf(headwords[2]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The length of the statement  "					Is.LessThan(result.IndexOf(headwords[3]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			// Use the second item in the list for testing at this time' since the first item in the list isn't being handled the same way right now (20170111) by the current implementation. " is 178.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var earlyTypeInOptionsListGuid = new Guid(((DictionaryNodeListOptions)variantFormNode.DictionaryNodeOptions).Options[1].Id); " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var finalTypeInOptionsListGuid = new Guid(((DictionaryNodeListOptions)variantFormNode.DictionaryNodeOptions).Options.Last().Id); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var earlyTypeInOptionsList = Cache.LangProject.LexDbOA.VariantEntryTypesOA.ReallyReallyAllPossibilities.First(t => t.Guid == earlyTypeInOptionsListGuid); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var finalTypeInOptionsList = Cache.LangProject.LexDbOA.VariantEntryTypesOA.ReallyReallyAllPossibilities.First(t => t.Guid == finalTypeInOptionsListGuid); " is 153.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var result = ConfiguredXHTMLGenerator.GenerateXHTMLForFieldByReflection(lexentry' variantFormNode' null' DefaultSettings); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "				Is.LessThan(result.IndexOf("headwordB"' StringComparison.InvariantCulture))' "variant forms not appearing in an order corresponding to their type sorting"); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			// Change the order of variantFormNode.DictionaryNodeOptions' which should result in the data being ordered differently. " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_VariantFormTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "				Is.LessThan(result.IndexOf("headwordA"' StringComparison.InvariantCulture))' "variant forms not appearing in an order corresponding to their type sorting"); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_SubentryTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			// Use the second item in the list for testing at this time' since the first item in the list (<none>) isn't being handled the same way right now (20170119) by the current implementation. " is 187.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_SubentryTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var earlyTypeInOptionsListGuid = new Guid(((DictionaryNodeListOptions)subentryNode.DictionaryNodeOptions).Options[1].Id); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_SubentryTypesAreOrderedBasedOnOptionOrdering,The length of the statement  "			var finalTypeInOptionsListGuid = new Guid(((DictionaryNodeListOptions)subentryNode.DictionaryNodeOptions).Options.Last().Id); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_NullOrEmptyMediaFilePathDoesNotCrash,The length of the statement  "			CreateVariantForm(Cache' entry' variant' "Spelling Variant"); // we need a real Variant Type to pass the list options test " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForFieldByReflection_NullOrEmptyMediaFilePathDoesNotCrash,The length of the statement  "			Assert.DoesNotThrow(() => ConfiguredXHTMLGenerator.GenerateXHTMLForEntry(entry' mainEntryNode' null' settings)' "Invalid filename in CmFile should not lead to crash"); " is 167.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The length of the statement  "			ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo }' settings' currentPage' adjacentPage' 2' " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenDownButtonConsumesAllEntries,The length of the statement  "			ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo }' settings' currentPage' adjPage' 2' " is 146.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The length of the statement  "			ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo' fourthEntry.Hvo }' settings' currentPage' adjPage' 1' " is 163.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The length of the statement  "			ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo' fourthEntry.Hvo }' settings' currentPage' adjPage' 1' " is 163.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_UpReturnsRequestedEntries,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' Cache.ServiceLocator.GetInstance<Virtuals>().LexDbEntries); " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_UpReturnsRequestedEntries,The length of the statement  "				var entries = ConfiguredXHTMLGenerator.GenerateNextFewEntries(pubEverything' new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo' fourthEntry.Hvo }' configPath' " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The length of the statement  "			var pubEverything = new DictionaryPublicationDecorator(Cache' (ISilDataAccessManaged)Cache.MainCacheAccessor' Cache.ServiceLocator.GetInstance<Virtuals>().LexDbEntries); " is 169.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The length of the statement  "				var entries = ConfiguredXHTMLGenerator.GenerateNextFewEntries(pubEverything' new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo' fourthEntry.Hvo }' configPath' " is 164.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesNFC,The length of the statement  "			Cache.LangProject.AddToCurrentVernacularWritingSystems(Cache.WritingSystemFactory.get_Engine("ko") as CoreWritingSystemDefinition); " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesNFC,The length of the statement  "			Assert.That(entry.CitationForm.get_String(wsKo).get_IsNormalizedForm(FwNormalizationMode.knmNFD)' "Should be NFDecomposed in memory"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateLetterHeaderCss_CssUsesDefinedStyleInfo,The length of the statement  "			// verify that the css result contains boilerplate rules and the text-align center expected from the letHeadStyle test style " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateLetterHeaderCss_CssUsesDefinedStyleInfo,The length of the statement  "			Assert.IsTrue(Regex.Match(styleSheet.ToString()' @"\.letHead\s*{\s*-moz-column-count:1;\s*-webkit-column-count:1;\s*column-count:1;\s*clear:both;\s*width:100%;.*text-align:center").Success' " is 189.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SharedConfigurationGeneratesValidCss,The length of the statement  "			var subentriesNode = new ConfigurableDictionaryNode { FieldDescription = "Subentries"' ReferenceItem = "SharedSubentries" }; " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_LinksLookLikePlainText,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\s*a\s*{[^}]*text-decoration:inherit;").Success' "Links should inherit underlines and similar."); " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesShimForBidirectionalText,The length of the statement  "			Assert.That(Regex.Match(cssResult' @"\*\[dir='ltr'\]' \*\[dir='rtl'\]\s*{[^}]*unicode-bidi:\s*-moz-isolate;").Success' "Missing -moz-isolate rule"); " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesShimForBidirectionalText,The length of the statement  "			Assert.That(Regex.Match(cssResult' @"\*\[dir='ltr'\]' \*\[dir='rtl'\]\s*{[^}]*unicode-bidi:\s*-ms-isolate;").Success' "Missing -ms-isolate rule"); " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesShimForBidirectionalText,The length of the statement  "			Assert.That(Regex.Match(cssResult' @"\*\[dir='ltr'\]' \*\[dir='rtl'\]\s*{[^}]*unicode-bidi:\s*isolate;").Success' "Missing isolate rule"); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesBeforeAfterCss,The length of the statement  "			// Check result for before and after rules equivalent to .headword span:first-child{content:'Z';} and .headword span:last-child{content:'A'} " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesBeforeAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.mainheadword>\s*span\s*:\s*first-child:before\s*{\s*content\s*:\s*'Z';\s*}").Success' " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesBeforeAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.mainheadword>\s*span\s*:\s*last-child:after\s*{\s*content\s*:\s*'A';\s*}").Success' " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesApostropheBeforeBetweenAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.mainheadword>\s*span\s*:\s*first-child:before\s*{\s*content\s*:\s*'\\\s*'beforeText\\'\s*';\s*}").Success' " is 147.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesApostropheBeforeBetweenAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.mainheadword>\s*.mainheadwor\s*\+\s*.mainheadwor:before\s*{\s*content\s*:\s*'\\\s*'betweenText\\'\s*';\s*}").Success' " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterSpanConfigGeneratesApostropheBeforeBetweenAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.mainheadword>\s*span\s*:\s*last-child:after\s*{\s*content\s*:\s*'\\\s*'afterText\\'\s*';\s*}").Success' " is 144.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterGroupingSpanWorks,The length of the statement  "			// Check result for before and after rules equivalent to .headword span:first-child{content:'Z';} and .headword span:last-child{content:'A'} " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterGroupingSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.grouping_hwg>\s*\.mh>\s*span\s*:\s*first-child:before\s*{\s*content\s*:\s*'Z';\s*}").Success' " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterGroupingSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.grouping_hwg>\s*\.mh>\s*span\s*:\s*last-child:after\s*{\s*content\s*:\s*'A';\s*}").Success' " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenSpaceIsNotAddedAfterSingleHeadword,The length of the statement  "			// Check result for between rule equivalent to lexentry> .mainheadword> span.writingsystemprefix + span:not(:last-child):after{content:' ';} " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenSpaceIsNotAddedAfterSingleHeadword,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry\s*>\s*\.mainheadword>\s*span\.writingsystemprefix\s*\~\s*span\.writingsystemprefix:before{.*content:' ';.*}"' RegexOptions.Singleline).Success' " is 195.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterCss_SubentryHeadword,The length of the statement  "			// Check result for before and after rules equivalent to .subentries .subentry .headword span:first-child{content:'Z';} and .headword span:last-child{content:'A'} " is 162.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterCss_SubentryHeadword,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.subentries\s*\.subentry>\s*\.headword>\s*span\s*:\s*first-child:before\s*{\s*content\s*:\s*'Z';\s*}").Success' " is 151.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterCss_SubentryHeadword,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.subentries\s*\.subentry>\s\.headword>\s*span\s*:\s*last-child:after\s*{\s*content\s*:\s*'A';\s*}").Success' " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterFormattedCss,The length of the statement  "				// Check result for before and after rules equivalent to .headword span:first-child{content:'Z';font-size:10pt;color:#00F;} " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterFormattedCss,The length of the statement  "						@"\.mainheadword>\s*span\s*:\s*first-child:before\s*{\s*content\s*:\s*'Z';\s*font-size\s*:\s*10pt;\s*color\s*:\s*#00F;\s*}").Success' " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BeforeAfterConfigGeneratesBeforeAfterFormattedCss,The length of the statement  "						@"\.mainheadword>\s*span\s*:\s*last-child:after\s*{\s*content\s*:\s*'A';\s*font-size\s*:\s*10pt;\s*color\s*:\s*#00F;\s*}").Success' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_DefinitionOrGlossBeforeAfterConfigGeneratesBeforeAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense> .definitionorgloss> span:first-child:before{.*content:'<';.*}"' " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_DefinitionOrGlossBeforeAfterConfigGeneratesBeforeAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense> .definitionorgloss> span\+span\[lang\|=\'en\']:before{.*content:''';.*}"' " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_DefinitionOrGlossBeforeAfterConfigGeneratesBeforeAfterCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense> .definitionorgloss> span:last-child:after{.*content:'>';.*}"' " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_CharacterStyleWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Vernacular"' CssGenerator.DefaultStyle' m_propertyTable); " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphBorderWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph"' CssGenerator.DefaultStyle' m_propertyTable); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_WithBulletStyleOnNoteAndWritingSystemsCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense>.*.anthronote{.*font-size:12pt;.*color:#F00;.*content:'\\25A0';.*}"' " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_WithBulletStyleOnNoteAndWritingSystemsCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense>.*.anthronote>.*span.writingsystemprefix.~.span.writingsystemprefix:before"' " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_WithBulletStyleOnNoteAndWritingSystemsCss,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .senses .sense> .bibliography> span{.*font-size:12pt;.*color:#F00;.*content:'\\25A0';.*}"' " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_WithBulletStyleOnNoteAndWritingSystemsCss,The length of the statement  "			Assert.IsFalse(Regex.Match(cssResult' @".lexentry> .senses .sense>.*.bibliography>.*span.writingsystemprefix.~.span.writingsystemprefix:before"' " is 144.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomBulletStyleForSenses,The length of the statement  "			const string regExPected = @".lexentry>\s.senses\s>\s.sensecontent:before.*{.*content:'@';.*font-size:14pt;.*color:Green;.*}"; " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomBulletStyleForSenses,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regExPected' RegexOptions.Singleline).Success' "Custom bullet content not generated."); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_NoParent_Works,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-Padding"' CssGenerator.DefaultStyle' null' m_propertyTable); " is 152.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("ParagraphMarginAbsoluteParentOverrideChild"' CssGenerator.DefaultStyle' senses' m_propertyTable); " is 168.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The length of the statement  "			// In order for the child to have a correct indent (15) it must overcome the larger indent of the parent by a negative amount " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The length of the statement  "			Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + (childIndent - LeadingIndent) / 1000 + "pt")); " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ChildEqualToParentResultsInZeroMargin,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("ParagraphMarginAbsoluteParentOverrideChild"' CssGenerator.DefaultStyle' senses' m_propertyTable); " is 168.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The length of the statement  "			var gpDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(grandParentStyle.Name' CssGenerator.DefaultStyle' entry' m_propertyTable); " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The length of the statement  "			Assert.That(gpDeclaration.ToString()' Contains.Substring("margin-left:5pt")' "Grandparent margin incorrectly generated"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The length of the statement  "			var parentDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(parentStyle.Name' CssGenerator.DefaultStyle' senses' m_propertyTable); " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The length of the statement  "			Assert.That(parentDeclaration.ToString()' Contains.Substring("margin-left:7pt")' "Parent margin incorrectly generated"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The length of the statement  "			var childDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(childStyle.Name' CssGenerator.DefaultStyle' subSenses' m_propertyTable); " is 142.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-Padding-Hanging"' CssGenerator.DefaultStyle' m_propertyTable); " is 154.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The length of the statement  "			Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + (LeadingIndent - hangingIndent) / 1000 + "pt")); " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The length of the statement  "			var parentDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(parentStyle.Name' CssGenerator.DefaultStyle' entry' m_propertyTable); " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The length of the statement  "			var childDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(childStyleName' CssGenerator.DefaultStyle' senses' m_propertyTable); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The length of the statement  "			Assert.That(parentDeclaration.ToString()' Contains.Substring("margin-left:" + (LeadingIndent - parentHangingIndent) / 1000 + "pt")); " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The length of the statement  "			// The child margin should be the negation of the parent adjusted margin plus the LeadingIndent less the childs hanging indent " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The length of the statement  "			var grandChildDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(grandChildStyleName' CssGenerator.DefaultStyle' examples' m_propertyTable' true); " is 156.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_Parallel_Passage_ReferenceRulesGenerated,The length of the statement  "			var SubSubSenseOptions = new DictionaryNodeSenseOptions { NumberingStyle = "%A"' ParentSenseNumberingStyle = "%."' NumberEvenASingleSense = true }; " is 147.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_Parallel_Passage_ReferenceRulesGenerated,The length of the statement  "			var grandChildDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(grandChildStyleName' CssGenerator.DefaultStyle' examples' m_propertyTable' true); " is 156.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_Parallel_Passage_ReferenceRulesGenerated,The length of the statement  "			var childDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(childStyleName' CssGenerator.DefaultStyle' examples' m_propertyTable' true); " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_Parallel_Passage_ReferenceRulesGenerated,The length of the statement  "			var parentDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(parentStyle.Name' CssGenerator.DefaultStyle' examples' m_propertyTable' true); " is 149.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParentMargin_DoesNotAffectCharacterStyle,The length of the statement  "			var childDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet(childStyle.Name' CssGenerator.DefaultStyle' headword' m_propertyTable); " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithNoMarginWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-Hanging-No-Padding"' CssGenerator.DefaultStyle' m_propertyTable); " is 157.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphAlignmentWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-Justify"' CssGenerator.DefaultStyle' m_propertyTable); " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphRelativeLineSpacingWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-RelativeLine"' CssGenerator.DefaultStyle' m_propertyTable); " is 151.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphAbsoluteLineSpacingWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-Absolute"' CssGenerator.DefaultStyle' m_propertyTable); " is 147.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphLineSpacingExactlyWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-LineSpacingExactly"' CssGenerator.DefaultStyle' m_propertyTable); " is 157.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphLineSpacingAtleastWorks,The length of the statement  "			var styleDeclaration = CssGenerator.GenerateCssStyleFromLcmStyleSheet("Dictionary-Paragraph-LineSpacingAtleast"' CssGenerator.DefaultStyle' m_propertyTable); " is 157.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_DefaultRootConfigGeneratesResult,The length of the statement  "				Path.Combine(Path.Combine(FwDirectoryFinder.DefaultConfigurations' "Dictionary")' "Root" + DictionaryConfigurationModel.FileExtension); " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_FwStyleInheritanceWorks,The length of the statement  "			childStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptBorderColor' 0' (int)ColorUtil.ConvertColorToBGR(Color.HotPink)); " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_CharStyleUnsetValuesAreNotExported,The length of the statement  "			var cssResult = CssGenerator.GenerateCssStyleFromLcmStyleSheet("EmptyChar"' CssGenerator.DefaultStyle' m_propertyTable); " is 120.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_CharStyleSubscriptWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.sil*\.fieldworks.xworks.testrootclass>\s*span\[lang|='fr']\{.*position\:relative\*top\:-0.2em.*"' RegexOptions.Singleline).Success' " is 174.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_CharStyleSuperscriptWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.sil*\.fieldworks.xworks.testrootclass>\s*span\[lang|='fr']\{.*position\:relative\*top\:\0.2em.*"' RegexOptions.Singleline).Success' " is 174.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_VariantPronunciationFormWorks,The length of the statement  "			Assert.That(cssResult' Contains.Substring(".lexentry> .variantformentrybackrefs .variantformentrybackref> .pronunciations .pronunciation> .form")); " is 147.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SubentryTypeWorks,The length of the statement  "			Assert.That(cssResult' Contains.Substring(".lexentry> .subentries .subentry> .complexformtypes .complexformtype> .reverseabbr> span")); " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs> .complexformtypes .complexformtype> .name:before{\s*content:'<';\s*}"' " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs> .complexformtypes .complexformtype> .name> .nam\+ .nam:before{\s*content:''';\s*}"' " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs> .complexformtypes .complexformtype> .name:after{\s*content:'>';\s*}"' " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfterInParagraphs,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Complex)' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfterInParagraphs,The length of the statement  "			((IParaOption)complexFormNode.DictionaryNodeOptions).DisplayEachInAParagraph = true; // displaying in a paragraph should suppress factoring " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfterInParagraphs,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs .visiblecomplexformbackref> .complexformtypes .complexformtype> .name:before{\s*content:'<';\s*}"' " is 162.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfterInParagraphs,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs .visiblecomplexformbackref> .complexformtypes .complexformtype> .name> .nam\+ .nam:before{\s*content:''';\s*}"' " is 175.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesComplexFormTypesBeforeBetweenAfterInParagraphs,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .visiblecomplexformbackrefs .visiblecomplexformbackref> .complexformtypes .complexformtype> .name:after{\s*content:'>';\s*}"' " is 161.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantTypesBeforeBetweenAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .variantformentrybackrefs> .variantformentrybackref\+ .variantformentrybackref:before{.*content:'\; ';.*}"' " is 157.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantTypesBeforeBetweenAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .variantformentrybackrefs .variantformentrybackref> .variantentrytypes .variantentrytype> .name:before{.*content:'<';.*}"' " is 172.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantTypesBeforeBetweenAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .variantformentrybackrefs .variantformentrybackref> .variantentrytypes .variantentrytype> .name> .nam\+ .nam:before{.*content:''';.*}"' " is 185.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantTypesBeforeBetweenAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".lexentry> .variantformentrybackrefs .variantformentrybackref> .variantentrytypes .variantentrytype> .name:after{.*content:'>';.*}"' " is 171.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Variant)' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .variantformentrybackrefs_inflectional-variants> .variantformentrybackref_inflectional-variants\+ .variantformentrybackref_inflectional-variants:before{.*content:'\; ';.*}"' " is 209.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "			Assert.False(Regex.Match(cssResult' @".lexentry>? .variantformentrybackrefs_inflectional-variants>? span\+ span:before").Success' " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "				"Between should not have been generated using generic spans because this element has type factoring." + Environment.NewLine + cssResult); " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .variantformentrybackrefs_inflectional-variants> .variantentrytypes .variantentrytype> .name:before{.*content:'<';.*}"' " is 155.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .variantformentrybackrefs_inflectional-variants> .variantentrytypes .variantentrytype> .name> .nam\+ .nam:before{.*content:''';.*}"' " is 168.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GeneratesVariantNameSuffixBeforeBetweenAfter,The length of the statement  "			VerifyRegex(cssResult' @".lexentry> .variantformentrybackrefs_inflectional-variants> .variantentrytypes .variantentrytype> .name:after{.*content:'>';.*}"' " is 154.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseComplexFormsNotSubEntriesHeadWord,The length of the statement  "			Assert.That(cssResult' Contains.Substring(".lexentry> .senses .sense> .otherreferencedcomplexforms .otherreferencedcomplexform> .headword")); " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_ComplexFormsEachInOwnParagraph,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.complexforms\s*\.complexform{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseShowGramInfoFirstWorks,The length of the statement  "				@"\.lexentry>\s*\.senses\s*>\s*\.sharedgrammaticalinfo\s*>\s*\.morphosyntaxanalysisra\s*{.*font-family\s*:\s*'foofoo'\'serif.*}"' " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseDisplayInParaWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent(\s*\+\s*\.sensecontent)?\s*{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 173.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_ExampleDisplayInParaWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*>\s*\.sense>\s*\.examples\s*\.example\s*{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 188.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_ExampleUncheckedDisplayInParaWorks,The length of the statement  "			Assert.IsFalse(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*\.sense>\s*\.examples\s*\.example\s*{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 164.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleNotAppliedToInLineFirstSense,The length of the statement  "				DictionaryNodeOptions = new DictionaryNodeSenseOptions { DisplayEachSenseInAParagraph = true' DisplayFirstSenseInline = true }' " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleNotAppliedToInLineFirstSense,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*\+\s*\.sensecontent\s*{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 170.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleNotAppliedToInLineFirstSense,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*>\s*\.sense\s*{.*font-style\s*:\s*italic;.*}"' RegexOptions.Singleline).Success); " is 166.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleAppliedToFirstSense,The length of the statement  "				DictionaryNodeOptions = new DictionaryNodeSenseOptions { DisplayEachSenseInAParagraph = true' DisplayFirstSenseInline = false }' " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleAppliedToFirstSense,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*{.*display\s*:\s*block;.*}"' RegexOptions.Singleline).Success); " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseParaStyleAppliedToFirstSense,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*>\s*\.sense\s*{.*font-style\s*:\s*italic;.*}"' RegexOptions.Singleline).Success); " is 166.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseNumberCharStyleWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*\.sensenumber"' RegexOptions.Singleline).Success' " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_ReversalSenseNumberWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"\.reversalindexentry>\s*\.refdsenses\s*>\s*\.sensecontent\s*\.sensenumber\s*{.*font-style\s*:\s*italic;.*}"' RegexOptions.Singleline).Success); " is 182.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseNumberBeforeAndAfterWork,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*\.sensenumber:before{.*content:'\['.*}"' RegexOptions.Singleline).Success' " is 161.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SenseNumberBeforeAndAfterWork,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.senses\s*>\s*\.sensecontent\s*\.sensenumber:after{.*content:'\]'.*}"' RegexOptions.Singleline).Success' " is 160.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PrimaryEntryReferencesTypeContextWorks,The length of the statement  "			VerifyRegex(cssResult' thisMainSense + @">\s*\.entrytypes:before{\s*content:'b4';\s*}"); // TODO? (Hasso) 2016.10: put on .types .type first-child " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PrimaryEntryReferencesTypeContextWorks,The length of the statement  "			VerifyRegex(cssResult' thisMainSense + @">\s*\.entryrefswiththismainsens\s*\+\s*.entrytypes:before{\s*content:'twixt';\s*}"' " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PrimaryEntryReferencesTypeContextWorks,The length of the statement  "				"Until everything else is restructured under the yet-to-be-added Targets node' Factoring Type.Between goes between typed factions"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PrimaryEntryReferencesTypeContextWorks,The length of the statement  "			VerifyRegex(cssResult' entryType + @">\s*\.reversename>\s*span+span\[lang|='" + lang2 + @"'\]:before{\s*content:'viet';\s*}"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenWorks,The length of the statement  "			VerifyRegex(cssResult' @".*\.lexentry>\s*\.senses>\s*\.sense\s*\+\s*\.sense:before{.*content:'''.*}"' "Between selector not generated."); " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenSingleWsWithAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\.writingsystemprefix\s*\~\s*span\.writingsystemprefix:before{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 189.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithoutAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\+span\[lang\|=\'fr\'\]:before{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\.writingsystemprefix\s*\~\s*span\.writingsystemprefix:before\s*{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 192.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.headword>\s*span\.writingsystemprefix\s*\~\s*span\.writingsystemprefix:before\s*{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 190.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\.writingsystemprefix:after\s*{.*content:' '.*}"' RegexOptions.Singleline).Success' " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpanWorks,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.headword>\s*span\.writingsystemprefix:after\s*{.*content:' '.*}"' RegexOptions.Singleline).Success' " is 156.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpan_NotEnabled_DeselectsRules,The length of the statement  "			Assert.IsFalse(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\.writingsystemprefix\s*\+\s*span:not\(:last-child\):after\s*{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 190.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpan_NotEnabled_DeselectsRules,The length of the statement  "			Assert.IsFalse(Regex.Match(cssResult' @".*\.lexentry>\s*\.headword>\s*span\.writingsystemprefix\s*\+\s*span:not\(:last-child\):after\s*{.*content:'''.*}"' RegexOptions.Singleline).Success' " is 188.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpan_NotEnabled_DeselectsRules,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.lexemeform>\s*span\.writingsystemprefix:after\s*{.*content:' '.*}"' RegexOptions.Singleline).Success' " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenMultiWsWithAbbrSpan_NotEnabled_DeselectsRules,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @".*\.lexentry>\s*\.headword>\s*span\.writingsystemprefix:after\s*{.*content:' '.*}"' RegexOptions.Singleline).Success' " is 156.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_BetweenWorksWithFormatCss,The length of the statement  "				VerifyRegex(cssResult' @".*\.lexentry>\s*\.senses>\s*\.sense\s*\+\s*\.sense:before{.*content:''';.*font-size:10pt;.*color:#00F.*}"' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,ClassAttributeForConfig_SubFieldWithOverrideGivesCorrectClass,The length of the statement  "			var form = new ConfigurableDictionaryNode { FieldDescription = "OwningEntry"' SubField = "Display"' CSSClassNameOverride = "HeadWord" }; " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureCssIsGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*picture.*{.*float:right.*}"' RegexOptions.Singleline).Success' " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureCssIsGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*picture.*img.*{.*max-width:1in;.*}"' RegexOptions.Singleline).Success' " is 130.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureCssIsGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*pictures.*picture.*{.*margin:\s*0pt\s*0pt\s*4pt\s*4pt.*;.*}"' RegexOptions.Singleline).Success' " is 155.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureCssIsGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry*\>\s*.*pictures.*picture*\>\s*.captionContent\s*.caption*\{.*margin-left:\s*24pt"' RegexOptions.Singleline).Success' " is 175.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' senseNumberBefore' RegexOptions.Singleline).Success' "expected Sense Number before rule is generated"); " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' senseNumberAfter' RegexOptions.Singleline).Success' "expected Sense Number after rule is generated"); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			var senseNumberBetween = @".entry> .pictures .picture> .captionContent .sensenumbertss> .sensenumberts\+ .sensenumberts:before\{\s*content:'' ';"; " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' senseNumberBetween' RegexOptions.Singleline).Success' "expected Sense Number between rule is generated"); " is 142.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' captionBefore' RegexOptions.Singleline).Success' "expected Caption before rule is generated"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' captionAfter' RegexOptions.Singleline).Success' "expected Caption after rule is generated"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			var captionBetween = @".entry> .pictures .picture> .captionContent .caption> .captio\+ .captio:before\{\s*content:' ';"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureSubfieldsBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' captionBetween' RegexOptions.Singleline).Success' "expected Caption between rule is generated"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' pictureBefore' RegexOptions.Singleline).Success' "expected Picture before rule is generated"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' pictureAfter' RegexOptions.Singleline).Success' "expected Picture after rule is generated"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureBeforeBetweenAfterIsAreGenerated,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' pictureBetween' RegexOptions.Singleline).Success' "expected Picture between rule is generated"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureWritesRulesForHeadwordAndGlossInCaptionArea,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*pictures.*picture> .captionContent .caption"' RegexOptions.Singleline).Success' " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureWritesRulesForHeadwordAndGlossInCaptionArea,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*pictures.*picture> .captionContent .headword"' RegexOptions.Singleline).Success' " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_PictureWritesRulesForHeadwordAndGlossInCaptionArea,The length of the statement  "			Assert.IsTrue(Regex.Match(cssWithPictureRules' @".*\.entry.*pictures.*picture> .captionContent .owner_gloss"' RegexOptions.Singleline).Success' " is 143.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GlossWithMultipleWs,The length of the statement  "			Assert.That(Regex.Replace(cssResult' @"\t|\n|\r"' "")' Contains.Substring(".lexentry> .senses .sense> .gloss> span.writingsystemprefix" + " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GlossWithMultipleWs,The length of the statement  "			Assert.That(Regex.Replace(cssResult' @"\t|\n|\r"' "")' Contains.Substring(".lexentry> .senses .sense> .gloss> span.writingsystemprefix:after{content:' ';}")); " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_NormalStyleForWsDoesNotOverrideNodeStyle,The length of the statement  "			var engFontInfo = new FontInfo { m_fontName = { ExplicitValue = "english" }' m_fontColor = { ExplicitValue = Color.Red } }; " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryNormalParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"div.entry{\s*margin-left:24pt;\s*padding-right:48pt;\s*}"' RegexOptions.Singleline).Success' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryMinorParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"div.minorentry{\s*margin-left:24pt;\s*padding-right:48pt;\s*}"' RegexOptions.Singleline).Success' " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryMinorParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"div.specialminorentry{\s*padding-right:32pt;\s*}"' RegexOptions.Singleline).Success' " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryMinorParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' @"div.optionsminorentry{\s*padding-right:16pt;\s*}"' RegexOptions.Singleline).Success' " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForSenses,The length of the statement  "			const string regExPected = @".lexentry>\s.senses\s>\s.sensecontent:before.*{.*content:'\\25A0';.*font-size:14pt;.*color:Green;.*font-family:Arial;.*font-weight:bold;.*font-style:italic;.*background-color:Brown;.*}"; " is 215.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForSensesWithDisplayFirstSenseInline,The length of the statement  "			const string regExPected = @".lexentry>\s.senses\s>\s.sensecontent\s.\s.sensecontent:not\(:first-child\):before.*{.*content:'\\25A0';.*font-size:14pt;.*color:Green;.*font-family:Arial;.*font-weight:bold;.*font-style:italic;.*background-color:Brown;.*}"; " is 253.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForSenses,The length of the statement  "			const string regexExpected = @".lexentry>\s.senses{.*counter-reset:\ssensesos;.*}.*.lexentry>\s.senses\s>\s.sensecontent:before{.*counter-increment:\ssensesos;.*content:\scounter.sensesos'\sdecimal.\s'\s';.*font-size:14pt;.*color:Green;.*}"; " is 241.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForSenses,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexExpected' RegexOptions.Singleline).Success' "Numbering style not generated for Senses."); " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForSubentries,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "a0000000-dd15-4a03-9032-b40faaa9a754" }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForSubentries,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "1f6ae209-141a-40db-983c-bee93af0ca3c" }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForSubentries,The length of the statement  "			const string regexExpected = @".lexentry>\s.subentries{.*counter-reset:[\s]subentries;.*}.*.lexentry>\s.subentries\s.subentry:before{.*counter-increment:[\s]subentries;.*content:\scounter.subentries'\supper-roman.\s'\s';.*font-size:14pt;.*color:Green;.*}"; " is 256.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForExamples,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "a0000000-dd15-4a03-9032-b40faaa9a754" }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForExamples,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "1f6ae209-141a-40db-983c-bee93af0ca3c" }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForExamples,The length of the statement  "			const string regexExpected = @".lexentry>\s.senses\s>\s.sensecontent\s>\s.sense>\s.examplesos{.*counter-reset:[\s]examplesos;.*}.*.lexentry>\s.senses\s>\s.sensecontent\s>\s.sense>\s.examplesos\s.exampleso:before{.*counter-increment:[\s]examplesos;.*content:[\s]counter.examplesos'[\s]upper-alpha.\s'\s';.*font-size:14pt;.*color:Green;.*}"; " is 339.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNumberingStyleForExamples,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexExpected' RegexOptions.Singleline).Success' "Numbering style not generated for Examples."); " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForDirectionRightToLeftForEntry,The length of the statement  "			const string regExPectedForPadding = @".lexentry.*{.*text-align:justify;.*border-color:#F00;.*border-left-width:0pt;.*border-right-width:5pt;.*border-top-width:20pt;.*border-bottom-width:10pt;.*margin-right:24pt;.*line-height:2;.*padding-bottom:30pt;.*padding-top:15pt;.*padding-left:48pt;.*}"; " is 294.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForDirectionRightToLeftForEntry,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regExPectedForPadding' RegexOptions.Singleline).Success' "Margin Right and/or Padding Left not generated."); " is 145.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNonBulletStyleForSenses,The length of the statement  "				DictionaryNodeOptions = new DictionaryNodeSenseOptions { NumberStyle = "Dictionary-SenseNum"' DisplayEachSenseInAParagraph = true }' " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForNonBulletStyleForSenses,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regExpected' RegexOptions.Singleline).Success' "Sense List style should generate a match."); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForSubSenses,The length of the statement  "			const string regExPected = @".lexentry>\s.senses\s*>\s*.sensecontent\s*>\s*.sense>\s.senses\s>\s.sensecontent:before.*{.*content:'\\25A0';.*font-size:14pt;.*color:Green;.*font-family:Arial;.*font-weight:bold;.*font-style:italic;.*background-color:Brown;.*}"; " is 258.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForSubSenses,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regExPected' RegexOptions.Singleline).Success' "Bulleted style for SubSenses not generated."); " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForRootSubentries,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "a0000000-dd15-4a03-9032-b40faaa9a754" } ); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForRootSubentries,The length of the statement  "			dictNodeOptions.Options.Add(new DictionaryNodeListOptions.DictionaryNodeOption { Id = "1f6ae209-141a-40db-983c-bee93af0ca3c" } ); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForRootSubentries,The length of the statement  "			var regexExpected1 = @"\.lexentry>\s\.subentries\s\.subentry{[^}]*\sfont-size:12pt;[^}]*\scolor:#F00;[^}]*\sdisplay:block;[^}]*}"; " is 130.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForBulletStyleForRootSubentries,The length of the statement  "			var regexExpected2 = @"\.lexentry>\s\.subentries\s\.subentry:before{[^}]*\scontent:'\\25A0';[^}]*font-size:14pt;[^}]*color:Green;[^}]*}"; " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomFieldUnderISenseOrEntry,The length of the statement  "			using (new CustomFieldForTest(Cache' "Costume"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' CellarPropertyType.Nil' Guid.Empty)) " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomFieldUnderISenseOrEntry,The length of the statement  "				Assert.IsTrue(Regex.Match(cssResult' regexExpected1' RegexOptions.Singleline).Success' "expected costume rule not generated"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomFieldStartsWithNumber,The length of the statement  "			using (new CustomFieldForTest(Cache' "Costume"' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' 0' CellarPropertyType.Nil' Guid.Empty)) " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCustomFieldStartsWithNumber,The length of the statement  "				Assert.IsTrue(Regex.Match(cssResult' regexExpected1' RegexOptions.Singleline).Success' "Class name started with number"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			//Following Testcase removed(no longer needed) as a fix for LT-17238 ("Between" contents should not come between spans that are all in a single string with embedded WSs) " is 169.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			//Assert.IsTrue(Regex.Match(cssResult' regexItem1' RegexOptions.Singleline).Success' "expected collection item between rule is generated"); " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexItem2' RegexOptions.Singleline).Success' "expected collection item before rule is generated"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexItem3' RegexOptions.Singleline).Success' "expected collection item after rule is generated"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexCollection1' RegexOptions.Singleline).Success' "expected collection between rule is generated"); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			// The following two checks test the fix for LT-17048.  The preceding four checks should be the same before and after the fix. " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexCollection2' RegexOptions.Singleline).Success' "expected collection before rule is generated"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForCollectionBeforeAndAfter,The length of the statement  "			Assert.IsTrue(Regex.Match(cssResult' regexCollection3' RegexOptions.Singleline).Success' "expected collection after rule is generated"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_NoBeforeAfterForSenseParagraphs,The length of the statement  "			Assert.IsTrue(Regex.IsMatch(cssInline' regexBefore' RegexOptions.Multiline)' "The css for inline senses should have a senses:before rule"); " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_NoBeforeAfterForSenseParagraphs,The length of the statement  "			Assert.IsTrue(Regex.IsMatch(cssInline' regexAfter' RegexOptions.Multiline)' "The css for inline senses should have a senses:after rule"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_NoBeforeAfterForSenseParagraphs,The length of the statement  "			Assert.IsFalse(Regex.IsMatch(cssPara' regexBefore' RegexOptions.Multiline)' "The css for paragraphed senses should not have a senses:before rule"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_NoBeforeAfterForSenseParagraphs,The length of the statement  "			Assert.IsFalse(Regex.IsMatch(cssPara' regexAfter' RegexOptions.Multiline)' "The css for paragraphed senses should not have a senses:after rule"); " is 145.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SpecificLanguageColorIsNotOverridenByParagraphStyle,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Note) " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SpecificLanguageColorIsNotOverridenByParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.IsMatch(result' regexPrimary' RegexOptions.Multiline)' "The css for the default color should be there."); " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_SpecificLanguageColorIsNotOverridenByParagraphStyle,The length of the statement  "			Assert.IsTrue(Regex.IsMatch(result' regexSpecific' RegexOptions.Multiline)' "The css for the specific language color should be there."); " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,EnableAllListOptions,The length of the statement  "			if (options is DictionaryNodeSenseOptions || options is DictionaryNodePictureOptions || options is DictionaryNodeGroupingOptions) " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyFontInfoInCss,The length of the statement  "			Assert.That(css' Contains.Substring("background-color:" + HtmlColor.FromRgb(bgcolor.R' bgcolor.G' bgcolor.B))' "background-color missing"); " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("text-decoration-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("border-bottom-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("border-bottom-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("text-decoration-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("text-decoration-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						Assert.That(css' Contains.Substring("border-bottom-color:" + HtmlColor.FromRgb(underlineColor.R' underlineColor.G' underlineColor.B))' " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The length of the statement  "						//superscript and subscript are disabled either by having the value of vertical-align:initial' or by having no vertical-align at all. " is 133.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,SetsViewDataFromDefaultsIfNoHomographConfigurationInConfigurationModel,The length of the statement  "			Assert.AreEqual(view.ShowHomographOnCrossRef' hc.ShowHomographNumber(HomographConfiguration.HeadwordVariant.DictionaryCrossRef)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsDescriptionTextInView,The length of the statement  "			Assert.That(view.Description' Is.StringContaining("Dictionary")' "Description should say current 'Dictionary' configuration"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsDescriptionTextInView,The length of the statement  "			Assert.That(view.Description' Is.StringContaining("Webster")' "Description should include the current configuration label"); " is 124.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsDescriptionTextInView_Reversal,The length of the statement  "			Assert.That(view.Description' Is.StringContaining("Reversal Index")' "Description should say current 'Reversal Index' configuration"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsDescriptionTextInView_Reversal,The length of the statement  "			Assert.That(view.Description' Is.StringContaining("PrincePauper")' "Description should include the current configuration label"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsWritingSystemInView,The length of the statement  "			var model = new DictionaryConfigurationModel { HomographConfiguration = new DictionaryHomographConfiguration { HomographWritingSystem = "fr"} }; " is 144.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\HeadwordNumbersControllerTests.cs,ConstructorSetsDefaultWritingSystemInView,The length of the statement  "			var model = new DictionaryConfigurationModel { HomographConfiguration = new DictionaryHomographConfiguration { HomographWritingSystem = "pt" } }; " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FixtureSetup,The length of the statement  "			// Add styles to the stylesheet to prevent intermittent unit test failures setting the selected index in the Styles Combobox " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,BuildTestPartTree,The length of the statement  "				throw new ArgumentException("You asked for more levels in the hierarchy then nodes in the tree; how did you expect me to do that?"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateTwoLevelTree,The length of the statement  "				string errorMessage = "Should not have made any third-level children that did not exist in the dictionary configuration node hierarchy"; " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The length of the statement  "				const string errorMessage2 = "Should not have made any fourth-level children that did not exist in the dictionary configuration node hierarchy."; " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The length of the statement  "					Assert.That(rootTreeNode.Nodes[0].Nodes[i].Nodes.Count' Is.EqualTo(rootNode.Children[0].Children[i].Children.Count)' errorMessage2); // ie 0 " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The length of the statement  "					Assert.That(rootTreeNode.Nodes[1].Nodes[i].Nodes.Count' Is.EqualTo(rootNode.Children[1].Children[i].Children.Count)' errorMessage2); // ie 0 " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_PrefersReferencedChildren,The length of the statement  "				var refdNode = new ConfigurableDictionaryNode { Label = "R"' Parent = rootNode' Children = new List<ConfigurableDictionaryNode>() }; " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ListDictionaryConfigurationChoices_MissingUserLocationIsCreated,The length of the statement  "			Assert.DoesNotThrow(() => DictionaryConfigurationController.ListDictionaryConfigurationChoices(testDefaultFolder' testUserFolder)' "A missing User location should not throw."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ListDictionaryConfigurationChoices_NoUserFilesUsesDefaults,The length of the statement  "			var choices = DictionaryConfigurationController.ListDictionaryConfigurationChoices(testDefaultFolder.FullName' testUserFolder.FullName); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ListDictionaryConfigurationChoices_BothDefaultsAndUserFilesAppear,The length of the statement  "			var choices = DictionaryConfigurationController.ListDictionaryConfigurationChoices(testDefaultFolder.FullName' testUserFolder.FullName); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ListDictionaryConfigurationChoices_UserFilesOfSameNameAsDefaultGetOneEntry,The length of the statement  "			var choices = DictionaryConfigurationController.ListDictionaryConfigurationChoices(testDefaultFolder.FullName' testUserFolder.FullName); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The length of the statement  "			m_model.FilePath = string.Concat(Path.Combine(testDefaultFolder.FullName' "configurationA")' DictionaryConfigurationModel.FileExtension); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The length of the statement  "			m_model.FilePath = string.Concat(Path.Combine(testUserFolder.FullName' "configurationB")' DictionaryConfigurationModel.FileExtension); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The length of the statement  "			var labels = DictionaryConfigurationController.GetDictionaryConfigurationLabels(Cache' testDefaultFolder.FullName' testUserFolder.FullName); " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The length of the statement  "				Is.StringContaining(string.Concat("configurationA"' DictionaryConfigurationModel.FileExtension))' "missing a file name"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The length of the statement  "				Is.StringContaining(string.Concat("configurationB"' DictionaryConfigurationModel.FileExtension))' "missing a file name"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,BasicTreeNodeVerification,The length of the statement  "			Assert.That(controller.View.TreeControl.Tree.Nodes[0].Tag' Is.EqualTo(rootNode)' "root TreeNode does not corresponded to expected dictionary configuration node"); " is 162.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,BasicTreeNodeVerification,The length of the statement  "			Assert.That(rootTreeNode.Nodes.Count' Is.EqualTo(childrenCount)' "root treenode does not have expected number of descendants"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,VerifyTreeNodeHierarchy,The length of the statement  "				Assert.That(childLabel' Is.EqualTo(expectedChildLabel)' "TreeNode child has associated configuration dictionary node with wrong label"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_ThrowsOnNullArgument,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationController.CanReorder(null' DictionaryConfigurationController.Direction.Up)); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantMoveUpFirstNode,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(firstChild' DictionaryConfigurationController.Direction.Up)' Is.False' "Shouldn't be able to move up the first child"); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CanMoveDownFirstNode,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(firstChild' DictionaryConfigurationController.Direction.Down)' Is.True' "Should be able to move down the first child"); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CanMoveUpSecondNode,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(secondChild' DictionaryConfigurationController.Direction.Up)' Is.True' "Should be able to move up the second child"); " is 174.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantMoveDownLastNode,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(lastChild' DictionaryConfigurationController.Direction.Down)' Is.False' "Shouldn't be able to move down the last child"); " is 178.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantReorderRootNodes,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(rootNode' DictionaryConfigurationController.Direction.Up)' Is.False' "Should not be able to reorder a root node"); " is 171.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantReorderRootNodes,The length of the statement  "			Assert.That(DictionaryConfigurationController.CanReorder(rootNode' DictionaryConfigurationController.Direction.Down)' Is.False' "Should not be able to reorder a root node"); " is 173.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ThrowsIfCantReorder,The length of the statement  "			Assert.Throws<ArgumentOutOfRangeException>(() => controller.Reorder(firstChild' DictionaryConfigurationController.Direction.Up)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ThrowsIfCantReorder,The length of the statement  "			Assert.Throws<ArgumentOutOfRangeException>(() => controller.Reorder(secondChild' DictionaryConfigurationController.Direction.Down)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ThrowsIfCantReorder,The length of the statement  "			Assert.Throws<ArgumentOutOfRangeException>(() => controller.Reorder(grandChild' DictionaryConfigurationController.Direction.Up)' "Can't move a node with no siblings"); " is 167.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ReordersSiblings,The length of the statement  "				Assert.That(rootNode.Children[movingChildOriginalPos]' Is.Not.EqualTo(movingChild)' "movingChild should not still be in original position"); " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ReordersSiblings,The length of the statement  "				Assert.That(rootNode.Children[movingChildOriginalPos]' Is.EqualTo(otherChild)' "unexpected child in original movingChild position"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveIntoGroupingNodes,The length of the statement  "				Assert.That(groupNode.Children[expectedIndexUnderGroup]' Is.EqualTo(movingChild)' "movingChild should have been moved"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveOutOfGroupingNodes,The length of the statement  "				Assert.That(rootNode.Children[expectedIndexUnderParent]' Is.EqualTo(movingChild)' "movingChild should have been moved"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetProjectConfigLocationForPath_AlreadyProjectLocNoChange,The length of the statement  "					LcmFileHelper.GetConfigSettingsDir(Cache.ProjectId.ProjectFolder)' "Test")' "test")' DictionaryConfigurationModel.FileExtension); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetProjectConfigLocationForPath_DefaultLocResultsInProjectPath,The length of the statement  "				Assert.IsTrue(result.EndsWith(string.Concat(Path.Combine("Test"' "test")' DictionaryConfigurationModel.FileExtension))); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetCustomFieldsForType_PossibilityListFieldGetsChildren,The length of the statement  "				CollectionAssert.IsNotEmpty(customFieldNodes' "The custom field configuration node was not inserted for a PossibilityListReference"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetCustomFieldsForType_ExampleCustomFieldIsRepresented,The length of the statement  "			using (new CustomFieldForTest(Cache' "CustomCollection"' Cache.MetaDataCacheAccessor.GetClassId("LexExampleSentence")' 0' " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsAreAdded,The length of the statement  "				Assert.AreEqual(wsOptions.WsType' DictionaryNodeWritingSystemOptions.WritingSystemType.Both' "WritingSystemOptions is the wrong type"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,UpdateWsOptions_OrderAndCheckMaintained,The length of the statement  "			DictionaryConfigurationController.UpdateWsOptions((DictionaryNodeWritingSystemOptions)customNode.DictionaryNodeOptions' Cache); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,UpdateWsOptions_ChecksAtLeastOne,The length of the statement  "			DictionaryConfigurationController.UpdateWsOptions((DictionaryNodeWritingSystemOptions)customNode.DictionaryNodeOptions' Cache); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsOnSharedNodesAreAddedToSharedItemsExclusively,The length of the statement  "			// "Shared Shared" node tests that Custom Fields are merged into SharedItems whose (sharing) parents are themselves under SharedItems " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsOnSharedNodesAreAddedToSharedItemsExclusively,The length of the statement  "				Label = "Subsubs"' FieldDescription = "Subentries"' ReferenceItem = "SharedsharedSubsubs"' Children = new List<ConfigurableDictionaryNode>() " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsOnSharedNodesAreAddedToSharedItemsExclusively,The length of the statement  "				Label = "Subs"' FieldDescription = "Subentries"' ReferenceItem = "SharedSubs"' Children = new List<ConfigurableDictionaryNode>() " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsOnSharedNodesAreAddedToSharedItemsExclusively,The length of the statement  "				Label = "Main Entry"' FieldDescription = "LexEntry"' Children = new List<ConfigurableDictionaryNode> { masterParentSubsNode } " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_WorksUnderGroupingNodes,The length of the statement  "					"The only node under Main Entry should be Grouping Node (the Custom Field already under Grouping Node should not be dup'd under ME"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_DeletedFieldsAreRemoved,The length of the statement  "			Assert.AreEqual(0' model.Parts[0].Children.Count' "The custom field in the model should have been removed since it isn't in the project(cache)"); " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_DuplicateCustomFieldsAreNotRemoved,The length of the statement  "				var duplicateCustomNode = new ConfigurableDictionaryNode { Label = "CustomString"' LabelSuffix = "1"' FieldDescription = "CustomString"' IsCustomField = true' IsDuplicate = true }; " is 180.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_DeletedFieldsOnCollectionsAreRemoved,The length of the statement  "			Assert.AreEqual(0' model.Parts[0].Children[0].Children.Count' "The custom field in the model should have been removed since it isn't in the project(cache)"); " is 157.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_ExampleCustomFieldIsRepresented,The length of the statement  "			using (new CustomFieldForTest(Cache' "CustomCollection"' Cache.MetaDataCacheAccessor.GetClassId("LexExampleSentence")' 0' " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoModel_MergeWithDefaultRootModelDoesNotThrow,The length of the statement  "			using (new CustomFieldForTest(Cache' "CustomCollection"' Cache.MetaDataCacheAccessor.GetClassId("LexExampleSentence")' 0' " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,EnableNodeAndDescendants_ChecksToGrandChildren,The length of the statement  "			var child = new ConfigurableDictionaryNode { IsEnabled = false' Children = new List<ConfigurableDictionaryNode> { grandchild } }; " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,EnableNodeAndDescendants_ChecksToGrandChildren,The length of the statement  "			var node = new ConfigurableDictionaryNode { IsEnabled = false' Children = new List<ConfigurableDictionaryNode> { child } }; " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,DisableNodeAndDescendants_UnChecksGrandChildren,The length of the statement  "			var child = new ConfigurableDictionaryNode { IsEnabled = true' Children = new List<ConfigurableDictionaryNode> { grandchild } }; " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,DisableNodeAndDescendants_UnChecksGrandChildren,The length of the statement  "			var node = new ConfigurableDictionaryNode { IsEnabled = true' Children = new List<ConfigurableDictionaryNode> { child } }; " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SaveModelHandler_SavesUpdatedFilePath,The length of the statement  "				FileUtils.EnsureDirectoryExists(DictionaryConfigurationListener.GetProjectConfigurationDirectory(mockWindow.PropertyTable' "Dictionary")); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SaveModelHandler_SavesUpdatedFilePath,The length of the statement  "						FilePath = Path.Combine(DictionaryConfigurationListener.GetDefaultConfigurationDirectory("Dictionary")' "SomeConfigurationFileName") " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SaveModelHandler_SavesUpdatedFilePath,The length of the statement  "				Assert.AreEqual(controller._model.FilePath' savedPath' "Should have saved the path to the selected Configuration Model"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_SelectsCorrectNode,The length of the statement  "				Assert.AreEqual(defglossNode.Label' treeNode.Text' "The TreeNode for entry//definitionorgloss should have the right Text"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_SelectsCorrectNode,The length of the statement  "				dcc.SetStartingNode(new List<string> {"entry"'"senses"'"sensecontent"'"sense"'"examples"'"example"'"translations"'"translation"'"translation"}); " is 144.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_SelectsCorrectNode,The length of the statement  "				Assert.AreEqual(translationNode.Label' treeNode.Text' "The TreeNode for entry//translation should have the right Text"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "				Label = "SharedSubsenses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { subsubsensesNode } " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "				FieldDescription = "SensesOS"' CSSClassNameOverride = "senses"' Children = new List<ConfigurableDictionaryNode> { subSensesNode } " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "				FieldDescription = "LexEntry"' CSSClassNameOverride = "entry"' Children = new List<ConfigurableDictionaryNode> { sensesNode } " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(DictionaryConfigurationModelTests.CreateSimpleSharingModel(entryNode' subSensesSharedItem)); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "				"Sense Numbers are configured on the node itself' not its ReferencedOrDirectChildren.{0}Expected: {1}{0}But got:  {2}"' Environment.NewLine' " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,FindStartingConfigNode_FindsSharedNodes,The length of the statement  "				DictionaryConfigurationMigrator.BuildPathStringFromNode(subsubsensesNode)' DictionaryConfigurationMigrator.BuildPathStringFromNode(node)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,EnsureValidStylesInModelRemovesMissingStyles,The length of the statement  "			Assert.IsNull(((DictionaryNodeSenseOptions)senseNode.DictionaryNodeOptions).NumberStyle' "Missing style should be removed."); " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The length of the statement  "				Assert.AreEqual(newType.Guid.ToString()' opts1[7].Id' "New type appears near end of options list in major entry child node"); " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The length of the statement  "				Assert.AreEqual("b0000000-c40e-433e-80b5-31da08771344"' opts1[8].Id' "'No Variant Type' type appears at end of options list in major entry child node"); " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The length of the statement  "				Assert.AreEqual(newType.Guid.ToString()' opts2[7].Id' "New type appears near end of options list in minor entry top node"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The length of the statement  "				Assert.AreEqual("b0000000-c40e-433e-80b5-31da08771344"' opts2[8].Id' "'No Variant Type' type appears near end of options list in minor entry top node"); " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "			var entryOrSenseAsymmetricPairType = MakeRefType("Part"' null' (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseAsymmetricPair); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "			var entryOrSenseUnidirectionalType = MakeRefType("Part"' null' (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseUnidirectional); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(18' opts1.Count' "The new tree reftype should have added 2 options' the rest should have been removed."); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseTreeType.Guid.ToString() + ":f"' opts1[0].Id' "The sense tree type should have added the first option with :f appended to the guid."); " is 155.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseTreeType.Guid.ToString() + ":r"' opts1[1].Id' "The sense tree type should have added the second option with :r appended to the guid."); " is 156.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseUnidirectionalType.Guid.ToString() + ":f"' opts1[2].Id' "The sense unidirectional type should have added the first option with :f appended to the guid."); " is 175.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseUnidirectionalType.Guid.ToString() + ":r"' opts1[3].Id' "The sense unidirectional type should have added the second option with :r appended to the guid."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryUnidirectionalType.Guid.ToString() + ":f"' opts1[4].Id' "The entry unidirectional type should have added the first option with :f appended to the guid."); " is 175.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryUnidirectionalType.Guid.ToString() + ":r"' opts1[5].Id' "The entry unidirectional type should have added the second option with :r appended to the guid."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseAsymmetricPairType.Guid.ToString() + ":f"' opts1[6].Id' "The sense asymmetric pair type should have added the first option with :f appended to the guid."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(senseAsymmetricPairType.Guid.ToString() + ":r"' opts1[7].Id' "The sense asymmetric pair type should have added the second option with :r appended to the guid."); " is 177.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":f"' opts1[8].Id' "The entry asymmetric pair type should have added the first option with :f appended to the guid."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":r"' opts1[9].Id' "The entry asymmetric pair type should have added the second option with :r appended to the guid."); " is 177.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseAsymmetricPairType.Guid.ToString() + ":f"' opts1[10].Id' "The entry or sense asymmetric pair type should have added the first option with :f appended to the guid."); " is 193.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseAsymmetricPairType.Guid.ToString() + ":r"' opts1[11].Id' "The entry or sense asymmetric pair type should have added the second option with :r appended to the guid."); " is 194.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseTreeType.Guid.ToString() + ":f"' opts1[12].Id' "The entry or sense tree type should have added the first option with :f appended to the guid."); " is 172.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseTreeType.Guid.ToString() + ":r"' opts1[13].Id' "The entry or sense tree type should have added the second option with :r appended to the guid."); " is 173.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseUnidirectionalType.Guid.ToString() + ":f"' opts1[14].Id' "The entry or sense unidirectional type should have added the first option with :f appended to the guid."); " is 192.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryOrSenseUnidirectionalType.Guid.ToString() + ":r"' opts1[15].Id' "The entry or sense unidirectional type should have added the second option with :r appended to the guid."); " is 193.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryTreeType.Guid.ToString() + ":f"' opts1[16].Id' "The entry tree type should have added the first option with :f appended to the guid."); " is 156.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The length of the statement  "				Assert.AreEqual(entryTreeType.Guid.ToString() + ":r"' opts1[17].Id' "The entry tree type should have added the second option with :r appended to the guid."); " is 157.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckCrossReferenceType,The length of the statement  "				Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":f"' opts1[0].Id' "The entry asymmetric pair type should have added the first option with :f appended to the guid."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckCrossReferenceType,The length of the statement  "				Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":r"' opts1[1].Id' "The entry asymmetric pair type should have added the second option with :r appended to the guid."); " is 177.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeletedNoteTypes,The length of the statement  "			Assert.That(opts.Any(opt => opt.Id == XmlViewsUtils.GetGuidForUnspecifiedExtendedNoteType().ToString())' "Unspecified Type not added"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference,The length of the statement  "			Assert.AreEqual("shared" + CssGenerator.GetClassAttributeForConfig(configNode)' CssGenerator.GetClassAttributeForConfig(sharedItem)); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference_PreventsDuplicateSharedItemLabel,The length of the statement  "			Assert.Throws<ArgumentException>(() => DictionaryConfigurationController.ShareNodeAsReference(model.SharedItems' configNode)); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference_PreventsDuplicateSharedItemCssClass,The length of the statement  "			var preextantSharedNode = new ConfigurableDictionaryNode { CSSClassNameOverride = string.Format("shared{0}"' m_field).ToLower() }; " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference_PreventsDuplicateSharedItemCssClass,The length of the statement  "			Assert.Throws<ArgumentException>(() => DictionaryConfigurationController.ShareNodeAsReference(model.SharedItems' configNode)); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference_DoesntShareNodeOfSameTypeAsPreextantSharedNode,The length of the statement  "			var preextantSharedNode = new ConfigurableDictionaryNode { FieldDescription = m_field' Parent = new ConfigurableDictionaryNode() }; " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ShareNodeAsReference_PreventSharingSharedNode,The length of the statement  "			Assert.Throws<InvalidOperationException>(() => DictionaryConfigurationController.ShareNodeAsReference(model.SharedItems' configNode)); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_WorksWithReferencedSubsenseNode,The length of the statement  "				Assert.AreSame(subGlossNode' treeNode.Tag' "Passing a valid class list should even find the node in a referenced node"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,SetStartingNode_WorksWithReferencedSubentryNode,The length of the statement  "				Assert.AreSame(subGlossNode' treeNode.Tag' "Passing a valid class list should even find the node in a referenced node"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The length of the statement  "				Assert.AreEqual(9' inflOpts.Count' "Should have merged all variant types into options list in Main Entry > Inflectional Variants"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The length of the statement  "				Assert.AreEqual(normTypeGuid' inflOpts[7].Id' "New type should appear near end of options list in Inflectional Variants node"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The length of the statement  "				Assert.IsFalse(inflOpts[7].IsEnabled' "New type should be false under Inflectional Variants beacuse it is a normal variant type"); " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The length of the statement  "				Assert.That(minorOpts.All(opt => opt.IsEnabled)' "Should have enabled all (new) variant types in options list in minor entry top node"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "			// Start out with a clean project configuration directory' and with a non-random name so it's easier to examine during testing. " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined' " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined' " is 139.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element " is 146.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element " is 146.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined' " is 149.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The length of the statement  "				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined' " is 151.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_IncludesUnknownPublications,The length of the statement  "			Assert.That(_controller._newPublications.Contains("Main Dictionary")' Is.False' "Incorrectly recorded existing publication as new"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true); " is 192.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "			Assert.AreEqual(5' Cache.LangProject.StylesOC.Count' "Setup problem. Unexpected number of styles before doing any import activity."); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "			Assert.AreEqual(5' Cache.LangProject.StylesOC.Count' "Setup problem. Should not have changed number of styles from just preparing to import."); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "			Assert.AreEqual(9' Cache.LangProject.StylesOC.Count' "This unit test starts with 6 styles. 3 are 'unsupported' and kept. 3 are removed. We import 6 styles: 3 are completely new; 3 are replacements for the 3 that were removed. Resulting in 9 styles after import."); " is 264.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "			var dictionaryHeadwordImportedStyle = Cache.LangProject.StylesOC.FirstOrDefault(style => style.Name == "Dictionary-Headword"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The length of the statement  "			Assert.That(homographTestStyle.BasedOnRA' Is.EqualTo(dictionaryHeadwordImportedStyle)' "Failed to rewire basedon to new Dictionary-Headword style. LT-18267"); " is 158.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UseUniqueFileNameToAvoidCollision,The length of the statement  "			// What the filename is will be a combination of label collision handling in PrepareImport() and existing file collision handling performed by DictionaryConfigurationManagerController. " is 184.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UseUniqueFileNameToAvoidCollision,The length of the statement  "				"Configuration not imported or to the right place. Perhaps the existing but not-registered importexportConfiguration-Imported2.fwdictconfig file was not accounted for."); " is 170.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,UserRequestsNotOverwrite_UsesRightLabelAndFilename,The length of the statement  "				Is.EqualTo(Path.Combine(_projectConfigPath' _controller.NewConfigToImport.Label + DictionaryConfigurationModel.FileExtension))' " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_RevertsImportHappenedFlag,The length of the statement  "			Assert.That(_controller.ImportHappened' Is.False' "The import dialog and controller isn't really meant to be used this way' but don't let it be so that ImportHappened can be true yet NewConfigToImport is only just freshly prepared and not imported yet."); " is 255.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_ValidateImportConfigs,The length of the statement  "			Assert.IsNotNull(_controller.NewConfigToImport' "Dictionary configuration should have been prepared for import' since we requested to import the right kind of configuration (Dictionary into Dictionary area)."); " is 210.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_ValidateImportConfigs,The length of the statement  "			Assert.IsNull(_reversalController.NewConfigToImport' "No configuration to import should have been prepared since the wrong type of configuration was requested to be imported (Dictionary into Reversal area)."); " is 209.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_ValidateImportConfigs,The length of the statement  "			Assert.IsNull(_controller.NewConfigToImport' "No configuration to import should have been prepared since the wrong type of configuration was requested to be imported (Reversal into Dictionary area)."); " is 201.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_ValidateImportConfigs,The length of the statement  "			Assert.IsNotNull(_reversalController.NewConfigToImport' "Reversal configuration should have been prepared for import' since we requested to import the right kind of configuration (Reversal into Reversal area)."); " is 212.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "			<DictionaryConfiguration name=""Root"" allPublications=""true"" isRootBased=""true"" version=""1"" lastModified=""2014-02-13"">"; " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "				"<ConfigurationItem name=\"Main Entry\" style=\"Dictionary-Normal\" styleType=\"paragraph\" isEnabled=\"true\" field=\"LexEntry\" cssClassNameOverride=\"entry\"></ConfigurationItem>" " is 182.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "			Assert.That(_controller.NewConfigToImport.Publications.Contains("pub 1")' "Should not have lost publication from configuration that was imported"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "			Assert.That(_controller.NewConfigToImport.Publications.Contains("pub 2")' "Should not have lost publication from configuration that was imported"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "			Assert.That(Cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS.Select(publicationTypePossibility => publicationTypePossibility.Name.get_String(Cache.DefaultAnalWs).Text).Contains("pub 1")' "Publication not added to Flex"); " is 232.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_AddsNewPublications,The length of the statement  "			Assert.That(Cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS.Select(publicationTypePossibility => publicationTypePossibility.Name.get_String(Cache.DefaultAnalWs).Text).Contains("pub 2")' "Publication not added to Flex"); " is 232.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "			using (new CustomFieldForTest(Cache' customFieldSameLabel' customFieldSameLabel' LexSenseTags.kClassId' StTextTags.kClassId' -1' " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "				using (new CustomFieldForTest(Cache' customFieldLabel' customFieldLabel' LexEntryTags.kClassId' StTextTags.kClassId' -1' " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "				using (new CustomFieldForTest(Cache' customFieldWrongType' customFieldWrongType' LexEntryTags.kClassId' CmPossibilityTags.kClassId' -1' " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "			<DictionaryConfiguration name=""Root"" allPublications=""true"" isRootBased=""true"" version=""1"" lastModified=""2014-02-13"">"; " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "					const string XmlTagsHeaword = @"<ConfigurationItem name=""Main Entry"" isEnabled=""true"" field=""LexEntry"">\r\n\t\t\t\t\t<ConfigurationItem name=""Testword"" nameSuffix=""2b"" before=""["" between=""' "" after=""] "" style=""Dictionary-Headword"" isEnabled=""true"" field=""HeadWord"">""\r\n\r\n\r\n\t\t\t\t\t</ConfigurationItem>\r\n\t\t\t\t</ConfigurationItem>\r\n\t\t\t\t<SharedItems/>"; " is 391.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "					const string XmlTagsCustomField = @" <ConfigurationItem name = ""CustomField1"" isEnabled=""true"" isCustomField=""true"" before="" "" field=""OwningEntry"" subField=""CustomField1"" />"; " is 187.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "				VerifyCustomFieldPresent(customFieldSameLabel' LexSenseTags.kClassId' StTextTags.kClassId' CellarPropertyType.OwningAtomic); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "				using (new CustomFieldForTest(Cache' customFieldWrongType' customFieldWrongType' LexEntryTags.kClassId' StTextTags.kClassId' -1' " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "					CollectionAssert.IsNotEmpty(_controller._customFieldsToImport' "No custom fields found in the lift file by PrepareImport"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_DoImport_CreatesCustomFieldsFromExportResult,The length of the statement  "					CollectionAssert.AreEquivalent(_controller._customFieldsToImport' new[] { customFieldLabel' customFieldSameLabel' customFieldWrongType }); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,VerifyCustomFieldPresent,The length of the statement  "			Assert.AreEqual(mdc.GetDstClsId(flid)' expectedType' "The {0} custom field was not the correct type."' customFieldLabel); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_CustomBulletInfoIsImported,The length of the statement  "				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' true); " is 164.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_CustomBulletInfoIsImported,The length of the statement  "			Assert.AreEqual(1' Cache.LangProject.StylesOC.Count' "Setup problem. Unexpected number of styles before doing any import activity."); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_CustomBulletInfoIsImported,The length of the statement  "			Assert.AreEqual(1' Cache.LangProject.StylesOC.Count' "Setup problem. Should not have changed number of styles from just preparing to import."); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetProjectConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "				Assert.That(DictionaryConfigurationListener.GetProjectConfigurationDirectory(m_propertyTable)' Is.EqualTo(projectConfigDir)' "did not return expected directory"); " is 162.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetProjectConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "				Assert.That(DictionaryConfigurationListener.GetProjectConfigurationDirectory(m_propertyTable)' Is.EqualTo(projectConfigDir)' "did not return expected directory"); " is 162.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetProjectConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "				Assert.IsNull(DictionaryConfigurationListener.GetProjectConfigurationDirectory(m_propertyTable)' "Other areas should cause null return"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.AreEqual("Dictionary"' DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "did not return expected type"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.AreEqual("Dictionary"' DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "did not return expected type"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.AreEqual("Dictionary"' DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "did not return expected type"); " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.AreEqual("Reversal Index"' DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "did not return expected type"); " is 151.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.AreEqual("Reversal Index"' DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "did not return expected type"); " is 151.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDictionaryConfigurationBaseType_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.IsNull(DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(m_propertyTable)' "Other areas should return null"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDefaultConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.That(DictionaryConfigurationListener.GetDefaultConfigurationDirectory(m_propertyTable)' Is.EqualTo(configDir)' "did not return expected directory"); " is 155.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDefaultConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.That(DictionaryConfigurationListener.GetDefaultConfigurationDirectory(m_propertyTable)' Is.EqualTo(configDir)' "did not return expected directory"); " is 155.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationListenerTests.cs,GetDefaultConfigurationDirectory_ReportsCorrectlyForDictionaryAndReversal,The length of the statement  "			Assert.IsNull(DictionaryConfigurationListener.GetDefaultConfigurationDirectory(m_propertyTable)' "Other areas should cause null return"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false); " is 179.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false); " is 179.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false); " is 183.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false); " is 183.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false); " is 186.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The length of the statement  "				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false); " is 215.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,Setup,The length of the statement  "			_controller = new DictionaryConfigurationManagerController(Cache' null' _configurations' publications' _projectConfigPath' _defaultConfigPath); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.AssociatePublication(null' null)' "No configuration to associate with"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.AssociatePublication("publicationA"' null)' "No configuration to associate with"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.AssociatePublication(null' _configurations[0])' "Don't allow trying to add null"); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentOutOfRangeException>(() => _controller.AssociatePublication("unknown publication"' _configurations[0])' "Don't associate with an invalid/unknown publication"); " is 181.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatesPublication,The length of the statement  "			Assert.That(_configurations[0].Publications' Is.Not.Contains("publicationB")' "should not have associated with publicationB"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatesPublicationOnlyOnce,The length of the statement  "			Assert.AreEqual(1' _configurations[0].Publications.Count(pub => pub.Equals("publicationA"))' "associated too many times"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DisassociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.DisassociatePublication(null' null)' "No configuration to disassociate. No publication to disassociate from."); " is 166.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DisassociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.DisassociatePublication("publicationA"' null)' "No configuration"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DisassociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => _controller.DisassociatePublication(null' _configurations[0])' "No publication"); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DisassociatePublication_BadArgsTests,The length of the statement  "			Assert.Throws<ArgumentOutOfRangeException>(() => _controller.DisassociatePublication("unknown publication"' _configurations[0])' "Don't try to operate using an invalid/unknown publication"); " is 190.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DisassociatesPublication,The length of the statement  "			Assert.That(_configurations[1].Publications' Contains.Item("publicationB")' "Should not have disassociated unrelated publication"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,Rename_RevertsOnCancel,The length of the statement  "			Assert.True(_controller.RenameConfiguration(listViewItem' new LabelEditEventArgs(0' null))' "'Cancel' should complete successfully"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,Rename_PreventsDuplicate,The length of the statement  "			Assert.False(_controller.RenameConfiguration(new ListViewItem { Tag = configB }' dupLabelArgs)' "Duplicate should return 'incomplete'"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,Rename_RenamesConfigAndFile,The length of the statement  "			Assert.True(_controller.RenameConfiguration(new ListViewItem { Tag = selectedConfig }' new LabelEditEventArgs(0' newLabel))' " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,Rename_RenamesConfigAndFile,The length of the statement  "			Assert.AreEqual(DictionaryConfigurationManagerController.FormatFilePath(_controller._projectConfigDir' newLabel)' selectedConfig.FilePath' "The FilePath should have been generated"); " is 182.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,GenerateFilePath,The length of the statement  "			DictionaryConfigurationManagerController.GenerateFilePath(_controller._projectConfigDir' _controller._configurations' configToRename); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,GenerateFilePath,The length of the statement  "			Assert.AreEqual(DictionaryConfigurationManagerController.FormatFilePath(_controller._projectConfigDir' "configuration3_3")' configToRename.FilePath' "The file path should be based on the label"); " is 195.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,GenerateFilePath_AccountsForFilesOnDisk,The length of the statement  "			FileUtils.WriteStringtoFile(Path.Combine(_projectConfigPath' "configuration3_3.fwdictconfig")' "file contents of config file that is in the way on disk but not actually registered in the list of configurations"' Encoding.UTF8); " is 227.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,GenerateFilePath_AccountsForFilesOnDisk,The length of the statement  "			DictionaryConfigurationManagerController.GenerateFilePath(_controller._projectConfigDir' _controller._configurations' configToRename); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,GenerateFilePath_AccountsForFilesOnDisk,The length of the statement  "			Assert.That(newFilePath' Is.EqualTo(Path.Combine(_projectConfigPath' "configuration3_4.fwdictconfig"))' "Did not account for collision with unregistered configuration on disk"); " is 177.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FormatFilePath,The length of the statement  "			var formattedFilePath = DictionaryConfigurationManagerController.FormatFilePath(_controller._projectConfigDir' "\nFile\\Name/With\"Chars<?>"); // SUT " is 149.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationRemovesFromList,The length of the statement  "			Assert.That(_configurations' Is.Not.Contains(configurationToDelete)' "Should have removed configuration from list of configurations"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationRemovesFromDisk,The length of the statement  "			DictionaryConfigurationManagerController.GenerateFilePath(_controller._projectConfigDir' _controller._configurations' configurationToDelete); " is 141.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationDoesNotCrashIfNullFilePath,The length of the statement  "			Assert.That(configurationToDelete.FilePath' Is.Null' "Unit test not testing what it used to. Perhaps the code is smarter now."); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationDoesNotCrashIfNullFilePath,The length of the statement  "			Assert.DoesNotThrow(()=> _controller.DeleteConfiguration(configurationToDelete)' "Don't crash if the FilePath isn't set for some reason."); " is 139.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			var shippedRootDefaultConfigurationPath = Path.Combine(_defaultConfigPath' "Root" + DictionaryConfigurationModel.FileExtension); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			FileUtils.WriteStringtoFile(shippedRootDefaultConfigurationPath' "bogus data that is unread' the file is read from the real defaults"' Encoding.UTF8); " is 150.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			Assert.That(FileUtils.FileExists(pathToConfiguration)' "The Root configuration file should have been reset to defaults' not deleted."); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			Assert.That(configurationToDelete.Label' Is.EqualTo("Root-based (complex forms as subentries)")' "The reset should match the shipped defaults."); " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			Assert.Contains(configurationToDelete' _configurations' "The configuration should still be present in the list after being reset."); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsForShippedDefaultRatherThanDelete,The length of the statement  "			// Not asserting that the configurationToDelete.FilePath file contents are reset because that will happen later when it is saved. " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			_controller = new DictionaryConfigurationManagerController(Cache' null' _configurations' new List<string>()' _projectConfigPath' defaultReversalPath); " is 150.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			var allRevFileName = DictionaryConfigurationModel.AllReversalIndexesFilenameBase + DictionaryConfigurationModel.FileExtension; " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			FileUtils.WriteStringtoFile(shippedRootDefaultConfigurationPath' "bogus data that is unread' the file is read from the real defaults"' Encoding.UTF8); " is 150.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			Assert.That(FileUtils.FileExists(pathToConfiguration)' "The English reversal file should have been reset to defaults' not deleted."); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			Assert.That(configurationToDelete.WritingSystem' Is.EqualTo("en")' "The writingsystem should still be en after a reset."); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			Assert.That(configurationToDelete.IsReversal' Is.True' "The reset configuration files should still be a reversal file."); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			Assert.Contains(configurationToDelete' _configurations' "The configuration should still be present in the list after being reset."); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,DeleteConfigurationResetsReversalToShippedDefaultIfNoProjectAllReversal,The length of the statement  "			// Not asserting that the configurationToDelete.FilePath file contents are reset because that will happen later when it is saved. " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ReversalNotMatchingLanguageIsACustomizedOriginal,The length of the statement  "			Assert.That(claimsToBeDerived' Is.False' "This is a copy and not a customized original and should have reported false."); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ThrowsOnBadInput,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationManagerController.ExportConfiguration(null' "a"' Cache)); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ThrowsOnBadInput,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationManagerController.ExportConfiguration(_configurations[0]' null' Cache)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ThrowsOnBadInput,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationManagerController.ExportConfiguration(_configurations[0]' "a"' null)); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ThrowsOnBadInput,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationManagerController.ExportConfiguration(null' null' null)); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ThrowsOnBadInput,The length of the statement  "			Assert.Throws<ArgumentException>(() => DictionaryConfigurationManagerController.ExportConfiguration(_configurations[0]' ""' Cache)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ExportsZip,The length of the statement  "				DictionaryConfigurationManagerController.GenerateFilePath(_controller._projectConfigDir' _controller._configurations' configurationToExport); " is 141.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ExportsZip,The length of the statement  "					"Unit test not set up right. File will exist for convenience of writing the test but should not have any content yet."); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareCustomFieldsExport_Works,The length of the statement  "			using (new CustomFieldForTest(Cache' customFieldLabel' customFieldLabel' LexEntryTags.kClassId' StTextTags.kClassId' -1' " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag[@id='" + _characterTestStyle.Name + "']"' 1); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag/usage[@wsId='" + enWsId + "']"' 1); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			var attributeTests = "@family='times' and @color='red' and @underline='double' and @underlineColor='blue' and @bold='true' and @italic='true'"; " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag/font[" + attributeTests + "]"' 1); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag[@id='" + _paraTestStyle.Name + "']"' 1); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			attributeTests = "@lineSpacing='3 pt' and @lineSpacingType='exact' and @alignment='center' and @indentRight='4 pt' and @hanging='5 pt' and @indentLeft='6 pt' and @spaceBefore='7 pt' and @spaceAfter='8 pt'"; " is 206.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag/paragraph[" + attributeTests + "]"' 1); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag/paragraph[" + attributeTests + "]"' 1); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag[@id='" + _paraChildTestStyle.Name + "']"' 1); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			attributeTests = string.Format("@basedOn='{0}' and @alignment='full' and not(@lineSpacing='3 pt') and not(@indentRight='4 pt')"' " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag/paragraph[" + attributeTests + "]"' 1); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "			AssertThatXmlIn.File(styleSheetFile).HasSpecifiedNumberOfMatchesForXpath("/Styles/markup/tag[" + attributeTests + "]"' 1); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareStylesheetExport_Works,The length of the statement  "				AssertThatXmlIn.File(styleSheetFile).HasNoMatchForXpath("/Styles/markup/tag[@id='" + unsupported.Replace(' '' '_') + "']"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_NoPublicationsLoadsNoPublications,The length of the statement  "				Assert.IsEmpty(model.Publications' "Should have resulted in an empty set of publications for input XML: " + string.Join(""'noPublicationsXml)); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_AllPublicationsFlagCausesAllPublicationsReported,The length of the statement  "			Assert.AreEqual("Main Dictionary"' model.Publications[0]' "Should have reported this dictionary since AllPublications is enabled."); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadOnlyRealPublications,The length of the statement  "					@"<Publications><Publication>Main Dictionary</Publication><Publication>Not A Real Publication</Publication></Publications>"' " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,PublicationsInXml_ReportsAll,The length of the statement  "					@"<Publications><Publication>Main Dictionary</Publication><Publication>New and unknown publication 1</Publication><Publication>New and unknown publication 2</Publication></Publications>"' " is 187.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,PublicationsInXml_ReportsAll,The length of the statement  "				Assert.That(result[1]' Is.EqualTo("New and unknown publication 1")' "Did not process and report publications as expected"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,PublicationsInXml_ReportsAll,The length of the statement  "				Assert.That(result[2]' Is.EqualTo("New and unknown publication 2")' "Did not process and report publications as expected"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,ShippedFilesHaveNoRedundantChildrenOrOrphans,The length of the statement  "			foreach(var shippedFile in Directory.EnumerateFiles(shippedConfigfolder' "*"+DictionaryConfigurationModel.FileExtension)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_HomographConfigurationValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/HomographConfiguration"' 1); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,ShippedFilesValidateAgainstSchema,The length of the statement  "			foreach(var shippedFile in Directory.EnumerateFiles(shippedConfigfolder' "*"+DictionaryConfigurationModel.FileExtension)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,ShippedFilesHaveCurrentVersion,The length of the statement  "			foreach(var shippedFile in Directory.EnumerateFiles(shippedConfigfolder' "*"+DictionaryConfigurationModel.FileExtension)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,ShippedFilesHaveCurrentVersion,The length of the statement  "				Assert.AreEqual(DictionaryConfigurationMigrator.VersionCurrent' new DictionaryConfigurationModel(shippedFile' Cache).Version); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigNodeWithChildrenValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ConfigurationItem"' 1); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithReferenceItemValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ReferenceItem"' 1); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithReferenceItemValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ConfigurationItem"' 0); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithReferenceItemValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/SharedItems/ConfigurationItem"' 1); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithWritingSystemOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/WritingSystemOptions"' 1); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithWritingSystemOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/WritingSystemOptions/Option"' 1); " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithPictureOptionsValidatesAgainstSchema,The length of the statement  "			 String.Format("[@stackPictures='{0}' and @pictureLocation='{1}' and @maximumHeight='{2}' and @minimumHeight='{3}' and @maximumWidth='{4}' and @minimumWidth='{5}']"' " is 164.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithSenseOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/SenseOptions"' 1); " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithListOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ListTypeOptions"' 1); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithListOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ListTypeOptions/Option"' 1); " is 140.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithListAndParaOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ComplexFormOptions"' 1); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithListAndParaOptionsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem/ComplexFormOptions/Option"' 1); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithOnePublicationValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/Publications/Publication"' 1); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithTwoPublicationsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/Publications/Publication"' 2); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithAllPublicationsValidatesAgainstSchema,The length of the statement  "			AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/Publications/Publication"' 1); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_RealConfigValidatesAgainstSchema,The length of the statement  "			var sampleShippedFile = Directory.EnumerateFiles(shippedConfigfolder' "*" + DictionaryConfigurationModel.FileExtension).First(); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_PrettyPrints,The length of the statement  "			StringAssert.Contains(Environment.NewLine' File.ReadAllText(modelFile)' "Configuration XML should not all be on one line"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,ValidateAgainstSchema,The length of the statement  "			var schemaLocation = Path.Combine(Path.Combine(FwDirectoryFinder.FlexFolder' "Configuration")' "DictionaryConfiguration.xsd"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_ThrowsIfReferenceItemDNE,The length of the statement  "			var model = new DictionaryConfigurationModel { Parts = new List<ConfigurableDictionaryNode> { configNode }' SharedItems = null }; " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_ThrowsIfReferenceItemDNE,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => DictionaryConfigurationModel.SpecifyParentsAndReferences(model.Parts' model.SharedItems)' "No SharedItems!"); " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_ThrowsIfReferenceItemDNE,The length of the statement  "			Assert.Throws<KeyNotFoundException>(() => DictionaryConfigurationModel.SpecifyParentsAndReferences(model.Parts' model.SharedItems)' "No matching item!"); " is 153.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_ProhibitsReferencesOfIncompatibleTypes,The length of the statement  "			Assert.Throws<KeyNotFoundException>(() => DictionaryConfigurationModel.SpecifyParentsAndReferences(model.Parts' model.SharedItems)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_ProhibitsReferencesOfIncompatibleTypes,The length of the statement  "			Assert.Throws<KeyNotFoundException>(() => DictionaryConfigurationModel.SpecifyParentsAndReferences(model.Parts' model.SharedItems)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_RefsPreferFirstParentIfSameLevel,The length of the statement  "			Assert.AreSame(configNodeOne' refdConfigNode.Parent' "The Referenced node's 'Parent' should be the first to reference (breadth first)"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_RefsPreferShallowestParentEvenIfNotFirst,The length of the statement  "			var configNodeOne = new ConfigurableDictionaryNode { Children = new List<ConfigurableDictionaryNode> { configNodeKid } }; " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,SpecifyParentsAndReferences_RefsPreferShallowestParentEvenIfNotFirst,The length of the statement  "			Assert.AreSame(configNodeTwo' refdConfigNode.Parent' "The Referenced node's 'Parent' should be the first to reference (breadth first)"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,LinkReferencedNode,The length of the statement  "			Assert.That(refConfigNode.IsEnabled' "Referenced nodes are inaccessible to users' but must be enabled for their children to function"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,DeepClone_ConnectsSharedItemsWithinNewModel,The length of the statement  "			var subentriesNode = new ConfigurableDictionaryNode { FieldDescription = "Subentries"' ReferenceItem = sharedSubsName }; " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,DeepClone_ConnectsSharedItemsWithinNewModel,The length of the statement  "			Assert.AreSame(clonedSubentries' clonedModel.SharedItems[0].Parent' "SharedItems' Parents should connect to their new masters"); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,NoteLoadsParagraphStylesWhenShowInParaSet,The length of the statement  "				Assert.IsTrue(optionsView.DisplayOptionCheckBox2Checked' "'Display each Note in a separate paragraph' should be checked."); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadNode_SwitchesStyles,The length of the statement  "				Parent = new ConfigurableDictionaryNode()' // top-level nodes are always in paragraph. Specify a Parent to allow character styles. " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,GetListItems,The length of the statement  "			var listItems = VerifyGetListItems(DictionaryNodeListOptions.ListIds.Complex' complexCount + 1); // +1 for <None> element " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,GetListItems,The length of the statement  "			listItems = VerifyGetListItems(DictionaryNodeListOptions.ListIds.Minor' complexCount + variantCount + 2); // Minor has 2 <None> elements " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,GetListItems_ThrowsIfUnknown,The length of the statement  "			Assert.Throws<ArgumentException>(() => m_staticDDController.GetListItemsAndLabel(DictionaryNodeListOptions.ListIds.None' out label)); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadList_NewItemsChecked,The length of the statement  "				Options = ListOfEnabledDNOsFromStrings(new List<string> { XmlViewsUtils.GetGuidForUnspecifiedVariantType().ToString() })' " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadNode_LoadingNullOptionsAfterListClearsOptionsView,The length of the statement  "				Options = ListOfEnabledDNOsFromStrings(new List<string> { XmlViewsUtils.GetGuidForUnspecifiedVariantType().ToString() })' " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadNode_LoadingNullOptionsAfterListClearsOptionsView,The length of the statement  "			Assert.NotNull(((TestDictionaryDetailsView)controller.View).OptionsView' "Test setup failed' OptionsView shoud not be null"); " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadNode_LoadingNullOptionsAfterListClearsOptionsView,The length of the statement  "			Assert.Null(((TestDictionaryDetailsView)controller.View).OptionsView' "OptionsView should be set to null after loading a node without options"); " is 144.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotUncheckOnlyCheckedItemInList,The length of the statement  "			Assert.AreEqual(1' wsOptions.Options.Count(option => option.IsEnabled)' "There should be exactly one enabled option in the model"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotUncheckOnlyCheckedItemInList,The length of the statement  "					.Select(lvi => new DictionaryNodeListOptions.DictionaryNodeOption { Id = (string)lvi.Tag' IsEnabled = false }).ToList()' " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotUncheckOnlyCheckedItemInList,The length of the statement  "			Assert.AreEqual(1' listOptions.Options.Count(option => option.IsEnabled)' "There should be exactly one enabled option in the model"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotUncheckOnlyCheckedItemInList,The length of the statement  "			Assert.AreEqual(selectedId' listOptions.Options.First(option => option.IsEnabled).Id' "The same item should still be enabled"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,VerifyCannotMoveTopItemUp,The length of the statement  "				Assert.AreEqual(originalListViewItems.Count' listViewItems.Count' "Number of items definitely should not have changed"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,VerifyCannotMoveBottomItemDown,The length of the statement  "				Assert.AreEqual(originalListViewItems.Count' listViewItems.Count' "Number of items definitely should not have changed"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckDefaultWsUnchecksAllOthers,The length of the statement  "				Assert.AreEqual(1' wsOptions.Options.Count(option => option.IsEnabled)' "There should be exactly one enabled option in the model"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The length of the statement  "							Assert.IsTrue(innerControl.Enabled && innerControl.Visible' "checkBoxShowGrammarFirst should be enabled and visible for {0}"' label); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The length of the statement  "							Assert.IsTrue(innerControl.Enabled && innerControl.Visible' "checkBoxSenseInPara should be enabled and visible for {0}"' label); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The length of the statement  "								Assert.IsFalse(innerControl.Enabled || innerControl.Visible' "checkBoxFirstSenseInline should be disabled and invisible when no paras"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The length of the statement  "								Assert.IsTrue(innerControl.Enabled && innerControl.Visible' "checkBoxFirstSenseInline should be enabled and visible when paras"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The length of the statement  "					Assert.AreEqual(3' innerControls' "Matched incorrect number of controls within senseStructureVerticalFlow for {0}"' label); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				var expectedNumberingStyle = XmlVcDisplayVec.SupportedNumberingStyles.Where(prop => prop.FormatString != "%O").ToList(); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.Count()' outputNumberingStyle.Count' "Sense number's numbering style should be same count."); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.First().Label' outputNumberingStyle.First().Label' "Sense number's numbering style should have 'none' option."); " is 151.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.IsTrue(expectedNumberingStyle.All(c => outputNumberingStyle.Count(p => p.Label == c.Label) == 1)' "Sense number's numbering style should be same."); " is 155.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.Count' outputNumberingStyle.Count' "SubSense number's numbering style should be same count."); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.First().Label' outputNumberingStyle.First().Label' "SubSense number's numbering style should have 'none' option."); " is 154.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.IsTrue(expectedNumberingStyle.All(c => outputNumberingStyle.Count(p => p.Label == c.Label) == 1)' "SubSense number's numbering style should be same."); " is 158.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.Count()' outputNumberingStyle.Count' "SubSubSense number's numbering style should be same count."); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.AreEqual(expectedNumberingStyle.First().Label' outputNumberingStyle.First().Label' "SubSubSense number's numbering style should have 'none' option."); " is 157.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadSenseOptions_NumberingStyleList,The length of the statement  "				Assert.IsTrue(expectedNumberingStyle.All(c => outputNumberingStyle.Count(p => p.Label == c.Label) == 1)' "SubSubSense number's numbering style should be same."); " is 161.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsUnchecksDefault,The length of the statement  "			var wsOptions = (DictionaryNodeWritingSystemOptions)ConfiguredXHTMLGeneratorTests.GetWsOptionsForLanguages(new[] { "vernacular" }' " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsUnchecksDefault,The length of the statement  "				Assert.AreEqual(1' wsOptions.Options.Count(option => option.IsEnabled)' "There should be exactly one enabled option in the model"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsUnchecksDefault,The length of the statement  "				Assert.AreEqual(namedItem.Tag' wsOptions.Options.First(option => option.IsEnabled).Id' "The named WS should be enabled"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsPreservesOtherNamedWss,The length of the statement  "				Assert.AreEqual(2' wsOptions.Options.Count(option => option.IsEnabled)' "There should be exactly two enabled options in the model"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsPreservesOtherNamedWss,The length of the statement  "				Assert.AreEqual(otherNamedItem.Tag' wsOptions.Options.Last(option => option.IsEnabled).Id' "The other named WS should be enabled"); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotReorderDefaultWs,The length of the statement  "				Assert.AreEqual(originalListViewItems.Count' listViewItems.Count' "Number of items definitely should not have changed"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CannotMoveNamedWsAboveDefault,The length of the statement  "				Assert.AreEqual(originalListViewItems.Count' listViewItems.Count' "Number of items definitely should not have changed"); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "			var sensesUnderSubentries = new ConfigurableDictionaryNode { FieldDescription = "SensesOS"' ReferenceItem = "SharedSenses" }; " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "			var subsubEntries = new ConfigurableDictionaryNode { FieldDescription = "Subentries"' ReferenceItem = "SharedSubentries"}; " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "			var subentriesUnderSenses = new ConfigurableDictionaryNode { FieldDescription = "Subentries"' ReferenceItem = "SharedSubentries"}; " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(model); // PopulateFieldsForTesting populates each node's Label with its FieldDescription " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "				StringAssert.DoesNotContain("LexEntry > Subentries" + Environment.NewLine' tooltip' "The Master Parent itself shouldn't be listed"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,UsersAreNotifiedOfSharedItems,The length of the statement  "				StringAssert.DoesNotContain("LexEntry > Subentries > Subentries > Subentries"' tooltip' "Node finder shouldn't recurse indefinitely"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryNodeOptionsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryNodeOptionsTests.cs,CanDeepCloneListOptions,The length of the statement  "			Assert.Null(clone as DictionaryNodeListAndParaOptions' "Incorrect subclass returned; did not expect DictionaryNodeListAndParaOptions"); " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,Init,The length of the statement  "						m_blankSynonyms = MakeLexRef(m_synonym' new ICmObject[] {m_blank' m_ouch.SensesOS[0]' m_blip.SensesOS[0]' m_blipOuch' m_bother}); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The length of the statement  "			Assert.AreEqual("Reversal 2b Form"' subentry.ShortName' "'Reversal 2b Form' is the only publishable subentry of 'Reversal 2 Form'"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The length of the statement  "			Assert.IsTrue(m_revDecorator.IsExcludedObject(entry.SubentriesOS[0])' "First subentry ('Reversal 2a Form') should be excluded"); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The length of the statement  "			Assert.IsFalse(m_revDecorator.IsExcludedObject(entry.SubentriesOS[1])' "Second subentry ('Reversal 2b Form') should not be excluded')"); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_IncludesSenselessReversalEntries,The length of the statement  "			Assert.IsFalse(m_revDecorator.IsExcludedObject(revEntry)' "A reversal index entry with no senses should not be excluded"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The length of the statement  "			// This test is perhaps redundant here: DictionaryPublicationDecorator does not have to do anything to get this behavior. " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,VirtualPropertyFiltering,The length of the statement  "			Assert.That(m_decorator.VecProp(m_domainBadWords.Hvo' m_flidReferringSenses)' Has.Length.EqualTo(0)' "should hide the unpublished sense"); " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,VirtualPropertyFiltering,The length of the statement  "			Assert.That(m_decorator.VecProp(m_domainTemperature.Hvo' m_flidReferringSenses)' Has.Length.EqualTo(1)' "should not hide the published sense"); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographNumberAfterPublishedNonHeadword,The length of the statement  "			Assert.That(m_decorator.get_IntProp(m_blackVerb.Hvo' LexEntryTags.kflidHomographNumber)' Is.EqualTo(0)); // not shown as headword " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographNumberAfterPublishedNonHeadword,The length of the statement  "			Assert.That(m_decorator.get_IntProp(m_blackColor.Hvo' LexEntryTags.kflidHomographNumber)' Is.EqualTo(0)); // only black shown as headword " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The length of the statement  "			Assert.That(m_decorator.get_MultiStringAlt(m_blank2.Hvo' mlHeadwordFlid' Cache.DefaultVernWs).Text' Is.EqualTo("blank1")); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The length of the statement  "			Assert.That(m_decorator.get_MultiStringAlt(m_water.Hvo' mlHeadwordFlid' Cache.DefaultVernWs).Text' Is.EqualTo("water")); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The length of the statement  "			Assert.That(m_decorator.get_MultiStringAlt(m_waterPrefix.Hvo' mlHeadwordFlid' Cache.DefaultVernWs).Text' Is.EqualTo("water-")); " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			Assert.That(Cache.DomainDataByFlid.get_MultiStringAlt(m_desirable.Hvo' mlOwnerOutlineFlid' Cache.DefaultVernWs).Text' Is.EqualTo("hot 3")); " is 139.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			Assert.That(m_decorator.get_MultiStringAlt(m_desirable.Hvo' mlOwnerOutlineFlid' Cache.DefaultVernWs).Text' Is.EqualTo("hot 2")); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			Assert.That(Cache.DomainDataByFlid.get_MultiStringAlt(m_fastCar.Hvo' mlOwnerOutlineFlid' Cache.DefaultVernWs).Text' Is.EqualTo("hot 3.1")); " is 139.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			Assert.That(m_decorator.get_MultiStringAlt(m_fastCar.Hvo' mlOwnerOutlineFlid' Cache.DefaultVernWs).Text' Is.EqualTo("hot 2.1")); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			Assert.That(Cache.DomainDataByFlid.get_MultiStringAlt(m_blank2.SensesOS[0].Hvo' mlOwnerOutlineFlid' Cache.DefaultVernWs).Text' " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SpecialCases,The length of the statement  "			int publishAsMinorEntryFlid = Cache.MetaDataCacheAccessor.GetFieldId2(LexEntryTags.kClassId' "PublishAsMinorEntry"' false); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,ShowAsHeadWord,The length of the statement  "			Assert.That(m_decorator.get_StringProp(m_sky.Hvo' headwordFlid).Text' Is.EqualTo("sky")' "sky not to be shown as main entry"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,ShowAsHeadWord,The length of the statement  "			Assert.That(m_decorator.get_StringProp(m_blueColor.Hvo' headwordFlid).Text' Is.EqualTo("blue1")' "blue should be avaialbe but isn't"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,ShowAsHeadWord,The length of the statement  "			Assert.That(m_decorator.get_StringProp(m_blueSky.Hvo' headwordFlid).Text' Is.EqualTo("blue sky")' "blue sky should be avaialbe but isn't"); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "			Assert.AreEqual(2' m_cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Count' "The number of top-level semantic domains"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<List owner=\"LangProject\" field=\"SemanticDomainList\" itemClass=\"CmSemanticDomain\">"' r.ReadLine()); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for general words referring to the physical universe. Some languages may not have a single word for the universe and may have to use a phrase such as 'rain' soil' and things of the sky' or 'sky' land' and water' or a descriptive phrase such as 'everything you can see' or 'everything that exists'.</Run>"' r.ReadLine()); " is 368.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">universe' creation' cosmos' heaven and earth' macrocosm' everything that exists</AUni>"' r.ReadLine()); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">(3) What words are used to refer to the place or area beyond the sky?</AUni>"' r.ReadLine()); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for words related to the sun. The sun does three basic things. It moves' it gives light' and it gives heat. These three actions are involved in the meanings of most of the words in this domain. Since the sun moves below the horizon' many words refer to it setting or rising. Since the sun is above the clouds' many words refer to it moving behind the clouds and the clouds blocking its light. The sun's light and heat also produce secondary effects. The sun causes plants to grow' and it causes damage to things.</Run>"' r.ReadLine()); " is 583.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for words related to the moon. In your culture people may believe things about the moon. For instance in European culture people used to believe that the moon caused people to become crazy. So in English we have words like \"moon-struck\" and \"lunatic.\" You should include such words in this domain.</Run>"' r.ReadLine()); " is 372.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for words related to the stars and other heavenly bodies.</Run>"' r.ReadLine()); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">starlit (sky)' (sky is) ablaze with stars' starry (sky)' star studded (sky)' stars are shining</AUni>"' r.ReadLine()); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for words related to the air around us' including the air we breathe and the atmosphere around the earth.</Run>"' r.ReadLine()); " is 176.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">(2) What words describe something that belongs to the water or is found in water?</AUni>"' r.ReadLine()); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">(3) What words describe something that water cannot pass through?</AUni>"' r.ReadLine()); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">(2) What words refer to a person when you aren't sure who the person is?</AUni>"' r.ReadLine()); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for general words for the whole human body' and general words for any part of the body. Use a drawing or photo to label each part. Some words may be more general than others are and include some of the other words. For instance 'head' is more general than 'face' or 'nose'. Be sure that both general and specific parts are labeled.</Run>"' r.ReadLine()); " is 402.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">part of the body' body part' anatomy' appendage' member' orifice' </AUni>"' r.ReadLine()); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for the functions and actions of the whole body. Use the subdomains in this section  for functions' actions' secretions' and products of various parts of the body. In each domain include any special words that are used of animals.</Run>"' r.ReadLine()); " is 301.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">secrete' secretion' excrete' excretion' product' fluid' body fluids' discharge' flux' </AUni>"' r.ReadLine()); " is 143.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "			Assert.AreEqual(2' m_cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Count' "The number of top-level semantic domains"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "				sem1.QuestionsOS[0].ExampleSentences.set_String(wsFr' "Le rôle du prophète est alors de réveiller le courage et la foi en Dieu."); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "				sem11.QuestionsOS[2].Question.set_String(wsFr' "Quels sont les mots qui signifient l'endroit ou le pays au-delà du ciel?"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<List owner=\"LangProject\" field=\"SemanticDomainList\" itemClass=\"CmSemanticDomain\">"' r.ReadLine()); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<Run ws=\"en\">Use this domain for general words referring to the physical universe. Some languages may not have a single word for the universe and may have to use a phrase such as 'rain' soil' and things of the sky' or 'sky' land' and water' or a descriptive phrase such as 'everything you can see' or 'everything that exists'.</Run>"' r.ReadLine()); " is 368.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<AUni ws=\"fr\">Quels sont les mots qui font référence à tout ce qu'on peut voir?</AUni>"' r.ReadLine()); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">universe' creation' cosmos' heaven and earth' macrocosm' everything that exists</AUni>"' r.ReadLine()); " is 136.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<Run ws=\"fr\">Le rôle du prophète est alors de réveiller le courage et la foi en Dieu.</Run>"' r.ReadLine()); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<AUni ws=\"en\">(3) What words are used to refer to the place or area beyond the sky?</AUni>"' r.ReadLine()); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The length of the statement  "					Assert.AreEqual("<AUni ws=\"fr\">Quels sont les mots qui signifient l'endroit ou le pays au-delà du ciel?</AUni>"' r.ReadLine()); " is 129.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,GetCoreTexts,The length of the statement  "			Assert.AreEqual(0' new InterestingTextList(m_mediator' m_propertyTable' new MockTextRepository()' m_mockStTextRepo).InterestingTexts.Count()); " is 142.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The length of the statement  "			var newTexts = new IStText[] {expected[0]' expected[1]' m_sections[0].ContentOA' m_sections[1].ContentOA' m_sections[1].HeadingOA}; " is 131.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,PropertyTableHasInvalidObjects,The length of the statement  "				new ICmObject[] { m_sections[0].ContentOA' m_sections[0].HeadingOA }) + "'" + Convert.ToBase64String(Guid.NewGuid().ToByteArray()) + "'$%^#@+"' true); " is 150.
Long Statement,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The length of the statement  "			Assert.That(ml.SafeToDoMacro(sel' out obj' out flid' out ws' out start' out length)' Is.False); // wrong type of selection " is 122.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandlerUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\TreeBarHandlerUtilsTests.cs,DuplicateTest,The length of the statement  "			var testList = Cache.ServiceLocator.GetInstance<ICmPossibilityListFactory>().CreateUnowned("TestList"' Cache.DefaultUserWs); " is 124.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandlerUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\TreeBarHandlerUtilsTests.cs,DuplicateTest,The length of the statement  "			var confidenceLevels = Cache.ServiceLocator.GetInstance<ICmPossibilityListFactory>().CreateUnowned("ConfidenceLevels"' Cache.DefaultUserWs); " is 140.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandlerUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\TreeBarHandlerUtilsTests.cs,DuplicateTest,The length of the statement  "			Assert.AreEqual(testList.PossibilitiesOS.Count' 2); //Make sure item was duplicated once and its subitems were added as subitems and not siblings " is 145.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandlerUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\TreeBarHandlerUtilsTests.cs,DuplicateTest,The length of the statement  "			Assert.AreEqual(testList.PossibilitiesOS[1].SubPossibilitiesOS[0].SubPossibilitiesOS[0].Name.UiString' "testing grandchild"); " is 125.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,FixtureSetup,The length of the statement  "			// set up clerk to allow DictionaryPublicationDecorator to be created during the UploadToWebonaryController driven export " is 121.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,FixtureSetup,The length of the statement  "							<parameters area='lexicon' clerk='entries' layout='Bartholomew' layoutProperty='DictionaryPublicationLayout' editable='false' configureObjectName='Dictionary'/> " is 160.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,FixtureSetup,The length of the statement  "							<parameters area = 'lexicon' clerk = 'AllReversalEntries' layout = 'Normal' treeBarAvailability = 'NotAllowed' emptyTitleId = 'No-ReversalIndexEntries' /> " is 154.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,FixtureSetup,The length of the statement  "			var letHeadStyle = new TestStyle(fontInfo' Cache) { Name = CssGenerator.LetterHeadingStyleName' IsParagraphStyle = false }; " is 123.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryUsesViewConfigAndPub,The length of the statement  "				Assert.That(mockView.StatusStrings.Any(s => s.Contains(mockView.Model.SelectedPublication) && s.Contains(mockView.Model.SelectedConfiguration))); " is 145.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryExportsXhtmlAndCss,The length of the statement  "					DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions { Options = DictionaryDetailsControllerTests.ListOfEnabledDNOsFromStrings(new[] { "fr" }) }' " is 155.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryExportsXhtmlAndCss,The length of the statement  "				Assert.That(mockView.StatusStrings.Any(s => s.Contains("reversal_en.xhtml"))' "reversal_enxhtml not logged as compressed"); " is 123.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryExportsXhtmlAndCss,The length of the statement  "				Assert.That(mockView.StatusStrings.Any(s => s.Contains("Exporting entries for English reversal"))' "English reversal not exported"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryCanCompleteWithoutError,The length of the statement  "				Assert.That(String.IsNullOrEmpty(mockView.StatusStrings.Find(s => s.Contains("Error") || s.Contains("ERROR") || s.Contains("error")))); " is 135.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CanConnectAtAll,The length of the statement  "				Assert.That(responseText' Contains.Substring("username")'"Should get some sort of response from server' like an error message about authenticating."); " is 150.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CanAuthenticate,The length of the statement  "				client.Headers.Add("Authorization"' "Basic " + Convert.ToBase64String(new UTF8Encoding().GetBytes("webonary:webonary"))); " is 121.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,ZipFileExtracts,The length of the statement  "				client.Headers.Add("Authorization"' "Basic " + Convert.ToBase64String(new UTF8Encoding().GetBytes("webonary:webonary"))); " is 121.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,RealUploadWithBadDataReportsErrorInProcessing,The length of the statement  "				Assert.That(view.StatusStrings.Any(s => s.IndexOf("Error"' StringComparison.OrdinalIgnoreCase) >= 0)' "Should be an error reported"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsIncorrectSiteName,The length of the statement  "			using (var controller = new MockUploadToWebonaryController(Cache' m_propertyTable' m_mediator' null' new byte[] {}' HttpStatusCode.Found)) " is 138.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsIncorrectSiteName,The length of the statement  "				Assert.That(view.StatusStrings.Any(s => s.Contains("Error: There has been an error accessing webonary. Is your sitename correct?"))); " is 133.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsIncorrectSiteName,The length of the statement  "			using (var controller = new MockUploadToWebonaryController(Cache' m_propertyTable' m_mediator' redirectException' new byte[] { })) " is 130.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsIncorrectSiteName,The length of the statement  "				Assert.That(view.StatusStrings.Any(s => s.Contains("Error: There has been an error accessing webonary. Is your sitename correct?"))); " is 133.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsLackingPermissionsToUpload,The length of the statement  "			var ex = new WebonaryClient.WebonaryException(new WebException("Unable to connect to Webonary.  Please check your username and password and your Internet connection.")); " is 169.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsLackingPermissionsToUpload,The length of the statement  "				Assert.That(view.StatusStrings.Any(s => s.Contains("Unable to connect to Webonary.  Please check your username and password and your Internet connection."))); " is 158.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryReportsSuccess,The length of the statement  "			using (var controller = new MockUploadToWebonaryController(Cache' m_propertyTable' m_mediator' null' Encoding.UTF8.GetBytes(success))) " is 134.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryErrorInProcessingHandled,The length of the statement  "			using (var controller = new MockUploadToWebonaryController(Cache' m_propertyTable' m_mediator' null' webonaryProcessingErrorContent)) " is 133.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadToWebonaryErrorInProcessingHandled,The length of the statement  "				Assert.That(view.StatusStrings.Any(s => s.IndexOf("Error"' StringComparison.OrdinalIgnoreCase) >= 0)' "Should be an error reported"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "					Assert.False(uploadZip.EntryFileNames.Contains(tiffFilename)' "Should not have included unsupported TIFF file in file to upload."); " is 131.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "					Assert.True(uploadZip.EntryFileNames.Contains(jpegFilename)' "Should have included supported JPEG file in file to upload."); " is 124.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "					Assert.True(uploadZip.EntryFileNames.Contains(mp4Filename)' "Should have included supported MP4 file in file to upload."); " is 122.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "				Assert.True(view.StatusStrings.Exists(statusString => Regex.Matches(statusString' query).Count==1)' "Lack of support for the tiff file should have been reported to the user."); " is 176.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "				Assert.False(view.StatusStrings.Exists(statusString => Regex.Matches(statusString' query).Count==1)' "Should not have reported lack of support for the jpeg file."); " is 164.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "				Assert.False(view.StatusStrings.Exists(statusString => Regex.Matches(statusString' query).Count == 1)' "Should not have reported lack of support for the mp4 file."); " is 165.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,CompressExportedFiles_IncludesAcceptableMediaTypes,The length of the statement  "				Assert.That(view.StatusStrings.Count(statusString => Regex.Matches(statusString' unsupported).Count > 0)' Is.EqualTo(1)' "Too many unsupported files reported."); " is 161.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,UploadFilename_FailsForInvalidCharactersInSitename,The length of the statement  "			Assert.That(view.StatusStrings.Any(s => s.Contains("Invalid characters found in sitename"))' "Inform that there was a problem"); " is 128.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,ResetsProptablesPublicationOnExit,The length of the statement  "				Assert.AreEqual("Wiktionary"' m_propertyTable.GetStringProperty("SelectedPublication"' null)' "Didn't activate temp publication"); " is 130.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,ResetsProptablesPublicationOnExit,The length of the statement  "			Assert.AreEqual("Main Dictionary"' m_propertyTable.GetStringProperty("SelectedPublication"' null)' "Didn't reset publication"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UploadToWebonaryControllerTests.cs,SetUpController,The length of the statement  "			return new MockUploadToWebonaryController(Cache' m_propertyTable' m_mediator' null' Encoding.UTF8.GetBytes("Upload successful")); " is 129.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("1234")' Is.EqualTo("\u1234")' "should have converted to unicode character"); " is 149.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("222j333")' Is.EqualTo("222j\u0333")' errorMessage); " is 124.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("222j1234")' Is.EqualTo("222j\u1234")' errorMessage); " is 125.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jabc")' Is.EqualTo("111j\u0abc")' errorMessage); " is 124.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("BbzcCx111jAbC")' Is.EqualTo("BbzcCx111j\u0abc")' "Should have handled mixed-case hex digits"); " is 167.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("11\n1jabc")' Is.EqualTo("11\n1j\u0abc")'"Should have worked even with a newline character in input"); " is 174.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("FFFF")' Is.EqualTo("\uFFFF")' "should have supported high numbers"); " is 141.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInNumberGivesConversion,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jedcb")' Is.EqualTo("111j\uedcb")' "should have supported high numbers"); " is 149.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,EndingInHexDigitsForSurrogateDoesNotOperate,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jD834")' Is.EqualTo("111jD834")' "Don't operate on surrogates"); " is 140.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ManyDigitsAtEndOnlyAccountsForLastFour,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111j12345")' Is.EqualTo("111j1\u2345")' errorMessage); " is 127.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ManyDigitsAtEndOnlyAccountsForLastFour,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jaaaaa")' Is.EqualTo("111ja\uaaaa")' errorMessage); " is 127.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ManyDigitsAtEndOnlyAccountsForLastFour,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jaaaaaa")' Is.EqualTo("111jaa\uaaaa")' errorMessage); " is 129.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,AllowForUPlusNotation,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalDigitsToCharacter("111jU+1234")' Is.EqualTo("111j\u1234")' errorMessage); " is 127.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersConvertsFinal,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint("A")' Is.EqualTo("0041")' "should have converted final character to four hex-digit unicode representation"); " is 183.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersConvertsFinal,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint("AA5555")' Is.EqualTo("AA5550035")' "Should have converted final character to four hex-digit representation"); " is 185.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersConvertsFinal,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint("AB\nBA")' Is.EqualTo("AB\nB0041")' "Should have worked even with a newline character in input"); " is 172.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersDoesNotOperateOnSurrogates,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint(input)' Is.EqualTo(input)' "Don't operate on surrogates"); " is 133.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersDoesNotOperateOnSurrogates,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint(input)' Is.EqualTo(input)'"Don't operate on the resulting surrogates"); " is 146.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersIsNoopForEmptyOrNullInput,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint(input)' Is.EqualTo(input)' "Don't change if empty string"); " is 134.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,CharacterToNumbersIsNoopForEmptyOrNullInput,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinalCharacterToCodepoint(input)' Is.EqualTo(input)' "Don't change if null"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertEitherWay,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinal("Some text here1234")' Is.EqualTo("Some text here\u1234")' "Should have detected final numbers and given a unicode character"); " is 182.
Long Statement,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertEitherWay,The length of the statement  "			Assert.That(UnicodeCharacterEditingHelper.ConvertFinal("Some text here!")' Is.EqualTo("Some text here0021")' "Should have detected final non-number character and given four hex digits representing it"); " is 202.
Long Statement,SIL.FieldWorks.XWorks,WordsUsedOnlyElsewhereFilterTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\WordsUsedOnlyElsewhereFilterTests.cs,TryItOut,The length of the statement  "						Assert.That(filter.Accept(itemTry)' Is.True' "should accept an item in an included text' even if there are other occurrences"); " is 127.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,SplitPublicationsByConfiguration_UnmatchedPublicationIsOut,The length of the statement  "				var configWithoutTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>NotTestPub</Publication></Publications>"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,SplitPublicationsByConfiguration_MatchedPublicationIsIn,The length of the statement  "				var configWithTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>TestPub</Publication></Publications>"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,SplitConfigurationsByPublication_UnmatchedPublicationIsOut,The length of the statement  "				var configWithoutTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>NotTestPub</Publication></Publications>"); " is 132.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,SplitConfigurationsByPublication_MatchedPublicationIsIn,The length of the statement  "				var configWithTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>TestPub</Publication></Publications>"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,GetValidConfigurationForPublication_ReturnsAlreadySelectedConfigIfValid,The length of the statement  "				var configWithTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>TestPub</Publication></Publications>"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,GetValidConfigurationForPublication_AllEntriesReturnsAlreadySelectedConfig,The length of the statement  "				var configWithTestPub = ConfigurationTemplate.Replace("</Publications>"' "<Publication>TestPub</Publication></Publications>"); " is 126.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,GetValidConfigurationForPublication_ConfigurationContainingPubIsPicked,The length of the statement  "				var nonMatchingConfig = ConfigurationTemplate.Replace("</Publications>"' "<Publication>NotTestPub</Publication></Publications>"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocViewTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XhtmlDocViewTests.cs,GetValidConfigurationForPublication_ConfigurationContainingPubIsPicked,The length of the statement  "				var dictionaryConfigPath = Path.Combine(LcmFileHelper.GetConfigSettingsDir(Cache.ProjectId.ProjectFolder)' "Dictionary"); " is 121.
Long Statement,SIL.FieldWorks.XWorks,MockFwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,LoadUIFromXmlDocument,The length of the statement  "			m_sidebarChoiceGroupCollection = new ChoiceGroupCollection(m_mediator' m_propertyTable' null' m_windowConfigurationNode); " is 121.
Long Statement,SIL.FieldWorks.XWorks,MockFwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,LoadUIFromXmlDocument,The length of the statement  "			m_toolbarsChoiceGroupCollection = new ChoiceGroupCollection(m_mediator' m_propertyTable' null' m_windowConfigurationNode); " is 122.
Long Statement,SIL.FieldWorks.XWorks,MockFwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,GetToolNode,The length of the statement  "			XmlNode configurationNode = m_windowConfigurationNode.SelectSingleNode(String.Format("//item/parameters/tools/tool[@value = '{0}']"' toolName)); " is 144.
Long Statement,SIL.FieldWorks.XWorks,MockFwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,ReplaceControlAssemblies,The length of the statement  "				XmlNode controlNode = toolNode.SelectSingleNode(String.Format(".//control/parameters[@id='{0}']"' replacement.m_controlName)); " is 126.
Long Statement,SIL.FieldWorks.XWorks,MockFwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\XWorksAppTestBase.cs,ReplaceControlAssemblies,The length of the statement  "				XmlNode controlAssemblyNode = controlNode.SelectSingleNode(String.Format(".//dynamicloaderinfo[@assemblyPath='{0}' and @class='{1}']"' " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationUtilsTests.cs,GatherBuiltInAndUserConfigurations_ReturnsShippedConfigurations,The length of the statement  "			var fileListFromResults = DictionaryConfigurationUtils.GatherBuiltInAndUserConfigurations(Cache' configObjectName).Values; " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationUtilsTests.cs,GatherBuiltInAndUserConfigurations_ReturnsProjectAndShippedConfigs,The length of the statement  "			using (var tempConfigFile = TempFile.WithFilename(Path.Combine(projectDictionaryConfigs' "NotAShippingConfig" + DictionaryConfigurationModel.FileExtension))) " is 157.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationUtilsTests.cs,GatherBuiltInAndUserConfigurations_ReturnsProjectAndShippedConfigs,The length of the statement  "				var fileListFromResults = DictionaryConfigurationUtils.GatherBuiltInAndUserConfigurations(Cache' configObjectName).Values; " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationUtilsTests.cs,GatherBuiltInAndUserConfigurations_ProjectOverrideReplacesShipped,The length of the statement  "			using (var tempConfigFile = TempFile.WithFilename(Path.Combine(projectDictionaryConfigs' "Override" + DictionaryConfigurationModel.FileExtension))) " is 147.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationUtilsTests.cs,GatherBuiltInAndUserConfigurations_ProjectOverrideReplacesShipped,The length of the statement  "				var fileListFromResults = DictionaryConfigurationUtils.GatherBuiltInAndUserConfigurations(Cache' configObjectName).Values; " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportServiceTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryExportServiceTests.cs,CountDictionaryEntries_RootBasedConfigDoesNotCountHiddenMinorEntries,The length of the statement  "			Assert.True(DictionaryExportService.IsGenerated(Cache' configModel' mainEntry.Hvo)' "Main entry should still be generated"); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportServiceTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryExportServiceTests.cs,CountDictionaryEntries_StemBasedConfigCountsHiddenMinorEntries,The length of the statement  "			Assert.True(DictionaryExportService.IsGenerated(Cache' configModel' mainEntry.Hvo)' "Main entry should still be generated"); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_BringsPreHistoricFileToCurrentVersion,The length of the statement  "			var newConfigFilePath = Path.Combine(configSettingsDir' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName' " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_BringsPreHistoricFileToCurrentVersion,The length of the statement  "				@"<layoutType label='Lexeme-based (complex forms as main entries)' layout='publishStem'><configure class='LexEntry' label='Main Entry' layout='publishStemEntry' />"' " is 165.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The length of the statement  "			// Localize a Part's label to German (sufficient to cause a mismatched nodes crash if one config's labels are localized) " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The length of the statement  "			var pathsToL10NStrings = (Dictionary<string' Dictionary<string' string>>)ReflectionHelper.GetField(StringTable.Table' "m_pathsToStrings"); " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The length of the statement  "			var newConfigFilePath = Path.Combine(configSettingsDir' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName' " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The length of the statement  "				@"<layoutType label='Lexeme-based (complex forms as main entries)' layout='publishStem'><configure class='LexEntry' label='Main Entry' layout='publishStemEntry' />"' " is 165.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The length of the statement  "			Assert.DoesNotThrow(() => migrator.MigrateOldConfigurationsIfNeeded()' "ArgumentException indicates localized labels."); // SUT " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_PreservesOrderOfBibliographies,The length of the statement  "			var newConfigFilePath = Path.Combine(configSettingsDir' DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName' " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_PreservesOrderOfBibliographies,The length of the statement  "				// Rough test to ensure Bibliography nodes aren't bumped to the end of the list. In the defaults' the later Bibliography " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_PreservesOrderOfBibliographies,The length of the statement  "				Assert.LessOrEqual(i' refdSenseChildren.Count - 5' "Bibliography nodes should not have been bumped to the end of the list"); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,BuildPathStringFromNode,The length of the statement  "			var subsenses = new ConfigurableDictionaryNode { Label = "Subsenses"' FieldDescription = "SensesOS"' ReferenceItem = "SharedSenses" }; " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,BuildPathStringFromNode,The length of the statement  "			var senses = new ConfigurableDictionaryNode { Label = "Senses"' FieldDescription = "SensesOS"' ReferenceItem = "SharedSenses" }; " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,BuildPathStringFromNode,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(model); // PopulateFieldsForTesting populates each node's Label with its FieldDescription " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,BuildPathStringFromNode,The length of the statement  "			Assert.AreEqual("LexEntry > Senses > SharedSenses > Subsenses"' DictionaryConfigurationMigrator.BuildPathStringFromNode(subsenses)); " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,BuildPathStringFromNode,The length of the statement  "			Assert.AreEqual("LexEntry > Senses > Subsenses"' DictionaryConfigurationMigrator.BuildPathStringFromNode(subsenses' false)); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,StoredDefaultsUpdatedFromCurrentDefaults,The length of the statement  "			var senses = new ConfigurableDictionaryNode { Label = "Senses"' FieldDescription = "SensesOS"'Children = new List<ConfigurableDictionaryNode> { inOld' inBoth }}; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,StoredDefaultsUpdatedFromCurrentDefaults,The length of the statement  "			CssGeneratorTests.PopulateFieldsForTesting(oldModel); // PopulateFieldsForTesting populates each node's Label with its FieldDescription sets all isEnabled to true " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesVersion,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = PreHistoricMigrator.VersionAlpha1' Parts = new List<ConfigurableDictionaryNode>() }; " is 146.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ConfigWithVerMinus1GetsMigrated,The length of the statement  "			var configParent = new ConfigurableDictionaryNode { FieldDescription = "Parent"' Children = new List<ConfigurableDictionaryNode> { configChild } }; " is 147.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ConfigWithVerMinus1GetsMigrated,The length of the statement  "				Version = PreHistoricMigrator.VersionPre83' // the original migration code neglected to update the version on completion " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReferencedEntriesToGlossOrSummary,The length of the statement  "			var configGlossOrSummDefn = new ConfigurableDictionaryNode { Label = "Gloss (or Summary Definition)"' FieldDescription = "DefinitionOrGloss" }; " is 143.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReferencedEntriesToGlossOrSummary,The length of the statement  "			var configDefnOrGloss = new ConfigurableDictionaryNode { Label = "Definition (or Gloss)"' FieldDescription = "DefinitionOrGloss" }; " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReferencedEntriesToGlossOrSummary,The length of the statement  "			var main = new ConfigurableDictionaryNode { FieldDescription = "Main"' Children = new List<ConfigurableDictionaryNode> { configParent' configSenses } }; " is 152.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_RemovesDeadReferenceItems,The length of the statement  "			var configParent = new ConfigurableDictionaryNode { FieldDescription = "Parent"' Children = new List<ConfigurableDictionaryNode> { configChild } }; " is 147.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_RemovesDeadReferenceItems,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 1' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleSentenceLabels,The length of the statement  "			var configExampleParent = new ConfigurableDictionaryNode { Label = "Examples"' FieldDescription = "ExamplesOS"' Children = new List<ConfigurableDictionaryNode> { configExampleChild } }; " is 185.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleSentenceLabels,The length of the statement  "			var configParent = new ConfigurableDictionaryNode { FieldDescription = "Parent"' Children = new List<ConfigurableDictionaryNode> { configExampleParent } }; " is 155.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleSentenceLabels,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The length of the statement  "			var subsenses = new ConfigurableDictionaryNode { Label = "Subsenses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { examplesOS } }; " is 166.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The length of the statement  "			var senses = new ConfigurableDictionaryNode { Label = "Senses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { subsenses } }; " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The length of the statement  "			var configParent = new ConfigurableDictionaryNode { FieldDescription = "Parent"' Children = new List<ConfigurableDictionaryNode> { senses } }; " is 142.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The length of the statement  "			Assert.That(examplesOS.DictionaryNodeOptions' Is.TypeOf(typeof(DictionaryNodeListAndParaOptions))' "Freshly-shared nodes should be included"); " is 142.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleOptions,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesBibliographyLabels,The length of the statement  "			var configBiblioEntryNode = new ConfigurableDictionaryNode { Label = "Bibliography"' FieldDescription = "Owner"' SubField = "Bibliography" }; " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesBibliographyLabels,The length of the statement  "			var configBiblioSenseNode = new ConfigurableDictionaryNode { Label = "Bibliography"' FieldDescription = "Bibliography" }; " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesBibliographyLabels,The length of the statement  "			var configBiblioParent = new ConfigurableDictionaryNode { Label = "Referenced Senses"' FieldDescription = "ReferringSenses"' Children = new List<ConfigurableDictionaryNode> { configBiblioSenseNode' configBiblioEntryNode } }; " is 224.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesBibliographyLabels,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesHeadWordRefs,The length of the statement  "			var cpFormChild = new ConfigurableDictionaryNode { Label = "Complex Form"' FieldDescription = "OwningEntry"' SubField = "MLHeadWord" }; " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesHeadWordRefs,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 2' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReversalHeadwordRefs,The length of the statement  "			var cpFormChild = new ConfigurableDictionaryNode { Label = "Complex Form"' FieldDescription = "OwningEntry"' SubField = "MLHeadWord" }; " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_NullFieldDescriptionIsLogged,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 2' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_NullFieldDescriptionIsLogged,The length of the statement  "			Assert.That(m_logger.Content' Is.StringContaining("'Parent > Complex Form' reached the Alpha2 migration with a null FieldDescription.")); " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesSharedItems,The length of the statement  "			var cpFormChild = new ConfigurableDictionaryNode { Label = "Complex Form"' FieldDescription = "OwningEntry"' SubField = "MLHeadWord" }; " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_MissingReversalWsFilledIn_NonReversalsIgnored,The length of the statement  "			Assert.Null(configModelRoot.WritingSystem' "The WritingSystem should not be filled in for configurations that aren't for reversal"); " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_Pre83ReversalCopiesGrabNameFromFile,The length of the statement  "			Assert.AreEqual("en"' configModelRoot.WritingSystem' "English should have been parsed out of the filename and used to set the WritingSystem"); " is 142.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ExtractsWritingSystemOptionsFromReferencedSenseOptions,The length of the statement  "					<SenseOptions numberStyle=""Sense-Reference-Number"" numberBefore="" "" numberingStyle=""%O"" numberAfter="""" numberSingleSense=""false"" showSingleGramInfoFirst=""false"" displayEachSenseInParagraph=""false"" /> " is 213.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSubSenseReferenceNodeSharesMainEntrySense,The length of the statement  "			var subsubsenses = new ConfigurableDictionaryNode { Label = "Subsubsenses"' FieldDescription = "SensesOS"' ReferenceItem = null }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSubSenseReferenceNodeSharesMainEntrySense,The length of the statement  "			var subsenses = new ConfigurableDictionaryNode { Label = "Subsenses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { subsubsenses } }; " is 168.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSubSenseReferenceNodeSharesMainEntrySense,The length of the statement  "			var senses = new ConfigurableDictionaryNode { Label = "Senses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { subsenses' subentriesUnderSenses } }; " is 182.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSubSenseReferenceNodeSharesMainEntrySense,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = "TestChild"' Label = "TestNode" } } " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSubSenseReferenceNodeSharesMainEntrySense,The length of the statement  "			Assert.AreEqual(1' sharedSubsenses.Children.Count(n => n.FieldDescription == "SensesOS")' "Should have exactly one Subsubsenses node"); " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseParentSenseNumberingStyleMigrated,The length of the statement  "			var subsubsenses = new ConfigurableDictionaryNode { Label = "Subsubsenses"' FieldDescription = "SensesOS"' ReferenceItem = null }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseParentSenseNumberingStyleMigrated,The length of the statement  "			var subsenses = new ConfigurableDictionaryNode { Label = "Subsenses"' FieldDescription = "SensesOS"' DictionaryNodeOptions = DictionaryNodeSubSenseOptions' Children = new List<ConfigurableDictionaryNode> { subsubsenses } }; " is 223.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseParentSenseNumberingStyleMigrated,The length of the statement  "			var senses = new ConfigurableDictionaryNode { Label = "Senses"' FieldDescription = "SensesOS"' Children = new List<ConfigurableDictionaryNode> { subsenses } }; " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseParentSenseNumberingStyleMigrated,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = "TestChild"' Label = "TestNode" } } " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubsubsensesNodeAddedIfNeeded,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { Label = "TestChild"' FieldDescription = "TestChild" } } " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubsubsensesNodeAddedIfNeeded,The length of the statement  "			var model = new DictionaryConfigurationModel { Version = PreHistoricMigrator.VersionPre83' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 156.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseSettingsMigratedToSharedNodes,The length of the statement  "					ConfiguredXHTMLGeneratorTests.GetWsOptionsForLanguages(new[] { "analysis" }' DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis)' " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseSettingsMigratedToSharedNodes,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = "TestChild"' Label = "TestChild" } } " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseSettingsMigratedToSharedNodes,The length of the statement  "				model.SharedItems.Find(node => node.Label == "MainEntrySubsenses").Children.Find(child => child.Label == subGlossNode.Label); " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseSettingsMigratedToSharedNodes,The length of the statement  "				model.SharedItems.Find(node => node.Label == "MainEntrySubsenses").Children.Find(child => child.Label == subGramInfoNode.Label); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubSenseSettingsMigratedToSharedNodes,The length of the statement  "			Assert.NotNull(model.Parts[0].Children[1].DictionaryNodeOptions' "Subentries complex form options not added in migration"); " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ReversalSubentriesMigratedToSharedNodes,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = "TestChild"' Label = "TestChild" } } " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ReversalSubentriesMigratedToSharedNodes,The length of the statement  "			Assert.That(subEntries.Children[1].Label' Is.StringMatching("Reversal Subsubentries")' "Subsubentries not added during migration"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ReversalSubentriesNotDuplicatedIfPresentMigratedToSharedNodes,The length of the statement  "			Assert.That(subEntries.Children[1].Label' Is.StringMatching("Reversal Subsubentries")' "Subsubentries not added during migration"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesTranslationsCssClass,The length of the statement  "			var configTranslationsChild = new ConfigurableDictionaryNode { Label = "Translations"' FieldDescription = "TranslationsOC" }; " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesTranslationsCssClass,The length of the statement  "			var configExampleParent = new ConfigurableDictionaryNode { Label = "Examples"' FieldDescription = "ExamplesOS"' Children = new List<ConfigurableDictionaryNode> { configTranslationsChild } }; " is 190.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesTranslationsCssClass,The length of the statement  "			var configParent = new ConfigurableDictionaryNode { FieldDescription = "Parent"' Children = new List<ConfigurableDictionaryNode> { configExampleParent } }; " is 155.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesTranslationsCssClass,The length of the statement  "			var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } }; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_Variants,The length of the statement  "			Assert.AreEqual(2' varTypeNode.Children.Count' "'Variant Forms' grandchildren should only be 'Abbreviation' and 'Name'"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The length of the statement  "			var model = new DictionaryConfigurationModel { Version = PreHistoricMigrator.VersionAlpha1' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 157.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The length of the statement  "			Assert.That(migratedPicturesNode.Children[1].Label' Is.Not.StringMatching("Sense Number")' "Sense Number should be gone"); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The length of the statement  "			Assert.That(migratedPicturesNode.Children[0].Label' Is.StringMatching("Thumbnail")' "Thumbnail should still be present"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The length of the statement  "			Assert.That(migratedPicturesNode.Children.Count' Is.GreaterThanOrEqualTo(3)' "Not enough child nodes. Maybe Headword and Gloss weren't added."); " is 144.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_UpdatesVersion,The length of the statement  "			m_migrator.MigrateFrom83Alpha(m_logger' alphaModel' new DictionaryConfigurationModel { Parts = new List<ConfigurableDictionaryNode>() }); // SUT " is 144.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_MoveStemToLexeme,The length of the statement  "@"<DictionaryConfiguration xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_MoveStemToLexeme,The length of the statement  "  <ConfigurationItem name='Main Entry' isEnabled='true' style='Dictionary-Normal' styleType='paragraph' field='LexEntry' cssClassNameOverride='entry'/> " is 149.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { firstPartNode } }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = LexEntry' Children = new List<ConfigurableDictionaryNode> { groupNode } } " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "			Assert.IsFalse(alphaModel.Parts[0].Children.Any(child => child.FieldDescription == KidField)' "The child should have been moved out of the parent and into the group"); " is 167.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "			Assert.IsTrue(alphaModel.Parts[0].Children.Any(child => child.FieldDescription == group)' "The group should have been added"); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "			Assert.IsTrue(alphaModel.Parts[0].Children[0].Children[0].FieldDescription == KidField' "The child should have ended up inside the group"); " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ItemsMovedIntoGroupsAreMoved,The length of the statement  "			Assert.IsFalse(alphaModel.Parts[0].Children[0].Children[0].IsEnabled' "The child keep the enabled state even though it moved"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAfterThePreceedingSiblingFromDefault,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { firstPartNode } }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAfterThePreceedingSiblingFromDefault,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = LexEntry' Children = new List<ConfigurableDictionaryNode> { olderBrother' groupNode } } " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAfterThePreceedingSiblingFromDefault,The length of the statement  "			Assert.IsTrue(alphaModel.Parts[0].Children[1].FieldDescription == group' "The group should have ended up following the olderBroField"); " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAfterThePreceedingSiblingFromDefault,The length of the statement  "			Assert.IsTrue(alphaModel.Parts[0].Children[2].FieldDescription == "OtherBrotherBob"' "The original order of unrelated fields should be retained"); " is 146.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAtEndIfNoPreceedingSiblingFound,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { firstPartNode } }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAtEndIfNoPreceedingSiblingFound,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = LexEntry' Children = new List<ConfigurableDictionaryNode> { olderBrother' groupNode } } " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = olderBroField' Children = new List<ConfigurableDictionaryNode> { cousinNode } }' " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = KidField' Children = new List<ConfigurableDictionaryNode> { grandKidNode } } " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { firstPartNode } }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = grandChildField } } " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = KidField ' Children = new List<ConfigurableDictionaryNode> { grandKidGroup} } " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "			var olderBrother = new ConfigurableDictionaryNode { FieldDescription = olderBroField' Children = new List<ConfigurableDictionaryNode> { cousinGroup } }; " is 152.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = LexEntry' Children = new List<ConfigurableDictionaryNode> { olderBrother' groupNode } } " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "			Assert.IsTrue(topGroupNode.Children[0].Children[0].FieldDescription == group' "Group not added under item that was moved into a group"); " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "			Assert.IsTrue(topGroupNode.Children[0].Children[0].Children[0].FieldDescription == grandChildField' "Grand child group contents incorrect"); " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ChildAndGrandChildGroupsMigrated,The length of the statement  "			Assert.IsTrue(olderBroNode.Children[0].Children[0].FieldDescription == cousinField' "Group under non-group contents incorrect"); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPropertiesClonedFromNewDefaults,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { firstPartNode } }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPropertiesClonedFromNewDefaults,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = "ReversalIndexEntry"' Children = new List<ConfigurableDictionaryNode> { groupNode } } " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			// If this Custom node is not removed before we reconflate the two Main Entry nodes' it blocks the legitimate Component References node " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			var customProblemNode = new ConfigurableDictionaryNode { FieldDescription = ComponentReferences' IsCustomField = true }; " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "				Label = "Main Entries"' FieldDescription = LexEntry' Children = new List<ConfigurableDictionaryNode> { extantChildNode' mainGroupingNode } " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			var hiddenByCustomProblemNode = new ConfigurableDictionaryNode { Label = ComponentReferences' FieldDescription = "ComplexFormEntryRefs" }; " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			var extantChildUnderComplexNode = new ConfigurableDictionaryNode { FieldDescription = KidField' Before = "This is not mine: "}; " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Complex)' " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "				Children = new List<ConfigurableDictionaryNode> { componentsNode' complexGroupingNode' extantChildUnderComplexNode' otherUniqueChildNode } " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Variant) " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual(isHybrid ? 5 : 4' mainChildren.Count' "All child nodes of Main Entry (Complex Forms) should have been copied to Main Entry"); " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual("Components"' mainChildren[0].FieldDescription' "Components should have been inserted at the beginning"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual(componentsBefore' mainChildren[0].Before' "Components's Before material should have come from the user's configuration"); " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual(kiddoBefore' mainChildren[1].Before' "The existing node's Before should have retained its value from Main Entry proper"); " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual("ComplexKid"' mainChildren[2].FieldDescription' "The other child node should have been inserted after the existing one"); " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual(typeof(DictionaryNodeGroupingOptions)' mainChildren[3].DictionaryNodeOptions.GetType()' "The final node should be the group"); " is 142.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual("GroupedChild"' groupedChildren[0].FieldDescription' "Grouped child should have been copied into existing group"); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual(RCFsForThisConfig' groupedChildren[1].FieldDescription' "Subentries should not be included in *Other* Referenced Complex Forms"); " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The length of the statement  "			Assert.AreEqual("ComplexFormEntryRefs"' groupedChildren[2].FieldDescription' "The legit node should have supplanted the placeholder Custom node"); " is 146.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Complex) " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Variant) " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The length of the statement  "			variantEntryNode.Children = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode { FieldDescription = KidField } }; " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DefaultConfigsFoundForEachType,The length of the statement  "					new ConfigurableDictionaryNode { Label = "Main Entry (Complex Forms)"' FieldDescription = LexEntry' CSSClassNameOverride = "mainentrycomplex" } " is 143.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { alphaMainEntryNode } }; " is 166.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The length of the statement  "			var defaultModel = new DictionaryConfigurationModel { Version = DictionaryConfigurationMigrator.VersionCurrent' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 177.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The length of the statement  "			Assert.That(migratedExtendedNoteNode.Children[2].Children[0].Label' Is.StringMatching("Example Sentence")' "Example Sentence not migrated"); " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The length of the statement  "			Assert.That(migratedExtendedNoteNode.Children[2].Children[1].Label' Is.StringMatching("Translations")' "Translations not migrated"); " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_SenseVariantListTypeOptionsAreMigrated,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { alphaMainEntryNode } }; " is 166.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_SenseVariantListTypeOptionsAreMigrated,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Variant)' " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_SenseVariantListTypeOptionsAreMigrated,The length of the statement  "			var defaultModel = new DictionaryConfigurationModel { Version = DictionaryConfigurationMigrator.VersionCurrent' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 177.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_NoteInParaOptionsAreMigrated,The length of the statement  "			var alphaModel = new DictionaryConfigurationModel { Version = FirstAlphaMigrator.VersionAlpha3' Parts = new List<ConfigurableDictionaryNode> { alphaMainEntryNode } }; " is 166.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_NoteInParaOptionsAreMigrated,The length of the statement  "			var defaultModel = new DictionaryConfigurationModel { Version = DictionaryConfigurationMigrator.VersionCurrent' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 177.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_NoteInParaOptionsAreMigrated,The length of the statement  "			Assert.True(migratedNoteDictionaryOptionsNode.DictionaryNodeOptions != null' "DictionaryNodeOptions should not be null"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_NoteInParaOptionsAreMigrated,The length of the statement  "			Assert.True(migratedNoteDictionaryOptionsNode.DictionaryNodeOptions is DictionaryNodeWritingSystemAndParaOptions' "Config node should have WritingSystemOptions"); " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ReferencedHeadwordFieldDescriptionNameAreMigrated,The length of the statement  "				DictionaryNodeOptions = ConfiguredXHTMLGeneratorTests.GetFullyEnabledListOptions(Cache' DictionaryNodeListOptions.ListIds.Variant)' " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ReferencedHeadwordFieldDescriptionNameAreMigrated,The length of the statement  "				Version = DictionaryConfigurationMigrator.VersionCurrent' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ReferencedHeadwordFieldDescriptionNameAreMigrated,The length of the statement  "			Assert.AreEqual("HeadWordRef"' migratedNoteDictionaryOptionsNode.FieldDescription' "FieldDescription for Referenced Sense Headword should be HeadwordRef"); " is 155.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_UpdatesReversalReferringsenses,The length of the statement  "			Assert.AreEqual("SensesRS"' referencedSensesNode.FieldDescription' "Should have changed 'ReferringSenses' field for reversal to 'SensesRS'"); " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_UpdatesReversalReferringsenses,The length of the statement  "			Assert.AreEqual("SensesRS"' refdSensesNode.FieldDescription' "Should have changed 'ReferringSenses' field for reversal to 'SensesRS'"); " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemovesGramInfoUnderRefdComplexForms,The length of the statement  "			Assert.AreEqual(originalKidCount' remainingChildren.Count' "No children should have been removed from GramInfo under Senses"); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_ConfigReferencedEntriesUseAsPrimary,The length of the statement  "			Assert.AreEqual("MainEntryRefs"' referencedEntryNode.FieldDescription' "Should have updated the field from 'EntryRefsWithThisMainSense' to 'MainEntryRefs'"); " is 157.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_ConfigReferencedEntriesUseAsPrimary,The length of the statement  "			Assert.AreEqual("ConfigReferencedEntries"' primaryEntries.FieldDescription' "Should have updated the field from 'PrimarySensesOrEntries' to 'ConfigReferencedEntries'"); " is 168.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_ConfigReferencedEntriesUseAsPrimary,The length of the statement  "			Assert.AreEqual("referencedentries"' primaryEntries.CSSClassNameOverride' "Should have changed the CSSClassNameOverride from 'primarylexemes' to 'referencedentries'"); " is 167.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_AddsOptionsToRefdComplexForms,The length of the statement  "			betaModel.Parts[0].Children[0].DictionaryNodeOptions = new DictionaryNodeListOptions { ListId = DictionaryNodeListOptions.ListIds.Complex }; " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_UpdatesCssOverrideAndStyles,The length of the statement  "			Assert.AreEqual(reversalCss' migratedReversalNode.CSSClassNameOverride' "Reversal node should have gotten a CssClassNameOverride"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = "Headword"' DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions()}' " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The length of the statement  "					new ConfigurableDictionaryNode { Label = "Minor Subsubentries"' FieldDescription = "Subentries"' ReferenceItem = "MainEntrySubentries"}' " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The length of the statement  "					new ConfigurableDictionaryNode { Label = "Subsubentries"' FieldDescription = "Subentries"' ReferenceItem = "MainEntrySubentries"} " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The length of the statement  "					new ConfigurableDictionaryNode { Label = "Minor Subsubentries"' FieldDescription = "Subentries"' ReferenceItem = "MainEntrySubentries"} " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemovesErroneouslyAddedChildren,The length of the statement  "					new ConfigurableDictionaryNode { FieldDescription = "Headword"' DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions()}' " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemovesErroneouslyAddedChildren,The length of the statement  "					new ConfigurableDictionaryNode { Label = "Minor Subsubentries"' FieldDescription = "Subentries"' ReferenceItem = "MainEntrySubentries"} " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,Init,The length of the statement  "			m_cf1 = new CustomFieldForTest(Cache' CustomFieldChangedLabel' CustomFieldOriginalName' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,Init,The length of the statement  "			m_cf2 = new CustomFieldForTest(Cache' CustomFieldUnchangedNameAndLabel' Cache.MetaDataCacheAccessor.GetClassId("LexEntry")' -1' " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SubsensesBeforeAfterAndBetweenWork,The length of the statement  "			var model = new DictionaryConfigurationModel { Version = PreHistoricMigrator.VersionPre83' Parts = new List<ConfigurableDictionaryNode> { mainEntryNode } }; " is 156.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SubsensesGetsConvertedSenseChildren,The length of the statement  "			var model = new DictionaryConfigurationModel { Version = PreHistoricMigrator.VersionPre83' Parts = new List<ConfigurableDictionaryNode> { oldMainEntryNode } }; " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SubsensesGetsConvertedSenseChildren,The length of the statement  "			Assert.AreEqual(oldSubsensesNode.Children[0].Children[0].FieldDescription' "ExampleSentences"' "Defaults not copied in for fields before Subsenses"); " is 149.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SubsensesGetsConvertedSenseChildren,The length of the statement  "			Assert.AreEqual(oldSubsensesNode.Children[2].FieldDescription' "PostSubsenses"' "Defaults not copied into fields following Subsenses"); " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TreatsComplexAsMainForStem,The length of the statement  "			currentDefaultModel.FilePath = "./" + DictionaryConfigurationMigrator.LexemeFileName + DictionaryConfigurationModel.FileExtension; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_SplitsMinorEntryNodes,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(MinorEntryComplexXpath' hasComplexNode ? 1 : 0); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_SplitsMinorEntryNodes,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(MinorEntryVariantXpath' hasVariantNode ? 1 : 0); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_UpdatesVersionNumberToAlpha1,The length of the statement  "			var convertedModel = new DictionaryConfigurationModel { Parts = new List<ConfigurableDictionaryNode> { new ConfigurableDictionaryNode() } }; " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyDefaultsIntoMinorEntryNode_UpdatesLabelAndListId,The length of the statement  "			m_migrator.CopyDefaultsIntoMinorEntryNode(convertedModel' convertedMinorEntryNode' BuildCurrentDefaultMinorEntryNodes().Parts[1]' " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyDefaultsIntoMinorEntryNode_PreservesOnlyRelevantTypes,The length of the statement  "			m_migrator.CopyDefaultsIntoMinorEntryNode(convertedModel' convertedMinorEntryNode' BuildCurrentDefaultMinorEntryNodes().Parts[1]' " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyDefaultsIntoMinorEntryNode_PreservesSelections,The length of the statement  "				.Select(option => new DictionaryNodeListOptions.DictionaryNodeOption{ Id = option.Id' IsEnabled = option.IsEnabled }).ToList(); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyDefaultsIntoMinorEntryNode_PreservesSelections,The length of the statement  "			m_migrator.CopyDefaultsIntoMinorEntryNode(convertedModel' convertedMinorEntryNode' BuildCurrentDefaultMinorEntryNodes().Parts[1]' " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,HasComplexFormTypesSelected_And_HasVariantTypesSelected,The length of the statement  "					Id = Cache.LangProject.LexDbOA.ComplexEntryTypesOA.PossibilitiesOS.Last().Guid.ToString()' IsEnabled = isSpecifiedComplexSelected " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,HasComplexFormTypesSelected_And_HasVariantTypesSelected,The length of the statement  "					Id = Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS.Last().Guid.ToString()' IsEnabled = isSpecifiedVariantSelected " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,HasComplexFormTypesSelected_And_HasVariantTypesSelected,The length of the statement  "			Assert.AreEqual(isUnspecifiedComplexSelected || isSpecifiedComplexSelected' m_migrator.HasComplexFormTypesSelected(options)' "Complex"); " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,HasComplexFormTypesSelected_And_HasVariantTypesSelected,The length of the statement  "			Assert.AreEqual(isUnspecifiedVariantSelected || isSpecifiedVariantSelected' m_migrator.HasVariantTypesSelected(options)' "Variant"); " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_IsEnabledWorks,The length of the statement  "			Assert.AreEqual(configNode.IsEnabled' tickedNode.Checked' "Checked node in old tree did not set IsEnabled correctly after migration"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_IsEnabledWorks,The length of the statement  "			Assert.AreEqual(configNode.IsEnabled' untickedNode.Checked' "Unchecked node in old tree did not set IsEnabled correctly after migration"); " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsAnalysisTypeWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsAnalysisTypeWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularTypeWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularTypeWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularAnalysisTypeWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularAnalysisTypeWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularAnalysisTypeWorks,The length of the statement  "			Assert.IsNotNull(wsOpts.Options.Find(option => option.IsEnabled && option.Id == "vernacular")' "vernacular choice was not migrated."); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsPronunciationTypeWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsPronunciationTypeWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsPronunciationTypeWorks,The length of the statement  "			Assert.IsNotNull(wsOpts.Options.Find(option => option.IsEnabled && option.Id == "pronunciation")' "pronunciation choice was not migrated."); " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsAnalysisVernacularTypeWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsAnalysisVernacularTypeWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsAnalysisVernacularTypeWorks,The length of the statement  "			Assert.IsNotNull(wsOpts.Options.Find(option => option.IsEnabled && option.Id == "analysis")' "analysis choice was not migrated."); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularSingleLanguageWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularSingleLanguageWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsVernacularSingleLanguageWorks,The length of the statement  "			Assert.IsNotNull(wsOpts.Options.Find(option => option.IsEnabled && option.Id == "fr")' "French choice was not migrated."); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsTwoLanguagesWork,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsTwoLanguagesWork,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsTwoLanguagesWork,The length of the statement  "			Assert.IsNotNull(wsOpts.Options.Find(option => option.IsEnabled && option.Id == "fr")' "French choice was not migrated."); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsWsAbbreviationWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a writing system"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsWsAbbreviationWorks,The length of the statement  "			Assert.IsTrue(configNode.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Writing system options node not created"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsWsAbbreviationWorks,The length of the statement  "			Assert.IsTrue(wsOpts.DisplayWritingSystemAbbreviations' "ShowWsLabels true value did not convert into DisplayWritingSystemAbbreviation"); " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_WritingSystemOptionsWsAbbreviationWorks,The length of the statement  "			Assert.IsFalse(wsOpts.DisplayWritingSystemAbbreviations' "ShowWsLabels false value did not convert into DisplayWritingSystemAbbreviation"); " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsEnabledLexRelationWorks,The length of the statement  "			var nodeWithSequence = new XmlDocConfigureDlg.LayoutTreeNode { LexRelType = "entry"' RelTypeList = LexReferenceInfo.CreateListFromStorageString(enabledGuid) }; " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsEnabledLexRelationWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a LexReferenceInfo"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsDisabledLexRelationWorks,The length of the statement  "			var nodeWithSequence = new XmlDocConfigureDlg.LayoutTreeNode { LexRelType = "entry"' RelTypeList = LexReferenceInfo.CreateListFromStorageString(disabledGuid) }; " is 160.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsDisabledLexRelationWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a LexReferenceInfo"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsMultipleItemsWorks,The length of the statement  "			var nodeWithSequence = new XmlDocConfigureDlg.LayoutTreeNode { LexRelType = "entry"' RelTypeList = LexReferenceInfo.CreateListFromStorageString(guidList) }; " is 156.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsMultipleItemsWorks,The length of the statement  "			Assert.NotNull(configNode.DictionaryNodeOptions' "No DictionaryNodeOptions were created for a treenode with a LexReferenceInfo"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsEnabledLexEntryTypeWorks,The length of the statement  "			var nodeWithSequence = new XmlDocConfigureDlg.LayoutTreeNode { EntryType = "sense"' EntryTypeList = ItemTypeInfo.CreateListFromStorageString(enabledGuid) }; " is 156.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsDisabledLexEntryTypeWorks,The length of the statement  "			var nodeWithSequence = new XmlDocConfigureDlg.LayoutTreeNode { EntryType = "variant"' EntryTypeList = ItemTypeInfo.CreateListFromStorageString(disabledGuid) }; " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_DupStringInfoIsConverted,The length of the statement  "			Assert.AreEqual(duplicateNode.DupString' configNode.LabelSuffix' "number appended to old duplicates not migrated to label suffix"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_DupStringInfoIsConvertedForDuplicateOfDuplicate,The length of the statement  "			var duplicateNode = new XmlDocConfigureDlg.LayoutTreeNode { DupString = "1-2"' IsDuplicate = true' Label = "A b c (2)" }; " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_DupStringInfoIsDiscardedForFalseDuplicate,The length of the statement  "			var duplicateNode = new XmlDocConfigureDlg.LayoutTreeNode { DupString = "1.0"' IsDuplicate = true' Label = "A b c D e f" }; " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SenseConfigsWithDifferingStylesMakeTwoStyles,The length of the statement  "			Assert.IsFalse(usefulStyle.DefaultCharacterStyleInfo.Italic.ValueIsSet' "italic should not have been set in the created style."); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_AllDifferentNumStylesMatchThemselves,The length of the statement  "			var senseNumberOptions = new[] { "-bold -italic"' "bold italic"' "bold"' "italic"' "-bold italic"' "bold -italic"' "" }; " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_AllDifferentNumStylesMatchThemselves,The length of the statement  "				Assert.IsNull(senseStyle2' "A duplicate sense number style should not have been created converting the same node twice."); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SenseConfigsWithDifferentFontsMakeTwoStyles,The length of the statement  "			Assert.AreEqual(usefulStyle.DefaultCharacterStyleInfo.FontName.Value' "notarial"' "notarial font not used in second style"); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_FieldDescriptionIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].FieldDescription' parentField' "Field description for parent node not migrated"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_FieldDescriptionIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].FieldDescription' childField' "Field description for child not migrated"); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_CSSClassOverrideIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].CSSClassNameOverride' parentOverride' "CssClassNameOverride for parent node not migrated"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_CSSClassOverrideIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].CSSClassNameOverride' childOverride' "CssClassNameOverride for child not migrated"); " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewStyleDefaultsAreAddedWhenStyleIsNotSet,The length of the statement  "			var baseChildNode1 = new ConfigurableDictionaryNode { Label = "Little Thing 1"' StyleType = child1Override' Style = baseStyle }; " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewStyleDefaultsAreAddedWhenStyleIsNotSet,The length of the statement  "			var baseChildNode2 = new ConfigurableDictionaryNode { Label = "Little Thing 2" }; // Child2 will have the default StyleType " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewStyleDefaultsAreAddedWhenStyleIsNotSet,The length of the statement  "			Assert.AreEqual(parentOverride' convertedModel.Parts[0].StyleType' "StyleType for parent node not filled in from base"); " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewStyleDefaultsAreAddedWhenStyleIsNotSet,The length of the statement  "			Assert.AreEqual(child1Override' convertedModel.Parts[0].Children[0].StyleType' "StyleType for child 1 not filled in from base"); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewStyleDefaultsAreAddedWhenStyleIsNotSet,The length of the statement  "			Assert.AreEqual(defaultStyleType' convertedModel.Parts[0].Children[1].StyleType' "StyleType for child 2 not set to Default"); " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_StyleInfoIsMigratedWhenStyleIsSet,The length of the statement  "			var baseParentNode = new ConfigurableDictionaryNode { Label = "Parent"' StyleType = ConfigurableDictionaryNode.StyleTypes.Character' Style = "unused"}; " is 151.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_StyleInfoIsMigratedWhenStyleIsSet,The length of the statement  "			var baseChildNode1 = new ConfigurableDictionaryNode { Label = "Little Thing 1"' StyleType = ConfigurableDictionaryNode.StyleTypes.Paragraph' Style = "unused2" }; " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_StyleInfoIsMigratedWhenStyleIsSet,The length of the statement  "			Assert.AreEqual(parentStyleType' convertedModel.Parts[0].StyleType' "The parent StyleType was not migrated correctly or was incorrectly overwritten"); " is 150.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			var baseParentNode = new ConfigurableDictionaryNode { Label = "Parent"' DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions() }; " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			((DictionaryNodeWritingSystemOptions)baseParentNode.DictionaryNodeOptions).WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular; " is 148.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			((DictionaryNodeWritingSystemOptions)baseParentNode.DictionaryNodeOptions).Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			var baseChildNode = new ConfigurableDictionaryNode { Label = "Child"' DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions() }; " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			((DictionaryNodeWritingSystemOptions)baseChildNode.DictionaryNodeOptions).WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis; " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			((DictionaryNodeWritingSystemOptions)baseChildNode.DictionaryNodeOptions).Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> " is 140.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].DictionaryNodeOptions' baseModel.Parts[0].DictionaryNodeOptions' "DictionaryNodeOptions for parent node not migrated"); " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_WsOptionIsMigrated,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].DictionaryNodeOptions' baseModel.Parts[0].Children[0].DictionaryNodeOptions' "DictionaryNodeOptions for child not migrated"); " is 177.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_CopyOfNodeGetsValueFromBase,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].FieldDescription' childField' "Field description for copy of child not migrated"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The length of the statement  "			convertedParentNode.Children = new List<ConfigurableDictionaryNode> { convertedChildNode' convertedChildNodeCopy1' convertedChildNodeCopy2 }; " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].FieldDescription' childField' "Field description for copy of child not migrated"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[1].FieldDescription' childField' "Field description for copy of child not migrated"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[2].FieldDescription' childField' "Field description for copy of child not migrated"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_OrderFromOldModelIsRetained,The length of the statement  "			Assert.AreEqual(convertedModel.Parts[0].Children[0].Label' convertedChildNodeTwo.Label' "order of old model was not retained"); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_RelabeledCustomFieldsNamesAreMigrated,The length of the statement  "			Assert.AreEqual(CustomFieldOriginalName' customNode.FieldDescription' "Custom node's Field should have been loaded from the Cache"); " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_CustomFieldInStrangePlaceDoesNotThrow,The length of the statement  "					"Could not match 'Truly Custom' in defaults. It may have been valid in a previous version' but is no longer. It will be removed next time the model is loaded.")); " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			var baseParentNode = new ConfigurableDictionaryNode { Label = "Minor Entries (Complex Forms)"' FieldDescription = "LexEntry" }; " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			Assert.AreEqual(2' customPersonNode.Children.Count' "Custom atomic list reference field should have two children added"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "				Assert.IsNotNull(child.DictionaryNodeOptions' "Children of customPersonNode should have a DictionaryNodeOptions object"); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "				Assert.IsTrue(child.DictionaryNodeOptions is DictionaryNodeWritingSystemOptions' "Children of customPersonNode DictionaryNodeOptions should be a DictionaryNodeWritingSystemOptions object"); " is 189.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			Assert.AreEqual("Abbreviation"' customPersonNode.Children[1].Label' "The second child of customPersonNode should be Abbreviation"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			Assert.IsNotNull(customPersonNode.DictionaryNodeOptions' "Custom atomic list reference field should have a DictionaryNodeOptions object"); " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			Assert.IsTrue(customPersonNode.DictionaryNodeOptions is DictionaryNodeListOptions' "Custom atomic list reference field DictionaryNodeOptions should be a DictionaryNodeListOptions object"); " is 188.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The length of the statement  "			Assert.IsNull(customGenDateNode.DictionaryNodeOptions' "Custom GenDate field should not have a DictionaryNodeOptions object"); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildConvertedReferenceEntryNodes,The length of the statement  "			var headWord = new ConfigurableDictionaryNode { Label = "Referenced Headword"' IsEnabled = enableHeadword' Before = HwBefore}; " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildConvertedReferenceEntryNodes,The length of the statement  "			var summaryDef = new ConfigurableDictionaryNode { Label = "Summary Definition"' IsEnabled = enableSummaryDef' Before = GlsBefore}; " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildConvertedReferenceEntryNodes,The length of the statement  "			var senseHeadWord = new ConfigurableDictionaryNode { Label = "Referenced Sense Headword"' IsEnabled = enableSenseHeadWord' Between = HwBetween' After = HwAfter }; " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildConvertedReferenceEntryNodes,The length of the statement  "			var gloss = new ConfigurableDictionaryNode { Label = "Gloss"' IsEnabled = enableGloss' Between = GlsBetween' After = GlsAfter' Style = GlsStyle}; " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildCurrentDefaultReferenceEntryNodes,The length of the statement  "			var headWord = new ConfigurableDictionaryNode { Label = "Referenced Headword"' IsEnabled = enableHeadWord' FieldDescription = "HeadWord"}; " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,BuildCurrentDefaultReferenceEntryNodes,The length of the statement  "			var gloss = new ConfigurableDictionaryNode { Label = "Gloss (or Summary Definition)"' IsEnabled = enableGloss' FieldDescription = "DefinitionOrGloss"}; " is 151.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChanged,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Minor Entry']/ConfigurationItem[@name='Components']/ConfigurationItem[@name='Referenced Entries']/"; " is 158.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Sense Headword']"); " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Summary Definition']"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Headword']"' 1); " is 152.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)']"' 1); " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChangedInSpecialCase,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Minor Entry']/ConfigurationItem[@name='Components']/ConfigurationItem[@name='Referenced Entries']/"; " is 158.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChangedInSpecialCase,The length of the statement  "				convertedMinorEntry.Parts[0].Children[0].Children[0].Children.First(child => child.Label == "Referenced Sense Headword").Label " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChangedInSpecialCase,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Sense']"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChangedInSpecialCase,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Sense Headword']"); " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsReferencedEntriesChangedInSpecialCase,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Headword']"' 1); " is 152.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsBeforeAfterBetweenMigrated,The length of the statement  "				Assert.DoesNotThrow(()=>cssResults = CssGenerator.GenerateCssFromConfiguration(convertedMinorEntry' new ReadOnlyPropertyTable(m_propertyTable))); " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsHeadwordChecksMigrated,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Minor Entry']/ConfigurationItem[@name='Components']/ConfigurationItem[@name='Referenced Entries']/"; " is 158.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsHeadwordChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Headword' and @isEnabled='true']"' 1); " is 174.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsHeadwordChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Headword' and @isEnabled='false']"' 1); " is 175.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsHeadwordChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Headword' and @isEnabled='true']"' 1); " is 174.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsGlossChecksMigrated,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Minor Entry']/ConfigurationItem[@name='Components']/ConfigurationItem[@name='Referenced Entries']/"; " is 158.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsGlossChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @isEnabled='true']"' 1); " is 184.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsGlossChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @isEnabled='false']"' 1); " is 185.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MinorEntryComponentsGlossChecksMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @isEnabled='true']"' 1); " is 184.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Minor Entry']/ConfigurationItem[@name='Components']/ConfigurationItem[@name='Referenced Entries']/"; " is 158.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)']"' 2); " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @before]"' 1); " is 174.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @after]"' 1); " is 173.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @between]"' 1); " is 175.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)' and @style]"' 1); " is 173.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_SubentryComplexTypeAbbreviationChanged,The length of the statement  "			const string complexEntryTypePath = "//ConfigurationItem[@name='Main Entry']/ConfigurationItem[@name='Subentries']/ConfigurationItem[@name='Complex Form Type']/"; " is 162.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_SubentryComplexTypeAbbreviationChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(complexEntryTypePath + "ConfigurationItem[@name='Abbreviation']"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_SubentryComplexTypeAbbreviationChanged,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(complexEntryTypePath + "ConfigurationItem[@name='Reverse Abbreviation']"' 1); " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexInflectionFeaturesMigration,The length of the statement  "			const string grammaticalInfoTypePath = "//ConfigurationItem[@name='Reversal Entry']/ConfigurationItem[@name='Referenced Senses']/ConfigurationItem[@name='Grammatical Info.']/"; " is 176.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexInflectionFeaturesMigration,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(grammaticalInfoTypePath + "ConfigurationItem[@name='Features']"); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexInflectionFeaturesMigration,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(grammaticalInfoTypePath + "ConfigurationItem[@name='Inflection Features']"' 1); " is 161.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(reversalIndexChildNodesPath + "ConfigurationItem[@name='Form']"); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(reversalIndexChildNodesPath + "ConfigurationItem[@name='Reversal Form']"' 1); " is 159.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(reversalIndexChildNodesPath + "ConfigurationItem[@name='Category']"); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(reversalIndexChildNodesPath + "ConfigurationItem[@name='Reversal Category']"' 1); " is 163.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ReversalIndexChildNodesMigrated,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(reversalIndexChildNodesPath + "ConfigurationItem[@name='Referenced Senses']"' 1); " is 163.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "			const string refEntriesPath = "//ConfigurationItem[@name='Main Entry']/ConfigurationItem[@name='Component References']/"; " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Components']"); " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Entries']/ConfigurationItem[@name='Gloss']"); " is 164.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Entries']/ConfigurationItem[@name='Summary Definition']"); " is 177.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasNoMatchForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Entries']/ConfigurationItem[@name='Reference Sense HeadWord']"); " is 183.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Entries']/ConfigurationItem[@name='Gloss (or Summary Definition)']"' 1); " is 208.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_MainEntryComponentReferences_ComponentsRenamedToReferencedEntries,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Referenced Entries']/ConfigurationItem[@name='Referenced Headword']"' 1); " is 198.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_Homograph_RenamedTo_SecondaryHomographNumber,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(mainEntriesPath + newHomographPath' 1); " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_Homograph_RenamedTo_SecondaryHomographNumber,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(subentriesPath + newHomographPath' 1); " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_Homograph_RenamedTo_SecondaryHomographNumber,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(minorCfEntriesPath + newHomographPath' 1); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_Homograph_RenamedTo_SecondaryHomographNumber,The length of the statement  "				AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(minorVarEntriesPath + newHomographPath' 1); " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsNeedMigratingFromPre83_ReturnsFalseIfNewReversalConfigsExist,The length of the statement  "			Assert.That(!m_migrator.ConfigsNeedMigratingFromPre83()' "If current configs exist no migration should be needed."); // SUT " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsNeedMigratingFromPre83_ReturnsFalseIfNewDictionaryConfigsExist,The length of the statement  "			Assert.That(!m_migrator.ConfigsNeedMigratingFromPre83()' "If current configs exist no migration should be needed."); // SUT " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsNeedMigratingFromPre83_ReturnsFalseIfNoNewConfigsAndNoOldConfigs,The length of the statement  "			Assert.That(!m_migrator.ConfigsNeedMigratingFromPre83()' "With no new or old configs no migration should be needed."); // SUT " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual("Reversal Entry"' convertedTopNode.Label' "Initial conversion should copy the Label attribute verbatim."); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.IsNull(convertedTypeNode.FieldDescription' "Initial conversion should not set FieldDescription for the Type node"); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.IsNull(convertedCommentNode.FieldDescription' "Initial conversion should not set FieldDescription for the Comment node"); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			((DictionaryNodeWritingSystemOptions)newFormNode.DictionaryNodeOptions).WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular; " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			((DictionaryNodeWritingSystemOptions)newFormNode.DictionaryNodeOptions).Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> " is 138.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			((DictionaryNodeWritingSystemOptions)newCommentNode.DictionaryNodeOptions).WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis; " is 146.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			((DictionaryNodeWritingSystemOptions)newCommentNode.DictionaryNodeOptions).Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			((DictionaryNodeListOptions)newVariantsNode.DictionaryNodeOptions).Options = new List<DictionaryNodeListOptions.DictionaryNodeOption> { " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual("ReversalIndexEntry"' convertedTopNode.FieldDescription' "Converted top node should have FieldDescription=ReversalIndexEntry"); " is 143.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual("reversalindexentry"' convertedTopNode.CSSClassNameOverride' "Converted top node should have CSSClassNameOverride=reversalindexentry"); " is 151.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual(ConfigurableDictionaryNode.StyleTypes.Paragraph' convertedTopNode.StyleType' "Converted top node should have StyleType=Paragraph"); " is 147.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual("OwningEntry"' convertedTypeNode.FieldDescription' "Converted type node should have FieldDescription=OwningEntry"); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The length of the statement  "			Assert.AreEqual("Summary"' convertedCommentNode.FieldDescription' "Converted comment node should have FieldDescription=Summary"); " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,TestMigrateCustomFieldNode,The length of the statement  "			xdoc0.LoadXml("<part ref=\"ScientificName\" label=\"Scientific Name\" before=\" \" after=\"\" visibility=\"ifdata\" css=\"scientific-name\"/>"); " is 144.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,TestMigrateCustomFieldNode,The length of the statement  "			xdoc1.LoadXml("<part ref=\"$child\" label=\"Single Sense\" before=\" Custom Field:( \" after=\" )\" visibility=\"ifdata\" originalLabel=\"Single Sense\"><string field=\"Single Sense\" class=\"LexSense\"/></part>"); " is 214.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,StubContentControlProvider,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\StubContentControlProvider.cs,OnGetContentControlParameters,The length of the statement  "			Assert.That(param.Item2 == "lexiconDictionary" || param.Item2 == "reversalToolEditComplete"' "No params for tool: " + param.Item2); " is 131.
Complex Conditional,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMinorEntries,The conditional expression  "(variantForm == FormType.None && complexForm == FormType.None) // A Minor entry makes no sense if it's neither complex nor variant  				|| (complexForm != FormType.None && !isRootBased)"  is complex.
Virtual Method Call from Constructor,SIL.FieldWorks.XWorks,FilterBehavior,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,FilterBehavior,The constructor "FilterBehavior" calls a virtual method "FirstBehavior".
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The following statement contains a magic number: Assert.That(items' Has.Count.EqualTo(4));
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The following statement contains a magic number: Assert.That(items[2].Name' Is.EqualTo("PartsOfSpeech"));
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The following statement contains a magic number: Assert.That(items[3].Name' Is.EqualTo("Semantic Domains"));
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The following statement contains a magic number: Assert.That(items[2].Id' Is.EqualTo(Cache.LangProject.PartsOfSpeechOA.Guid));
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\AddCustomFieldDialogTests.cs,PopulateListsCombo,The following statement contains a magic number: Assert.That(items[3].Id' Is.EqualTo(Cache.LangProject.SemanticDomainListOA.Guid));
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ChoiceFilters,The following statement contains a magic number: Assert.AreEqual(4' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ChoiceFilters,The following statement contains a magic number: Assert.AreEqual(4' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ChooseLabel,The following statement contains a magic number: Assert.AreEqual(2' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ChooseLabel,The following statement contains a magic number: Assert.AreEqual(2' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ChooseLabel,The following statement contains a magic number: Assert.AreEqual(2' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSelection,The following statement contains a magic number: Assert.AreEqual(2' targetFields.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSelection,The following statement contains a magic number: Assert.AreEqual(4' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSemDomSuggest,The following statement contains a magic number: Assert.AreEqual(3' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSemDomSuggest,The following statement contains a magic number: Assert.AreEqual(3' targetFields.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSemDomSuggest,The following statement contains a magic number: Assert.AreEqual("Semantic Domains"' targetFields[2].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,ListChoiceTargetSemDomSuggest,The following statement contains a magic number: Assert.AreEqual(7' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BulkCopyTargetSelection,The following statement contains a magic number: Assert.AreEqual(4' targetFields.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BulkCopyTargetSelection,The following statement contains a magic number: Assert.AreEqual("Glosses"' targetFields[2].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BulkCopyTargetSelection,The following statement contains a magic number: Assert.AreEqual("Definition"' targetFields[3].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,BulkCopyTargetSelection,The following statement contains a magic number: Assert.AreEqual(4' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual(7' targetFields.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Glosses"' targetFields[2].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Definition"' targetFields[3].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Grammatical Category"' targetFields[4].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Entries (Rows)"' targetFields[5].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Senses (Rows)"' targetFields[6].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual(4' m_bv.AllItems.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual(9' targetFields.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Variant Types"' targetFields[5].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,DeleteTargetSelection,The following statement contains a magic number: Assert.AreEqual("Complex or Variant Entry References (Rows)"' targetFields[8].ToString());
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Pronunciations_ListChoice_Locations,The following statement contains a magic number: Assert.Less(2' listChoiceControl.Items.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,Allomorphs_IsAbstractForm,The following statement contains a magic number: Assert.AreEqual(2' listChoiceControl.Items.Count);
Magic Number,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,EntryRefs_ListChoice_VariantEntryTypes,The following statement contains a magic number: Assert.AreEqual(cOriginal + 2' m_bv.ColumnSpecs.Count);
Magic Number,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateIsPutAmongSiblings,The following statement contains a magic number: Assert.That(parent.Children.Count' Is.EqualTo(3)' "should have increased");
Magic Number,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,DuplicateIsPutImmediatelyAfterOriginal,The following statement contains a magic number: Assert.That(parent.Children[2]' Is.SameAs(nodeB)' "second node in original list did not move into expected position");
Magic Number,SIL.FieldWorks.XWorks,ConfigurableDictionaryNodeTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfigurableDictionaryNodeTests.cs,CanDuplicateRootNode,The following statement contains a magic number: Assert.That(rootNodes.Count' Is.EqualTo(3)' "should have more nodes now");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_PrimaryEntryReferences_Ordered,The following statement contains a magic number: assertIt.HasSpecifiedNumberOfMatchesForXpath(entryRefTypeXpath' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorReversalTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorReversalTests.cs,GenerateXHTMLForEntry_SameGramInfoCollapsesOnDemand,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(separateGramInfo' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CreateComplexForm,The following statement contains a magic number: complexEntryTypeRevAbbr.SetAnalysisDefaultWritingSystem(complexEntryTypeAbbrText.Substring(0' complexEntryTypeAbbrText.Length - 3));
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,AddAllomorphToEntry,The following statement contains a magic number: const int stringRepresentationFlid = 5097008;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithSameInfo_ThirdSenseNotPublished_ShowGramInfoFirst,The following statement contains a magic number: var thirdSense = entry.SensesOS[2];
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoSensesWithDifferentGramInfoShowInfoInSenses,The following statement contains a magic number: AssertThatXmlIn.String(xhtmlString).HasSpecifiedNumberOfMatchesForXpath(gramInfoPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GetPropertyTypeForConfigurationNode_StTextReturnsPrimitive,The following statement contains a magic number: var multiParaHvo = Cache.MainCacheAccessor.MakeNewObject(StTextTags.kClassId' testEntry.Hvo' customField.Flid' -2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_MinorEntryUnCheckedItemsGenerateNothing,The following statement contains a magic number: configModel.Parts[1].DictionaryNodeOptions = configModel.Parts[2].DictionaryNodeOptions =  				GetListOptionsForItems(DictionaryNodeListOptions.ListIds.Minor' new ICmPossibility[0]);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateEntryHtmlWithStyles_DoesNotShowMinorEntriesTwice,The following statement contains a magic number: Assert.That(ConfiguredXHTMLGenerator.IsListItemSelectedForExport(configModel.Parts[2]' minorEntry)'  				"This test is valid only if the minor entry matches more than one node");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexemeBasedConsidersComplexFormsMainEntries,The following statement contains a magic number: configModel.Parts[1].DictionaryNodeOptions = configModel.Parts[2].DictionaryNodeOptions =  				GetListOptionsForItems(DictionaryNodeListOptions.ListIds.Minor' new ICmPossibility[0]);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TurnedOffSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The following statement contains a magic number: Assert.That(testEntry.AllSenses.Count' Is.EqualTo(3)' "Test set up incorrectly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TurnedOffSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The following statement contains a magic number: Assert.That(testEntry.AllSenses.First().AllSenses.Count' Is.EqualTo(3)' "Test not set up correctly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmptyStyleSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The following statement contains a magic number: Assert.That(testEntry.AllSenses.Count' Is.EqualTo(3)' "Test set up incorrectly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmptyStyleSubsensesCausesSenseToBehaveLikeSingleSense_WithNoSenseNumber,The following statement contains a magic number: Assert.That(testEntry.AllSenses.First().AllSenses.Count' Is.EqualTo(3)' "Test not set up correctly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubsenseStyleInfluencesSenseNumberShown,The following statement contains a magic number: Assert.That(testEntry.AllSenses.Count' Is.EqualTo(3)' "Test set up incorrectly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_SubsenseStyleInfluencesSenseNumberShown,The following statement contains a magic number: Assert.That(testEntry.AllSenses.First().AllSenses.Count' Is.EqualTo(3)' "Test not set up correctly.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormsIncludesSubentriesAndOtherReferencedComplexForms,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"/div[@class='lexentry']/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']//span[@lang='fr']/span[@lang='fr']"' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForReferencedForms,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"//span[@class='visiblevariantentryrefs']/span[@class='visiblevariantentryref']/span[@class='referencedentries']/span[@class='referencedentry']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForReferencedForms,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"/div[@class='lexentry']/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferences,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"//span[@class='minimallexreferences']/span[@class='minimallexreference']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr']/span[@lang='fr']/a[@href]"' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesLinksForCrossReferencesWithReferencedNodes,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"//span[@class='minimallexreferences refdrefs']/span[@class='minimallexreference refdref']/span[@class='configtargets']/span[@class='configtarget']/span[@class='headword']/span[@lang='fr']//a[@href]"' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CheckedListItemsAreGenerated,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				"/div[@class='lexentry']/span[@class='variantformentrybackrefs']/span[@class='variantformentrybackref']//span[@lang='fr']/span[@lang='fr']"' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ReferencedComplexFormsUnderSensesIncludesSubentriesAndOtherReferencedComplexForms,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(  				xpathThruSense + "/span[@class='visiblecomplexformbackrefs']/span[@class='visiblecomplexformbackref']//span[@lang='fr']/span[@lang='fr']"' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(pictureStartsWith' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The following statement contains a magic number: AssertRegex(result' string.Format("src=\"[^\"]*{0}[^\"]*\""' filenameWithoutExtension)' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentFilesGetTwoDifferentResults,The following statement contains a magic number: Assert.AreEqual(2' Directory.EnumerateFiles(Path.Combine(tempFolder.FullName' "pictures")).Count()' "Wrong number of pictures copied.");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_UniqueIdsForSameFile,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(pictureWithComposedPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentLinksToTheSamefileWorks,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(pictureWithComposedPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_TwoDifferentLinksToTheSamefileWorks,The following statement contains a magic number: AssertRegex(result' string.Format("src=\"{0}[^\"]*\""' pictureRelativePath.Replace(@"\"'@"\\"))' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringDefinition_GeneratesMultilingualSpans,The following statement contains a magic number: var str3Xpath = string.Format(definitionXpath + "/span[@lang='en' and text()='{0}']"' multirunContent[2]);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringDefinition_GeneratesMultilingualSpans,The following statement contains a magic number: var str4Xpath = string.Format(definitionXpath + "/span[@lang='fr' and text()='{0}']"' multirunContent[3]);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiStringDefinition_GeneratesMultilingualSpans,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(definitionXpath + "/span"' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiListItemCustomFieldGeneratesContent,The following statement contains a magic number: Cache.MainCacheAccessor.Replace(testEntry.Hvo' customField.Flid' 0' 0' new [] {possibilityItem1.Hvo' possibilityItem2.Hvo}' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_IntegerCustomFieldGeneratesContent,The following statement contains a magic number: const int customData = 123456;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MultiLineCustomFieldGeneratesContent,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(customDataPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_VariantOfReferencedHeadWord,The following statement contains a magic number: AssertThatXmlIn.String(result)  				.HasSpecifiedNumberOfMatchesForXpath(referencedEntries' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_AudioConversionNonIdenticalFileExists,The following statement contains a magic number: byte[] bytes = { 177' 209' 137' 61' 204' 127' 103' 88 };
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The following statement contains a magic number: var otherComplexRefRevAbbr = CreateComplexForm(Cache' isUnderSense ? (ICmObject)lexentry : lexentry.SensesOS.First()' subentry' true' 2)  				.ComplexEntryTypesRS[0].ReverseAbbr.BestAnalysisAlternative.Text;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormTypeForSubsubentry,The following statement contains a magic number: var subsubentryRef = CreateComplexForm(Cache' subentry' subsubentry' true' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesCorrectMainAndMinorEntries,The following statement contains a magic number: CreateComplexForm(Cache' firstMainEntry' idiom' false' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: Assert.AreEqual(5' hvosMain.Count' "there are five entries in the main publication");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: Assert.AreEqual(4' hvosTest.Count' "there are four entries in the test publication");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishDefOrGloss' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchFrenchExample' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishTranslation' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishDefOrGloss' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchFrenchExample' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishTranslation' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishDefOrGloss' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchFrenchExample' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_FilterByPublication,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchEnglishTranslation' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesVariantEntryTypesLabelWithNoRepetition,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchVariantRef' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The following statement contains a magic number: CreateComplexForm(Cache' entryEntry' firstComplexForm' false' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesComplexFormEntryTypesAndNamesGroup,The following statement contains a magic number: AssertThatXmlIn.String(output).HasSpecifiedNumberOfMatchesForXpath(matchComplexFormName' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The following statement contains a magic number: lexentry.SensesOS[2].Definition.SetAnalysisDefaultWritingSystem("MainEntryS3Defn");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_MinorComplexForm_GeneratesGlossOrSummaryDefinition,The following statement contains a magic number: CreateComplexForm(Cache' lexentry.SensesOS[2]' subentry3' true);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(xpath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProduceLetHeadOnlyWhenDesired,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(xpath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ProducesHeadingsAndEntriesInOrder,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(letterHeaderXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_MoreEntriesThanLimitProducesPageDivs,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pagesDivXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_MoreEntriesThanLimitProducesPageDivs,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonXPath' 6);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: int[] hvos = new int[21];
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: i < 21
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 10);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pagesDivXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonXPath' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonLastIndexPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesIncludedInLastPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(entryDivXPath' 10);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: int[] hvos = new int[21];
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: i < 21
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 8);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pagesDivXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(pageButtonXPath' 6);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(firstPageButtonXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(lastPageButtonXPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ExtraEntriesMoreThanTenPercentGetOwnPage,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(entryXPath' 8);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,SavePublishedHtmlWithStyles_ZeroEntriesDoesNotThrow,The following statement contains a magic number: xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(hvos' pubEverything' model' m_propertyTable' entriesPerPage: 8);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(allCategsPath' 5);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,CheckSubsenseOutput,The following statement contains a magic number: AssertThatXmlIn.String(xhtml).HasSpecifiedNumberOfMatchesForXpath(secondCategPath' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemGeneratesCorrectResult,The following statement contains a magic number: var multiRunString = frenchString.Insert(12' englishStr);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemGeneratesCorrectResult,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(nestedFr' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_EmbeddedWritingSystemOfOppositeDirectionGeneratesCorrectResult,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(nestedHe' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(2' "b")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_SimpleSituations_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(3' "c")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(2' "b")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(3' "ba")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(4' "c")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CompareRelations_ComplexSituation_SortByHeadword,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(5' "ca")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(1' "alpha")' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(2' "rouge")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(3' "vert")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(4' "bleu")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Sequences_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(2' "omega")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Unidirectional_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(2' "Curly")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Unidirectional_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasSpecifiedNumberOfMatchesForXpath(HeadwordOrderInCrossRefsXpath(3' "Moe")' 1);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_CrossRefs_Unidirectional_SequencePreserved,The following statement contains a magic number: AssertThatXmlIn.String(result).HasNoMatchForXpath(HeadwordOrderInCrossRefsXpath(4' "Stooges"));
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The following statement contains a magic number: AssertThatXmlIn.String(manResult).HasSpecifiedNumberOfMatchesForXpath(xpathLexRef' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The following statement contains a magic number: AssertThatXmlIn.String(familyResult).HasSpecifiedNumberOfMatchesForXpath(xpathLexRef' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_LexicalReferencesOrderedCorrectly,The following statement contains a magic number: AssertThatXmlIn.String(girlResult).HasSpecifiedNumberOfMatchesForXpath(xpathLexRef' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The following statement contains a magic number: Assert.That(result.IndexOf(headwords[1]' StringComparison.InvariantCulture)'  					Is.LessThan(result.IndexOf(headwords[2]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The following statement contains a magic number: Assert.That(result.IndexOf(headwords[2]' StringComparison.InvariantCulture)'  					Is.LessThan(result.IndexOf(headwords[3]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_ComplexFormsAreOrderedAsUserSpecified,The following statement contains a magic number: Assert.That(result.IndexOf(headwords[2]' StringComparison.InvariantCulture)'  					Is.LessThan(result.IndexOf(headwords[3]' StringComparison.InvariantCulture))' "complex form not sorted in expected order\n{0}"' result);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The following statement contains a magic number: var currentPage = new Tuple<int' int>(0' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The following statement contains a magic number: var adjacentPage = new Tuple<int' int>(2' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The following statement contains a magic number: var adjacentPage = new Tuple<int' int>(2' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The following statement contains a magic number: ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo }' settings' currentPage' adjacentPage' 2'  				out current' out adjacent);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenUpButtonConsumesAllEntries,The following statement contains a magic number: Assert.AreEqual(2' current.Item2' "Current page should end at 2");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenDownButtonConsumesAllEntries,The following statement contains a magic number: var currentPage = new Tuple<int' int>(1' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenDownButtonConsumesAllEntries,The following statement contains a magic number: ConfiguredXHTMLGenerator.GenerateAdjustedPageButtons(new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo }' settings' currentPage' adjPage' 2'  				out current' out adjacent);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_NoAdjacentWhenDownButtonConsumesAllEntries,The following statement contains a magic number: Assert.AreEqual(2' current.Item2' "Current page should end at 2");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: var currentPage = new Tuple<int' int>(0' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: var adjPage = new Tuple<int' int>(3' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: var adjPage = new Tuple<int' int>(3' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: Assert.AreEqual(3' current.Item2' "Current page should end at 3");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: Assert.AreEqual(4' adjacent.Item1' "Adjacent page should start at 4");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyUp,The following statement contains a magic number: Assert.AreEqual(4' adjacent.Item2' "Adjacent page should end at 4");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The following statement contains a magic number: var adjPage = new Tuple<int' int>(0' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The following statement contains a magic number: var currentPage = new Tuple<int' int>(3' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The following statement contains a magic number: var currentPage = new Tuple<int' int>(3' 4);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The following statement contains a magic number: Assert.AreEqual(2' current.Item1' "Current page should start at 2");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateAdjustedPageNumbers_AdjacentAndCurrentPageAdjustCorrectlyDown,The following statement contains a magic number: Assert.AreEqual(4' current.Item2' "Current page should end at 4");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_UpReturnsRequestedEntries,The following statement contains a magic number: var adjPage = new Tuple<int' int>(0' 2);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_UpReturnsRequestedEntries,The following statement contains a magic number: var currentPage = new Tuple<int' int>(3' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_UpReturnsRequestedEntries,The following statement contains a magic number: var currentPage = new Tuple<int' int>(3' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The following statement contains a magic number: var adjPage = new Tuple<int' int>(2' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The following statement contains a magic number: var adjPage = new Tuple<int' int>(2' 3);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The following statement contains a magic number: var entries = ConfiguredXHTMLGenerator.GenerateNextFewEntries(pubEverything' new[] { firstEntry.Hvo' secondEntry.Hvo' thirdEntry.Hvo' fourthEntry.Hvo }' configPath'  					settings' currentPage' adjPage' 2' out current' out adjacent);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateNextFewEntries_DownReturnsRequestedEntries,The following statement contains a magic number: Assert.AreEqual(2' entries.Count' "Not enough entries generated");
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ConfiguredXHTMLGeneratorTestHelpers.cs,GenerateXHTMLForEntry_GeneratesNFC,The following statement contains a magic number: Assert.AreEqual(6' headword.Text.Length);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_NoParent_Works,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + LeadingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_NoParent_Works,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-right:" + TrailingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_NoParent_Works,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-top:" + PadTop / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_NoParent_Works,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-bottom:" + PadBottom / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: var childIndent = 15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: var childIndent = 15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + (childIndent - LeadingIndent) / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-right:" + TrailingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-top:" + PadTop / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ParentOverrideWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-bottom:" + PadBottom / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ChildEqualToParentResultsInZeroMargin,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-right:" + TrailingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ChildEqualToParentResultsInZeroMargin,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-top:" + PadTop / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_ChildEqualToParentResultsInZeroMargin,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("padding-bottom:" + PadBottom / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: grandParentStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 5 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: grandParentStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 5 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: parentStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 12 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: parentStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 12 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: childStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 20 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphMarginIsAbsolute_GrandParentAndParentWork,The following statement contains a magic number: childStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptLeadingIndent' 0' 20 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The following statement contains a magic number: var hangingIndent = -15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The following statement contains a magic number: var hangingIndent = -15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + (LeadingIndent - hangingIndent) / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_NoParentWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("text-indent:" + hangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: var parentHangingIndent = -8 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: var parentHangingIndent = -8 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: var childHangingIndent = -10 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: var childHangingIndent = -10 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: Assert.That(parentDeclaration.ToString()' Contains.Substring("margin-left:" + (LeadingIndent - parentHangingIndent) / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: Assert.That(parentDeclaration.ToString()' Contains.Substring("text-indent:" + parentHangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: Assert.That(childDeclaration.ToString()' Contains.Substring("text-indent:" + childHangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithExistingMargin_ParentOverrideWorks,The following statement contains a magic number: Assert.That(childDeclaration.ToString()' Contains.Substring("margin-left:" + adjustedChildIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var parentHangingIndent = -8 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var parentHangingIndent = -8 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var childHangingIndent = -10 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var childHangingIndent = -10 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var grandChildHangingIndent = -3 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: var grandChildHangingIndent = -3 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: Assert.AreEqual(2' grandChildDeclaration.Count);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: Assert.That(firstSenseChildCss' Contains.Substring("margin-left:" + firstSenseIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: Assert.That(firstSenseChildCss' Contains.Substring("text-indent:" + grandChildHangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: Assert.That(allOtherSenseChildrenCss' Contains.Substring("margin-left:" + otherSenseIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ComplexFormsUnderSenses_FirstSenseAndFollowingSenseRulesGenerated,The following statement contains a magic number: Assert.That(allOtherSenseChildrenCss' Contains.Substring("text-indent:" + grandChildHangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithNoMarginWorks,The following statement contains a magic number: var hangingIndent = -15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithNoMarginWorks,The following statement contains a magic number: var hangingIndent = -15 * 1000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithNoMarginWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("margin-left:" + -hangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_HangingIndentWithNoMarginWorks,The following statement contains a magic number: Assert.That(styleDeclaration.ToString()' Contains.Substring("text-indent:" + hangingIndent / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphAbsoluteLineSpacingWorks,The following statement contains a magic number: style.SetExplicitParaIntProp((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' 9 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphAbsoluteLineSpacingWorks,The following statement contains a magic number: style.SetExplicitParaIntProp((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' 9 * 1000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphLineSpacingExactlyWorks,The following statement contains a magic number: int exactly = -12000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForStyleName_ParagraphLineSpacingAtleastWorks,The following statement contains a magic number: int atleast = 12000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryMinorParagraphStyle,The following statement contains a magic number: majorStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptTrailingIndent' 0' 32000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForConfiguration_GenerateDictionaryMinorParagraphStyle,The following statement contains a magic number: optionsStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptTrailingIndent' 0' 16000);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCssForDirectionRightToLeftForEntry,The following statement contains a magic number: entryParagraphStyle.SetExplicitParaIntProp((int)FwTextPropType.ktptRightToLeft' 2' (int)TriStateBool.triTrue);
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateBulletStyle,The following statement contains a magic number: fontInfo.m_fontSize.ExplicitValue = 14000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateBulletStyle,The following statement contains a magic number: var bulletinfo = new BulletInfo  			{  				m_numberScheme = (VwBulNum)105'  				FontInfo = fontInfo  			};
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateBulletStyle,The following statement contains a magic number: fontInfo1.m_fontSize.ExplicitValue = 12000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCustomBulletStyle,The following statement contains a magic number: fontInfo.m_fontSize.ExplicitValue = 14000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCustomBulletStyle,The following statement contains a magic number: var bulletinfo = new BulletInfo  			{  				m_numberScheme = (VwBulNum)100'  				m_bulletCustom = "@"'  				FontInfo = fontInfo  			};
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateCustomBulletStyle,The following statement contains a magic number: fontInfo1.m_fontSize.ExplicitValue = 12000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateNumberingStyle,The following statement contains a magic number: fontInfo.m_fontSize.ExplicitValue = 14000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,GenerateNumberingStyle,The following statement contains a magic number: fontInfo1.m_fontSize.ExplicitValue = 12000;
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyFontInfoInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("font-size:" + (float)size / 1000 + "pt;")' "font size missing");
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("bottom:" + offset / 1000 + ";")' "offset was not applied");
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyParagraphBorderInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("border-top-width:" + top / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyParagraphBorderInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("border-bottom-width:" + bottom / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyParagraphBorderInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("border-left-width:" + leading / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyParagraphBorderInCss,The following statement contains a magic number: Assert.That(css' Contains.Substring("border-right-width:" + trailing / 1000 + "pt"));
Magic Number,SIL.FieldWorks.XWorks,CustomListDlgTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CustomListDlgTests.cs,TestGetUiWssAndInstall,The following statement contains a magic number: Assert.AreEqual(2' wss.Count'  					"Wrong number of wss found.");
Magic Number,SIL.FieldWorks.XWorks,CustomListDlgTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CustomListDlgTests.cs,TestGetUiWssAndInstall_dialect,The following statement contains a magic number: Assert.AreEqual(2' wss.Count'  					"Wrong number of wss found.");
Magic Number,SIL.FieldWorks.XWorks,DeleteCustomListTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DeleteCustomListTests.cs,CreateCustomList,The following statement contains a magic number: m_testList.Depth = 127;
Magic Number,SIL.FieldWorks.XWorks,DeleteCustomListTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DeleteCustomListTests.cs,DeleteCustomList_MultiPossibilityRef_Yes,The following statement contains a magic number: Cache.LangProject.AnnotationDefsOA.PossibilitiesOS[2].ConfidenceRA = newPoss3;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigManagerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigManagerTests.cs,LoadConfigListAndTest,The following statement contains a magic number: var citems = configs.Count + 2;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,PopulateTreeViewBuildsRightNumberOfNodes,The following statement contains a magic number: m_model.Parts = new List<ConfigurableDictionaryNode> { BuildTestPartTree(2' 5) };
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,PopulateTreeViewBuildsRightNumberOfNodes,The following statement contains a magic number: m_model.Parts = new List<ConfigurableDictionaryNode> { BuildTestPartTree(2' 5) };
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,PopulateTreeViewBuildsRightNumberOfNodes,The following statement contains a magic number: ValidateTreeForm(2' 5' dcc.View.TreeControl.Tree);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,PopulateTreeViewBuildsRightNumberOfNodes,The following statement contains a magic number: ValidateTreeForm(2' 5' dcc.View.TreeControl.Tree);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateTwoLevelTree,The following statement contains a magic number: AddChildrenToNode(rootNode' 3);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateTwoLevelTree,The following statement contains a magic number: i < 3
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The following statement contains a magic number: AddChildrenToNode(rootNode.Children[0]' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The following statement contains a magic number: AddChildrenToNode(rootNode.Children[1]' 3);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The following statement contains a magic number: i < 2
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_CanCreateThreeLevelTree,The following statement contains a magic number: i < 3
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_PrefersReferencedChildren,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CreateTreeOfTreeNodes_PrefersReferencedChildren,The following statement contains a magic number: AddChildrenToNode(refdNode' 4);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,ListDictionaryConfigurationChoices_BothDefaultsAndUserFilesAppear,The following statement contains a magic number: Assert.IsTrue(choices.Count == 2' "One of the configuration files was not listed");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetListOfDictionaryConfigurationLabels_ListsLabels,The following statement contains a magic number: Assert.That(labels.Count' Is.EqualTo(2)' "unexpected label count");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantMoveUpFirstNode,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CanMoveDownFirstNode,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CanMoveUpSecondNode,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CanReorder_CantMoveDownLastNode,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ThrowsIfCantReorder,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ReordersSiblings,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ReordersSiblings,The following statement contains a magic number: Assert.That(rootNode.Children.Count' Is.EqualTo(2)' "unexpected number of reordered siblings");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveIntoGroupingNodes,The following statement contains a magic number: AddChildrenToNode(rootNode' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveIntoGroupingNodes,The following statement contains a magic number: Assert.AreEqual(2' rootNode.Children.Count' "movingChild should not still be under original parent");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveOutOfGroupingNodes,The following statement contains a magic number: var groupNode = AddGroupingNodeToNode(rootNode' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_ChildrenMoveOutOfGroupingNodes,The following statement contains a magic number: Assert.AreEqual(2' rootNode.Children.Count' "child not moved out of the grouping node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_GroupWontMoveIntoGroupingNodes,The following statement contains a magic number: AddGroupingNodeToNode(rootNode' 2' 0);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,Reorder_GroupWontMoveIntoGroupingNodes,The following statement contains a magic number: Assert.AreEqual(3' rootNode.Children.Count' "Root has too few children' group must have moved into a group");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetCustomFieldsForType_PossibilityListFieldGetsChildren,The following statement contains a magic number: Assert.AreEqual(2' cfChildren.Count' "custom list type nodes should get a child for Name and Abbreviation");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetCustomFieldsForType_MultipleFieldsAreReturned,The following statement contains a magic number: Assert.IsTrue(customFieldNodes.Count == 2' "Incorrect number of nodes created from the custom fields.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,GetCustomFieldsForType_SenseOrEntry,The following statement contains a magic number: Assert.IsTrue(customFieldNodes.Count == 2' "Incorrect number of nodes created from the custom fields.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,UpdateWsOptions_OrderAndCheckMaintained,The following statement contains a magic number: Assert.AreEqual("es"' wsOptions.Options[2].Id' "New writing system was not added");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_NewFieldsOnSharedNodesAreAddedToSharedItemsExclusively,The following statement contains a magic number: Assert.AreEqual(2' sharedSubsNode.Children.Count' "Custom Field was not added to Subentries");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,MergeCustomFieldsIntoDictionaryModel_DuplicateCustomFieldsAreNotRemoved,The following statement contains a magic number: Assert.AreEqual(2' model.Parts[0].Children[0].Children.Count' "The Duplicate custom field should be retained");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual(9' opts1.Count' "Properly merged variant types to options list in major entry child node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual(newType.Guid.ToString()' opts1[7].Id' "New type appears near end of options list in major entry child node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual("b0000000-c40e-433e-80b5-31da08771344"' opts1[8].Id' "'No Variant Type' type appears at end of options list in major entry child node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual(9' opts2.Count' "Properly merged variant types to options list in minor entry top node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual(newType.Guid.ToString()' opts2[7].Id' "New type appears near end of options list in minor entry top node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeleteddVariantTypes,The following statement contains a magic number: Assert.AreEqual("b0000000-c40e-433e-80b5-31da08771344"' opts2[8].Id' "'No Variant Type' type appears near end of options list in minor entry top node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(18' opts1.Count' "The new tree reftype should have added 2 options' the rest should have been removed.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(senseUnidirectionalType.Guid.ToString() + ":f"' opts1[2].Id' "The sense unidirectional type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(senseUnidirectionalType.Guid.ToString() + ":r"' opts1[3].Id' "The sense unidirectional type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryUnidirectionalType.Guid.ToString() + ":f"' opts1[4].Id' "The entry unidirectional type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryUnidirectionalType.Guid.ToString() + ":r"' opts1[5].Id' "The entry unidirectional type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(senseAsymmetricPairType.Guid.ToString() + ":f"' opts1[6].Id' "The sense asymmetric pair type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(senseAsymmetricPairType.Guid.ToString() + ":r"' opts1[7].Id' "The sense asymmetric pair type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":f"' opts1[8].Id' "The entry asymmetric pair type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryAsymmetricPairType.Guid.ToString() + ":r"' opts1[9].Id' "The entry asymmetric pair type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseAsymmetricPairType.Guid.ToString() + ":f"' opts1[10].Id' "The entry or sense asymmetric pair type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseAsymmetricPairType.Guid.ToString() + ":r"' opts1[11].Id' "The entry or sense asymmetric pair type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseTreeType.Guid.ToString() + ":f"' opts1[12].Id' "The entry or sense tree type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseTreeType.Guid.ToString() + ":r"' opts1[13].Id' "The entry or sense tree type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseUnidirectionalType.Guid.ToString() + ":f"' opts1[14].Id' "The entry or sense unidirectional type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryOrSenseUnidirectionalType.Guid.ToString() + ":r"' opts1[15].Id' "The entry or sense unidirectional type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryTreeType.Guid.ToString() + ":f"' opts1[16].Id' "The entry tree type should have added the first option with :f appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckAsymmetricReferenceType,The following statement contains a magic number: Assert.AreEqual(entryTreeType.Guid.ToString() + ":r"' opts1[17].Id' "The entry tree type should have added the second option with :r appended to the guid.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckCrossReferenceType,The following statement contains a magic number: Assert.AreEqual(2' opts1.Count' "The new tree reftype should have added 2 options.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckNewAndDeletedNoteTypes,The following statement contains a magic number: Assert.AreEqual(6' opts.Count' "Didn't merge properly (or more shipping note types have been added)");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(9' inflOpts.Count' "Should have merged all variant types into options list in Main Entry > Inflectional Variants");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(normTypeGuid' inflOpts[7].Id' "New type should appear near end of options list in Inflectional Variants node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.IsFalse(inflOpts[7].IsEnabled' "New type should be false under Inflectional Variants beacuse it is a normal variant type");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(inflTypeGuid' inflOpts[5].Id' "Past Variant is not in its expected location");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.IsTrue(inflOpts[5].IsEnabled' "Past variant should enabled because of Inflectional");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(9' normOpts.Count' "Should have merged all variant types into options list in Main Entry > Variants");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(normTypeGuid' normOpts[7].Id' "New type should near end of options list in Main Entry > Variants");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.IsTrue(normOpts[7].IsEnabled' "New type should be true beacuse it is normal variant type");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(inflTypeGuid' normOpts[5].Id' "Past Variant is not in its expected location");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.IsFalse(normOpts[5].IsEnabled' "Past variant should not enabled because of Inflectional");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationControllerTests.cs,CheckBoxEnableForVariantInflectionalType,The following statement contains a magic number: Assert.AreEqual(9' minorOpts.Count' "should have merged all variant types into options list in minor entry top node");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,Setup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);  				var testStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' true' 2' false);  				testStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var normalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Normal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' true);  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				normalStyle.Rules = propsBldr.GetTextProps();  				var senseStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' 0x2BACCA); // arbitrary color to create para element  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "Arial");  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 23000);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptBulNumFontInfo' "");  				senseStyle.Rules = propsBldr.GetTextProps();  				senseStyle.BasedOnRA = normalStyle;  				var styleWithNamedColors = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithNamedColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' NamedRedBGR);  				styleWithNamedColors.Rules = propsBldr.GetTextProps();  				var styleWithCustomColors = styleFactory.Create(Cache.LangProject.StylesOC' "Abnormal"' ContextValues.InternalConfigureView' StructureValues.Undefined'  					FunctionValues.Line' false' 2' false);  				styleWithCustomColors.BasedOnRA = normalStyle;  				propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault' CustomRedBGR);  				styleWithCustomColors.Rules = propsBldr.GetTextProps();  				DictionaryConfigurationManagerController.ExportConfiguration(configurationToExport' _zipFile' Cache);  				DictionaryConfigurationManagerController.ExportConfiguration(configurationReversalToExport' _reversalZipFile' Cache);  				Cache.LangProject.StylesOC.Clear();  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_IncludesUnknownPublications,The following statement contains a magic number: Assert.That(_controller.NewConfigToImport.Publications.Count' Is.EqualTo(3)' "Did not include all the publications");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,PrepareImport_IncludesUnknownPublications,The following statement contains a magic number: Assert.That(_controller.NewConfigToImport.Publications[2]' Is.EqualTo("unknown pub 2")' "unexpected publication");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_ImportsStyles,The following statement contains a magic number: Assert.AreEqual(importedTestStyle.UserLevel' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				bulletStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				numberStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);    				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true);    				// Create a style that we can link to before the import happens. It's not  				// important what it's named' just that it also exists in the exported zip  				// file made by Setup().  				nominalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' false);    				homographStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);    				// Style linking to later examine  				homographStyle.BasedOnRA = dictionaryHeadwordStyle;  				bulletStyle.NextRA = nominalStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				bulletStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				numberStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);    				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true);    				// Create a style that we can link to before the import happens. It's not  				// important what it's named' just that it also exists in the exported zip  				// file made by Setup().  				nominalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' false);    				homographStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);    				// Style linking to later examine  				homographStyle.BasedOnRA = dictionaryHeadwordStyle;  				bulletStyle.NextRA = nominalStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				bulletStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				numberStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);    				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true);    				// Create a style that we can link to before the import happens. It's not  				// important what it's named' just that it also exists in the exported zip  				// file made by Setup().  				nominalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' false);    				homographStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);    				// Style linking to later examine  				homographStyle.BasedOnRA = dictionaryHeadwordStyle;  				bulletStyle.NextRA = nominalStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				bulletStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				numberStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);    				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true);    				// Create a style that we can link to before the import happens. It's not  				// important what it's named' just that it also exists in the exported zip  				// file made by Setup().  				nominalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' false);    				homographStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);    				// Style linking to later examine  				homographStyle.BasedOnRA = dictionaryHeadwordStyle;  				bulletStyle.NextRA = nominalStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				bulletStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);  				numberStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' true);    				dictionaryHeadwordStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Headword"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' true);    				// Create a style that we can link to before the import happens. It's not  				// important what it's named' just that it also exists in the exported zip  				// file made by Setup().  				nominalStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Nominal"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' false' 2' false);    				homographStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"'  					ContextValues.InternalConfigureView' StructureValues.Undefined' FunctionValues.Line' true' 2' true);    				// Style linking to later examine  				homographStyle.BasedOnRA = dictionaryHeadwordStyle;  				bulletStyle.NextRA = nominalStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: Assert.AreEqual(5' Cache.LangProject.StylesOC.Count' "Setup problem. Unexpected number of styles before doing any import activity.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: Assert.AreEqual(5' Cache.LangProject.StylesOC.Count' "Setup problem. Should not have changed number of styles from just preparing to import.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_UnhandledStylesLeftUnTouched,The following statement contains a magic number: Assert.AreEqual(9' Cache.LangProject.StylesOC.Count' "This unit test starts with 6 styles. 3 are 'unsupported' and kept. 3 are removed. We import 6 styles: 3 are completely new; 3 are replacements for the 3 that were removed. Resulting in 9 styles after import.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_CustomBulletInfoIsImported,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.Do(Cache.ActionHandlerAccessor' () =>  			{  				// Set up state of flex before the import happens.  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				styleFactory.Create(Cache.LangProject.StylesOC' "Dictionary-Sense"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' true);  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationImportControllerTests.cs,DoImport_CustomBulletInfoIsImported,The following statement contains a magic number: Assert.AreEqual(6' Cache.LangProject.StylesOC.Count' "Resulting styles count should be 6 after import.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,FixtureSetup,The following statement contains a magic number: NonUndoableUnitOfWorkHelper.DoSomehow(Cache.ActionHandlerAccessor' () =>  			{  				var styleFactory = Cache.ServiceLocator.GetInstance<IStStyleFactory>();  				_characterTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "TestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				_characterTestStyle.Usage.set_String(Cache.DefaultAnalWs' "Test Style");  				var propsBldr = TsStringUtils.MakePropsBldr();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptForeColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Red));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderline' (int)FwTextPropVar.ktpvDefault'  					(int)FwUnderlineType.kuntDouble);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptUnderColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Blue));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn);  				propsBldr.SetStrPropValue((int)FwTextPropType.ktptFontFamily' "times");  				_characterTestStyle.Rules = propsBldr.GetTextProps();  				_paraTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaTestStyle"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptBackColor' (int)FwTextPropVar.ktpvDefault'  					(int)ColorUtil.ConvertColorToBGR(Color.Lime));  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalCenter);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLineHeight' (int)FwTextPropVar.ktpvMilliPoint' -3000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptTrailingIndent' (int)FwTextPropVar.ktpvDefault' 4000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptFirstIndent' (int)FwTextPropVar.ktpvDefault' -5000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptLeadingIndent' (int)FwTextPropVar.ktpvDefault' 6000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceBefore' (int)FwTextPropVar.ktpvDefault' 7000);  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptSpaceAfter' (int)FwTextPropVar.ktpvDefault' 8000);  				_paraTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "ParaChildTesttStyle"'  					ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 3' false);  				propsBldr.Clear();  				propsBldr.SetIntPropValues((int)FwTextPropType.ktptAlign' (int)FwTextPropVar.ktpvEnum' (int)FwTextAlign.ktalJustify);  				_paraChildTestStyle.Rules = propsBldr.GetTextProps();  				_paraChildTestStyle.BasedOnRA = _paraTestStyle;  				_bulletedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Bulleted List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_numberedTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Numbered List"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' false' 2' false);  				_homographTestStyle = styleFactory.Create(Cache.LangProject.StylesOC' "Homograph-Number"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);    				var characterStyleBasedOnSomething = styleFactory.Create(Cache.LangProject.StylesOC' "CharacterStyleBasedOnSomething"' ContextValues.InternalConfigureView' StructureValues.Body' FunctionValues.Line' true' 2' false);  				characterStyleBasedOnSomething.BasedOnRA = _characterTestStyle;  			});
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,AssociatesPublicationOnlyOnce,The following statement contains a magic number: i < 3
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,ExportConfiguration_ExportsZip,The following statement contains a magic number: Assert.That(zip.Count' Is.GreaterThanOrEqualTo(3)' "Zip file must be missing parts of the export");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationManagerControllerTests.cs,PrepareCustomFieldsExport_Works,The following statement contains a magic number: Assert.That(customFieldFiles.Count' Is.EqualTo(2)' "Not enough files prepared");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsBasicsAndDetails,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 02' 13)' model.LastModified);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsBasicsAndDetails,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 02' 13)' model.LastModified);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsBasicsAndDetails,The following statement contains a magic number: Assert.AreEqual(new DateTime(2014' 02' 13)' model.LastModified);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsListOptions,The following statement contains a magic number: Assert.AreEqual(8' listOptions.Options.Count);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsListOptions,The following statement contains a magic number: Assert.AreEqual(8' listOptions.Options.Count(option => option.IsEnabled));
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsListAndParaOptions,The following statement contains a magic number: Assert.AreEqual(8' lpOptions.Options.Count);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsListAndParaOptions,The following statement contains a magic number: Assert.AreEqual(8' lpOptions.Options.Count(option => option.IsEnabled));
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_LoadsPublications,The following statement contains a magic number: Assert.AreEqual(2' model.Publications.Count);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Load_AllPublicationsFlagCausesAllPublicationsReported,The following statement contains a magic number: Assert.AreEqual(2' model.Publications.Count);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,PublicationsInXml_ReportsAll,The following statement contains a magic number: Assert.That(result.Count' Is.EqualTo(3)' "Did not provide all publications in XML file");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,PublicationsInXml_ReportsAll,The following statement contains a magic number: Assert.That(result[2]' Is.EqualTo("New and unknown publication 2")' "Did not process and report publications as expected");
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithTwoNodesValidatesAgainstSchema,The following statement contains a magic number: AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/ConfigurationItem"' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithPictureOptionsValidatesAgainstSchema,The following statement contains a magic number: const float maxHeight = 1.5f;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithPictureOptionsValidatesAgainstSchema,The following statement contains a magic number: const float maxWidth = 2.5f;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithPictureOptionsValidatesAgainstSchema,The following statement contains a magic number: const float minWidth = 2;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,Save_ConfigWithTwoPublicationsValidatesAgainstSchema,The following statement contains a magic number: AssertThatXmlIn.File(modelFile).HasSpecifiedNumberOfMatchesForXpath("/DictionaryConfiguration/Publications/Publication"' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationModelTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationModelTests.cs,CanDeepClone,The following statement contains a magic number: var model = new DictionaryConfigurationModel  			{  				FilePath = "C:/projects/<project>/configs/dictionary/*.xml"' // existence is irrelevant for this test  				Label = "Root"'  				Version = 4'  				Parts = new List<ConfigurableDictionaryNode> { parentNode }'  				SharedItems = new List<ConfigurableDictionaryNode> { parentNode.DeepCloneUnderSameParent() }'  				Publications = new List<string> { "unabridged"' "college"' "urban colloquialisms" }'  				HomographConfiguration = new DictionaryHomographConfiguration { HomographNumberBefore = true' ShowHwNumber = false }  			};
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,GenerateStyles,The following statement contains a magic number: i < 5
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,GetListItems,The following statement contains a magic number: listItems = VerifyGetListItems(DictionaryNodeListOptions.ListIds.Minor' complexCount + variantCount + 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckDefaultWsUnchecksAllOthers,The following statement contains a magic number: Assert.AreEqual(2' listViewItems.Count(item => item.Checked)' "There should be exactly two items checked initially");
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,LoadWsOptions_DisplayCheckboxEnable,The following statement contains a magic number: Assert.AreEqual(2' listViewItems.Count(item => item.Checked)' "There should be exactly two items checked initially");
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,ValidateSenseControls,The following statement contains a magic number: Assert.AreEqual(2' controlsChecked' "Matched incorrect number of controls for {0}"' label);
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsPreservesOtherNamedWss,The following statement contains a magic number: Assert.AreEqual(2' listViewItems.Count(item => item.Checked)' "There should now be two items checked");
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsControllerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryDetailsControllerTests.cs,CheckNamedWsPreservesOtherNamedWss,The following statement contains a magic number: Assert.AreEqual(2' wsOptions.Options.Count(option => option.IsEnabled)' "There should be exactly two enabled options in the model");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,Init,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do("do"' "undo"' Cache.ActionHandlerAccessor'  				() =>  					{  						m_domainBadWords = Cache.ServiceLocator.GetInstance<ICmSemanticDomainFactory>().Create();  						m_domainTemperature = Cache.ServiceLocator.GetInstance<ICmSemanticDomainFactory>().Create();  						Cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Add(m_domainBadWords);  						Cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Add(m_domainTemperature);  						m_mainDict = Cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS[0];  						m_blank = MakeEntry("blank"' "swear word"' true);  						m_blank.SensesOS[0].SemanticDomainsRC.Add(m_domainBadWords);  						m_hot = MakeEntry("hot"' "high temperature"' false);  						m_hotTemp = m_hot.SensesOS[0];  						m_hotTemp.SemanticDomainsRC.Add(m_domainTemperature);  						m_trouble = MakeSense(m_hot' "trouble");  						m_trouble.DoNotPublishInRC.Add(m_mainDict);  						m_trouble.PicturesOS.Add(Cache.ServiceLocator.GetInstance<ICmPictureFactory>().Create());  						m_desirable = MakeSense(m_hot' "desirable");  						m_fastCar = MakeSense(m_desirable' "fast (car)");    						m_badHot = MakeExample(m_hotTemp' "a hot pile of blank"' true);  						m_goodHot = MakeExample(m_hotTemp' "a hot bath"' false);    						m_water = MakeEntry("water"' "H2O"' false);  						m_waterH2O = m_water.SensesOS[0];  						m_hotWater = MakeEntry("hot water"' "trouble"' false);  						m_hotWaterComponents = MakeEntryRef(m_hotWater' new ICmObject[] { m_trouble' m_waterH2O }'  							new ICmObject[] { m_trouble' m_waterH2O }'  							LexEntryRefTags.krtComplexForm);    						m_blank2 = MakeEntry("blank"' "vacant"' false);  						m_blank3 = MakeEntry("blank"' "erase"' false);  						m_water2 = MakeEntry("water"' "urinate"' true);  						m_waterPrefix = MakeEntry("water"' "aquatic"' false);  						m_waterPrefix.LexemeFormOA.MorphTypeRA = Cache.ServiceLocator.GetInstance<IMoMorphTypeRepository>()  							.GetObject(MoMorphTypeTags.kguidMorphPrefix);    						m_synonym = MakeRefType("synonym"' null' (int)LexRefTypeTags.MappingTypes.kmtSenseCollection);  						m_blip = MakeEntry("blip"' "rude word"' true);  						m_bother = MakeEntry("bother"' "I'm annoyed by that"' false);  						m_ouch = MakeEntry("ouch"' "that hurt"' false);  						m_blipOuch = MakeSense(m_blip.SensesOS[0]' "rude ouch");  						m_blankSynonyms = MakeLexRef(m_synonym' new ICmObject[] {m_blank' m_ouch.SensesOS[0]' m_blip.SensesOS[0]' m_blipOuch' m_bother});    						m_problem = MakeEntry("problem"' "difficulty"' false);  						m_problemSynonyms = MakeLexRef(m_synonym' new ICmObject[] { m_problem' m_trouble });    						m_body = MakeEntry("body"' "body"' true);  						m_arm = MakeEntry("arm"' "arm"' false);  						m_leg = MakeEntry("leg"' "leg"' false);  						m_belly = MakeEntry("belly"' "belly"' true);  						m_torso = MakeEntry("torso"' "torso"' false);  						m_partWhole = MakeRefType("partWhole"' null' (int)LexRefTypeTags.MappingTypes.kmtEntryTree);  						m_bodyParts = MakeLexRef(m_partWhole' new ICmObject[] {m_body' m_arm' m_leg.SensesOS[0]' m_torso' m_belly});  						m_torsoParts = MakeLexRef(m_partWhole' new ICmObject[] {m_torso' m_arm' m_belly});    						m_hotBlank = MakeEntry("hotBlank"' "problem rude word"' false);  						MakeEntryRef(m_hotBlank' new ICmObject[] { m_trouble' m_water2 }'  							new ICmObject[] { m_trouble' m_water2 }'  							LexEntryRefTags.krtComplexForm);    						m_blueColor = MakeEntry("blue"' "color blue"' false);  						m_blueCold = MakeEntry("blue"' "cold"' false);  						m_blueMusic = MakeEntry("blue"' "jazzy"' false);  						m_blueSad = MakeEntry("blue"' "sad"' false);    						m_blueMusic.HomographNumber = 2; // will duplicate blue cold; pathological' but should not crash.  						m_blueSad.HomographNumber = 3; // will conflict with renumbered blueMusic    						m_bluer = m_blueColor.SensesOS[0];  						m_sky = MakeEntry("sky"' "interface between atmosphere and space"' false' true); // true excludes as headword  						m_skyReal = m_sky.SensesOS[0];  						m_blueSky = MakeEntry("blue sky"' "clear' huge potential"' false);  						m_blueSkyComponents = MakeEntryRef(m_blueSky' new ICmObject[] { m_blueColor' m_skyReal }'  							new ICmObject[] { m_bluer' m_skyReal }'  							LexEntryRefTags.krtComplexForm);    						m_ringBell = MakeEntry("ring"' "bell"' false);  						m_ringCircle = MakeEntry("ring"' "circle"' false' true);  						m_ringGold = MakeEntry("ring"' "gold"' false);    						m_blackVerb = MakeEntry("black"' "darken"' false' true);  						m_blackColor = MakeEntry("black"' "dark"' false);    						m_hotArm = MakeEntry("hotarm"' "pitcher"' false);  						m_hotArmComponents = MakeEntryRef(m_hotArm' new ICmObject[] { m_hot' m_arm }'  												new ICmObject[] { m_hot' m_arm }'  												LexEntryRefTags.krtComplexForm);  						m_hotArm.DoNotPublishInRC.Add(m_mainDict);  						m_hotArmComponents.ShowComplexFormsInRS.Add(m_hot);    						m_nolanryan = MakeEntry("Nolan_Ryan"' "pitcher"' false);  						m_nolanryanComponents = MakeEntryRef(m_nolanryan' new ICmObject[] { m_hot }'  												new ICmObject[] { m_hot }'  												LexEntryRefTags.krtVariant);  						m_nolanryanComponents.VariantEntryTypesRS.Add(  							(ILexEntryType)Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS[0]);  						m_nolanryan.DoNotPublishInRC.Add(m_mainDict);    						m_edName = MakeEntry("ed"' "someone called ed"' false);  						m_edSuffix = MakeEntry("ed"' "past"' false' false' true);    						m_revIndex = CreateInterestingReversalEntries();    						m_publisher = new MockPublisher((ISilDataAccessManaged)Cache.DomainDataByFlid' kmainFlid);  						m_publisher.SetOwningPropValue(Cache.LangProject.LexDbOA.Entries.Select(le => le.Hvo).ToArray());  						m_decorator = new DictionaryPublicationDecorator(Cache' m_publisher' ObjectListPublisher.OwningFlid);    						m_revPublisher = new MockPublisher((ISilDataAccessManaged)Cache.DomainDataByFlid' kmainFlid);  						m_revPublisher.SetOwningPropValue(m_revIndex.AllEntries.Select(rie => rie.Hvo).ToArray());  						m_revDecorator = new DictionaryPublicationDecorator(Cache' m_revPublisher' ObjectListPublisher.OwningFlid);  					});
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,Init,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do("do"' "undo"' Cache.ActionHandlerAccessor'  				() =>  					{  						m_domainBadWords = Cache.ServiceLocator.GetInstance<ICmSemanticDomainFactory>().Create();  						m_domainTemperature = Cache.ServiceLocator.GetInstance<ICmSemanticDomainFactory>().Create();  						Cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Add(m_domainBadWords);  						Cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Add(m_domainTemperature);  						m_mainDict = Cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS[0];  						m_blank = MakeEntry("blank"' "swear word"' true);  						m_blank.SensesOS[0].SemanticDomainsRC.Add(m_domainBadWords);  						m_hot = MakeEntry("hot"' "high temperature"' false);  						m_hotTemp = m_hot.SensesOS[0];  						m_hotTemp.SemanticDomainsRC.Add(m_domainTemperature);  						m_trouble = MakeSense(m_hot' "trouble");  						m_trouble.DoNotPublishInRC.Add(m_mainDict);  						m_trouble.PicturesOS.Add(Cache.ServiceLocator.GetInstance<ICmPictureFactory>().Create());  						m_desirable = MakeSense(m_hot' "desirable");  						m_fastCar = MakeSense(m_desirable' "fast (car)");    						m_badHot = MakeExample(m_hotTemp' "a hot pile of blank"' true);  						m_goodHot = MakeExample(m_hotTemp' "a hot bath"' false);    						m_water = MakeEntry("water"' "H2O"' false);  						m_waterH2O = m_water.SensesOS[0];  						m_hotWater = MakeEntry("hot water"' "trouble"' false);  						m_hotWaterComponents = MakeEntryRef(m_hotWater' new ICmObject[] { m_trouble' m_waterH2O }'  							new ICmObject[] { m_trouble' m_waterH2O }'  							LexEntryRefTags.krtComplexForm);    						m_blank2 = MakeEntry("blank"' "vacant"' false);  						m_blank3 = MakeEntry("blank"' "erase"' false);  						m_water2 = MakeEntry("water"' "urinate"' true);  						m_waterPrefix = MakeEntry("water"' "aquatic"' false);  						m_waterPrefix.LexemeFormOA.MorphTypeRA = Cache.ServiceLocator.GetInstance<IMoMorphTypeRepository>()  							.GetObject(MoMorphTypeTags.kguidMorphPrefix);    						m_synonym = MakeRefType("synonym"' null' (int)LexRefTypeTags.MappingTypes.kmtSenseCollection);  						m_blip = MakeEntry("blip"' "rude word"' true);  						m_bother = MakeEntry("bother"' "I'm annoyed by that"' false);  						m_ouch = MakeEntry("ouch"' "that hurt"' false);  						m_blipOuch = MakeSense(m_blip.SensesOS[0]' "rude ouch");  						m_blankSynonyms = MakeLexRef(m_synonym' new ICmObject[] {m_blank' m_ouch.SensesOS[0]' m_blip.SensesOS[0]' m_blipOuch' m_bother});    						m_problem = MakeEntry("problem"' "difficulty"' false);  						m_problemSynonyms = MakeLexRef(m_synonym' new ICmObject[] { m_problem' m_trouble });    						m_body = MakeEntry("body"' "body"' true);  						m_arm = MakeEntry("arm"' "arm"' false);  						m_leg = MakeEntry("leg"' "leg"' false);  						m_belly = MakeEntry("belly"' "belly"' true);  						m_torso = MakeEntry("torso"' "torso"' false);  						m_partWhole = MakeRefType("partWhole"' null' (int)LexRefTypeTags.MappingTypes.kmtEntryTree);  						m_bodyParts = MakeLexRef(m_partWhole' new ICmObject[] {m_body' m_arm' m_leg.SensesOS[0]' m_torso' m_belly});  						m_torsoParts = MakeLexRef(m_partWhole' new ICmObject[] {m_torso' m_arm' m_belly});    						m_hotBlank = MakeEntry("hotBlank"' "problem rude word"' false);  						MakeEntryRef(m_hotBlank' new ICmObject[] { m_trouble' m_water2 }'  							new ICmObject[] { m_trouble' m_water2 }'  							LexEntryRefTags.krtComplexForm);    						m_blueColor = MakeEntry("blue"' "color blue"' false);  						m_blueCold = MakeEntry("blue"' "cold"' false);  						m_blueMusic = MakeEntry("blue"' "jazzy"' false);  						m_blueSad = MakeEntry("blue"' "sad"' false);    						m_blueMusic.HomographNumber = 2; // will duplicate blue cold; pathological' but should not crash.  						m_blueSad.HomographNumber = 3; // will conflict with renumbered blueMusic    						m_bluer = m_blueColor.SensesOS[0];  						m_sky = MakeEntry("sky"' "interface between atmosphere and space"' false' true); // true excludes as headword  						m_skyReal = m_sky.SensesOS[0];  						m_blueSky = MakeEntry("blue sky"' "clear' huge potential"' false);  						m_blueSkyComponents = MakeEntryRef(m_blueSky' new ICmObject[] { m_blueColor' m_skyReal }'  							new ICmObject[] { m_bluer' m_skyReal }'  							LexEntryRefTags.krtComplexForm);    						m_ringBell = MakeEntry("ring"' "bell"' false);  						m_ringCircle = MakeEntry("ring"' "circle"' false' true);  						m_ringGold = MakeEntry("ring"' "gold"' false);    						m_blackVerb = MakeEntry("black"' "darken"' false' true);  						m_blackColor = MakeEntry("black"' "dark"' false);    						m_hotArm = MakeEntry("hotarm"' "pitcher"' false);  						m_hotArmComponents = MakeEntryRef(m_hotArm' new ICmObject[] { m_hot' m_arm }'  												new ICmObject[] { m_hot' m_arm }'  												LexEntryRefTags.krtComplexForm);  						m_hotArm.DoNotPublishInRC.Add(m_mainDict);  						m_hotArmComponents.ShowComplexFormsInRS.Add(m_hot);    						m_nolanryan = MakeEntry("Nolan_Ryan"' "pitcher"' false);  						m_nolanryanComponents = MakeEntryRef(m_nolanryan' new ICmObject[] { m_hot }'  												new ICmObject[] { m_hot }'  												LexEntryRefTags.krtVariant);  						m_nolanryanComponents.VariantEntryTypesRS.Add(  							(ILexEntryType)Cache.LangProject.LexDbOA.VariantEntryTypesOA.PossibilitiesOS[0]);  						m_nolanryan.DoNotPublishInRC.Add(m_mainDict);    						m_edName = MakeEntry("ed"' "someone called ed"' false);  						m_edSuffix = MakeEntry("ed"' "past"' false' false' true);    						m_revIndex = CreateInterestingReversalEntries();    						m_publisher = new MockPublisher((ISilDataAccessManaged)Cache.DomainDataByFlid' kmainFlid);  						m_publisher.SetOwningPropValue(Cache.LangProject.LexDbOA.Entries.Select(le => le.Hvo).ToArray());  						m_decorator = new DictionaryPublicationDecorator(Cache' m_publisher' ObjectListPublisher.OwningFlid);    						m_revPublisher = new MockPublisher((ISilDataAccessManaged)Cache.DomainDataByFlid' kmainFlid);  						m_revPublisher.SetOwningPropValue(m_revIndex.AllEntries.Select(rie => rie.Hvo).ToArray());  						m_revDecorator = new DictionaryPublicationDecorator(Cache' m_revPublisher' ObjectListPublisher.OwningFlid);  					});
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The following statement contains a magic number: Assert.AreEqual(6' m_revDecorator.VecProp(m_revIndex.Hvo' ObjectListPublisher.OwningFlid).Length'  				"there should be 6 Reversal Entries and Sub[sub]entries");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The following statement contains a magic number: Assert.AreEqual(2' entries.Length' "there should be only 2 main Reversal Entry that can be published");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_ExcludesSubentriesAndUnpublishable,The following statement contains a magic number: Assert.AreEqual(2' entry.SubentriesOS.Count' "'Reversal 2 Form' has two subentries");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_IncludesSenselessReversalEntries,The following statement contains a magic number: Assert.AreEqual(6' m_revDecorator.VecProp(m_revIndex.Hvo' ObjectListPublisher.OwningFlid).Length'  				"there should be 6 Reversal Entries and Sub[sub]entries");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,GetSortedAndFilteredReversalEntries_IncludesSenselessReversalEntries,The following statement contains a magic number: Assert.AreEqual(2' entries.Length' "there should be only 2 main Reversal Entry that can be published");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The following statement contains a magic number: Assert.That(sensesOfHot.Length' Is.EqualTo(2)' "one bad sense should be eliminated.");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The following statement contains a magic number: Assert.That(m_decorator.get_VecSize(m_hot.Hvo' LexEntryTags.kflidSenses)' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The following statement contains a magic number: m_decorator.VecProp(m_hot.Hvo' LexEntryTags.kflidSenses' 2' out chvo' arrayPtr);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The following statement contains a magic number: var values = MarshalEx.NativeToArray<int>(arrayPtr' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,SimpleFiltering,The following statement contains a magic number: Assert.That(m_decorator.VecProp(m_blankSynonyms.Hvo' LexReferenceTags.kflidTargets).Length' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographNumberAfterPublishedNonHeadword,The following statement contains a magic number: Assert.That(m_decorator.get_IntProp(m_ringGold.Hvo' LexEntryTags.kflidHomographNumber)' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DuplicateHomographs,The following statement contains a magic number: Assert.That(m_decorator.get_IntProp(m_blueSad.Hvo' LexEntryTags.kflidHomographNumber)' Is.EqualTo(4));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DuplicateHomographs,The following statement contains a magic number: Assert.That(hnMusic == 2 && hnCold == 3 || hnMusic == 3 && hnCold == 2' Is.True);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DuplicateHomographs,The following statement contains a magic number: Assert.That(hnMusic == 2 && hnCold == 3 || hnMusic == 3 && hnCold == 2' Is.True);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DuplicateHomographs,The following statement contains a magic number: Assert.That(hnMusic == 2 && hnCold == 3 || hnMusic == 3 && hnCold == 2' Is.True);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,DuplicateHomographs,The following statement contains a magic number: Assert.That(hnMusic == 2 && hnCold == 3 || hnMusic == 3 && hnCold == 2' Is.True);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The following statement contains a magic number: Assert.That(m_blank2.HomographNumber' Is.EqualTo(2)' "real HN should be set automatically");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The following statement contains a magic number: Assert.That(m_water2.HomographNumber' Is.EqualTo(2)' "real HN should be set automatically");
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,HomographAndHeadword,The following statement contains a magic number: Assert.That(m_decorator.get_IntProp(m_blank3.Hvo' LexEntryTags.kflidHomographNumber)' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,IncompleteLexReferences,The following statement contains a magic number: Assert.That(Cache.DomainDataByFlid.get_VecSize(m_arm.Hvo' lexEntryRefsFlid)' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: VerifyPropChanged(mockRoot.LastPropChanged' 27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: VerifyPropChanged(mockRoot.LastPropChanged' 27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: VerifyPropChanged(mockRoot.LastPropChanged' 27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: VerifyPropChanged(mockRoot.LastPropChanged' 27' LexEntryTags.kflidLexemeForm' 10' 11' 12);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(m_hot.Hvo' LexEntryTags.kflidSenses' 2' 1' 1);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: VerifyPropChanged(mockRoot.LastPropChanged' m_hot.Hvo' LexEntryTags.kflidSenses' 0' 2' 0);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(m_arm.Hvo' lexEntryRefsFlid' 2' 1' 0);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecoratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryPublicationDecoratorTests.cs,PropChanged,The following statement contains a magic number: m_decorator.PropChanged(m_hotBlank.Hvo' complexRefsFlid' 0' 0' 3);
Magic Number,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The following statement contains a magic number: Assert.AreEqual(2' m_cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Count' "The number of top-level semantic domains");
Magic Number,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists,The following statement contains a magic number: Assert.AreEqual(11' repoSemDom.Count' "The total number of semantic domains");
Magic Number,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The following statement contains a magic number: Assert.AreEqual(2' m_cache.LangProject.SemanticDomainListOA.PossibilitiesOS.Count' "The number of top-level semantic domains");
Magic Number,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The following statement contains a magic number: Assert.AreEqual(11' repoSemDom.Count' "The total number of semantic domains");
Magic Number,SIL.FieldWorks.XWorks,ExportDialogTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ExportDialogTests.cs,ExportTranslatedLists2,The following statement contains a magic number: sem11.QuestionsOS[2].Question.set_String(wsFr' "Quels sont les mots qui signifient l'endroit ou le pays au-delà du ciel?");
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveCoreTexts,The following statement contains a magic number: VerifyTextsChangedArgs(2' 1' 0);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(2' 0' 1);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(2' 3' 0);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(2' 3' 0);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: expected.RemoveAt(2);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(2' 0' 1);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: ((MockStText)expected[3]).IsValidObject = false;
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: expected.RemoveAt(3);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(3' 0' 1);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: ((MockStText)expected[2]).IsValidObject = false;
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: expected.RemoveAt(2);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\InterestingTextsTests.cs,AddAndRemoveScripture,The following statement contains a magic number: VerifyTextsChangedArgs(2' 0' 1);
Magic Number,SIL.FieldWorks.XWorks,ItemClickedTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,ItemClicked,The following statement contains a magic number: view.Width = 1000;
Magic Number,SIL.FieldWorks.XWorks,ItemClickedTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,ItemClicked,The following statement contains a magic number: where = new Point(widthKick + 5' 1);
Magic Number,SIL.FieldWorks.XWorks,ItemClickedTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,ItemClicked,The following statement contains a magic number: where = new Point(widthKick + widthKickSense * 2 + 5' 1);
Magic Number,SIL.FieldWorks.XWorks,ItemClickedTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,ItemClicked,The following statement contains a magic number: where = new Point(widthKick + widthKickSense * 2 + 5' 1);
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,NoteItemWidth,The following statement contains a magic number: int dx = mpx*96/72000;
Magic Number,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,NoteItemWidth,The following statement contains a magic number: int dx = mpx*96/72000;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_PutsItemAtProperPosition,The following statement contains a magic number: Assert.That(macros[2]' Is.EqualTo(macroImplementors[0]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_PutsConflictAtFirstAvailableSpot,The following statement contains a magic number: Assert.That(macros[0]' Is.EqualTo(macroImplementors[2]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_PutsConflictAtFirstAvailableSpot,The following statement contains a magic number: Assert.That(macros[2]' Is.EqualTo(macroImplementors[0]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_SurvivesTooManyMacros,The following statement contains a magic number: i < 20
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_SurvivesTooManyMacros,The following statement contains a magic number: Assert.That(macros[2]' Is.EqualTo(macroImplementors[0]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_SurvivesTooManyMacros,The following statement contains a magic number: Assert.That(macros[1]' Is.EqualTo(macroImplementors[2]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_SurvivesTooManyMacros,The following statement contains a magic number: Assert.That(macros[3]' Is.EqualTo(macroImplementors[3]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,InitMacro_SurvivesTooManyMacros,The following statement contains a magic number: Assert.That(macros[3]' Is.EqualTo(macroImplementors[3]));
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,GetValidMockSelection,The following statement contains a magic number: sel.EndIch = 2;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,GetValidMockSelection,The following statement contains a magic number: sel.AnchorIch = 5;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The following statement contains a magic number: sel.EndHvo = sel.AnchorHvo = 317;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The following statement contains a magic number: sel.EndIch = 2;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The following statement contains a magic number: sel.AnchorIch = 5;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The following statement contains a magic number: sel.EndHvo = 316;
Magic Number,SIL.FieldWorks.XWorks,MacroListenerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\MacroListenerTests.cs,SafeToDoMacro_WithUnsuitableSelection_ReturnsFalse,The following statement contains a magic number: sel.EndTag = 3;
Magic Number,SIL.FieldWorks.XWorks,ReversalIndexServicesTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ReveralIndexServicesTests.cs,CreateOrRemoveReversalIndexConfigurationFiles_DeletethNotValidConfigs,The following statement contains a magic number: CreateDummyConfigForWS(wrongWsFilename' analWss[2]);
Magic Number,SIL.FieldWorks.XWorks,ReversalIndexServicesTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ReveralIndexServicesTests.cs,CreateOrRemoveReversalIndexConfigurationFiles_DeletethNotValidConfigs,The following statement contains a magic number: var normalFilename = GetFilenameForWs(riConfigDir' analWss[2]);
Magic Number,SIL.FieldWorks.XWorks,ReversalIndexServicesTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ReveralIndexServicesTests.cs,CreateOrRemoveReversalIndexConfigurationFiles_DeletethNotValidConfigs,The following statement contains a magic number: CreateDummyConfigForWS(normalFilename' analWss[2]);
Magic Number,SIL.FieldWorks.XWorks,TreeBarHandlerUtilsTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\TreeBarHandlerUtilsTests.cs,DuplicateTest,The following statement contains a magic number: Assert.AreEqual(testList.PossibilitiesOS.Count' 2);
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertToChar,The following statement contains a magic number: textBox.SelectionStart = 9;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertToChar,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(6)'  					"SelectionStart should have been moved back");
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertToCharAtEnd,The following statement contains a magic number: textBox.SelectionStart = 9;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertToCharAtEnd,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(6)'  					"SelectionStart should have been moved back");
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertFromChar,The following statement contains a magic number: textBox.SelectionStart = 6;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertFromChar,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(9)'  					"SelectionStart should have been moved forward");
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertFromCharAtEnd,The following statement contains a magic number: textBox.SelectionStart = 6;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,HandlerSetsIPCorrectlyWhenConvertFromCharAtEnd,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(9)'  					"SelectionStart should have been moved forward");
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertRLM,The following statement contains a magic number: textBox.SelectionStart = 9;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertRLM,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(10)'  					"SelectionStart should be positioned based on 200F converting to [RLM]");
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertRLMAtEnd,The following statement contains a magic number: textBox.SelectionStart = 9;
Magic Number,SIL.FieldWorks.XWorks,UnicodeCharacterEditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\UnicodeCharacterEditingHelperTests.cs,ConvertRLMAtEnd,The following statement contains a magic number: Assert.That(textBox.SelectionStart' Is.EqualTo(10)'  					"SelectionStart should be positioned based on 200F ultimately converting to [RLM]");
Magic Number,SIL.FieldWorks.XWorks,WordsUsedOnlyElsewhereFilterTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\WordsUsedOnlyElsewhereFilterTests.cs,TryItOut,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do("undo"' "redo"' m_actionHandler'  				() =>  					{  						var wfTry = MakeWordform("try");  						ISegment seg1 = MakeText("try it out");  						seg1.AnalysesRS.Add(wfTry);  						Assert.That(wfTry.FullConcordanceCount' Is.EqualTo(1));  						ManyOnePathSortItem itemTry = new ManyOnePathSortItem(wfTry);  						// Here the global count is non-zero but the corpus count is zero.  						Assert.That(filter.Accept(itemTry)' Is.False' "should not accept an item which occurs elsewhere but not in corpus");  						sda.HvoToOccurrenceCount[wfTry.Hvo] = 1;  						Assert.That(filter.Accept(itemTry)' Is.True' "should accept an item in an included text");  						sda.HvoToOccurrenceCount[wfTry.Hvo] = 5;  						Assert.That(filter.Accept(itemTry)' Is.True' "should accept an item in an included text' even if there are other occurrences");  						var wfNowhere = MakeWordform("nowhere");  						ManyOnePathSortItem itemNowhere = new ManyOnePathSortItem(wfNowhere);  						Assert.That(filter.Accept(itemNowhere)' Is.True'"should accept an item that occurs nowhere at all.");  					});
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_MatchesLabelsWhenUIIsLocalized,The following statement contains a magic number: Assert.AreEqual(2' updatedConfigModel.Parts.Count' "Should have 2 top-level nodes");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_PreservesOrderOfBibliographies,The following statement contains a magic number: Assert.LessOrEqual(i' refdSenseChildren.Count - 5' "Bibliography nodes should not have been bumped to the end of the list");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,MigrateOldConfigurationsIfNeeded_PreservesOrderOfBibliographies,The following statement contains a magic number: Assert.AreEqual(2' bibCount' "Should be exactly two Bibliography nodes (sense and entry)");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,DictionaryConfigurationMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\DictionaryConfigurationMigratorTests.cs,StoredDefaultsUpdatedFromCurrentDefaults,The following statement contains a magic number: Assert.AreEqual(2' oldModel.Parts[0].Children[0].Children.Count' "Old non-matching part was not retained");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReferencedEntriesToGlossOrSummary,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel  			{  				Version = 3'  				Parts = new List<ConfigurableDictionaryNode> { main }  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleSentenceLabels,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesFreshlySharedNodes,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesExampleOptions,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesBibliographyLabels,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesHeadWordRefs,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 2' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesReversalHeadwordRefs,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel  			{  				Version = 2' WritingSystem = "en"'  				Parts = new List<ConfigurableDictionaryNode> { configParent }'  				FilePath = Path.Combine("ReversalIndex"' "English.fwdictconfig")  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_NullFieldDescriptionIsLogged,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 2' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesSharedItems,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel  			{  				Version = 2' WritingSystem = "en"'  				Parts = new List<ConfigurableDictionaryNode>()'  				FilePath = Path.Combine("ReversalIndex"' "English.fwdictconfig")'  				SharedItems = new List<ConfigurableDictionaryNode> { configParent }  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_MissingReversalWsFilledIn,The following statement contains a magic number: var configModelEn = new DictionaryConfigurationModel  			{  				Version = 2'  				Parts = new List<ConfigurableDictionaryNode>()'  				Label = "English"'  				FilePath = Path.Combine("ReversalIndex"' "English.fwdictconfig")  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_MissingReversalWsFilledIn,The following statement contains a magic number: var configModelTamil = new DictionaryConfigurationModel  			{  				Version = 2'  				Parts = new List<ConfigurableDictionaryNode>()'  				Label = "Tamil (International Phonetic Alphabet)"'  				FilePath = Path.Combine("ReversalIndex"' "Tamil.fwdictconfig")  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_MissingReversalWsFilledIn_NonReversalsIgnored,The following statement contains a magic number: var configModelRoot = new DictionaryConfigurationModel  			{  				Version = 2'  				Parts = new List<ConfigurableDictionaryNode>()'  				Label = "English"'  				FilePath = Path.Combine("NotReversalIndex"' "English.fwdictconfig")  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_Pre83ReversalCopiesGrabNameFromFile,The following statement contains a magic number: var configModelRoot = new DictionaryConfigurationModel  			{  				Version = 2'  				Parts = new List<ConfigurableDictionaryNode>()'  				Label = "My Copy"'  				FilePath = Path.Combine("ReversalIndex"' "My Copy-English-#Engl464.fwdictconfig")  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_SubsubsensesNodeAddedIfNeeded,The following statement contains a magic number: Assert.AreEqual(2' subSenses.Children.Count' "Subsenses children were not moved to shared");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ReversalSubentriesMigratedToSharedNodes,The following statement contains a magic number: Assert.AreEqual(2' subEntries.Children.Count' "Subentries children were not moved to shared");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_ReversalSubentriesNotDuplicatedIfPresentMigratedToSharedNodes,The following statement contains a magic number: Assert.AreEqual(2' subEntries.Children.Count' "Subentries children were not moved to shared");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_UpdatesTranslationsCssClass,The following statement contains a magic number: var configModel = new DictionaryConfigurationModel { Version = 3' Parts = new List<ConfigurableDictionaryNode> { configParent } };
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_Variants,The following statement contains a magic number: Assert.AreEqual(2' varTypeNode.Children.Count' "'Variant Forms' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_Variants,The following statement contains a magic number: Assert.AreEqual(2' varTypeNode.Children.Count'  				"'Variants of Sense' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_Variants,The following statement contains a magic number: Assert.AreEqual(2' varTypeNode.Children.Count'  				"'Variant of' grandchildren should only be 'Reverse Abbreviation' and 'Reverse Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'Other Referenced Complex Forms' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'Referenced Complex Forms' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'MainEntrySubentries' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'Minor Subentries' grandchildren should only be 'Abbreviation' and 'Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'Components' grandchildren should only be 'Reverse Abbreviation' and 'Reverse Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ComplexForms,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count'  				"'Component References' grandchildren should only be 'Reverse Abbreviation' and 'Reverse Name'");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ReversalIndexes,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count' "Should only have two children' Abbreviation and Name");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFromConfigV5toV6_SwapsReverseAbbrAndAbbreviation_ReversalIndexes,The following statement contains a magic number: Assert.AreEqual(2' cfTypeNode.Children.Count' "Should only have two children' Abbreviation and Name");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The following statement contains a magic number: Assert.That(migratedPicturesNode.Children.Count' Is.GreaterThanOrEqualTo(3)' "Not enough child nodes. Maybe Headword and Gloss weren't added.");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The following statement contains a magic number: Assert.That(migratedPicturesNode.Children[2].Label' Is.StringMatching("Headword")' "Headword not introduced");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstAlphaMigratorTests.cs,MigrateFrom83Alpha_PicturesChildrenUpdated,The following statement contains a magic number: Assert.That(migratedPicturesNode.Children[3].Label' Is.StringMatching("Gloss")' "Gloss not introduced");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAfterThePreceedingSiblingFromDefault,The following statement contains a magic number: Assert.IsTrue(alphaModel.Parts[0].Children[2].FieldDescription == "OtherBrotherBob"' "The original order of unrelated fields should be retained");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_GroupPlacedAtEndIfNoPreceedingSiblingFound,The following statement contains a magic number: Assert.IsTrue(alphaModel.Parts[0].Children[2].FieldDescription == group'  				"The group should be tacked on the end when the preceeding sibling couldn't be matched");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual(2' alphaModel.Parts.Count' "All root-level Complex Form nodes should have been removed");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual(isHybrid ? 5 : 4' mainChildren.Count' "All child nodes of Main Entry (Complex Forms) should have been copied to Main Entry");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual(isHybrid ? 5 : 4' mainChildren.Count' "All child nodes of Main Entry (Complex Forms) should have been copied to Main Entry");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual("ComplexKid"' mainChildren[2].FieldDescription' "The other child node should have been inserted after the existing one");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual(typeof(DictionaryNodeGroupingOptions)' mainChildren[3].DictionaryNodeOptions.GetType()' "The final node should be the group");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: var groupedChildren = mainChildren[3].Children;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual(3' groupedChildren.Count' "groupedChildren.Count");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.AreEqual("ComplexFormEntryRefs"' groupedChildren[2].FieldDescription' "The legit node should have supplanted the placeholder Custom node");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ConflatesMainEntriesForLexemey,The following statement contains a magic number: Assert.False(groupedChildren[isHybrid ? 1 : 2].IsCustomField' "Component References is NOT a Custom field");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The following statement contains a magic number: Assert.AreEqual(4' parts.Count' "No parts should have been lost in migration");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The following statement contains a magic number: Assert.AreEqual("Variants"' parts[2].Label);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The following statement contains a magic number: Assert.AreEqual(KidField' parts[2].Children[0].FieldDescription);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The following statement contains a magic number: Assert.AreEqual("Variants"' parts[3].Label);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_HandlesDuplicateVariantsNode,The following statement contains a magic number: Assert.AreEqual(KidField' parts[3].Children[0].FieldDescription);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The following statement contains a magic number: Assert.That(migratedExtendedNoteNode.Children[2].Children[0].Label' Is.StringMatching("Example Sentence")' "Example Sentence not migrated");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_ExtendedNoteChildrenAreMigrated,The following statement contains a magic number: Assert.That(migratedExtendedNoteNode.Children[2].Children[1].Label' Is.StringMatching("Translations")' "Translations not migrated");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFromConfig83AlphaToBeta10_UpdatesEtymologyCluster,The following statement contains a magic number: Assert.AreEqual(7' etymChildren.Count);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFromConfig83AlphaToBeta10_UpdatesEtymologyCluster,The following statement contains a magic number: Assert.That(childNodes.Count' Is.EqualTo(2)' "We ought to have Abbreviation and Name nodes here");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_UpdatesReversalEtymologyCluster,The following statement contains a magic number: Assert.AreEqual(7' etymologyNode.Children.Count' "There should be 7 nodes after the conversion.");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_SelectsProperReferencedComplexForms,The following statement contains a magic number: Assert.AreEqual(2' mainEntryChildren.Count' "no children should have been created or deleted");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_SelectsDialectLabels,The following statement contains a magic number: Assert.AreEqual(2' dialectLabels.Children.Count' "two children should have been created");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemoveReferencedHeadwordSubField,The following statement contains a magic number: alphaModel.SharedItems[0].Children[2].Children[0].SubField = "MLHeadWord";
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemoveReferencedHeadwordSubField,The following statement contains a magic number: alphaModel.Version = 18;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemoveReferencedHeadwordSubField,The following statement contains a magic number: Assert.AreNotEqual("MLHeadWord"' betaModel.SharedItems[0].Children[2].Children[0].SubField);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemoveReferencedHeadwordSubField,The following statement contains a magic number: Assert.Null(betaModel.SharedItems[0].Children[2].Children[0].SubField);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83AlphaToBeta10_ConfigReferencedEntriesUseAsPrimary,The following statement contains a magic number: var alphaModel = new DictionaryConfigurationModel  			{  				Version = 20'  				WritingSystem = "en"'  				FilePath = string.Empty'  				Parts = new List<ConfigurableDictionaryNode> { mainEntryNode }  			};
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The following statement contains a magic number: version12Model.Version = 12;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_DoesNotAddDirectChildrenToSharingParents,The following statement contains a magic number: version16Model.Version = 16;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemovesErroneouslyAddedChildren,The following statement contains a magic number: version16Model.Version = 16;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\FirstBetaMigratorTests.cs,MigrateFrom83Alpha_RemovesErroneouslyAddedChildren,The following statement contains a magic number: version17Model.Version = 17;
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_SubsensesGetsConvertedSenseChildren,The following statement contains a magic number: Assert.AreEqual(oldSubsensesNode.Children[2].FieldDescription' "PostSubsenses"' "Defaults not copied into fields following Subsenses");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TreatsComplexAsMainForStem,The following statement contains a magic number: Assert.AreEqual(3' convertedModel.Parts.Count' "Number of top-level nodes");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TreatsComplexAsMainForStem,The following statement contains a magic number: var convertedVariantNode = convertedModel.Parts[2];
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_ListOptionsMultipleItemsWorks,The following statement contains a magic number: Assert.AreEqual(lexRelationOptions.Options.Count' 2);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConvertLayoutTreeNodeToConfigNode_AllDifferentNumStylesResultInNewStyleSheets,The following statement contains a magic number: i < 2 + senseNumberOptions.Length
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 3' "The copied children did not get migrated");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_TwoCopiesBothGetValueFromBase,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children[2].FieldDescription' childField' "Field description for copy of child not migrated");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NewNodeFromBaseIsMerged,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 2' "New node from base was not merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_OrderFromOldModelIsRetained,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 2' "Nodes incorrectly merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_UnmatchedNodeFromOldModelIsCustom,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 2' "Nodes incorrectly merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_NestedCustomFieldsAreAllMarked,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 2' "Nodes incorrectly merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_CustomFieldInStrangePlaceDoesNotThrow,The following statement contains a magic number: Assert.AreEqual(convertedModel.Parts[0].Children.Count' 2' "Nodes incorrectly merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The following statement contains a magic number: Assert.AreEqual(3' convertedModel.Parts[0].Children.Count' "Nodes incorrectly merged");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_ProperChildrenAdded,The following statement contains a magic number: Assert.AreEqual(2' customPersonNode.Children.Count' "Custom atomic list reference field should have two children added");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,CopyNewDefaultsIntoConvertedModel_DuplicatedConvertedNodesDoesNotBreakOriginal,The following statement contains a magic number: AssertThatXmlIn.File(convertedModelFile.Path).HasSpecifiedNumberOfMatchesForXpath(refEntriesPath + "ConfigurationItem[@name='Gloss (or Summary Definition)']"' 2);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The following statement contains a magic number: Assert.AreEqual(3' convertedTopNode.Children[0].Children[0].Children.Count' "Greatgrandchildren should be converted");
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\DictionaryConfigurationMigrators\PreHistoricMigratorTests.cs,ConfigsMigrateModifiedLabelOkay,The following statement contains a magic number: var convertedCommentNode = convertedTopNode.Children[0].Children[0].Children[2];
Missing Default,SIL.FieldWorks.XWorks,BulkEditBarTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\BulkEditBarTests.cs,GrabSensesWeNeed,The following switch statement is missing a default case: switch (sense.Gloss.AnalysisDefaultWritingSystem.Text)  				{  					case "green":  						green = sense;  						break;  					case "to.see":  						see = sense;  						break;  					case "to.understand":  						understand = sense;  						break;  					case "English subsense gloss1.1":  						subsense1 = sense;  						break;  					case "English subsense gloss1.2":  						subsense2 = sense;  						break;  					case "English gloss":  						english1 = sense;  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,CssGeneratorTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\CssGeneratorTests.cs,VerifyExtraFontInfoInCss,The following switch statement is missing a default case: switch (superscript)  			{  				case (FwSuperscriptVal.kssvSub):  					{  						Assert.That(css' Contains.Substring("font-size:58%")' "subscript did not affect size");  						Assert.That(css' Contains.Substring("position:relative;")' "subscript was not applied");  						Assert.That(css' Contains.Substring("top:0.3em;")' "subscript was not applied");  						break;  					}  				case (FwSuperscriptVal.kssvSuper):  					{  						Assert.That(css' Contains.Substring("font-size:58%")' "superscript did not affect size");  						Assert.That(css' Contains.Substring("position:relative;")' "superscript was not applied");  						Assert.That(css' Contains.Substring("top:-0.6em;")' "superscript was not applied");  						break;  					}  				case (FwSuperscriptVal.kssvOff):  					{  						//superscript and subscript are disabled either by having the value of vertical-align:initial' or by having no vertical-align at all.  						if (css.Contains("vertical-align"))  						{  							Assert.That(css' Contains.Substring("vertical-align:initial;")' "superscript was not disabled");  						}  						break;  					}  			}
Missing Default,SIL.FieldWorks.XWorks,TestVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\xWorksTests\ItemClickedTests.cs,Display,The following switch statement is missing a default case: switch (frag)  			{  				case 1: // LexEntry  					vwenv.OpenParagraph();  					vwenv.AddObjProp(LexEntryTags.kflidLexemeForm' this' 2);  					vwenv.AddObjVecItems(LexEntryTags.kflidSenses' this' 3);  					vwenv.CloseParagraph();  					break;  				case 2: // MoForm  					vwenv.AddStringAltMember(MoFormTags.kflidForm' m_cache.DefaultVernWs' this);  					NoteItemWidth(vwenv' hvo' MoFormTags.kflidForm' m_cache.DefaultVernWs);  					break;  				case 3: // LexSense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					int flid = m_cache.MetaDataCacheAccessor.GetFieldId("LexSense"' "LexSenseReferences"' false);  					vwenv.AddObjVecItems(flid' this' 4);  					break;  				case 4: // LexReference  					vwenv.AddObjVecItems(LexReferenceTags.kflidTargets' this' 5);  					break;  				case 5: // target of lex reference' which in our test data is made to be a sense  					vwenv.AddStringAltMember(LexSenseTags.kflidGloss' m_cache.DefaultAnalWs' this);  					NoteItemWidth(vwenv' hvo' LexSenseTags.kflidGloss' m_cache.DefaultAnalWs);  					break;  			}
