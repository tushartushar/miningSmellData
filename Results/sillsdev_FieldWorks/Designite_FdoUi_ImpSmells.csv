Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The method has 104 lines of code.
Long Method,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The method has 109 lines of code.
Long Method,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The method has 138 lines of code.
Complex Method,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoUpdatePos,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,MakeUi,Cyclomatic complexity of the method is 19
Complex Method,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,Cyclomatic complexity of the method is 20
Complex Method,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,Cyclomatic complexity of the method is 21
Complex Method,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayOrCreateEntry,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayRelatedEntries,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.FdoUi,LexEntryVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,Display,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.FdoUi,LexEntryVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,AddHeadwordWithHomograph,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,m_PhonFeaturePopupTreeManager_AfterSelect,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,IsItemEligible,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,Cyclomatic complexity of the method is 17
Complex Method,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetBottomMessage,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,Cyclomatic complexity of the method is 9
Long Parameter List,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CreateNewUiObject,The method has 6 parameters. Parameters: mediator' propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,DefaultCreateNewUiObject,The method has 5 parameters. Parameters: classId' hvoOwner' flid' insertionPosition' cache
Long Parameter List,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,HandleRightClick,The method has 5 parameters. Parameters: mediator' propertyTable' hostControl' shouldDisposeThisWhenClosed' adjustMenu
Long Parameter List,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,HandleRightClick,The method has 5 parameters. Parameters: mediator' propertyTable' hostControl' shouldDisposeThisWhenClosed' sMenuId
Long Parameter List,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,HandleRightClick,The method has 6 parameters. Parameters: mediator' propertyTable' hostControl' shouldDisposeThisWhenClosed' sMenuId' adjustMenu
Long Parameter List,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CreateNewUiObject,The method has 5 parameters. Parameters: propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,LexSenseUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CreateNewUiObject,The method has 5 parameters. Parameters: propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,FsFeatDefnUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FsFeatDefnUi.cs,CreateNewUiObject,The method has 6 parameters. Parameters: mediator' propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,FindEntryForWordform,The method has 5 parameters. Parameters: cache' hvoSrc' tagSrc' ichMin' ichLim
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayOrCreateEntry,The method has 11 parameters. Parameters: cache' hvoSrc' tagSrc' wsSrc' ichMin' ichLim' owner' mediator' propertyTable' helpProvider' helpFileKey
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayEntry,The method has 7 parameters. Parameters: cache' owner' mediator' propertyTable' helpProvider' helpFileKey' tssWfIn
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayEntry,The method has 7 parameters. Parameters: cache' mediatorIn' propertyTable' helpProvider' helpFileKey' tssWfIn' wfa
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayEntries,The method has 8 parameters. Parameters: cache' owner' mediator' propertyTable' helpProvider' helpFileKey' tssWfIn' wfa
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayEntriesRecursive,The method has 9 parameters. Parameters: cache' owner' mediator' propertyTable' stylesheet' helpProvider' helpFileKey' entries' tssWf
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayRelatedEntries,The method has 6 parameters. Parameters: cache' mediatorIn' propertyTable' helpProvider' helpFileKey' tss
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayRelatedEntries,The method has 8 parameters. Parameters: cache' owner' mediator' propertyTable' helpProvider' helpFileKey' tssWf' hideInsertButton
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayRelatedEntries,The method has 7 parameters. Parameters: cache' sel' owner' mediator' propertyTable' helpProvider' helpFileKey
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,ShowFindEntryDialog,The method has 5 parameters. Parameters: cache' mediator' propertyTable' tssForm' owner
Long Parameter List,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,ShowSummaryDialog,The method has 5 parameters. Parameters: owner' tssWf' helpProvider' helpFileKey' styleSheet
Long Parameter List,SIL.FieldWorks.FdoUi,LexPronunciationUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexPronunciationUi.cs,CreateNewUiObject,The method has 5 parameters. Parameters: propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,PartOfSpeechUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PartOfSpeechUi.cs,CreateNewUiObject,The method has 6 parameters. Parameters: mediator' propertyTable' classId' hvoOwner' flid' insertionPosition
Long Parameter List,SIL.FieldWorks.FdoUi,BulkEditBarPhonologicalFeatures,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,BulkEditBarPhonologicalFeatures,The method has 5 parameters. Parameters: bv' spec' mediator' propertyTable' cache
Long Parameter List,SIL.FieldWorks.FdoUi,BrowseViewerPhonologicalFeatures,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,BrowseViewerPhonologicalFeatures,The method has 8 parameters. Parameters: nodeSpec' hvoRoot' fakeFlid' cache' mediator' propertyTable' sortItemProvider' sda
Long Parameter List,SIL.FieldWorks.FdoUi,BrowseViewerPhonologicalFeatures,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,CreateBulkEditBar,The method has 5 parameters. Parameters: bv' spec' mediator' propertyTable' cache
Long Parameter List,SIL.FieldWorks.FdoUi,WfiWordformUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\WfiWordformUi.cs,UpdateWordsToolDisplay,The method has 5 parameters. Parameters: curDisplayedWfId' updateUserCount' updateUserStatusIcon' updateParserCount' updateParserStatusIcon
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,SetDlgInfo,The method has 5 parameters. Parameters: obj' cache' mediator' propertyTable' tssNote
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetDlgInfo,The method has 8 parameters. Parameters: cache' mediator' propertyTable' wp' mainObj' mergeCandidates' guiControl' helpTopic
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,LoadDomainAndRelationInfo,The method has 6 parameters. Parameters: cache' hvoEntry' domainsOut' lexrelsOut' cdaTemp' owner
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWords,The method has 9 parameters. Parameters: cache' sel' hvoEntry' domains' lexrels' cdaTemp' styleSheet' mediator' hideInsertButton
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWordsView,The method has 5 parameters. Parameters: cache' hvoRoot' headword' sda' wsUser
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,LoadDataFor,The method has 7 parameters. Parameters: vwenv' rghvo' chvo' hvoParent' tag' frag' ihvoMin
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,SummaryDialogForm,The method has 5 parameters. Parameters: leui' tssForm' helpProvider' helpFileKey' styleSheet
Long Parameter List,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,SummaryDialogForm,The method has 8 parameters. Parameters: rghvo' tssForm' helpProvider' helpFileKey' styleSheet' cache' mediator' propertyTable
Long Identifier,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,,The length of the parameter m_InflectionFeatureTreeManager is 30.
Long Identifier,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,,The length of the parameter m_PhonologicalFeatureTreeManager is 32.
Long Identifier,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,,The length of the parameter m_fPossibilitiesDependOnObject is 30.
Long Statement,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoIt,The length of the statement  "			UndoableUnitOfWorkHelper.Do(FdoUiStrings.ksUndoBulkEditPOS' FdoUiStrings.ksRedoBulkEditPOS' m_cache.ActionHandlerAccessor' " is 122.
Long Statement,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,DefaultCreateNewUiObject,The length of the statement  "			UndoableUnitOfWorkHelper.Do(FdoUiStrings.ksUndoInsert' FdoUiStrings.ksRedoInsert' cache.ServiceLocator.GetInstance<IActionHandler>()' () => " is 139.
Long Statement,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,DeleteUnderlyingObject,The length of the statement  "							dlg.SetDlgInfo(this' m_cache' Mediator' m_propertyTable' TsStringUtils.MakeString(cannotDeleteMsg' m_cache.DefaultUserWs)); " is 123.
Long Statement,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,ReallyMergeUnderlyingObject,The length of the statement  "			UndoableUnitOfWorkHelper.Do(FdoUiStrings.ksUndoMerge' FdoUiStrings.ksRedoMerge' ah' () => survivor.MergeObject(Object' fLoseNoTextData)); " is 137.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,OnDisplayJumpToTool,The length of the statement  "				display.Visible = display.Enabled = (commandListFieldName == owningFieldName && commandListOwnerName == owningClassName); " is 121.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,FormatDisplayTextWithListName,The length of the statement  "			string listName = pssl.Owner != null ? cache.DomainDataByFlid.MetaDataCache.GetFieldName(pssl.OwningFlid) : pssl.Name.BestAnalysisVernacularAlternative.Text; " is 157.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,GetPossibilityDisplayName,The length of the statement  "			return list.PossibilitiesOS.Count > 0 ? StringTable.Table.GetString(list.PossibilitiesOS[0].GetType().Name' "ClassNames") " is 121.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CheckAndReportBadTagListAdd,The length of the statement  "			if (cache.ServiceLocator.GetInstance<ICmObjectRepository>().GetObject(hvoPossList).OwningFlid != LangProjectTags.kflidTextMarkupTags) " is 133.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CheckAndReportBadDiscourseTemplateAdd,The length of the statement  "			if (cache.ServiceLocator.GetInstance<ICmObjectRepository>().GetObject(hvoList).OwningFlid != DsDiscourseDataTags.kflidConstChartTempl) " is 134.
Long Statement,SIL.FieldWorks.FdoUi,CmPossibilityUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CanModifyChartColumn,The length of the statement  "				IDsChart chart = rootPossibility.Services.GetInstance<IDsChartRepository>().InstancesWithTemplate(rootPossibility).First(); " is 123.
Long Statement,SIL.FieldWorks.FdoUi,MoDerivAffMsaUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,GuidForJumping,The length of the statement  "			//	or else' if this ends up being drawn by a view constructor rather than a string which combines both are from and the to' " is 123.
Long Statement,SIL.FieldWorks.FdoUi,LexSenseUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,CreateNewUiObject,The length of the statement  "							var ls = cache.ServiceLocator.GetInstance<ILexSenseRepository>().GetObject(cache.DomainDataByFlid.get_VecItem(hvoOwner' flid' copyFrom)); " is 137.
Long Statement,SIL.FieldWorks.FdoUi,LexSenseUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,GetSafeHvoMsa,The length of the statement  "			var entryPrimaryMorphType = ls.Entry.PrimaryMorphType; // Guard against corrupted data. Every entry should have a PrimaryMorphType " is 130.
Long Statement,SIL.FieldWorks.FdoUi,LexSenseUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,GetSafeHvoMsa,The length of the statement  "			foreach(var msa in ls.Entry.MorphoSyntaxAnalysesOC) //go through each MSA in the Entry list looking for one with an unknown category " is 132.
Long Statement,SIL.FieldWorks.FdoUi,FwLcmUI,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FwLcmUI.cs,ReportDuplicateGuids,The length of the statement  "			m_synchronizeInvoke.Invoke(() => ErrorReporter.ReportDuplicateGuids(FwRegistryHelper.FieldWorksRegistryKey' "FLExErrors@sil.org"' null' errorText)); " is 148.
Long Statement,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,m_tree_TreeLoad,The length of the statement  "				m_InflectionClassTreeManager = new InflectionClassPopupTreeManager(m_tree' m_cache' m_mediator' PropTable' false' PropTable.GetValue<Form>("window")' m_displayWs); " is 163.
Long Statement,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,FindEntriesForWordformUI,The length of the statement  "			List<ILexEntry> retval = cache.ServiceLocator.GetInstance<ILexEntryRepository>().FindEntriesForWordform(cache' tssWf' wfa' ref duplicates); " is 139.
Long Statement,SIL.FieldWorks.FdoUi,LexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\LexEntryUi.cs,DisplayRelatedEntries,The length of the statement  "				using (RelatedWords rw = new RelatedWords(cache' sel3' hvoEntry' domains' lexrels' cdaTemp' styleSheet' mediator' false)) " is 121.
Long Statement,SIL.FieldWorks.FdoUi,ReversalIndexEntryUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\ReversalIndexEntryUi.cs,GetMergeinfo,The length of the statement  "			var filteredHvos = new HashSet<int>(rie.AllOwnedObjects.Select(obj => obj.Hvo)) { rie.Hvo }; // exclude `rie` and all of its subentries " is 135.
Long Statement,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The length of the statement  "			m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' hvoNewRef' m_taTagName' 0' tssLookup.Length' tssTyped.Length); " is 121.
Long Statement,SIL.FieldWorks.FdoUi,WfiWordformUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\WfiWordformUi.cs,OnFindInDictionary,The length of the statement  "				((IWfiWordform) Object).Form.get_String(m_cache.ServiceLocator.WritingSystems.DefaultVernacularWritingSystem.Handle)' null); " is 124.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,CantRestoreLinkedFilesToOriginalLocation,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\CantRestoreLinkedFilesToOriginalLocation.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(CantRestoreLinkedFilesToOriginalLocation)); " is 160.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ConfirmDeleteObjectDlg)); " is 142.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ConflictingSaveDlg)); " is 138.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,FilesToRestoreAreOlder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\FilesToRestoreAreOlder.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FilesToRestoreAreOlder)); " is 142.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,InitBrowseView,The length of the statement  "			XmlNode toolNode = configurationParameters.SelectSingleNode("controls/parameters/guicontrol[@id='" + guiControl + "']/parameters"); " is 131.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,InitBrowseView,The length of the statement  "			m_bvMergeOptions = new BrowseViewer(toolNode' m_cache.LangProject.Hvo' ObjectListPublisher.OwningFlid' m_cache' m_mediator' m_propertyTable' null' sda); " is 152.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MergeObjectDlg)); " is 134.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,SetupLexRelsForEntry,The length of the statement  "						if (targetEntry != null && targetEntry.Hvo != m_hvoEntry && targetEntry.LexemeFormOA != null && targetEntry.LexemeFormOA.Form != null) " is 134.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RelatedWords)); " is 132.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,RestoreLinkedFilesToProjectsFolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RestoreLinkedFilesToProjectsFolder.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RestoreLinkedFilesToProjectsFolder)); " is 154.
Long Statement,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(SummaryDialogForm)); " is 137.
Complex Conditional,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,OnDisplayDeleteSelectedItem,The conditional expression  "m_hostControl.GetType().Name == "Sandbox"  				// Disable deleting from inside "Try a Word" dialog.  See FWR-3212.  				|| m_hostControl.GetType().Name == "TryAWordSandbox"  				// Disable deleting interior items from a WfiMorphBundle.  See LT-6217.  				|| (m_hostControl.GetType().Name == "OneAnalysisSandbox" && !(m_obj is IWfiMorphBundle))"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,SelectedObject,The conditional expression  "tagE != tagA || hvoObjE != hvoObjA || cch != tssE.Length || Math.Max(ichA' ichE) != cch"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,Display,The conditional expression  "m_fGotFocus && hvo == m_hvoTa && hvoParent == m_hvoParent && ihvo == m_ihvoTa"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The conditional expression  "tagE != m_taTagName || hvoObjE != hvoObjA || cch != tssE.Length || Math.Max(ichA' ichE) != cch"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The conditional expression  "tagTextProp != m_taTagName || ichAnchor != ichEnd || ihvoEnd != -1 || cvsli < 1"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,LoadLexicalRelationInfo,The conditional expression  "lexRefType.MappingType == (int)MappingTypes.kmtEntryAsymmetricPair ||  							lexRefType.MappingType == (int)MappingTypes.kmtEntryOrSenseAsymmetricPair ||  							lexRefType.MappingType == (int)MappingTypes.kmtSenseAsymmetricPair ||  							lexRefType.MappingType == (int)MappingTypes.kmtEntryTree ||  							lexRefType.MappingType == (int)MappingTypes.kmtEntryOrSenseTree ||  							lexRefType.MappingType == (int)MappingTypes.kmtSenseTree"  is complex.
Complex Conditional,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,SetupLexRelsForEntry,The conditional expression  "targetEntry != null && targetEntry.Hvo != m_hvoEntry && targetEntry.LexemeFormOA != null && targetEntry.LexemeFormOA.Form != null"  is complex.
Empty Catch Block,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,ConsiderDeletingRelatedFile,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,SwitchTagAndFixSel,The method has an empty catch block.
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditorBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditorBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditorBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,FakeDoit,The following statement contains a magic number: state.PercentDone = i * 100 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 20 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoUpdatePos,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntry.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoUpdatePos,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntry.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoUpdatePos,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntry.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,BulkPosEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,DoUpdatePos,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntry.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r) | ((byte)(g) << 8)) | ((byte)(b) << 16)));
Magic Number,SIL.FieldWorks.FdoUi,CmObjectUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r) | ((byte)(g) << 8)) | ((byte)(b) << 16)));
Magic Number,SIL.FieldWorks.FdoUi,CmPossRefVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,Display,The following statement contains a magic number: const int kfragAbbr = 17;
Magic Number,SIL.FieldWorks.FdoUi,CmPossRefVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FdoUiCore.cs,Display,The following statement contains a magic number: const int kfragName = 18;
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 20 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntryAndPos.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntryAndPos.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntryAndPos.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntryAndPos.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionClassEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionClassEditor.cs,FakeDoit,The following statement contains a magic number: state.PercentDone = i * 100 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 20 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntry.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: interval = Math.Min(100' Math.Max(sensesByEntry.Count / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntry.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 80 / sensesByEntry.Count + 20;
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count() / 50' 1));
Magic Number,SIL.FieldWorks.FdoUi,InflectionFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\InflectionFeatureEditor.cs,FakeDoit,The following statement contains a magic number: state.PercentDone = i * 100 / itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count()/50' 1));
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,DoIt,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count()/50' 1));
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 100 / itemsToChange.Count() + 20;
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,DoIt,The following statement contains a magic number: state.PercentDone = i * 100 / itemsToChange.Count() + 20;
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count()/50' 1));
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,FakeDoit,The following statement contains a magic number: int interval = Math.Min(100' Math.Max(itemsToChange.Count()/50' 1));
Magic Number,SIL.FieldWorks.FdoUi,PhonologicalFeatureEditor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PhonologicalFeatureEditor.cs,FakeDoit,The following statement contains a magic number: state.PercentDone = i*100/itemsToChange.Count();
Magic Number,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,SelectedObject,The following statement contains a magic number: clev < 2
Magic Number,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The following statement contains a magic number: switch (m_type)  				{  				case CellarPropertyType.ReferenceAtomic:  					if (m_hvoParent != 0) // I think it always is' except when loss of focus during debugging causes problems.  					{  						// If nothing matched' set the real property to null and the fake one to kbaseFakeObj.  						// Otherwise set both to the indicated object.  						m_sda.SetObjProp(m_hvoParent' m_tag' hvoNewRef); // Review: do we want to set the real thing yet?  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' 0' 1' 1);  						if (hvoNewRef == 0)  							hvoNewRef = m_hvoTa = kBaseFakeObj; // use in fake so we can display something.  						cda.CacheObjProp(m_hvoParent' m_virtualTagObj' hvoNewRef); // Change the fake property  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' 0' 1' 1);  					}  					break;  				case CellarPropertyType.ReferenceSequence:  				case CellarPropertyType.ReferenceCollection:  					// Several cases' depending on whether we got a match and whether hvoLeaf is the dummy object  					// 1. match on dummy: insert appropriate real object' change dummy name to empty.  					// 2. match on non-dummy: replace old object with new  					// 3: non-match: do nothing. (Even if not looking at the fake object' we'll go on using the  					// actual object as a base for the fake name' since it's displayed only for the active position.)  					if (hvoNewRef == 0)  						break; // case 3  					if (hvoLeaf == kBaseFakeObj)  					{ // case 1  						// The fake object goes back to being an empty name at the end of the list.  						ITsStrBldr bldr = tssLookup.GetBldr();  						bldr.ReplaceTsString(0' bldr.Length' null); // makes an empty string in correct ws.  						cda.CacheStringProp(kBaseFakeObj' m_taTagName' bldr.GetString());  						// Insert the new object before the fake one in fake prop and at end of real seq.  						// Include the fake object in the replace to get it redisplayed also.  						cda.CacheReplace(m_hvoParent' m_virtualTagObj' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef' kBaseFakeObj}' 2);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' m_ihvoTa' 2' 1);  						m_sda.Replace(m_hvoParent' m_tag' m_ihvoTa' m_ihvoTa' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' m_ihvoTa' 1' 0);  					}  					else  					{ // case 2  						// Replace the object being edited with the indicated one in both props.  						cda.CacheReplace(m_hvoParent' m_virtualTagObj' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' m_ihvoTa' 1' 1);  						m_sda.Replace(m_hvoParent' m_tag' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' m_ihvoTa' 1' 1);  					}  					break;  				default:  					throw new Exception("unsupported property type for type-ahead chooser");  				}
Magic Number,SIL.FieldWorks.FdoUi,TypeAheadSupportVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\TypeAheadSupportVc.cs,OnKeyPress,The following statement contains a magic number: switch (m_type)  				{  				case CellarPropertyType.ReferenceAtomic:  					if (m_hvoParent != 0) // I think it always is' except when loss of focus during debugging causes problems.  					{  						// If nothing matched' set the real property to null and the fake one to kbaseFakeObj.  						// Otherwise set both to the indicated object.  						m_sda.SetObjProp(m_hvoParent' m_tag' hvoNewRef); // Review: do we want to set the real thing yet?  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' 0' 1' 1);  						if (hvoNewRef == 0)  							hvoNewRef = m_hvoTa = kBaseFakeObj; // use in fake so we can display something.  						cda.CacheObjProp(m_hvoParent' m_virtualTagObj' hvoNewRef); // Change the fake property  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' 0' 1' 1);  					}  					break;  				case CellarPropertyType.ReferenceSequence:  				case CellarPropertyType.ReferenceCollection:  					// Several cases' depending on whether we got a match and whether hvoLeaf is the dummy object  					// 1. match on dummy: insert appropriate real object' change dummy name to empty.  					// 2. match on non-dummy: replace old object with new  					// 3: non-match: do nothing. (Even if not looking at the fake object' we'll go on using the  					// actual object as a base for the fake name' since it's displayed only for the active position.)  					if (hvoNewRef == 0)  						break; // case 3  					if (hvoLeaf == kBaseFakeObj)  					{ // case 1  						// The fake object goes back to being an empty name at the end of the list.  						ITsStrBldr bldr = tssLookup.GetBldr();  						bldr.ReplaceTsString(0' bldr.Length' null); // makes an empty string in correct ws.  						cda.CacheStringProp(kBaseFakeObj' m_taTagName' bldr.GetString());  						// Insert the new object before the fake one in fake prop and at end of real seq.  						// Include the fake object in the replace to get it redisplayed also.  						cda.CacheReplace(m_hvoParent' m_virtualTagObj' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef' kBaseFakeObj}' 2);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' m_ihvoTa' 2' 1);  						m_sda.Replace(m_hvoParent' m_tag' m_ihvoTa' m_ihvoTa' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' m_ihvoTa' 1' 0);  					}  					else  					{ // case 2  						// Replace the object being edited with the indicated one in both props.  						cda.CacheReplace(m_hvoParent' m_virtualTagObj' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_virtualTagObj' m_ihvoTa' 1' 1);  						m_sda.Replace(m_hvoParent' m_tag' m_ihvoTa' m_ihvoTa + 1' new int[] {hvoNewRef}' 1);  						m_sda.PropChanged(null' (int)PropChangeType.kpctNotifyAll' m_hvoParent' m_tag' m_ihvoTa' 1' 1);  					}  					break;  				default:  					throw new Exception("unsupported property type for type-ahead chooser");  				}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox3.Location = new System.Drawing.Point(5' 5);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox3.Location = new System.Drawing.Point(5' 5);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox3.Size = new System.Drawing.Size(304' 184);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox3.Size = new System.Drawing.Size(304' 184);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox4.Location = new System.Drawing.Point(16'56);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox4.Location = new System.Drawing.Point(16'56);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox4.Size = new System.Drawing.Size(304' 184);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,ConfirmDeleteObjectDlg,The following statement contains a magic number: this.m_descriptionBox4.Size = new System.Drawing.Size(304' 184);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(400' 165);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(400' 165);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_refreshButton.Location = new System.Drawing.Point(265' 165);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_refreshButton.Location = new System.Drawing.Point(265' 165);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_refreshButton.Size = new System.Drawing.Size(93' 23);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_refreshButton.Size = new System.Drawing.Size(93' 23);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(79' 33);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(79' 33);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(396' 109);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(396' 109);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 2;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(23' 45);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Location = new System.Drawing.Point(23' 45);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(33' 30);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(33' 30);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.TabIndex = 3;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF(6F' 13F);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(494' 206);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,ConflictingSaveDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConflictingSaveDlg.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(494' 206);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,InitBrowseView,The following statement contains a magic number: const int kfakeFlid = 8999958;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetBottomMessage,The following statement contains a magic number: tsb.ReplaceTsString(ich' ich + 3' tssFrom);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetBottomMessage,The following statement contains a magic number: tsb.ReplaceTsString(ich' ich + 3' tssTo);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetBottomMessage,The following statement contains a magic number: tsb.ReplaceTsString(ich' ich + 3' TsStringUtils.MakeString(StringUtils.kChHardLB.ToString()' userWs));
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,MergeObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\MergeObjectDlg.cs,SetBottomMessage,The following statement contains a magic number: newHeight < 30
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWords,The following statement contains a magic number: m_view.Width = this.Width - 20;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWords,The following statement contains a magic number: m_view.Height = m_btnClose.Top - 20;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWords,The following statement contains a magic number: m_view.Top = 10;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,RelatedWords,The following statement contains a magic number: m_view.Left = 10;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,m_view_SelChanged,The following statement contains a magic number: m_view.Height = totalHeight * 2 / 3;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,m_view_SelChanged,The following statement contains a magic number: m_view.Height = totalHeight * 2 / 3;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,m_view_SelChanged,The following statement contains a magic number: m_detailView.Top = m_view.Bottom + 5;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWords,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,m_view_SelChanged,The following statement contains a magic number: m_detailView.Height = totalHeight / 3;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case kfragRoot:  					ITsString tssWord = vwenv.DataAccess.get_StringProp(hvo' ktagCf);  					ITsStrBldr tsbSdRelation = m_tssSdRelation.GetBldr();  					ITsStrBldr tsbLexRel = m_tssLexRelation.GetBldr();  					if (tssWord != null && tssWord.Length > 0)  					{  						int ich = tsbSdRelation.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbSdRelation.ReplaceTsString(ich' ich + 3' tssWord);  						ich = tsbLexRel.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbLexRel.ReplaceTsString(ich' ich + 3' tssWord);  					}  					int cDomains = vwenv.DataAccess.get_VecSize(hvo' ktagDomains);  					int cLexRels = vwenv.DataAccess.get_VecSize(hvo' ktagLexRels);  					Debug.Assert(cDomains > 0 || cLexRels > 0);  					if (cDomains > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint'  							6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbSdRelation.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagDomains' this' kfragEntryList);  					}  					if (cLexRels > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbLexRel.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagLexRels' this' kfragEntryList);  					}  					break;  				case kfragEntryList:  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.OpenParagraph();  					vwenv.set_IntProperty((int)FwTextPropType.ktptBold'  						(int)FwTextPropVar.ktpvEnum'  						(int)FwTextToggleVal.kttvForceOn);  					vwenv.AddStringProp(ktagName' this);  					vwenv.AddString (m_tssColon);  					vwenv.AddObjVec(ktagWords' this' kfragWords);  					vwenv.CloseParagraph();  					break;  				case kfragName:  					vwenv.AddStringProp(ktagName' this);  					break;  				default:  					throw new Exception("bad case in RelatedWordsVc.Display");  			}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case kfragRoot:  					ITsString tssWord = vwenv.DataAccess.get_StringProp(hvo' ktagCf);  					ITsStrBldr tsbSdRelation = m_tssSdRelation.GetBldr();  					ITsStrBldr tsbLexRel = m_tssLexRelation.GetBldr();  					if (tssWord != null && tssWord.Length > 0)  					{  						int ich = tsbSdRelation.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbSdRelation.ReplaceTsString(ich' ich + 3' tssWord);  						ich = tsbLexRel.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbLexRel.ReplaceTsString(ich' ich + 3' tssWord);  					}  					int cDomains = vwenv.DataAccess.get_VecSize(hvo' ktagDomains);  					int cLexRels = vwenv.DataAccess.get_VecSize(hvo' ktagLexRels);  					Debug.Assert(cDomains > 0 || cLexRels > 0);  					if (cDomains > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint'  							6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbSdRelation.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagDomains' this' kfragEntryList);  					}  					if (cLexRels > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbLexRel.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagLexRels' this' kfragEntryList);  					}  					break;  				case kfragEntryList:  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.OpenParagraph();  					vwenv.set_IntProperty((int)FwTextPropType.ktptBold'  						(int)FwTextPropVar.ktpvEnum'  						(int)FwTextToggleVal.kttvForceOn);  					vwenv.AddStringProp(ktagName' this);  					vwenv.AddString (m_tssColon);  					vwenv.AddObjVec(ktagWords' this' kfragWords);  					vwenv.CloseParagraph();  					break;  				case kfragName:  					vwenv.AddStringProp(ktagName' this);  					break;  				default:  					throw new Exception("bad case in RelatedWordsVc.Display");  			}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case kfragRoot:  					ITsString tssWord = vwenv.DataAccess.get_StringProp(hvo' ktagCf);  					ITsStrBldr tsbSdRelation = m_tssSdRelation.GetBldr();  					ITsStrBldr tsbLexRel = m_tssLexRelation.GetBldr();  					if (tssWord != null && tssWord.Length > 0)  					{  						int ich = tsbSdRelation.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbSdRelation.ReplaceTsString(ich' ich + 3' tssWord);  						ich = tsbLexRel.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbLexRel.ReplaceTsString(ich' ich + 3' tssWord);  					}  					int cDomains = vwenv.DataAccess.get_VecSize(hvo' ktagDomains);  					int cLexRels = vwenv.DataAccess.get_VecSize(hvo' ktagLexRels);  					Debug.Assert(cDomains > 0 || cLexRels > 0);  					if (cDomains > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint'  							6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbSdRelation.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagDomains' this' kfragEntryList);  					}  					if (cLexRels > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbLexRel.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagLexRels' this' kfragEntryList);  					}  					break;  				case kfragEntryList:  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.OpenParagraph();  					vwenv.set_IntProperty((int)FwTextPropType.ktptBold'  						(int)FwTextPropVar.ktpvEnum'  						(int)FwTextToggleVal.kttvForceOn);  					vwenv.AddStringProp(ktagName' this);  					vwenv.AddString (m_tssColon);  					vwenv.AddObjVec(ktagWords' this' kfragWords);  					vwenv.CloseParagraph();  					break;  				case kfragName:  					vwenv.AddStringProp(ktagName' this);  					break;  				default:  					throw new Exception("bad case in RelatedWordsVc.Display");  			}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case kfragRoot:  					ITsString tssWord = vwenv.DataAccess.get_StringProp(hvo' ktagCf);  					ITsStrBldr tsbSdRelation = m_tssSdRelation.GetBldr();  					ITsStrBldr tsbLexRel = m_tssLexRelation.GetBldr();  					if (tssWord != null && tssWord.Length > 0)  					{  						int ich = tsbSdRelation.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbSdRelation.ReplaceTsString(ich' ich + 3' tssWord);  						ich = tsbLexRel.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbLexRel.ReplaceTsString(ich' ich + 3' tssWord);  					}  					int cDomains = vwenv.DataAccess.get_VecSize(hvo' ktagDomains);  					int cLexRels = vwenv.DataAccess.get_VecSize(hvo' ktagLexRels);  					Debug.Assert(cDomains > 0 || cLexRels > 0);  					if (cDomains > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint'  							6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbSdRelation.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagDomains' this' kfragEntryList);  					}  					if (cLexRels > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbLexRel.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagLexRels' this' kfragEntryList);  					}  					break;  				case kfragEntryList:  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.OpenParagraph();  					vwenv.set_IntProperty((int)FwTextPropType.ktptBold'  						(int)FwTextPropVar.ktpvEnum'  						(int)FwTextToggleVal.kttvForceOn);  					vwenv.AddStringProp(ktagName' this);  					vwenv.AddString (m_tssColon);  					vwenv.AddObjVec(ktagWords' this' kfragWords);  					vwenv.CloseParagraph();  					break;  				case kfragName:  					vwenv.AddStringProp(ktagName' this);  					break;  				default:  					throw new Exception("bad case in RelatedWordsVc.Display");  			}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case kfragRoot:  					ITsString tssWord = vwenv.DataAccess.get_StringProp(hvo' ktagCf);  					ITsStrBldr tsbSdRelation = m_tssSdRelation.GetBldr();  					ITsStrBldr tsbLexRel = m_tssLexRelation.GetBldr();  					if (tssWord != null && tssWord.Length > 0)  					{  						int ich = tsbSdRelation.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbSdRelation.ReplaceTsString(ich' ich + 3' tssWord);  						ich = tsbLexRel.Text.IndexOf("{0}");  						if (ich >= 0)  							tsbLexRel.ReplaceTsString(ich' ich + 3' tssWord);  					}  					int cDomains = vwenv.DataAccess.get_VecSize(hvo' ktagDomains);  					int cLexRels = vwenv.DataAccess.get_VecSize(hvo' ktagLexRels);  					Debug.Assert(cDomains > 0 || cLexRels > 0);  					if (cDomains > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint'  							6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbSdRelation.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagDomains' this' kfragEntryList);  					}  					if (cLexRels > 0)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  							(int)FwTextPropVar.ktpvEnum'  							(int)TptEditable.ktptNotEditable);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.set_IntProperty((int)FwTextPropType.ktptMarginBottom'  							(int)FwTextPropVar.ktpvMilliPoint' 6000);  						vwenv.OpenParagraph();  						vwenv.AddString(tsbLexRel.GetString());  						vwenv.CloseParagraph();  						vwenv.AddLazyVecItems(ktagLexRels' this' kfragEntryList);  					}  					break;  				case kfragEntryList:  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.OpenParagraph();  					vwenv.set_IntProperty((int)FwTextPropType.ktptBold'  						(int)FwTextPropVar.ktpvEnum'  						(int)FwTextToggleVal.kttvForceOn);  					vwenv.AddStringProp(ktagName' this);  					vwenv.AddString (m_tssColon);  					vwenv.AddObjVec(ktagWords' this' kfragWords);  					vwenv.CloseParagraph();  					break;  				case kfragName:  					vwenv.AddStringProp(ktagName' this);  					break;  				default:  					throw new Exception("bad case in RelatedWordsVc.Display");  			}
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,RelatedWordsVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\RelatedWords.cs,EstimateHeight,The following statement contains a magic number: return 20;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,Initialize,The following statement contains a magic number: m_xv.Width = this.Width - 15;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,CreateSummaryView,The following statement contains a magic number: int kflidEntriesFound = 8999950;
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,OnLoad,The following statement contains a magic number: int maxViewHeight = 400 - (this.Height - m_xv.Height);
Magic Number,SIL.FieldWorks.FdoUi.Dialogs,SummaryDialogForm,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\SummaryDialogForm.cs,OnLoad,The following statement contains a magic number: m_xv.Height < m_xv.ScrollMinSize.Height && this.Height < 400
Missing Default,SIL.FieldWorks.FdoUi,EntryPosFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\BulkPosEditor.cs,GetItemsForMsaType,The following switch statement is missing a default case: switch (kclsid)  			{  				case MoStemMsaTags.kClassId:  					AddHvoPOStoResults(sda' results' hvoMsa' MoStemMsaTags.kflidPartOfSpeech);  					break;  				case MoInflAffMsaTags.kClassId:  					AddHvoPOStoResults(sda' results' hvoMsa' MoInflAffMsaTags.kflidPartOfSpeech);  					break;  				case MoDerivAffMsaTags.kClassId:  					AddHvoPOStoResults(sda' results' hvoMsa' MoDerivAffMsaTags.kflidFromPartOfSpeech);  					AddHvoPOStoResults(sda' results' hvoMsa' MoDerivAffMsaTags.kflidToPartOfSpeech);  					break;  				case MoUnclassifiedAffixMsaTags.kClassId:  					AddHvoPOStoResults(sda' results' hvoMsa' MoUnclassifiedAffixMsaTags.kflidPartOfSpeech);  					break;  			}
Missing Default,SIL.FieldWorks.FdoUi,FwLcmUI,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FwLcmUI.cs,DisplayMessage,The following switch statement is missing a default case: switch (type)  			{  				case MessageType.Error:  					icon = MessageBoxIcon.Error;  					break;  				case MessageType.Info:  					icon = MessageBoxIcon.Information;  					break;  				case MessageType.Warning:  					icon = MessageBoxIcon.Warning;  					break;  			}
Missing Default,SIL.FieldWorks.FdoUi,FsFeatDefnUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\FsFeatDefnUi.cs,CreateNewUiObject,The following switch statement is missing a default case: switch (dlg.ShowDialog(propertyTable.GetValue<Form>("window")))  				{  					case DialogResult.OK: // Fall through.  					case DialogResult.Yes:  						ffdUi = new FsFeatDefnUi(dlg.SelectedFeatDefn);  						mediator.SendMessage("JumpToRecord"' dlg.SelectedFeatDefn.Hvo);  						break;  				}
Missing Default,SIL.FieldWorks.FdoUi,PartOfSpeechUi,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\PartOfSpeechUi.cs,CreateNewUiObject,The following switch statement is missing a default case: switch (dlg.ShowDialog(propertyTable.GetValue<Form>("window")))  				{  					case DialogResult.OK: // Fall through.  					case DialogResult.Yes:  						posUi = new PartOfSpeechUi(dlg.SelectedPOS);  						mediator.SendMessage("JumpToRecord"' dlg.SelectedPOS.Hvo);  						break;  				}
Missing Default,SIL.FieldWorks.FdoUi.Dialogs,ConfirmDeleteObjectDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\FdoUi\Dialogs\ConfirmDeleteObjectDlg.cs,SetDlgInfo,The following switch statement is missing a default case: switch (obj.ClassName)  			{  				case "WfiWordform":  					s_helpTopic = "khtpDeleteWordform";  					break;  			}
