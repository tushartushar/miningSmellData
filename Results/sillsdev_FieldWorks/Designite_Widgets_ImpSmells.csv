Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.Common.Widgets,FwComboMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PreFilterMessage,The method has 158 lines of code.
Long Method,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The method has 105 lines of code.
Complex Method,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,AlignText,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,AdjustForStyleSheet,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,Launch,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.Widgets,FwComboMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PreFilterMessage,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.Common.Widgets,InnerFwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,OnKeyDown,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,CreateRenderer,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,AdjustForStyleSheet,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,OnLayout,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,SetupSoundControls,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,PopupTree,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,Launch,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,UserInterfaceChooser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\UserInterfaceChooser.cs,PopulateLanguagesCombo,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawCustomTabControl,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,NativeUpDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,WndProc,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,Cyclomatic complexity of the method is 8
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetFormattedValue,The method has 6 parameters. Parameters: value' rowIndex' cellStyle' valueTypeConverter' formattedValueTypeConverter' context
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,Paint,The method has 11 parameters. Parameters: graphics' clipBounds' cellBounds' rowIndex' cellState' val' formattedValue' errorText' cellStyle' advancedBorderStyle' paintParts
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,DrawFwText,The method has 5 parameters. Parameters: graphics' cellBounds' text' cellStyle' col
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetLocationForText,The method has 6 parameters. Parameters: cellBounds' fRightToLeft' vg' text' x' y
Long Parameter List,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,Paint,The method has 11 parameters. Parameters: g' clipBounds' bounds' rowIndex' state' value' formattedValue' errorText' style' advancedBorderStyle' parts
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,SetWindowPos,The method has 7 parameters. Parameters: hWnd' hWndInsertAfter' X' Y' cx' cy' uFlags
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,InternalFwMultiParaTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultiParaTextBox.cs,RequestSelectionAtEndOfUow,The method has 10 parameters. Parameters: rootb' ihvoRoot' cvlsi' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,TextBoxMetaDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,GetFields,The method has 5 parameters. Parameters: luClid' fIncludeSuperclasses' grfcpt' cflidMax' _rgflid
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,LabeledMultiStringView,The method has 5 parameters. Parameters: hvo' flid' wsMagic' forceIncludeEnglish' editable
Long Parameter List,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,LabeledMultiStringView,The method has 7 parameters. Parameters: hvo' flid' wsMagic' wsOptional' forceIncludeEnglish' editable' spellCheck
Long Parameter List,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,Reuse,The method has 7 parameters. Parameters: hvo' flid' wsMagic' wsOptional' forceIncludeEnglish' editable' spellCheck
Long Parameter List,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The method has 5 parameters. Parameters: g' index' state' tabRect' textFmt
Long Parameter List,SIL.FieldWorks.Common.Widgets,LabeledMultiStringControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringControl.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,InnerLabeledMultiStringView,The method has 5 parameters. Parameters: hvo' flid' wsMagic' forceIncludeEnglish' editable
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,InnerLabeledMultiStringView,The method has 7 parameters. Parameters: hvo' flid' wsMagic' wsOptional' forceIncludeEnglish' editable' spellCheck
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Reuse,The method has 7 parameters. Parameters: hvo' flid' wsMagic' wsOptional' forceIncludeEnglish' editable' spellCheck
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,ConstructReuseCore,The method has 7 parameters. Parameters: hvo' flid' wsMagic' wsOptional' forceIncludeEnglish' editable' spellCheck
Long Parameter List,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,LabeledMultiStringVc,The method has 5 parameters. Parameters: flid' rgws' wsUser' editable' wsEn
Long Parameter List,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,InnerLabeledMultiStringViewVc,The method has 5 parameters. Parameters: flid' rgws' wsUser' editable' view
Long Parameter List,SIL.FieldWorks.Common.Widgets,MultiStringSelectionUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\MultiStringSelectionUtils.cs,HandleUpDownArrows,The method has 5 parameters. Parameters: e' rootBox' curSel' wsList' flid
Long Identifier,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,,The length of the parameter m_hideDropDownWhenComboTextChanges is 34.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,Paint,The length of the statement  "			base.Paint(graphics' clipBounds' cellBounds' rowIndex' cellState' val' formattedValue' errorText' cellStyle' advancedBorderStyle' pre); " is 135.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,Paint,The length of the statement  "			if (!IsInEditMode && (paintParts & DataGridViewPaintParts.ContentForeground) == DataGridViewPaintParts.ContentForeground) " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,Paint,The length of the statement  "			DataGridViewPaintParts post = DataGridViewPaintParts.Border | DataGridViewPaintParts.Focus | DataGridViewPaintParts.ErrorIcon; " is 126.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,Paint,The length of the statement  "			base.Paint(graphics' clipBounds' cellBounds' rowIndex' cellState' val' formattedValue' errorText' cellStyle' advancedBorderStyle' post); " is 136.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBoxColumn,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxColumn.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****** Missing Dispose() call for " + GetType().Name + ". ****** (but this might not be your fault)"); " is 133.
Long Statement,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 140.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultilingualPropViewDataSource,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultilingualPropView.cs,SaveMultiLingualStrings,The length of the statement  "					m_cache.DomainDataByFlid.SetMultiStringAlt(m_hvoRootObject' columnInfo.flid' ws' (ITsString)Grid.Rows[iRow].Cells[iColumn].Value); " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultilingualPropViewDataSource,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultilingualPropView.cs,CheckSettings,The length of the statement  "				throw new InvalidOperationException("Root object must be set before showing the FwMultilingualPropView named " + Grid.Name); " is 124.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultilingualPropViewDataSource,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultilingualPropView.cs,CheckSettings,The length of the statement  "				throw new InvalidOperationException("At least one field must be added to the FieldsToDisplay property before showing the FwMultilingualPropView named " + Grid.Name); " is 165.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultilingualPropViewDataSource,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultilingualPropView.cs,CheckSettings,The length of the statement  "				throw new InvalidOperationException("At least one writing system must be added to the WritingSystemsToDisplay property before showing the FwMultilingualPropView named " + Grid.Name); " is 182.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultilingualPropView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultilingualPropView.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,FontHeightAdjuster,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FontHeightAdjuster.cs,GetChrpForStyle,The length of the statement  "					throw new ArgumentException("This is a hard-to-reproduce scenario (TE-6891) where writing system (" + hvoWs + ") and factory are inconsistent."); " is 145.
Long Statement,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,SetPadding,The length of the statement  "			m_textBoxPanel.Padding = new Padding(padding.Left + m_textPadding.Left' padding.Top + m_textPadding.Top' m_textPadding.Right' " is 125.
Long Statement,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 140.
Long Statement,SIL.FieldWorks.Common.Widgets,FwComboMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,ComboTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseEnter,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,ComboTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseLeave,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,ComboTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseUp,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,DropDownButton,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnGotFocus,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,DropDownButton,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnLostFocus,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,DropDownButton,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseEnter,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,DropDownButton,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseLeave,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,DropDownButton,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnMouseUp,The length of the statement  "			if (Application.RenderWithVisualStyles && m_comboBox.State != ComboBoxState.Pressed && m_comboBox.State != ComboBoxState.Disabled) " is 130.
Long Statement,SIL.FieldWorks.Common.Widgets,FwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,FwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,FindIndexOfTss,The length of the statement  "				if (listItemString != null && searchString != null && listItemString.Equals(searchString' StringComparison.InvariantCulture)) " is 125.
Long Statement,SIL.FieldWorks.Common.Widgets,ObjectCollection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,Dispose,The length of the statement  "				Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,FwMultiParaTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultiParaTextBox.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 140.
Long Statement,SIL.FieldWorks.Common.Widgets,MultiParaBoxEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultiParaTextBox.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 140.
Long Statement,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,TextBoxEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,IntToExtIndex,The length of the statement  "			int hardBreakCount = SubstringCount(tss == null || tss.Length == 0 ? string.Empty : tss.Text.Substring(0' intIndex)' LineBreak); " is 128.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,CheckDisposed,The length of the statement  "				throw new ObjectDisposedException("LabeledMultiStringView"' "This object is being used after it has been disposed: this is an Error."); " is 135.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,SetupSoundControls,The length of the statement  "				var filename = m_innerView.Cache.DomainDataByFlid.get_MultiStringAlt(m_innerView.HvoObj' m_innerView.Flid' ws.Handle).Text ?? ""; " is 129.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,soundFieldControl_SoundRecorded,The length of the statement  "			var filenameOld = m_innerView.Cache.DomainDataByFlid.get_MultiStringAlt(m_innerView.HvoObj' m_innerView.Flid' ws.Handle).Text ?? ""; " is 132.
Long Statement,SIL.FieldWorks.Common.Widgets,FwPopupMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,TreeCombo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\TreeCombo.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 140.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringControl.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringControl.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,InnerLabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The length of the statement  "					vwenv.set_IntProperty((int)FwTextPropType.ktptSpellCheck' (int)FwTextPropVar.ktpvEnum' (int)SpellingModes.ksmDoNotCheck); " is 121.
Long Statement,SIL.FieldWorks.Common.Widgets,MultiStringSelectionUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\MultiStringSelectionUtils.cs,GetSelAtStartOfWs,The length of the statement  "				return rootBox.MakeTextSelection(0' 0' null' flid' wsIndex' 0' 0' (ws == null) ? 0 : ws.Handle' false' -1' null' false); " is 120.
Complex Conditional,SIL.FieldWorks.Common.Widgets,FwTextBoxColumn,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxColumn.cs,OnRowHeightChanged,The conditional expression  "grid != null && grid.CurrentCell != null && grid.IsCurrentCellInEditMode &&  				grid.CurrentCellAddress.X == Index &&  				grid.CurrentCellAddress.Y == e.Row.Index"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Widgets,SilButtonColumn,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,ShowToolTip,The conditional expression  "(m_toolTip != null && m_toolTip.Active) ||  				string.IsNullOrEmpty(m_buttonToolTip) ||  				DataGridView == null ||	DataGridView.FindForm() == null"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Widgets,FwComboMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PreFilterMessage,The conditional expression  "xPos > 0x8fff || yPos < 0 ||	// x or y is negitive  							xPos > c.ClientSize.Width ||	// x is to big  							yPos > c.ClientSize.Height"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Widgets,PopupTree,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,m_treeView_MouseDown,The conditional expression  "tn != null  &&  				(e.X >= tn.Bounds.X && e.X <= tn.Bounds.X + tn.Bounds.Width) &&  				(e.Y >= tn.Bounds.Y && e.Y <= tn.Bounds.Y + tn.Bounds.Height)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Widgets,PopupTree,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,m_treeView_MouseUp,The conditional expression  "tn != null &&  				tn == m_tnMouseDown &&  				(e.X >= tn.Bounds.X && e.X <= tn.Bounds.X + tn.Bounds.Width) &&  				(e.Y >= tn.Bounds.Y && e.Y <= tn.Bounds.Y + tn.Bounds.Height)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Widgets,PopupTree,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,m_treeView_MouseUp,The conditional expression  "tn == null || tn == m_tnMouseDown || (tn == null && m_tnMouseDown != null)"  is complex.
Virtual Method Call from Constructor,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,FwComboBoxBase,The constructor "FwComboBoxBase" calls a virtual method "CreateDropDownBox".
Empty Catch Block,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,Select,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.Widgets,TreeCombo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\TreeCombo.cs,GetFontOverrideInfo,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.Widgets,LabeledMultiStringControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringControl.cs,Select,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,CustomDigitEntryControl,The following statement contains a magic number: var digitBox = new TextBox {Size = new Size(30' 30)};
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,CustomDigitEntryControl,The following statement contains a magic number: var digitBox = new TextBox {Size = new Size(30' 30)};
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,CustomDigitEntryControl,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,GetDigits,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,SetDigits,The following statement contains a magic number: !isEmpty && new StringInfo(digits).LengthInTextElements != 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,SetDigits,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,AreAllDigitsValid,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,HighlightProblemDigits,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,CustomDigitEntryControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\CustomDigitEntryControl.cs,ResetColor,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetLocationForText,The following statement contains a magic number: contentBounds.Height -= 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetLocationForText,The following statement contains a magic number: contentBounds.Width -= 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetLocationForText,The following statement contains a magic number: x = contentBounds.Right - (dx0 + 4);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetLocationForText,The following statement contains a magic number: int dy = (contentBounds.Height - dy0) / 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetRenderProps,The following statement contains a magic number: renderProps.szFaceName = new ushort[32];
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetRenderProps,The following statement contains a magic number: renderProps.szFontVar = new ushort[64];
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxCell.cs,GetRenderProps,The following statement contains a magic number: renderProps.dympHeight = (int)(font.SizeInPoints * 1000.0);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBoxControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\FwTextBoxControl.cs,FwTextBoxControl,The following statement contains a magic number: Padding = new Padding(1' 2' 1' 1);
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonColumn,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,SilButtonColumn,The following statement contains a magic number: Width = 110;
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonColumn,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,ShowToolTip,The following statement contains a magic number: pt.X += (int)(sz.Width * 0.6);
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,GetRectangles,The following statement contains a magic number: int buttonWidth = (OwningButtonColumn == null ? 22 : OwningButtonColumn.ButtonWidth);
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,GetRectangles,The following statement contains a magic number: buttonWidth += 2;
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,GetRectangles,The following statement contains a magic number: rcbtn.Width -= 2;
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,GetRectangles,The following statement contains a magic number: rcbtn.Height -= 3;
Magic Number,SIL.FieldWorks.Common.Widgets,SilButtonCell,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\DataGridView\SilButtonCell.cs,GetRectangles,The following statement contains a magic number: rcbtn.Y += 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,FwLabel,The following statement contains a magic number: Padding = new Padding(1' 2' 1' 1);
Magic Number,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,AlignText,The following statement contains a magic number: left = (ClientRectangle.Width - textWidth) / 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FwLabel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwLabel.cs,AlignText,The following statement contains a magic number: top = (ClientRectangle.Height - textHeight) / 2;
Magic Number,SIL.FieldWorks.Common.Widgets,FontHeightAdjuster,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FontHeightAdjuster.cs,GetAdjustedTsString,The following statement contains a magic number: bldr.SetIntPropValues(iStart' iEnd'  						(int)FwTextPropType.ktptFontSize'  						(int)FwTextPropVar.ktpvMilliPoint' (int)(sizeInPoints * 1000.0f));
Magic Number,SIL.FieldWorks.Common.Widgets,FontHeightAdjuster,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FontHeightAdjuster.cs,GetFontHeight,The following statement contains a magic number: return (int)((ascent + descent) * 1000.0f);
Magic Number,SIL.FieldWorks.Common.Widgets,FontHeightAdjuster,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FontHeightAdjuster.cs,GetFontForStyle,The following statement contains a magic number: return new Font(bldr.ToString()' (float)(dympHeight / 1000.0f));
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,FwComboBoxBase,The following statement contains a magic number: Padding = new Padding(Application.RenderWithVisualStyles ? 2 : 1);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnPaint,The following statement contains a magic number: Rectangle focusRect = new Rectangle(contentRect.Left + 1' contentRect.Top + 1'  						m_textBoxPanel.Width - 2' contentRect.Height - 2);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,OnPaint,The following statement contains a magic number: Rectangle focusRect = new Rectangle(contentRect.Left + 1' contentRect.Top + 1'  						m_textBoxPanel.Width - 2' contentRect.Height - 2);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: naturalHeight = 20;
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: naturalHeight < 20
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: sz.Height = Math.Min(naturalHeight' workingArea.Height * 4 / 10);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: sz.Height = Math.Min(naturalHeight' workingArea.Height * 4 / 10);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: naturalWidth += 20;
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: sz.Width = Math.Min(width' workingArea.Width * 4 / 10);
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboBoxBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ShowDropDownBox,The following statement contains a magic number: sz.Width = Math.Min(width' workingArea.Width * 4 / 10);
Magic Number,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,AdjustSize,The following statement contains a magic number: int width = NaturalWidth + (height > maxHeight ? 25 : 10);
Magic Number,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,AdjustSize,The following statement contains a magic number: int width = NaturalWidth + (height > maxHeight ? 25 : 10);
Magic Number,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,AdjustSize,The following statement contains a magic number: Form.Width = Math.Max(100' Math.Min(width' maxWidth));
Magic Number,SIL.FieldWorks.Common.Widgets,ComboListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,AdjustSize,The following statement contains a magic number: Form.Height = Math.Max(10' Math.Min(height' maxHeight));
Magic Number,SIL.FieldWorks.Common.Widgets,FwComboMessageFilter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,PreFilterMessage,The following statement contains a magic number: switch ((Win32.WinMsgs)m.Msg)  			{  				case Win32.WinMsgs.WM_CHAR:  				{  					// Handle the Escape key by removing list if present with out selecting  					int wparam = m.WParam.ToInt32();  					Win32.VirtualKeycodes vkey = (Win32.VirtualKeycodes)(wparam & 0xffff);  					if (vkey == Win32.VirtualKeycodes.VK_ESCAPE)  					{  						m_comboListbox.OnCapturedClick();  						return true;  					}  					// Doesn't work' apparently Alt-up doesn't go through WM_CHAR.  					//				if ( vkey == Win32.VirtualKeycodes.VK_UP && ((wparam & (1 << 28)) != 0))  					//				{  					//					m_listbox.OnCapturedClick();  					//					return true;  					//				}  					return false;  				}  					////			case Win32.WinMsgs.WM_NCLBUTTONDOWN:  					////			case Win32.WinMsgs.WM_NCLBUTTONUP:  				case Win32.WinMsgs.WM_LBUTTONDOWN:  				case Win32.WinMsgs.WM_LBUTTONUP:  				{  					// Handle any mouse left button activity.  					// This is tricky. A mouse DOWN anywhere outside our control closes the window without  					// making a choice. This is done by calling OnCapturedClick' and happens if we get  					// to the end of this case WITHOUT returning false.  					// A mouse UP usually does the same thing (this would correspond to clicking an item'  					// then changing your mind and moving the mouse away from the control).  					// But a mouse UP must only do it AFTER there has been a mouse DOWN.  					// Otherwise' the control disappears if the user drags slightly outside the launch button  					// (or didn't hit it exactly) in the process of the original click that launched it.  					// Non-client areas include the title bar' menu bar' window borders'  					// and scroll bars. But the only one in our combo is the scroll bar.  					if ((Win32.WinMsgs)m.Msg == Win32.WinMsgs.WM_LBUTTONDOWN)  					{  						m_fGotMouseDown = true; // and go on to check whether it's inside  					}  					else  					{  						if (!m_fGotMouseDown)  							return false; // ignore mouse up until we get mouse down  					}  					Control c = Control.FromHandle(m.HWnd);  					// Clicking anywhere in an FwListBox' including it's scroll bar'  					// behaves normally.    					if ((c == m_comboListbox.InnerListBox || c == m_comboListbox.LaunchButton) && c.Visible)  					{  						int xPos = MiscUtils.LoWord(m.LParam);	// LOWORD(m.LParam);  						int yPos = MiscUtils.HiWord(m.LParam);	// HIWORD(m.LParam);    						if (xPos > 0x8fff || yPos < 0 ||	// x or y is negitive  							xPos > c.ClientSize.Width ||	// x is to big  							yPos > c.ClientSize.Height)		// y is to big  						{  							// this is our exit case - event outside of client space...  						}  						else  							return false;  					}  					// On Mono clicking on the Scrollbar causes return from Control.FromHandle  					// to be a ImplicitScrollBar which is a child of the ComboTextBox InnerListBox.  					if (c is ScrollBar && c.Parent == m_comboListbox.InnerListBox)  					{  						return false;  					}  					else if (c.GetType().ToString() == "SIL.FieldWorks.IText.Sandbox")  					{  						//Size lbSize = m_listbox.Bounds;  						int x1Pos = MiscUtils.LoWord(m.LParam);	// LOWORD(m.LParam);  						int y1Pos = MiscUtils.HiWord(m.LParam);	// HIWORD(m.LParam);    						// convert from one client to another client  						Win32.POINT screenPos;  						screenPos.x = x1Pos;  						screenPos.y = y1Pos;  						Win32.ClientToScreen(c.Handle' ref screenPos);  						Win32.ScreenToClient(m_comboListbox.Handle' ref screenPos);    						// Test the regular window' if fails then add 21 to the pos and  						// try it again (allow for the button up on the icon that  						// started this combolist).  						if (m_comboListbox.Bounds.Contains(screenPos.x' screenPos.y) ||  							m_comboListbox.Bounds.Contains(screenPos.x' screenPos.y+21))  							return false;  					}    					// Any other click is captured and turned into a message that causes the list box to go away.  					m_comboListbox.OnCapturedClick();  					// We want to consume mouse down' but not mouse up' because consuming mouse up  					// somehow suppresses the next click.  					return (Win32.WinMsgs)m.Msg == Win32.WinMsgs.WM_LBUTTONDOWN;  				}  				default:  					return false;  			}
Magic Number,SIL.FieldWorks.Common.Widgets,ComboTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwComboBox.cs,ComboTextBox,The following statement contains a magic number: Font = new Font(Font.Name' (float)100.0);
Magic Number,SIL.FieldWorks.Common.Widgets,FwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,FwListBox,The following statement contains a magic number: Size = new Size(120'84);
Magic Number,SIL.FieldWorks.Common.Widgets,FwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,FwListBox,The following statement contains a magic number: Size = new Size(120'84);
Magic Number,SIL.FieldWorks.Common.Widgets,InnerFwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,GetAvailWidth,The following statement contains a magic number: return 1000000;
Magic Number,SIL.FieldWorks.Common.Widgets,ListBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,Display,The following statement contains a magic number: switch (frag)  			{  				case InnerFwListBox.kfragRoot:  					Font f = m_listbox.Font;  					if (m_listbox.StyleSheet == null)  					{  						// Try to get items a reasonable size based on whatever font has been set for the  						// combo as a whole. We don't want to do this if a stylesheet has been set' because  						// it will override the sizes specified in the stylesheet.  						// Enhance JohnT: there are several more properties we could readily copy over  						// from the font' but this is a good start.  						vwenv.set_IntProperty((int)FwTextPropType.ktptFontSize'  							(int)FwTextPropVar.ktpvMilliPoint' (int)(f.SizeInPoints * 1000));  					}  					// Setting the font family here appears to override the fonts associated with the  					// TsString data.  This causes trouble for non-Microsoft Sans Serif writing systems.  					// See LT-551 for the bug report that revealed this problem.  					//				vwenv.set_StringProperty((int) FwTextPropType.ktptFontFamily'  					//					f.FontFamily.Name);  					vwenv.set_IntProperty((int)FwTextPropType.ktptForeColor'  						(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(m_listbox.ForeColor));  					DisplayList(vwenv);  					break;  				case InnerFwListBox.kfragItems:  					int index' hvoDummy' tagDummy;  					int clev = vwenv.EmbeddingLevel;  					vwenv.GetOuterObject(clev - 1' out hvoDummy' out tagDummy' out index);  					bool fHighlighted = m_listbox.IsHighlighted(index);  					if (fHighlighted && m_listbox.ShowHighlight)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptForeColor'  							(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(Color.FromKnownColor(KnownColor.HighlightText)));  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor'  							(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(Color.FromKnownColor(KnownColor.Highlight)));  					}  					vwenv.OpenParagraph();  					var tss = vwenv.DataAccess.get_StringProp(hvo' InnerFwListBox.ktagText);  					if (fHighlighted && m_listbox.ShowHighlight)  					{  						// Insert a string that has the foreground color not set' so the foreground color set above can take effect.  						ITsStrBldr bldr = tss.GetBldr();  						bldr.SetIntPropValues(0' bldr.Length' (int) FwTextPropType.ktptForeColor' -1' -1);  						vwenv.AddString(bldr.GetString());  					}  					else  					{  						// Use the same Add method on both branches of the if.  Otherwise' wierd  						// results can happen on the display.  (See FWNX-803' which also affects  						// the Windows build' not just the Linux build!)  						vwenv.AddString(tss);  					}  					// REVIEW (DamienD): Why do we add blanks here? I commented this out.  					//vwenv.AddString(m_tssBlanks);  					vwenv.CloseParagraph();  					break;  			}
Magic Number,SIL.FieldWorks.Common.Widgets,InternalFwMultiParaTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwMultiParaTextBox.cs,MakeRoot,The following statement contains a magic number: HorizMargin = 5;
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,FwTextBox,The following statement contains a magic number: Padding = Application.RenderWithVisualStyles ? new Padding(2) : new Padding(1' 2' 1' 1);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,FwTextBox,The following statement contains a magic number: Padding = Application.RenderWithVisualStyles ? new Padding(2) : new Padding(1' 2' 1' 1);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,FwTextBox,The following statement contains a magic number: Size = new Size(100' 22);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,FwTextBox,The following statement contains a magic number: Size = new Size(100' 22);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,FwTextBox,The following statement contains a magic number: Font = new Font(Font.Name' 100.0f);
Magic Number,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,GetDympMaxHeight,The following statement contains a magic number: int mpEditHeight = (control.ClientSize.Height - control.Padding.Vertical) * 72000 / (int)gr.DpiY;
Magic Number,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,GetAvailWidth,The following statement contains a magic number: return 1000000;
Magic Number,SIL.FieldWorks.Common.Widgets,InnerFwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,MakeSelectionVisible,The following statement contains a magic number: rcPrimary.Width < ClientRectangle.Width - HorizMargin * 2
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,UpdateRootBoxTextProps,The following statement contains a magic number: propsBldr.SetIntPropValues((int)FwTextPropType.ktptPadTop' (int)FwTextPropVar.ktpvMilliPoint'  					m_innerTextBox.Padding.Top * 72000 / (int)graphics.DpiY);
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,UpdateRootBoxTextProps,The following statement contains a magic number: propsBldr.SetIntPropValues((int)FwTextPropType.ktptPadBottom' (int)FwTextPropVar.ktpvMilliPoint'  					m_innerTextBox.Padding.Bottom * 72000 / (int)graphics.DpiY);
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,UpdateRootBoxTextProps,The following statement contains a magic number: propsBldr.SetIntPropValues((int)FwTextPropType.ktptPadLeading' (int)FwTextPropVar.ktpvMilliPoint'  					(m_rtl ? m_innerTextBox.Padding.Right : m_innerTextBox.Padding.Left) * 72000 / (int)graphics.DpiX);
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,UpdateRootBoxTextProps,The following statement contains a magic number: propsBldr.SetIntPropValues((int)FwTextPropType.ktptPadTrailing' (int)FwTextPropVar.ktpvMilliPoint'  					(m_rtl ? m_innerTextBox.Padding.Left : m_innerTextBox.Padding.Right) * 72000 / (int)graphics.DpiX);
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r)|((short)((byte)(g))<<8))|(((short)(byte)(b))<<16)));
Magic Number,SIL.FieldWorks.Common.Widgets,TextBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,RGB,The following statement contains a magic number: return ((uint)(((byte)(r)|((short)((byte)(g))<<8))|(((short)(byte)(b))<<16)));
Magic Number,SIL.FieldWorks.Common.Widgets,WritingSystemAndStylesheetHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\IWritingSystemAndStylesheet.cs,SetupWritingSystemAndStylesheetInfo,The following statement contains a magic number: control.Font = new System.Drawing.Font(cache.ServiceLocator.WritingSystemManager.Get(wsDefault).DefaultFontName' 10);
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,OnLayout,The following statement contains a magic number: int indent = m_innerView.VC.m_mDxmpLabelWidth * dpiX / 72000 + 5;
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,OnLayout,The following statement contains a magic number: int indent = m_innerView.VC.m_mDxmpLabelWidth * dpiX / 72000 + 5;
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\LabeledMultiStringView.cs,OnLayout,The following statement contains a magic number: control.Top = Height - indent + 5;
Magic Number,SIL.FieldWorks.Common.Widgets,PasswordBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PasswordBox.cs,PasswordBox,The following statement contains a magic number: m_eye.Size = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.Common.Widgets,PasswordBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PasswordBox.cs,PasswordBox,The following statement contains a magic number: m_eye.Size = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.Common.Widgets,PasswordBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PasswordBox.cs,OnResize,The following statement contains a magic number: var fudge = 8;
Magic Number,SIL.FieldWorks.Common.Widgets,FwTreeView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\PopupTree.cs,WndProc,The following statement contains a magic number: const int wmCharMsg = 258;
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnDropDownOpened,The following statement contains a magic number: rc.Width -= 2;
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(pen' new Rectangle(0' Bounds.Top'  					Bounds.Width - borderSize.Width'  					Bounds.Height - 2 * borderSize.Height));
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(pen'  					new Rectangle(Bounds.Width - DropDownButtonWidth - 2 * borderSize.Width'  						Bounds.Top'  						DropDownButtonWidth + 2 * borderSize.Width'  						Bounds.Height - 2 * borderSize.Height));
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(pen'  					new Rectangle(Bounds.Width - DropDownButtonWidth - 2 * borderSize.Width'  						Bounds.Top'  						DropDownButtonWidth + 2 * borderSize.Width'  						Bounds.Height - 2 * borderSize.Height));
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawRectangle(pen'  					new Rectangle(Bounds.Width - DropDownButtonWidth - 2 * borderSize.Width'  						Bounds.Top'  						DropDownButtonWidth + 2 * borderSize.Width'  						Bounds.Height - 2 * borderSize.Height));
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: Owner.Renderer.DrawArrow(new ToolStripArrowRenderEventArgs(e.Graphics' this'  					new Rectangle(Bounds.Width - DropDownButtonWidth - borderSize.Width'  						Bounds.Top + borderSize.Height'  						DropDownButtonWidth'  						Bounds.Height - 3 * borderSize.Height)'  					ForeColor' ArrowDirection.Down));
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: Rectangle textRect = new Rectangle(borderSize.Width'  					Bounds.Top + borderSize.Height'  					Bounds.Width - DropDownButtonWidth - 3 * borderSize.Width'  					Bounds.Height - 3 * borderSize.Height);
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: Rectangle textRect = new Rectangle(borderSize.Width'  					Bounds.Top + borderSize.Height'  					Bounds.Width - DropDownButtonWidth - 3 * borderSize.Width'  					Bounds.Height - 3 * borderSize.Height);
Magic Number,SIL.FieldWorks.Common.Widgets,ToolStripControlComboBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\ToolStripControlComboBox.cs,OnPaint,The following statement contains a magic number: e.Graphics.DrawString(Text' Font' GetBrush(ForeColor)'  					new RectangleF(ContentRectangle.Left' ContentRectangle.Top'  						Bounds.Width - DropDownButtonWidth - 3 * borderSize.Width'  						ContentRectangle.Height)'  					m_stringFormat);
Magic Number,SIL.FieldWorks.Common.Widgets,UserInterfaceChooser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\UserInterfaceChooser.cs,GetFontForLanguage,The following statement contains a magic number: return new Font(FontFamily.GenericSansSerif' 8.25F);
Magic Number,SIL.FieldWorks.Common.Widgets,UserInterfaceChooser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\UserInterfaceChooser.cs,GetFontForLanguage,The following statement contains a magic number: return new Font(fontName' 8.25F);
Magic Number,SIL.FieldWorks.Common.Widgets,UserInterfaceChooser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\UserInterfaceChooser.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(195' 21);
Magic Number,SIL.FieldWorks.Common.Widgets,UserInterfaceChooser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\UserInterfaceChooser.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(195' 21);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawCustomTabControl,The following statement contains a magic number: switch (this.Alignment)  			{  				case TabAlignment.Top:  					{  						int trunc = selRect.Height * this.RowCount + 2;  						rcPage.Y += trunc; rcPage.Height -= trunc;  					} break;  				case TabAlignment.Bottom: rcPage.Height -= (selRect.Height + VSTabControl.sAdjHeight) * this.RowCount; break;  			}
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawCustomTabControl,The following statement contains a magic number: selRect.Inflate(2' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawCustomTabControl,The following statement contains a magic number: selRect.Inflate(2' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Rectangle focusRect = Rectangle.Inflate(drawRect' -3' -3);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Rectangle focusRect = Rectangle.Inflate(drawRect' -3' -3);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Point imgLoc = state == TabItemState.Selected ? new Point(8' 2) : new Point(6' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Point imgLoc = state == TabItemState.Selected ? new Point(8' 2) : new Point(6' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Point imgLoc = state == TabItemState.Selected ? new Point(8' 2) : new Point(6' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: Point imgLoc = state == TabItemState.Selected ? new Point(8' 2) : new Point(6' 2);
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: imgLoc.Y = drawRect.Bottom - 2 - pagePict.Height;
Magic Number,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawTabItem,The following statement contains a magic number: int shift = state == TabItemState.Selected ? 2 : 0;
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The following statement contains a magic number: vlTable.nVal = 10000;
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The following statement contains a magic number: vlColWs.nVal = m_mDxmpLabelWidth + 5000;
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The following statement contains a magic number: vwenv.OpenTable(2' // Two columns.  				vlTable' // Table uses 100% of available width.  				0' // Border thickness.  				VwAlignment.kvaLeft' // Default alignment.  				VwFramePosition.kvfpVoid' // No border.  				VwRule.kvrlNone' // No rules between cells.  				0' // No forced space between cells.  				0' // No padding inside cells.  				false);
Magic Number,SIL.FieldWorks.Common.Widgets,LabeledMultiStringVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\InnerLabeledMultiStringView.cs,Display,The following statement contains a magic number: vwenv.set_IntProperty((int)FwTextPropType.ktptPadTop' (int)FwTextPropVar.ktpvMilliPoint' 2000);
Missing Default,SIL.FieldWorks.Common.Widgets,InnerFwListBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyCode)  			{  				case Keys.Right:  				case Keys.Down:  				{  					// Handle Alt-Down  					if (e.Alt && e.KeyCode == Keys.Down && m_owner is ComboListBox)  					{  						HandleListItemSelect();  						e.Handled = true;  					}  					else  					{  						// If we don't have any items' we certainly can't highlight them!  						if (m_owner.Items.Count == 0)  							return;  						// don't increment if already at the end  						if (m_owner.HighlightedIndex < m_owner.Items.Count-1)  							m_owner.HighlightedIndex += 1;  					}  					break;  				}  				case Keys.Left:  				case Keys.Up:  				{  					// Handle Alt-Up  					if (e.Alt && e.KeyCode == Keys.Up && m_owner is ComboListBox)  					{  						HandleListItemSelect();  						e.Handled = true;  					}  					else  					{  						// If we don't have any items' we certainly can't highlight them!  						if (m_owner.Items.Count == 0)  							return;    						// don't scroll up past first item  						if (m_owner.HighlightedIndex > 0 )  							m_owner.HighlightedIndex -= 1;  						else if (m_owner.HighlightedIndex < 0)  							m_owner.HighlightedIndex = 0;	// reset to first item.  					}  					break;  				}  			}
Missing Default,SIL.FieldWorks.Common.Widgets,ListBoxVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwListBox.cs,Display,The following switch statement is missing a default case: switch (frag)  			{  				case InnerFwListBox.kfragRoot:  					Font f = m_listbox.Font;  					if (m_listbox.StyleSheet == null)  					{  						// Try to get items a reasonable size based on whatever font has been set for the  						// combo as a whole. We don't want to do this if a stylesheet has been set' because  						// it will override the sizes specified in the stylesheet.  						// Enhance JohnT: there are several more properties we could readily copy over  						// from the font' but this is a good start.  						vwenv.set_IntProperty((int)FwTextPropType.ktptFontSize'  							(int)FwTextPropVar.ktpvMilliPoint' (int)(f.SizeInPoints * 1000));  					}  					// Setting the font family here appears to override the fonts associated with the  					// TsString data.  This causes trouble for non-Microsoft Sans Serif writing systems.  					// See LT-551 for the bug report that revealed this problem.  					//				vwenv.set_StringProperty((int) FwTextPropType.ktptFontFamily'  					//					f.FontFamily.Name);  					vwenv.set_IntProperty((int)FwTextPropType.ktptForeColor'  						(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(m_listbox.ForeColor));  					DisplayList(vwenv);  					break;  				case InnerFwListBox.kfragItems:  					int index' hvoDummy' tagDummy;  					int clev = vwenv.EmbeddingLevel;  					vwenv.GetOuterObject(clev - 1' out hvoDummy' out tagDummy' out index);  					bool fHighlighted = m_listbox.IsHighlighted(index);  					if (fHighlighted && m_listbox.ShowHighlight)  					{  						vwenv.set_IntProperty((int)FwTextPropType.ktptForeColor'  							(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(Color.FromKnownColor(KnownColor.HighlightText)));  						vwenv.set_IntProperty((int)FwTextPropType.ktptBackColor'  							(int)FwTextPropVar.ktpvDefault' (int)ColorUtil.ConvertColorToBGR(Color.FromKnownColor(KnownColor.Highlight)));  					}  					vwenv.OpenParagraph();  					var tss = vwenv.DataAccess.get_StringProp(hvo' InnerFwListBox.ktagText);  					if (fHighlighted && m_listbox.ShowHighlight)  					{  						// Insert a string that has the foreground color not set' so the foreground color set above can take effect.  						ITsStrBldr bldr = tss.GetBldr();  						bldr.SetIntPropValues(0' bldr.Length' (int) FwTextPropType.ktptForeColor' -1' -1);  						vwenv.AddString(bldr.GetString());  					}  					else  					{  						// Use the same Add method on both branches of the if.  Otherwise' wierd  						// results can happen on the display.  (See FWNX-803' which also affects  						// the Windows build' not just the Linux build!)  						vwenv.AddString(tss);  					}  					// REVIEW (DamienD): Why do we add blanks here? I commented this out.  					//vwenv.AddString(m_tssBlanks);  					vwenv.CloseParagraph();  					break;  			}
Missing Default,SIL.FieldWorks.Common.Widgets,FwTextBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\FwTextBox.cs,CreateRenderer,The following switch statement is missing a default case: switch (state)  				{  					case TextBoxState.Hot:  						element = VisualStyleElement.CreateElement(EDIT_CLASS' EP_EDITBORDER_NOSCROLL' EPSN_HOT);  						if (!VisualStyleRenderer.IsElementDefined(element))  							element = VisualStyleElement.TextBox.TextEdit.Hot;  						break;    					case TextBoxState.Normal:  						element = VisualStyleElement.CreateElement(EDIT_CLASS' EP_EDITBORDER_NOSCROLL' EPSN_NORMAL);  						if (!VisualStyleRenderer.IsElementDefined(element))  							element = VisualStyleElement.TextBox.TextEdit.Normal;  						break;    					case TextBoxState.Disabled:  						element = VisualStyleElement.CreateElement(EDIT_CLASS' EP_EDITBORDER_NOSCROLL' EPSN_DISABLED);  						if (!VisualStyleRenderer.IsElementDefined(element))  							element = VisualStyleElement.TextBox.TextEdit.Disabled;  						break;  				}
Missing Default,SIL.FieldWorks.Common.Widgets,VSTabControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Controls\Widgets\VSTabControl.cs,DrawCustomTabControl,The following switch statement is missing a default case: switch (this.Alignment)  			{  				case TabAlignment.Top:  					{  						int trunc = selRect.Height * this.RowCount + 2;  						rcPage.Y += trunc; rcPage.Height -= trunc;  					} break;  				case TabAlignment.Bottom: rcPage.Height -= (selRect.Height + VSTabControl.sAdjHeight) * this.RowCount; break;  			}
