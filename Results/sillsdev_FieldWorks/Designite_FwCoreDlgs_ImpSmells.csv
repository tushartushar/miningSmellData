Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,InitializeComponent,The method has 167 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,ArchiveWithRamp,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ArchiveWithRamp.cs,InitializeComponent,The method has 102 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The method has 207 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The method has 168 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,InitializeComponent,The method has 126 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,cboConverter_SelectedIndexChanged,The method has 170 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,SelectMapping,The method has 100 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,ConverterTest,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,InitializeComponent,The method has 101 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwCheckAnthroListDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwCheckAnthroListDlg.cs,InitializeComponent,The method has 124 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,InitializeComponent,The method has 113 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,InitializeComponent,The method has 148 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,InitializeComponent,The method has 126 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The method has 132 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,InitializeComponent,The method has 294 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,ReplaceString,The method has 100 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,InitializeComponent,The method has 160 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The method has 122 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,InitializeComponent,The method has 202 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The method has 539 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_btnOk_Click,The method has 107 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,InitializeComponent,The method has 317 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,InitializeComponent,The method has 369 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,InitializeComponent,The method has 238 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The method has 117 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The method has 859 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The method has 580 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectDlg.cs,InitializeComponent,The method has 136 lines of code.
Long Method,SIL.FieldWorks.FwCoreDlgs.BackupRestore,RestoreProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\RestoreProjectDlg.cs,InitializeComponent,The method has 336 lines of code.
Complex Method,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,AutoSave,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,SelectMapping,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwCharacterCategorizer,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwCharacterCategorizer.cs,WordAndPuncts,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,DoReplaceAll,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,Find,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,SaveWs,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,btnModifyEthnologueInfo_Click,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,AddNewWsForLanguage,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.FwCoreDlgs.BackupRestore,RestoreProjectPresenter,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\RestoreProjectPresenter.cs,IncludesFiles,Cyclomatic complexity of the method is 8
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,AddCnvtrDlg,The method has 5 parameters. Parameters: helpTopicProvider' app' encConverters' wsInUse' onlyUnicodeCnvtrs
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,AddCnvtrDlg,The method has 6 parameters. Parameters: helpTopicProvider' app' encConverters' selectConv' wsInUse' onlyUnicodeCnvtrs
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,Initialize,The method has 6 parameters. Parameters: cache' wsContainer' ws' app' contextFont' tokenGrid
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,AutoConfigureEx,The method has 5 parameters. Parameters: rIEncConverter' eConversionTypeFilter' strFriendlyName' strLhsEncodingID' strRhsEncodingID
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,SampleVc,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,LoadDataFor,The method has 7 parameters. Parameters: vwenv' rghvo' chvo' hvoParent' tag' frag' ihvoMin
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,FwApplyStyleDlg,The method has 11 parameters. Parameters: rootSite' cache' hvoStylesOwner' stylesTag' normalStyleName' customUserLevel' paraStyleName' charStyleName' hvoRootObject' app' helpTopicProvider
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FindCollectorEnv,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FindCollectorEnv.cs,FindCollectorEnv,The method has 6 parameters. Parameters: vc' sda' hvoRoot' frag' vwPattern' searchKiller
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,ReverseFindCollectorEnv,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FindCollectorEnv.cs,ReverseFindCollectorEnv,The method has 6 parameters. Parameters: vc' sda' hvoRoot' frag' vwPattern' searchKiller
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,FwChooserDlg,The method has 5 parameters. Parameters: list' initiallySelectedHvos' helptopicProvider' sHelpTopicKey' projSettingsKey
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The method has 8 parameters. Parameters: cache' vwPattern' rootSite' fReplace' fOverlays' owner' helpTopicProvider' app
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The method has 9 parameters. Parameters: cache' vwPattern' rootSite' fReplace' fOverlays' owner' helpTopicProvider' app' wsEdit
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The method has 6 parameters. Parameters: cache' vwPattern' stylesheet' owner' helpTopicProvider' app
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The method has 7 parameters. Parameters: cache' vwPattern' stylesheet' owner' helpTopicProvider' app' wsEdit
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,ReplaceString,The method has 8 parameters. Parameters: tsbBuilder' tssInput' ichMinInput' ichLimInput' tssReplace' delta' fEmptySearch' fUseWs
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,Initialize,The method has 6 parameters. Parameters: fontInfo' fAllowSubscript' ws' wsf' styleSheet' fAlwaysDisableFontFeatures
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,ShowAddWsContextMenu,The method has 8 parameters. Parameters: cmnuAddWs' wssToAdd' listToAddTo' button' clickHandlerExistingWs' clickHandlerNewWs' clickHandlerNewWsFromSelected' selectedWs
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,PopulateWsContextMenu,The method has 7 parameters. Parameters: cmnuAddWs' wssToAdd' listToAddTo' clickHandlerExistingWs' clickHandlerNewWs' clickHandlerNewWsFromSelected' selectedWs
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,FwStylesDlg,The method has 13 parameters. Parameters: rootSite' cache' styleSheet' defaultRightToLeft' showBiDiLabels' normalStyleName' customUserLevel' userMeasurementType' paraStyleName' charStyleName' hvoRootObject' app' helpTopicProvider
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,RunStylesDialogForCombo,The method has 11 parameters. Parameters: combo' fixCombo' defaultStyle' stylesheet' nMaxStyleLevel' hvoAppRoot' cache' owner' app' helpTopicProvider' setPropsToFactorySettings
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,PicturePropertiesDialog,The method has 5 parameters. Parameters: cache' initialPicture' helpTopicProvider' app' fAnalysis
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The method has 6 parameters. Parameters: cache' wsContainer' helpTopicProvider' app' ws' wsName
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,ValidCharGridsManager,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,Init,The method has 5 parameters. Parameters: gridWf' gridOther' gridNum' ws' app
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,ShowNewDialog,The method has 9 parameters. Parameters: owner' cache' wsManager' wsContainer' helpTopicProvider' app' displayRelatedWss' defaultName' newWritingSystems
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,ShowModifyDialog,The method has 8 parameters. Parameters: owner' selectedWS' addNewForLangOfSelectedWs' cache' wsContainer' helpTopicProvider' app' newWritingSystems
Long Parameter List,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,WritingSystemPropertiesDialog,The method has 5 parameters. Parameters: cache' wsManager' wsContainer' helpTopicProvider' app
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,,The length of the parameter m_repeatColumnHeaderOnEveryPage is 31.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,,The length of the parameter m_fDisableReplacePatternMatching is 32.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,ApplyNewFontSizeIfValid,The length of the parameter insertionPointLocationBeforeRevert is 34.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,,The length of the parameter m_fInSelectedIndexChangedHandler is 32.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,,The length of the parameter m_projectLexiconSettingsDataMapper is 34.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,,The length of the parameter m_lastStyleTypeEntryForOtherApp is 31.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,,The length of the parameter paragraphStyleToolStripMenuItem is 31.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,,The length of the parameter characterStyleToolStripMenuItem is 31.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,,The length of the parameter s_defaultFileLocChoiceForSession is 32.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,PopulateSpellingDictionaryComboBox,The length of the parameter fAlternateDictionaryExistsForLanguage is 37.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,,The length of the parameter m_userChangedSpellCheckDictionary is 33.
Long Identifier,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,,The length of the parameter m_overrideCurrentWritingSystem is 30.
Long Identifier,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectDlg.cs,m_backUp_Click,The length of the parameter dlgChangeDefaultBackupLocation is 30.
Long Statement,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AddCnvtrDlg)); " is 131.
Long Statement,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,InitializeComponent,The length of the statement  "			helpProvider1.SetShowHelp(this.availableCnvtrsListBox' ((bool)(resources.GetObject("availableCnvtrsListBox.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,InitializeComponent,The length of the statement  "			this.availableCnvtrsListBox.SelectedIndexChanged += new System.EventHandler(this.availableCnvtrsListBox_SelectedIndexChanged); " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,AddNewUserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddNewUserDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AddNewUserDlg)); " is 133.
Long Statement,SIL.FieldWorks.FwCoreDlgs,AdvancedEncProps,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AdvancedEncProps.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AdvancedEncProps)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ArchiveWithRamp,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ArchiveWithRamp.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ArchiveWithRamp)); " is 135.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,Initialize,The length of the statement  "			var isOkToDisplayScripture = m_cache != null && m_cache.ServiceLocator.GetInstance<IScrBookRepository>().AllInstances().Any(); " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(CharContextCtrl)); " is 135.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			this.gridContext.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.DisableResizing; " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle5.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			this.gridContext.CellPainting += new System.Windows.Forms.DataGridViewCellPaintingEventHandler(this.gridContext_CellPainting); " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			this.gridContext.CellValueNeeded += new System.Windows.Forms.DataGridViewCellValueEventHandler(this.gridContext_CellValueNeeded); " is 129.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			this.gridContext.RowHeightInfoNeeded += new System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler(this.HandleRowHeightInfoNeeded); " is 141.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128))))); " is 137.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ChooseLangProjectDialog)); " is 143.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The length of the statement  "			this.m_lstLanguageProjects.SelectedIndexChanged += new System.EventHandler(this.m_lstLanguageProjects_SelectedIndexChanged); " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The length of the statement  "			this.m_lstLanguageProjects.MouseDoubleClick += new System.Windows.Forms.MouseEventHandler(this.HandleDoubleClickOnProjectList); " is 127.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The length of the statement  "			this.m_linkOpenFwDataProject.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.OpenFwDataProjectLinkClicked); " is 137.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The length of the statement  "			this.m_linkOpenBridgeProject.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.OpenBridgeProjectLinkClicked); " is 137.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(CnvtrPropertiesCtrl)); " is 139.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "			cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrCc' ConverterType.ktypeCC' EncConverters.strTypeSILcc)); " is 128.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "				cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrIcuConv' ConverterType.ktypeIcuConvert' EncConverters.strTypeSILicuConv)); " is 146.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "			cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrIcuTransduce' ConverterType.ktypeIcuTransduce' EncConverters.strTypeSILicuTrans)); " is 154.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "			cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrTecTec' ConverterType.ktypeTecKitTec' EncConverters.strTypeSILtec)); " is 140.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "			cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrTecMap' ConverterType.ktypeTecKitMap' EncConverters.strTypeSILmap)); " is 140.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "			cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrRegExpIcu' ConverterType.ktypeRegEx' EncConverters.strTypeSILicuRegex)); " is 144.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,CnvtrPropertiesCtrl_Load,The length of the statement  "				cboConverter.Items.Add(new CnvtrTypeComboItem(AddConverterResources.kstrCodePage' ConverterType.ktypeCodePage' EncConverters.strTypeSILcp)); " is 140.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,btnModify_Click,The length of the statement  "			if (m_encConverters.AutoConfigureEx(aEC' aEC.ConversionType' ref strFriendlyName' aEC.LeftEncodingID' aEC.RightEncodingID)) " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,AutoConfigureEx,The length of the statement  "				if (rConfigurator.Configure(m_encConverters' strFriendlyName' eConversionTypeFilter' strLhsEncodingID' strRhsEncodingID)) " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,AutoConfigureEx,The length of the statement  "						strFriendlyName = String.Format(strTempConverterPrefix + "id: '{0}'' created on '{1}' at '{2}'"' rConfigurator.ConverterIdentifier' dt.ToLongDateString()' dt.ToLongTimeString()); " is 178.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ConverterTest,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + ". ******************"); " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ConverterTest,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ConverterTest)); " is 133.
Long Statement,SIL.FieldWorks.FwCoreDlgs,DeleteWritingSystemWarningDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\DeleteWritingSystemWarningDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DeleteWritingSystemWarningDialog)); " is 152.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwCheckAnthroListDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwCheckAnthroListDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwCheckAnthroListDlg)); " is 140.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwStylesModifiedDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesModifiedDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwStylesModifiedDlg)); " is 139.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwUpdateReportDlg)); " is 137.
Long Statement,SIL.FieldWorks.FwCoreDlgs,MergeWritingSystemDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MergeWritingSystemDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MergeWritingSystemDlg)); " is 141.
Long Statement,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MissingOldFieldWorksDlg)); " is 143.
Long Statement,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,InitializeComponent,The length of the statement  "			this.m_lnkSqlSvr.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.m_lnkSqlSvr_LinkClicked); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,MoveOrCopyFilesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MoveOrCopyFilesDlg.cs,SetupHelp,The length of the statement  "				m_helpProvider.HelpNamespace = Path.Combine(FwDirectoryFinder.CodeDirectory' m_helpTopicProvider.GetHelpString("UserHelpFile")); " is 128.
Long Statement,SIL.FieldWorks.FwCoreDlgs,MoveOrCopyFilesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MoveOrCopyFilesDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MoveOrCopyFilesDlg)); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ProjectLocationDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ProjectLocationDlg.cs,DirectoryIsSuitable,The length of the statement  "			return (ufi.CanAccess(Mono.Unix.Native.AccessModes.R_OK) && ufi.CanAccess(Mono.Unix.Native.AccessModes.W_OK)); // accessible for writing " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ProjectLocationDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ProjectLocationDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ProjectLocationDlg)); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,FillStyleList,The length of the statement  "				throw new InvalidOperationException("Can't show the Apply Style dialog box if neither character nor paragraph styles can be applied."); " is 135.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwApplyStyleDlg)); " is 135.
Long Statement,SIL.FieldWorks.FwCoreDlgs,DuplicateProjectFoundDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\DuplicateProjectFoundDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DuplicateProjectFoundDlg)); " is 144.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FindCollectorEnv,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FindCollectorEnv.cs,CheckDisposed,The length of the statement  "				throw new ObjectDisposedException("FindCollectorEnv"' "This object is being used after it has been disposed: this is an Error."); " is 129.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwChooserDlg)); " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,InitializeComponent,The length of the statement  "			this.m_persistence.SaveSettings += new SIL.FieldWorks.Common.Controls.Persistence.Settings(this.m_persistence_SaveSettings); " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,InitializeComponent,The length of the statement  "			this.m_persistence.LoadSettings += new SIL.FieldWorks.Common.Controls.Persistence.Settings(this.m_persistence_LoadSettings); " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwDeleteProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwDeleteProjectDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwDeleteProjectDlg)); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwFindReplaceDlg)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,DoReplaceAll,The length of the statement  "			// suppress the standard message; ReplaceAll shows its own based on how many matches we find (although the text is the same for 0 found) " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,DoReplaceAll,The length of the statement  "					for (FindFromAndWrap(SelectAtBeginning()' true); IsReplacePossible(CurrentSelection); FindFromAndWrap(CurrentSelection' false)) " is 127.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,DoReplaceAll,The length of the statement  "						DoReplacement(CurrentSelection' m_vwFindPattern.ReplacementText' m_vwFindPattern.MatchOldWritingSystem' (FindText.Length == 0)); " is 128.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,DoReplaceAll,The length of the statement  "					// TODO Enhance (Hasso) 2015.08: adjust the selection to reflect length changes in the text (easier once LT-16537 is fixed) " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetHelpTopicId,The length of the statement  "			if (tabControls != null && tabControls.TabCount <= 1 && s_helpTopic != "khtpFindNotebook")   //find/replace help topic for lexicon " is 130.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,PopulateWritingSystemMenu,The length of the statement  "				mnuWritingSystem.MenuItems.Add(new MenuItem(ws.DisplayLabel' clickEvent) {Checked = sCurrentWs == ws' Tag = ws.Handle}); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwFontDialog)); " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwHelpAbout)); " is 131.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The length of the statement  "				string text = viProvider.CopyrightString + Environment.NewLine + viProvider.LicenseString + Environment.NewLine + viProvider.LicenseURL; " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The length of the statement  "					text += "\r\n" + "\r\n" + key + "\r\n" + acknowlegements[key].Copyright + " " + acknowlegements[key].Url + " " + acknowlegements[key].LicenseUrl; " is 145.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!disposing' "********* Missing Dispose() call for " + GetType().Name + ". *******"); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwNewLangProject)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(m_lblExplainVernWrtSys' ((bool)(resources.GetObject("m_lblExplainVernWrtSys.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(m_lblExplainAnalWrtSys' ((bool)(resources.GetObject("m_lblExplainAnalWrtSys.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(this.m_lblVernacularWrtSys' ((bool)(resources.GetObject("m_lblVernacularWrtSys.ShowHelp")))); " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,CreateNewLangProjWithProgress,The length of the statement  "					// REVIEW Hasso 2013.10: If we don't need to call OnClosing (we shouldn't)' instead of using m_fIgnoreClose' we could set " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,RemoveWs,The length of the statement  "			var realTarget = (from item in wss where item.IcuLocale == ((CoreWritingSystemDefinition) target).IcuLocale select item).FirstOrDefault(); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,DisplayNewWritingSystemProperties,The length of the statement  "			IWritingSystemContainer wsContainer = new MemoryWritingSystemContainer(m_wsManager.WritingSystems' m_wsManager.WritingSystems' " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,DisplayNewWritingSystemProperties,The length of the statement  "				Enumerable.Empty<CoreWritingSystemDefinition>()' Enumerable.Empty<CoreWritingSystemDefinition>()' Enumerable.Empty<CoreWritingSystemDefinition>()); " is 147.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,DisplayNewWritingSystemProperties,The length of the statement  "			if (WritingSystemPropertiesDialog.ShowNewDialog(this' null' m_wsManager' wsContainer' m_helpTopicProvider' (IApp) m_helpTopicProvider' " is 134.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwProjPropertiesDlg)); " is 139.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(this.m_txtProjDescription' ((bool)(resources.GetObject("m_txtProjDescription.ShowHelp")))); " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(this.m_lblProjModifiedDate' ((bool)(resources.GetObject("m_lblProjModifiedDate.ShowHelp")))); " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(this.m_lblProjCreatedDate' ((bool)(resources.GetObject("m_lblProjCreatedDate.ShowHelp")))); " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			this.linkLbl_useDefaultFolder.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkLbl_useDefaultFolder_LinkClicked); " is 146.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,InitializeComponent,The length of the statement  "			this.helpProvider1.SetShowHelp(this.btnLinkedFilesBrowse' ((bool)(resources.GetObject("btnLinkedFilesBrowse.ShowHelp")))); " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,m_btnOK_Click,The length of the statement  "			if (!SharedBackendServicesHelper.WarnOnConfirmingSingleUserChanges(m_cache)) //if Anything changed' check and warn about other apps " is 131.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,m_btnOK_Click,The length of the statement  "				NotifyProjectPropsChangedAndClose(); //The user changed something' but when warned decided against it' so do not save just quit " is 127.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,AddExistingWssToContextMenu,The length of the statement  "											where !listToAddExistingTo.Items.Cast<CoreWritingSystemDefinition>().Contains(ws' new WritingSystemLanguageTagEqualityComparer()) " is 129.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,DisplayModifyWritingSystemProperties,The length of the statement  "			if (WritingSystemPropertiesDialog.ShowModifyDialog(this' selectedWs' addNewForLangOfSelectedWs' m_cache' CurrentWritingSystemContainer' " is 135.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,DisplayNewWritingSystemProperties,The length of the statement  "			if (WritingSystemPropertiesDialog.ShowNewDialog(this' m_cache' m_cache.ServiceLocator.WritingSystemManager' CurrentWritingSystemContainer' " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,m_lstVernWs_ItemCheck,The length of the statement  "			m_btnOK.Enabled = (m_lstAnalWs.CheckedItems.Count >= 1 && (e.NewValue == CheckState.Checked || m_lstVernWs.CheckedItems.Count > 1)); " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,m_lstAnalWs_ItemCheck,The length of the statement  "			m_btnOK.Enabled = (m_lstVernWs.CheckedItems.Count >= 1 && (e.NewValue == CheckState.Checked || m_lstAnalWs.CheckedItems.Count > 1)); " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,MergeListItem,The length of the statement  "			if (DialogResult.No == MessageBox.Show(FwCoreDlgs.ksWSWarnWhenMergingWritingSystems' FwCoreDlgs.ksWarning' MessageBoxButtons.YesNo)) " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,MergeListItem,The length of the statement  "			using (var dlg = new MergeWritingSystemDlg(m_cache' ws' m_lstVernWs.Items.Cast<CoreWritingSystemDefinition>().Union(m_lstAnalWs.Items.Cast<CoreWritingSystemDefinition>())' " is 171.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,WsListChanged,The length of the statement  "			if (allSet.Count != lstBox.Items.Count || allSet.Intersect(lstBox.Items.Cast<CoreWritingSystemDefinition>()).Count() != allSet.Count) " is 133.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,SaveWs,The length of the statement  "			if (allSet.Count != lstBox.Items.Count || allSet.Intersect(lstBox.Items.Cast<CoreWritingSystemDefinition>()).Count() != allSet.Count) " is 133.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwSplashScreen.cs,Show,The length of the statement  "				m_splashScreen.Invoke(new SetAssemblyPropDelegate(m_splashScreen.SetProductExecutableAssembly)' ProductExecutableAssembly); " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_btnOk_Click,The length of the statement  "				using (UndoTaskHelper undoHelper = new UndoTaskHelper(m_cache.ActionHandlerAccessor' m_rootSite' "kstidUndoStyleChanges")) " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwStylesDlg)); " is 131.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,InitializeComponent,The length of the statement  "			this.m_bulletsTab.FontDialog += new SIL.FieldWorks.FwCoreDlgControls.FwBulletsTab.FontDialogHandler(this.OnBulletsFontDialog); " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FwUserProperties)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,InitializeComponent,The length of the statement  "			this.FaceImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("FaceImages.ImageStream"))); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,HelperMenu,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\HelperMenu.cs,GroupText,The length of the statement  "				bldr.Replace(selStart + selLen' selStart + selLen' rightText' null); // do this BEFORE inserting leftText and changing the position " is 131.
Long Statement,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(PicturePropertiesDialog)); " is 143.
Long Statement,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RealSplashScreen)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The length of the statement  "			this.progressLine.ForeColor2 = System.Drawing.Color.FromArgb(((int)(((byte)(0))))' ((int)(((byte)(90))))' ((int)(((byte)(152))))); " is 130.
Long Statement,SIL.FieldWorks.FwCoreDlgs,UtilityDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\UtilityDlg.cs,SetDlgInfo,The length of the statement  "			// <parameters title="FieldWorks Project Utilities" filename="Language Explorer\Configuration\UtilityCatalogInclude.xml"/> " is 122.
Long Statement,SIL.FieldWorks.FwCoreDlgs,UtilityDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\UtilityDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(UtilityDlg)); " is 130.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,txtManualCharEntry_TextChanged,The length of the statement  "				string origCharsKd = LCModel.Core.Text.Icu.Normalize(txtManualCharEntry.Text' LCModel.Core.Text.Icu.UNormalizationMode.UNORM_NFD); " is 130.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ValidCharactersDlg)); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128))))); " is 137.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.contextCtrl.GetContextInfo += new SIL.FieldWorks.FwCoreDlgs.CharContextCtrl.GetContextInfoHandler(this.contextCtrl_GetContextInfo); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.contextCtrl.TextTokenSubStringsLoaded += new SIL.FieldWorks.FwCoreDlgs.CharContextCtrl.TextTokenSubStringsLoadedHandler(this.contextCtrl_TextTokenSubStringsLoaded); " is 169.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.ColumnHeaderMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.gridCharInventory_ColumnHeaderMouseClick); " is 155.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.CellValueNeeded += new System.Windows.Forms.DataGridViewCellValueEventHandler(this.gridCharInventory_CellValueNeeded); " is 141.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.CellFormatting += new System.Windows.Forms.DataGridViewCellFormattingEventHandler(this.gridCharInventory_CellFormatting); " is 144.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.CellPainting += new System.Windows.Forms.DataGridViewCellPaintingEventHandler(this.gridCharInventory_CellPainting); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.gridCharInventory.CellValuePushed += new System.Windows.Forms.DataGridViewCellValueEventHandler(this.gridCharInventory_CellValuePushed); " is 141.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle5.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.chrGridWordForming.CharacterChanged += new SIL.FieldWorks.Common.Controls.CharacterGrid.CharacterChangedHandler(this.HandleCharGridCharacterChanged); " is 154.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle6.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.chrGridOther.CharacterChanged += new SIL.FieldWorks.Common.Controls.CharacterGrid.CharacterChangedHandler(this.HandleCharGridCharacterChanged); " is 148.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle7.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The length of the statement  "			this.chrGridNumbers.CharacterChanged += new SIL.FieldWorks.Common.Controls.CharacterGrid.CharacterChangedHandler(this.HandleCharGridCharacterChanged); " is 150.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WarningNotUsingDefaultLinkedFilesLocation,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WarningNotUsingDefaultLinkedFilesLocation.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WarningNotUsingDefaultLinkedFilesLocation,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WarningNotUsingDefaultLinkedFilesLocation.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WarningNotUsingDefaultLinkedFilesLocation)); " is 161.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,ShowModifyDialog,The length of the statement  "				MessageBox.Show(owner' string.Format(FwCoreDlgs.ksCannotSaveWritingSystem' path)' FwCoreDlgs.ksError' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 148.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,SetupDialog,The length of the statement  "			if (!IetfLanguageTag.TryGetSubtags(languageTag' out languageSubtag' out scriptSubtag' out regionSubtag' out variantSubtags)) " is 124.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,SetupSortTab,The length of the statement  "						systemCollation.LanguageTag = SystemCollator.ValidateLanguageTag(ws.LanguageTag' out message) ? ws.LanguageTag : (string) m_sortLanguageComboBox.SelectedValue; " is 159.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,PopulateSpellingDictionaryComboBox,The length of the statement  "				dictionaries.Add(new { Name = CurrentWritingSystem.LanguageTag' Id = CurrentWritingSystem.LanguageTag.Replace('-'' '_') }); " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,Select_cbEncodingConverter,The length of the statement  "			string strLegacyMapping = string.IsNullOrEmpty(CurrentWritingSystem.LegacyMapping) ? FwCoreDlgs.kstidNone : CurrentWritingSystem.LegacyMapping; " is 143.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(WritingSystemPropertiesDialog)); " is 149.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.lblScriptRegionVariant' ((bool)(resources.GetObject("lblScriptRegionVariant.ShowHelp")))); " is 125.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.lblSpellingDictionary' ((bool)(resources.GetObject("lblSpellingDictionary.ShowHelp")))); " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_regionVariantControl' ((bool)(resources.GetObject("m_regionVariantControl.ShowHelp")))); " is 125.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.m_regionVariantControl.ScriptRegionVariantChanged += new System.EventHandler(this.m_regionVariantControl_ScriptRegionVariantChanged); " is 138.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_defaultFontsControl' ((bool)(resources.GetObject("m_defaultFontsControl.ShowHelp")))); " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.btnEncodingConverter' ((bool)(resources.GetObject("btnEncodingConverter.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_lblEncodingConverter' ((bool)(resources.GetObject("m_lblEncodingConverter.ShowHelp")))); " is 125.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.cbEncodingConverter.SelectedIndexChanged += new System.EventHandler(this.cbEncodingConverter_SelectedIndexChanged); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.m_sortUsingComboBox.SelectedIndexChanged += new System.EventHandler(this.m_sortUsingComboBox_SelectedIndexChanged); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_sortRulesLoadLabel' ((bool)(resources.GetObject("m_sortRulesLoadLabel.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_angleBracketButton' ((bool)(resources.GetObject("m_angleBracketButton.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.m_sortLanguageComboBox.SelectedIndexChanged += new System.EventHandler(this.m_sortLanguageComboBox_SelectedIndexChanged); " is 126.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_lblValidCharacters' ((bool)(resources.GetObject("m_lblValidCharacters.ShowHelp")))); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetHelpString(this.btnModifyEthnologueInfo' resources.GetString("btnModifyEthnologueInfo.HelpString")); " is 121.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.btnModifyEthnologueInfo' ((bool)(resources.GetObject("btnModifyEthnologueInfo.ShowHelp")))); " is 127.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.m_listBoxRelatedWSs.SelectedIndexChanged += new System.EventHandler(this.m_listBoxRelatedWSs_SelectedIndexChanged); " is 120.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,InitializeComponent,The length of the statement  "			this.m_linkToEthnologue.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.linkToEthnologue_LinkClicked); " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,btnModifyEthnologueInfo_Click,The length of the statement  "			var origWsData = m_listBoxRelatedWSs.Items.Cast<CoreWritingSystemDefinition>().Select(ws => new {WritingSystem = ws' ws.Language' ws.IsChanged}).ToArray(); " is 155.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,btnModifyEthnologueInfo_Click,The length of the statement  "			if (!IetfLanguageTag.TryGetSubtags(selectedLanguageTag' out languageSubtag' out scriptSubtag' out regionSubtag' out variantSubtags)) " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,AddNewWsForLanguage,The length of the statement  "			CoreWritingSystemDefinition tempWs = m_wsManager.Create(CurrentWritingSystem.Language' null' CurrentWritingSystem.Region' Enumerable.Empty<VariantSubtag>()); " is 157.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,m_similarWsButton_LocaleSelected,The length of the statement  "			m_sortRulesTextBox.Tss = TsStringUtils.MakeString(sortRules == null ? "" : sortRules.Replace("&"' Environment.NewLine + "&").Trim()' " is 132.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,CheckWSIetfLanguageTagChange,The length of the statement  "						|| m_listBoxRelatedWSs.Items.Cast<CoreWritingSystemDefinition>().Any(ws => ws != tempWS && ws.LanguageTag == tempWS.LanguageTag)) " is 129.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,CheckChangingWSForSRProject,The length of the statement  "			bool hasFlexOrLiftRepo = FLExBridgeHelper.DoesProjectHaveFlexRepo(m_cache.ProjectId) || FLExBridgeHelper.DoesProjectHaveLiftRepo(m_cache.ProjectId); " is 148.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,AcceptWSChangeWarning,The length of the statement  "			string msg = string.Format(FwCoreDlgs.ksWSChangeWarning' m_listBoxRelatedWSs.Items.Count' wsLanguageName' Environment.NewLine); " is 127.
Long Statement,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,m_sortUsingComboBox_SelectedIndexChanged,The length of the statement  "			m_currentCollationRulesType = (CollationRulesType) Enum.Parse(typeof(CollationRulesType)' (string) m_sortUsingComboBox.SelectedValue); " is 134.
Long Statement,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(BackupProjectDlg)); " is 136.
Long Statement,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectDlg.cs,InitializeComponent,The length of the statement  "			this.helpProvider.SetShowHelp(this.m_spellCheckAdditions' ((bool)(resources.GetObject("m_spellCheckAdditions.ShowHelp")))); " is 123.
Long Statement,SIL.FieldWorks.FwCoreDlgs.BackupRestore,ChangeDefaultBackupDir,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\ChangeDefaultBackupDir.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ChangeDefaultBackupDir)); " is 142.
Long Statement,SIL.FieldWorks.FwCoreDlgs.BackupRestore,OverwriteExistingProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\OverwriteExistingProject.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(OverwriteExistingProject)); " is 144.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,UserDesiresDiscard,The conditional expression  "m_currentlyAdding && m_oldConverter != ConverterName &&  				sTitle == AddConverterDlgStrings.kstidInvalidMappingFile && m_transduceDialogOpen"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,UserDesiresDiscard,The conditional expression  "m_undefinedConverters.ContainsKey(SelectedConverter) &&  				!m_suppressListBoxIndexChanged && !m_currentlyAdding && !m_fClosingDialog"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,FwDeleteProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwDeleteProjectDlg.cs,CheckForExtraData,The conditional expression  "name == LcmFileHelper.ksWritingSystemsDir ||  					name == LcmFileHelper.ksBackupSettingsDir ||  					name == LcmFileHelper.ksConfigurationSettingsDir ||  					name == LcmFileHelper.ksSortSequenceTempDir"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,SetDialogValues,The conditional expression  "(bldr.Length != 0 || FindText == null || FindText.Length == 0)  					&& tssSel.get_Properties(0).GetIntPropValues(SimpleRootSite.ktptUserPrompt' out nVar) != 1"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,SearchKiller,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,FlushMessages,The conditional expression  "msg.message == (int)Win32.WinMsgs.WM_KEYDOWN &&  					msg.wParam == (IntPtr)Win32.VirtualKeycodes.VK_ESCAPE &&  					m_stopControl != null && msg.hwnd == m_stopControl.Handle"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,MoveListItem,The conditional expression  "index < 0 || (moveDown && index == list.Items.Count - 1) ||  				(!moveDown && index == 0)"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_btnOk_Click,The conditional expression  "style.IsParagraphStyle && !style.IsInternalStyle &&  							(style.Context != style.NextStyle.Context ||  							style.Structure == StructureValues.Body && style.NextStyle.Structure != style.Structure)"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,txtUnicodeValue_KeyPress,The conditional expression  "(chr >= '0' && chr <= '9') ||  				(chr >= 'a' && chr <= 'f') ||  				(chr >= 'A' && chr <= 'F')"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,gridCharInventory_CellValuePushed,The conditional expression  "m_inventoryRows != null && m_inventoryRows.Count > 0 && e.RowIndex >= 0 &&  				e.RowIndex < m_inventoryRows.Count && e.ColumnIndex == kiCharValidCol"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,gridCharInventory_CellValueNeeded,The conditional expression  "m_inventoryRows != null && m_inventoryRows.Count > 0 &&  				e.RowIndex >= 0 && e.RowIndex < m_inventoryRows.Count"  is complex.
Complex Conditional,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,FillInventoryGrid,The conditional expression  "chr == "\n" || chr == "\r" || !TsStringUtils.IsCharacterDefined(chr)  							|| !TsStringUtils.IsValidChar(chr)"  is complex.
Virtual Method Call from Constructor,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,FwChooserDlg,The constructor "FwChooserDlg" calls a virtual method "SetTitle".
Virtual Method Call from Constructor,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,FwChooserDlg,The constructor "FwChooserDlg" calls a virtual method "Load".
Virtual Method Call from Constructor,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The constructor "ValidCharactersDlg" calls a virtual method "CreateValidCharGridsManager".
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,FwCheckAnthroListDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwCheckAnthroListDlg.cs,IsAnthroList,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,FwSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwSplashScreen.cs,Close,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitControlLabels,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,UpdateOpacity,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,AddRangeOfCharacters,The method has an empty catch block.
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,SetFieldsForCopy,The following statement contains a magic number: if (nameField.Length >= 10 && string.Compare(" - " + copy + "("' 0' nameField'  				nameField.Length - 10' 8) == 0) // we're going to make the Xth copy  			{  				string nameStripped = nameField.Remove(nameField.Length - 3);  				int copyCount = (int)nameFieldArray[nameField.Length - 2] - (int)'0' + 1;    				newName = nameStripped;  				newName += "(" + copyCount + ")";    				if (copyCount == 10)  				{  					ShowMessage(AddConverterDlgStrings.kstidNumerousCopiesMsg'  						AddConverterDlgStrings.kstidNumerousCopiesMade' MessageBoxButtons.OK);  				}  			}  			else if (nameField.Length >= 7 && string.Compare(" - " + copy' 0' nameField'  				nameField.Length - 7' 7) == 0) // we're going to make the second copy  			{  				newName = nameField;  				newName += "(2)";  			}  			else // we're dealing with the original  			{  				newName = nameField;  				newName += " - " + copy;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,AutoSave,The following statement contains a magic number: try  			{  				// no changes made  				if (!m_cnvtrPropertiesCtrl.ConverterChanged)  					return true;    				// we should check the validity of all the fields  				switch (((CnvtrTypeComboItem)m_cnvtrPropertiesCtrl.cboConverter.SelectedItem).Type)  				{  					case ConverterType.ktypeRegEx:  						if (m_cnvtrPropertiesCtrl.m_specs == null ||	// LT-7098 m_specs can be null  							!m_cnvtrPropertiesCtrl.m_specs.Contains("->")) // invalid field  						{  							return UserDesiresDiscard(AddConverterDlgStrings.kstidNoFindReplaceSymbolSpecified'  								AddConverterDlgStrings.kstidInvalidRegularExpression);  						}  						if (m_cnvtrPropertiesCtrl.m_specs.Substring(0' 2) == "->") // no 'find' term to search for  						{  							ShowMessage(AddConverterDlgStrings.kstidFindReplaceWarningMsg'  								AddConverterDlgStrings.FindReplaceWarning' MessageBoxButtons.OK);  						}  						break;  					case ConverterType.ktypeCodePage:  						if (m_cnvtrPropertiesCtrl.cboSpec.SelectedIndex == -1)  						{  							return UserDesiresDiscard(AddConverterDlgStrings.kstidNoCodePage'  								AddConverterDlgStrings.kstidInvalidCodePage);  						}  						break;  					case ConverterType.ktypeIcuConvert:  					case ConverterType.ktypeIcuTransduce:  						if (m_cnvtrPropertiesCtrl.cboSpec.SelectedIndex == -1)  						{  							return UserDesiresDiscard(AddConverterDlgStrings.kstidInvalidMappingFileNameMsg'  								AddConverterDlgStrings.kstidInvalidMappingName);  						}  						break;  					default:  						if (String.IsNullOrEmpty(m_cnvtrPropertiesCtrl.m_specs) ||	// LT-7098 m_specs can be null  							String.IsNullOrEmpty(m_cnvtrPropertiesCtrl.m_specs.Trim())) // null field  						{  							return UserDesiresDiscard(AddConverterDlgStrings.kstidInvalidMappingFileMsg'  								AddConverterDlgStrings.kstidInvalidMappingFile);  						}  						if (!File.Exists(m_cnvtrPropertiesCtrl.m_specs.Trim())) // file in m_spec does not exist  						{  							return UserDesiresDiscard(AddConverterDlgStrings.kstidNoMapFileFound'  								AddConverterResources.kstrMapFileNotFoundTitle);  						}  						break;  				}    				if (m_cnvtrPropertiesCtrl.cboConverter.SelectedIndex == -1 ||  					m_cnvtrPropertiesCtrl.cboConversion.SelectedIndex == -1)  					return false; // all fields must be filled out (not sure if this ever occurs anymore)    				if (String.IsNullOrEmpty(ConverterName)) // no name provided  				{  					return UserDesiresDiscard(AddConverterDlgStrings.kstidNoNameMsg'  						AddConverterDlgStrings.kstidNoName);  				}    				// This begins the actual "save" operation  				if (m_oldConverter != ConverterName)  				{  					// uhg! They changed the converter name. So we're going to check if that name is acceptable'  					// then we'll remove the old converter before we perform the install  					if (AbortInstallDueToOverwrite())  						return false;  					RemoveConverter(m_oldConverter);  				}  				bool installState = InstallConverter(); // save changes made    				SetUnchanged();  				return installState;  			}  			finally  			{  				m_suppressAutosave = false;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddNewUserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddNewUserDlg.cs,btnAdd_Click,The following statement contains a magic number: if (radioAdvanced.Checked == true)  				m_UserLevel = 5;  			else if (radioIntermediate.Checked == true)  				m_UserLevel = 3;  			else  				m_UserLevel = 1;
Magic Number,SIL.FieldWorks.FwCoreDlgs,AddNewUserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddNewUserDlg.cs,btnAdd_Click,The following statement contains a magic number: if (radioAdvanced.Checked == true)  				m_UserLevel = 5;  			else if (radioIntermediate.Checked == true)  				m_UserLevel = 3;  			else  				m_UserLevel = 1;
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._searchTextbox.Location = new System.Drawing.Point(13' 13);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._searchTextbox.Location = new System.Drawing.Point(13' 13);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._searchTextbox.Size = new System.Drawing.Size(303' 20);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._searchTextbox.Size = new System.Drawing.Size(303' 20);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._notificationLabel.Location = new System.Drawing.Point(13' 51);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._notificationLabel.Location = new System.Drawing.Point(13' 51);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._notificationLabel.Size = new System.Drawing.Size(0' 13);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._findNext.Location = new System.Drawing.Point(240' 51);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._findNext.Location = new System.Drawing.Point(240' 51);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._findNext.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._findNext.Size = new System.Drawing.Size(75' 23);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this._findNext.TabIndex = 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(326' 86);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(326' 86);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(360' 150);
Magic Number,SIL.FieldWorks.FwCoreDlgs,BasicFindDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BasicFindDialog.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(360' 150);
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,CharContextCtrl,The following statement contains a magic number: colRef.MinimumWidth = 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,CharContextCtrl,The following statement contains a magic number: gridContext.GridColor = ColorHelper.CalculateColor(SystemColors.WindowText'  				SystemColors.Window' 35);
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,AdjustContextGridColumnWidths,The following statement contains a magic number: using (Graphics g = CreateGraphics())  			{  				int width = gridContext.ClientSize.Width;  				if (gridContext.DisplayedRowCount(false) < gridContext.RowCount)  					width -= (SystemInformation.VerticalScrollBarWidth + 3);    				gridContext.Columns[colContextItem.Index].Width =  					Math.Max(TextRenderer.MeasureText(g' m_currContextItem'  						colContextItem.DefaultCellStyle.Font'  						Size.Empty' TextFormatFlags.NoPadding | TextFormatFlags.NoPrefix).Width'  						gridContext.Columns[colContextItem.Index].MinimumWidth);    				colContextBefore.Width = (width - colRef.Width - colContextItem.Width) / 2;  				colContextAfter.Width = width - colRef.Width -  					colContextItem.Width - colContextBefore.Width;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,AdjustContextGridColumnWidths,The following statement contains a magic number: using (Graphics g = CreateGraphics())  			{  				int width = gridContext.ClientSize.Width;  				if (gridContext.DisplayedRowCount(false) < gridContext.RowCount)  					width -= (SystemInformation.VerticalScrollBarWidth + 3);    				gridContext.Columns[colContextItem.Index].Width =  					Math.Max(TextRenderer.MeasureText(g' m_currContextItem'  						colContextItem.DefaultCellStyle.Font'  						Size.Empty' TextFormatFlags.NoPadding | TextFormatFlags.NoPrefix).Width'  						gridContext.Columns[colContextItem.Index].MinimumWidth);    				colContextBefore.Width = (width - colRef.Width - colContextItem.Width) / 2;  				colContextAfter.Width = width - colRef.Width -  					colContextItem.Width - colContextBefore.Width;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,gridContext_CellPainting,The following statement contains a magic number: if (e.ColumnIndex == colRef.Index)  			{  				Rectangle rc = e.CellBounds;  				int adjForBaseline = (e.RowIndex == 0) ? 2 : 1;  				rc.Height -= adjForBaseline;  				rc.Y += adjForBaseline;  				flags |= TextFormatFlags.Left;  				TextRenderer.DrawText(e.Graphics' e.FormattedValue as string'  					e.CellStyle.Font' rc' gridContext.ForeColor' flags);  			}  			else  			{  				if (gridContext.Columns[e.ColumnIndex].DisplayIndex == 1)  					flags |= TextFormatFlags.Right;  				else if (e.ColumnIndex == colContextItem.Index)  					flags |= TextFormatFlags.HorizontalCenter;    				flags |= TextFormatFlags.NoPadding;  				TextRenderer.DrawText(e.Graphics' e.FormattedValue as string'  					e.CellStyle.Font' e.CellBounds' gridContext.ForeColor' flags);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ContextInfo,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,Initialize,The following statement contains a magic number: int startPos = Math.Max(0' offset - 50);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ContextInfo,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,Initialize,The following statement contains a magic number: m_contextAfter = (startPos + 50 >= context.Length ?  				context.Substring(startPos) :  				context.Substring(startPos' 50));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ContextInfo,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,Initialize,The following statement contains a magic number: m_contextAfter = (startPos + 50 >= context.Length ?  				context.Substring(startPos) :  				context.Substring(startPos' 50));
Magic Number,SIL.FieldWorks.FwCoreDlgs,CheckBoxColumnHeaderHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CheckBoxColumnHeaderHandler.cs,CheckBoxColumnHeaderHandler,The following statement contains a magic number: if (!Application.RenderWithVisualStyles)  			{  				m_szCheckBox = new Size(13' 13);  			}  			else  			{  				var element = VisualStyleElement.Button.CheckBox.CheckedNormal;  				var renderer = new VisualStyleRenderer(element);  				using (var g = m_grid.CreateGraphics())  					m_szCheckBox = renderer.GetPartSize(g' ThemeSizeType.True);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CheckBoxColumnHeaderHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CheckBoxColumnHeaderHandler.cs,CheckBoxColumnHeaderHandler,The following statement contains a magic number: if (!Application.RenderWithVisualStyles)  			{  				m_szCheckBox = new Size(13' 13);  			}  			else  			{  				var element = VisualStyleElement.Button.CheckBox.CheckedNormal;  				var renderer = new VisualStyleRenderer(element);  				using (var g = m_grid.CreateGraphics())  					m_szCheckBox = renderer.GetPartSize(g' ThemeSizeType.True);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CheckBoxColumnHeaderHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CheckBoxColumnHeaderHandler.cs,HandleHeaderCellPainting,The following statement contains a magic number: using (var brush = new SolidBrush(m_grid.ForeColor))  			{  				var sz = e.Graphics.MeasureString(Label' m_grid.Font' new Point(0' 0)' m_stringFormat).ToSize();  				var dy2 = (int)Math.Floor((rcCell.Height - sz.Height) / 2f);  				if (dy2 < 0)  					dy2 = 0;  				var rcText = new Rectangle(rcBox.X + rcBox.Width + 3' rcCell.Y + dy2'  					rcCell.Width - (rcBox.Width + 6)' Math.Min(sz.Height' rcCell.Height));    				e.Graphics.DrawString(Label' m_grid.Font' brush' rcText' m_stringFormat);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CheckBoxColumnHeaderHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CheckBoxColumnHeaderHandler.cs,HandleHeaderCellPainting,The following statement contains a magic number: using (var brush = new SolidBrush(m_grid.ForeColor))  			{  				var sz = e.Graphics.MeasureString(Label' m_grid.Font' new Point(0' 0)' m_stringFormat).ToSize();  				var dy2 = (int)Math.Floor((rcCell.Height - sz.Height) / 2f);  				if (dy2 < 0)  					dy2 = 0;  				var rcText = new Rectangle(rcBox.X + rcBox.Width + 3' rcCell.Y + dy2'  					rcCell.Width - (rcBox.Width + 6)' Math.Min(sz.Height' rcCell.Height));    				e.Graphics.DrawString(Label' m_grid.Font' brush' rcText' m_stringFormat);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,CheckBoxColumnHeaderHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CheckBoxColumnHeaderHandler.cs,GetCheckBoxRectangle,The following statement contains a magic number: var dx = 3;
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.SetColumnSpan(this.m_splitContainer' 5);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.Controls.Add(this.m_btnOk' 2' 1);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.Controls.Add(this.m_btnHelp' 4' 1);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.Controls.Add(this.m_btnCancel' 3' 1);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.SetColumnSpan(this.OpenBridgeProjectContainer' 2);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ChooseLangProjectDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ChooseLangProjectDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tblLayoutOuter.SetRowSpan(this.OpenBridgeProjectContainer' 2);
Magic Number,SIL.FieldWorks.FwCoreDlgs,SampleVc,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,Display,The following statement contains a magic number: switch(frag)  			{  			case (int)SampleFrags.kfrText:  				if (m_fontName != null && m_fontName.Length > 0)  					vwenv.set_StringProperty((int)FwTextPropType.ktptFontFamily' m_fontName);  				// Force to 12 point.  				vwenv.set_IntProperty((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 12000);  				vwenv.OpenDiv();  				vwenv.AddLazyVecItems((int)SampleTags.ktagTextParas' this' (int)SampleFrags.kfrPara);  				vwenv.CloseDiv();  				break;  			case (int)SampleFrags.kfrPara:  				vwenv.AddStringProp((int)SampleTags.ktagParaContents' this);  				break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,SampleVc,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,EstimateHeight,The following statement contains a magic number: return 39;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwCheckAnthroListDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwCheckAnthroListDlg.cs,IsAnthroList,The following statement contains a magic number: using (TextReader rdr = new StreamReader(sFilePath' Encoding.UTF8))  			{  				try  				{  					for (int i = 0; i < 5; ++i)  					{  						string sLine = rdr.ReadLine();  						if (sLine == null)  							break;  						if (sLine.Contains("<AnthroList>"))  							return true;  					}  				}  				catch  				{  					// must not have been UTF-8...  				}  				return false;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,btnPrintRpt_Click,The following statement contains a magic number: if (result == DialogResult.OK)  			{  				printDocument.PrinterSettings = printDialog1.PrinterSettings;  				printDocument.DefaultPageSettings = printDialog1.Document.DefaultPageSettings;    				printDocument.DefaultPageSettings.Margins =  					new Margins((int)m_PageMargin' (int)m_PageMargin' (int)m_PageMargin' (int)m_PageMargin);  				if (printDocument.DefaultPageSettings.PrintableArea.Width < 300 ||  					printDocument.DefaultPageSettings.PrintableArea.Height < 350)  				{  					MessageBox.Show(Properties.Resources.kstidPageTooSmall);  					return;  				}    				printDocument.OriginAtMargins = true;    				try  				{  					printDocument.Print();  				}  				catch (Exception exception)  				{  					TopMost = true;    					string errorMsg = String.Format(  						ResourceHelper.GetResourceString("kstidPrintingException")' exception.Message);    					MessageBox.Show(this' errorMsg' Text' MessageBoxButtons.OK'  						MessageBoxIcon.Error);  					TopMost = false;  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,btnPrintRpt_Click,The following statement contains a magic number: if (result == DialogResult.OK)  			{  				printDocument.PrinterSettings = printDialog1.PrinterSettings;  				printDocument.DefaultPageSettings = printDialog1.Document.DefaultPageSettings;    				printDocument.DefaultPageSettings.Margins =  					new Margins((int)m_PageMargin' (int)m_PageMargin' (int)m_PageMargin' (int)m_PageMargin);  				if (printDocument.DefaultPageSettings.PrintableArea.Width < 300 ||  					printDocument.DefaultPageSettings.PrintableArea.Height < 350)  				{  					MessageBox.Show(Properties.Resources.kstidPageTooSmall);  					return;  				}    				printDocument.OriginAtMargins = true;    				try  				{  					printDocument.Print();  				}  				catch (Exception exception)  				{  					TopMost = true;    					string errorMsg = String.Format(  						ResourceHelper.GetResourceString("kstidPrintingException")' exception.Message);    					MessageBox.Show(this' errorMsg' Text' MessageBoxButtons.OK'  						MessageBoxIcon.Error);  					TopMost = false;  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_BeginPrint,The following statement contains a magic number: if (m_SansSerifFont == null)  			{  				// get a sans-serif font  				m_SansSerifFont = new Font(FontFamily.GenericSansSerif' 12' FontStyle.Regular' GraphicsUnit.Point);  				{  					foreach (FontFamily family in FontFamily.Families)  					{  						string familyName = family.Name.ToLower();  						if (familyName.Contains("arial") || familyName.Contains("tahoma") || familyName.Contains("calibri"))  						{  							m_SansSerifFont = new Font(family' 12' FontStyle.Regular' GraphicsUnit.Point);  							continue;  						}  					}  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_BeginPrint,The following statement contains a magic number: if (m_SansSerifFont == null)  			{  				// get a sans-serif font  				m_SansSerifFont = new Font(FontFamily.GenericSansSerif' 12' FontStyle.Regular' GraphicsUnit.Point);  				{  					foreach (FontFamily family in FontFamily.Families)  					{  						string familyName = family.Name.ToLower();  						if (familyName.Contains("arial") || familyName.Contains("tahoma") || familyName.Contains("calibri"))  						{  							m_SansSerifFont = new Font(family' 12' FontStyle.Regular' GraphicsUnit.Point);  							continue;  						}  					}  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUpdateReportDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUpdateReportDlg.cs,printDocument_PrintPage,The following statement contains a magic number: using (Font sanSerifBoldFont = new Font(m_SansSerifFont' FontStyle.Bold))  			{  				SizeF layoutSize = new SizeF(pageWidth' pageHeight - sanSerifBoldFont.Height * 2); // Allow room for page number    				int charactersFitted;  				int linesFilled;    				if (m_currentPage == 1 || m_repeatTitleOnEveryPage)  				{  					// title  					SizeF stringSize = e.Graphics.MeasureString(Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					Single dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height;  					currentY += stringSize.Height;    					stringSize = e.Graphics.MeasureString(lblProjectName.Text' sanSerifBoldFont' layoutSize'  						new StringFormat()' out charactersFitted' out linesFilled);  					dx = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(lblProjectName.Text' sanSerifBoldFont' Brushes.Black' dx' currentY);    					layoutSize.Height -= stringSize.Height + sanSerifBoldFont.Height;  					currentY += stringSize.Height + sanSerifBoldFont.Height;  				}    				// Warning goes on page 1' but if it's too long to fit' it could spill over onto subsequent page(s)  				if (!String.IsNullOrEmpty(m_warningText))  				{  					// print the warning label  					using (var stringFormat = new StringFormat())  					{  						SizeF stringSize = e.Graphics.MeasureString(m_warningText' m_SansSerifFont' layoutSize'  						stringFormat' out charactersFitted' out linesFilled);    						RectangleF drawRect = new RectangleF(currentX' currentY' layoutSize.Width' layoutSize.Height);  						e.Graphics.DrawString(m_warningText' m_SansSerifFont' Brushes.Black' drawRect'  						stringFormat);    						m_warningText = m_warningText.Substring(charactersFitted);    						// Skip a line  						layoutSize.Height -= stringSize.Height + m_SansSerifFont.Height;  						currentY += stringSize.Height + m_SansSerifFont.Height;  					}  				}    				if (layoutSize.Height > (sanSerifBoldFont.Height * 2))  				{  					// print column heading (repeat at start of each page' if requested)  					if (m_currentPage == 1 || m_repeatColumnHeaderOnEveryPage)  					{  						e.Graphics.DrawString(lvItems.Columns[0].Text + ":"' sanSerifBoldFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= sanSerifBoldFont.Height;  						currentY += sanSerifBoldFont.Height;  					}    					currentX += 25; // indent 1/4 inch    					// print report items  					while (layoutSize.Height > (m_SansSerifFont.Height) && m_currentLine < lvItems.Items.Count)  					{  						ListViewItem item = lvItems.Items[m_currentLine++];  						e.Graphics.DrawString(item.Text' m_SansSerifFont' Brushes.Black' currentX' currentY);  						layoutSize.Height -= m_SansSerifFont.Height;  						currentY += m_SansSerifFont.Height;  					}  				}  				e.HasMorePages = !String.IsNullOrEmpty(m_warningText) || m_currentLine < lvItems.Items.Count;    				// Print the page number if there's going to be more than one page  				if (m_currentPage > 1 || e.HasMorePages)  				{  					currentY = pageHeight - m_SansSerifFont.Height;  					string pageNumber = m_currentPage.ToString();  					SizeF stringSize = e.Graphics.MeasureString(pageNumber' m_SansSerifFont' layoutSize);  					currentX = pageWidth / 2 - (stringSize.Width / 2);  					e.Graphics.DrawString(pageNumber' m_SansSerifFont' Brushes.Black' currentX' currentY);  				}    				m_currentPage++;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,MissingOldFieldWorksDlg,The following statement contains a magic number: if (!IsWindows7OrEarlier())  			{  				// No point in downloading SqlServer 2005 and dependencies; hide the relevant links  				m_labelSqlDownload.Visible = false;  				m_labelFwDownload.Visible = false;  				m_lnkSqlSvr.Visible = false;  				m_lnkFw60.Visible = false;  				m_labelAfterDownload.Visible = false;  				m_clickDownloadPicture.Visible = false;  				m_label6OrEarlier.Text = Properties.Resources.kstidCantMigrateWrongOS;  				m_label6OrEarlier.Height *= 4;  				m_btnOK.Enabled = false;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,IsWindows7OrEarlier,The following statement contains a magic number: if (os.Version.Major > 6)  				return false;
Magic Number,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,IsWindows7OrEarlier,The following statement contains a magic number: if (os.Version.Major == 6 && os.Version.Minor > 1)  				return false;
Magic Number,SIL.FieldWorks.FwCoreDlgs,MissingOldFieldWorksDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MissingOldFieldWorksDlg.cs,OnLoad,The following statement contains a magic number: if (m_labelAfterDownload.Visible)  				kDiff = 2 * (m_lnkSqlSvr.Location.Y - m_labelSqlDownload.Location.Y);  			else  			{  				kDiff = m_labelAfterDownload.Bottom - m_label6OrEarlier.Bottom;  				this.MinimumSize = new Size(MinimumSize.Width' MinimumSize.Height - kDiff);  				this.Height = this.Height - kDiff;  				this.MaximumSize = new Size(MaximumSize.Width' MaximumSize.Height - kDiff);  				return;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,MoveOrCopyFilesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MoveOrCopyFilesDlg.cs,OnLoad,The following statement contains a magic number: if (dy < 10)  			{  				var sz = new Size(Width' Height + 10 - dy);  				MaximumSize = sz;  				Size = sz;  				MinimumSize = sz;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,MoveOrCopyFilesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MoveOrCopyFilesDlg.cs,OnLoad,The following statement contains a magic number: if (dy < 10)  			{  				var sz = new Size(Width' Height + 10 - dy);  				MaximumSize = sz;  				Size = sz;  				MinimumSize = sz;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ProjectLocationDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ProjectLocationDlg.cs,m_tbProjectsFolder_TextChanged,The following statement contains a magic number: if(Directory.Exists(m_tbProjectsFolder.Text))  			{  				var newFolder = m_tbProjectsFolder.Text;  				var oldFolder = FwDirectoryFinder.ProjectsDirectory;  				if(!MiscUtils.IsUnix)  				{  					newFolder = newFolder.ToLowerInvariant();  					oldFolder = oldFolder.ToLowerInvariant();  				}  				if(newFolder == oldFolder)  				{  					// The original directory is presumably always ok.  					m_btnOK.Enabled = true;  				}  				else if(newFolder.StartsWith(oldFolder))  				{  					string path = m_tbProjectsFolder.Text;  					// If it contains a settings directory' assume it's a project settings folder...possibly settings for a remote project.  					if(Directory.Exists(Path.Combine(path' LcmFileHelper.ksConfigurationSettingsDir)))  					{  						m_btnOK.Enabled = false;  						return;  					}  					while(path.Length > 3)  					{  						foreach(string file in Directory.GetFiles(path))  						{  							string filename = file;  							if(!MiscUtils.IsUnix)  								filename = filename.ToLowerInvariant();  							if(filename.EndsWith(".fwdata"))  							{  								m_btnOK.Enabled = false;  								return;  							}  						}  						path = Path.GetDirectoryName(path);  					}  				}  				else  				{  					m_btnOK.Enabled = DirectoryIsSuitable(newFolder);  				}  			}  			else  			{  				m_btnOK.Enabled = DirectoryIsSuitable(m_tbProjectsFolder.Text);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,m_cboTypes_SelectedIndexChanged,The following statement contains a magic number: switch (m_cboTypes.SelectedIndex)  			{  				case 0:	// basic  					m_styleListHelper.MaxStyleLevel = 0;  					break;    				case 1:	// all  					m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  					break;    				case 2:	// custom  					m_styleListHelper.MaxStyleLevel = m_customUserLevel;  					break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_pnlMasterGrid.Controls.Add(this.m_pnlTypesCombo' 0' 2);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ErrorMessageHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ErrorMessage.cs,AddStar,The following statement contains a magic number: if(!starLabels.ContainsKey(textBox))  			{  				Label newLabel = new Label();  				// Set the new star next to the text box  				newLabel.Left = textBox.Left - 16;  				newLabel.Top = textBox.Top;  				// U+2738 is a big '*'  				newLabel.Text = "\u2717";  				// Set it to the error color  				newLabel.ForeColor = m_errorColor;  				// Set the label two 2x2 grid point (16x16 pixels)  				newLabel.Size = new Size(16'16);  				newLabel.Name = "star";  				// Set the font to be a little bigger.  				newLabel.Font  = new  					Font(textBox.Font.FontFamily'(float)14.0'FontStyle.Regular'GraphicsUnit.Pixel);  				textBox.Parent.Controls.Add(newLabel);  				// Force the parent to re-draw so that the star will appear  				textBox.Parent.Refresh();  				// Add the star to a dictionary so that we can delete it  				starLabels.Add(textBox' newLabel);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ErrorMessageHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ErrorMessage.cs,AddStar,The following statement contains a magic number: if(!starLabels.ContainsKey(textBox))  			{  				Label newLabel = new Label();  				// Set the new star next to the text box  				newLabel.Left = textBox.Left - 16;  				newLabel.Top = textBox.Top;  				// U+2738 is a big '*'  				newLabel.Text = "\u2717";  				// Set it to the error color  				newLabel.ForeColor = m_errorColor;  				// Set the label two 2x2 grid point (16x16 pixels)  				newLabel.Size = new Size(16'16);  				newLabel.Name = "star";  				// Set the font to be a little bigger.  				newLabel.Font  = new  					Font(textBox.Font.FontFamily'(float)14.0'FontStyle.Regular'GraphicsUnit.Pixel);  				textBox.Parent.Controls.Add(newLabel);  				// Force the parent to re-draw so that the star will appear  				textBox.Parent.Refresh();  				// Add the star to a dictionary so that we can delete it  				starLabels.Add(textBox' newLabel);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ErrorMessageHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ErrorMessage.cs,AddStar,The following statement contains a magic number: if(!starLabels.ContainsKey(textBox))  			{  				Label newLabel = new Label();  				// Set the new star next to the text box  				newLabel.Left = textBox.Left - 16;  				newLabel.Top = textBox.Top;  				// U+2738 is a big '*'  				newLabel.Text = "\u2717";  				// Set it to the error color  				newLabel.ForeColor = m_errorColor;  				// Set the label two 2x2 grid point (16x16 pixels)  				newLabel.Size = new Size(16'16);  				newLabel.Name = "star";  				// Set the font to be a little bigger.  				newLabel.Font  = new  					Font(textBox.Font.FontFamily'(float)14.0'FontStyle.Regular'GraphicsUnit.Pixel);  				textBox.Parent.Controls.Add(newLabel);  				// Force the parent to re-draw so that the star will appear  				textBox.Parent.Refresh();  				// Add the star to a dictionary so that we can delete it  				starLabels.Add(textBox' newLabel);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ErrorMessageHandler,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ErrorMessage.cs,AddStar,The following statement contains a magic number: if(!starLabels.ContainsKey(textBox))  			{  				Label newLabel = new Label();  				// Set the new star next to the text box  				newLabel.Left = textBox.Left - 16;  				newLabel.Top = textBox.Top;  				// U+2738 is a big '*'  				newLabel.Text = "\u2717";  				// Set it to the error color  				newLabel.ForeColor = m_errorColor;  				// Set the label two 2x2 grid point (16x16 pixels)  				newLabel.Size = new Size(16'16);  				newLabel.Name = "star";  				// Set the font to be a little bigger.  				newLabel.Font  = new  					Font(textBox.Font.FontFamily'(float)14.0'FontStyle.Regular'GraphicsUnit.Pixel);  				textBox.Parent.Controls.Add(newLabel);  				// Force the parent to re-draw so that the star will appear  				textBox.Parent.Refresh();  				// Add the star to a dictionary so that we can delete it  				starLabels.Add(textBox' newLabel);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwChooserDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwChooserDlg.cs,InitializeComponent,The following statement contains a magic number: this.tvPossibilities.ItemHeight = 16;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwDeleteProjectDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwDeleteProjectDlg.cs,CheckForExtraData,The following statement contains a magic number: if (files.Length > 3)  				return true;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,tabControls_SelectedIndexChanged,The following statement contains a magic number: if (tabControls.SelectedTab == tabFind)  			{  				// If a replace is in progress' don't allow a change to the find tab  				if (m_inReplace)  				{  					tabControls.SelectedTab = tabReplace;  					return;  				}  				SuspendLayout();  				tabReplace.Controls.Clear();  				tabFind.Controls.Add(panelSearchOptions);  				tabFind.Controls.Add(panelBasic);  				btnReplace.Hide();  				btnReplaceAll.Hide();  				btnMore.Location = btnReplaceAll.Location;  				chkUseRegularExpressions.Enabled = true;  				fweditReplaceText.Hide();  				lblReplaceText.Hide();  				fweditFindText.Select();  			}  			else  			{  				// if a find is in progress' don't allow a switch to the replace tab  				if (m_inFind)  				{  					tabControls.SelectedTab = tabFind;  					return;  				}  				SuspendLayout();  				tabFind.Controls.Clear();  				tabReplace.Controls.Add(panelSearchOptions);  				tabReplace.Controls.Add(panelBasic);  				if(!m_inGetSpecs)  				{  					btnReplace.Show();  					btnReplaceAll.Show();  				}  				// Move More button beside Replace button  				btnMore.Location = new Point(btnReplace.Location.X - btnReplace.Width - 6'  					btnReplace.Location.Y);  				fweditReplaceText.Show();  				lblReplaceText.Show();  				fweditFindText.Select();  				if (m_fDisableReplacePatternMatching && (ModifierKeys & Keys.Shift) != Keys.Shift)  				{  					if (chkUseRegularExpressions.Checked)  						chkUseRegularExpressions.Checked = false;  					chkUseRegularExpressions.Enabled = false;  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,panel2_Paint,The following statement contains a magic number: int dxMargin = 10;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,panel2_Paint,The following statement contains a magic number: LineDrawing.Draw(e.Graphics' left'  				(lblSearchOptions.Top + lblSearchOptions.Bottom) / 2'  				tabControls.Right - left - dxMargin' LineTypes.Etched);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFindReplaceDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFindReplaceDlg.cs,PopulateStyleMenu,The following statement contains a magic number: List<string> styleNames = new List<string>(count / 2);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,Initialize,The following statement contains a magic number: FontSize = fontInfo.m_fontSize.Value / 1000;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,SaveFontInfo,The following statement contains a magic number: fontInfo.IsDirty |= fontInfo.m_fontSize.Save(false' fontSize * 1000);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,UpdateFontSizeIfValid,The following statement contains a magic number: if (newSize > 999)  				return false;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,UpdatePreview,The following statement contains a magic number: propsBldr.SetIntPropValues((int)FwTextPropType.ktptFontSize' (int)FwTextPropVar.ktpvMilliPoint'  				FontSize * 1000);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,UpdatePreview,The following statement contains a magic number: strBldr.Replace(3' 3' m_tbFontName.Text' propsBldr.GetTextProps());
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwFontDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwFontDialog.cs,UpdatePreview,The following statement contains a magic number: strBldr.Replace(3' 3' m_tbFontName.Text' propsBldr.GetTextProps());
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,FwHelpAbout,The following statement contains a magic number: if (MiscUtils.IsUnix)  			{  				// Link to System Monitor    				// Hide memory and disk usage fields and show a link to  				// Gnome System Monitor in their place.    				lblAvailableMemory.Visible = false;  				edtAvailableMemory.Visible = false;  				lblAvailableDiskSpace.Visible = false;  				edtAvailableDiskSpace.Visible = false;    				m_systemMonitorLink = new LinkLabel  				{  					Text = FwCoreDlgs.kstidMemoryDiskUsageInformation'  					Visible = true'  					Name = "systemMonitorLink"'  					TabStop = true'  					Top = lblAvailableMemory.Top'  					Left = lblAvailableMemory.Left'  					Width = edtAvailableMemory.Right - lblAvailableMemory.Left'  				};  				m_systemMonitorLink.LinkClicked += HandleSystemMonitorLinkClicked;  				Controls.Add(m_systemMonitorLink);    				// Package information    				int oldHeight = this.Height;  				this.Height += 200;  				var packageVersionLabel = new Label { Text = "Package versions:"' Top = oldHeight - 20' Width = this.Width - 10 };  				var versionInformation = new TextBox  				{  					Height = 200 - 30'  					Top = oldHeight'  					Multiline = true'  					ReadOnly = true'  					Width = this.Width - 10'  					ScrollBars = ScrollBars.Vertical  				};  				this.Controls.Add(packageVersionLabel);  				this.Controls.Add(versionInformation);    				foreach (var info in LinuxPackageUtils.FindInstalledPackages("fieldworks")  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-applications"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-enc-converters"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("flexbridge"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("fieldworks-l10n-*"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("libgdiplus4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("gtk-sharp4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("mono-basic4-sil"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("chmsee"))  					.Concat<KeyValuePair<string' string>>(LinuxPackageUtils.FindInstalledPackages("pathway")))  				{  					versionInformation.AppendText(String.Format("{0} {1}{2}"' info.Key' info.Value' Environment.NewLine));  				}  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The following statement contains a magic number: m_toolTip.AutomaticDelay = 100;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The following statement contains a magic number: m_toolTip.AutoPopDelay = 1000;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The following statement contains a magic number: m_toolTip.InitialDelay = 100;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,InitializeComponent,The following statement contains a magic number: m_toolTip.ReshowDelay = 100;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The following statement contains a magic number: try  			{  				// Set the Application label to the name of the app  				VersionInfoProvider viProvider = new VersionInfoProvider(ProductExecutableAssembly' true);  				lblName.Text = viProvider.ProductName;  				lblAppVersion.Text = viProvider.ApplicationVersion;  				lblFwVersion.Text = viProvider.MajorVersion;    				// List the copyright information  				Dictionary<string' AcknowledgementAttribute> acknowlegements = AcknowledgementsProvider.CollectAcknowledgements();  				var list = acknowlegements.Keys.ToList();  				list.Sort();  				string text = viProvider.CopyrightString + Environment.NewLine + viProvider.LicenseString + Environment.NewLine + viProvider.LicenseURL;  				foreach (var key in list)  				{  					text += "\r\n" + "\r\n" + key + "\r\n" + acknowlegements[key].Copyright + " " + acknowlegements[key].Url + " " + acknowlegements[key].LicenseUrl;  				}  				txtCopyright.Text = text;    				// Set the title bar text  				Text = string.Format(m_sTitleFmt' viProvider.ProductName);    				string strRoot = Path.GetPathRoot(Application.ExecutablePath);    				// Set the memory information  				Win32.MemoryStatus ms = new Win32.MemoryStatus();  				Win32.GlobalMemoryStatus(ref ms);  				edtAvailableMemory.Text = string.Format(m_sAvailableMemoryFmt'  					ms.dwAvailPhys / 1024' ms.dwTotalPhys / 1024);    				// Set the available disk space information.  				uint cSectorsPerCluster = 0' cBytesPerSector = 0' cFreeClusters = 0'  					cTotalClusters = 0;  				Win32.GetDiskFreeSpace(strRoot' ref cSectorsPerCluster' ref cBytesPerSector'  					ref cFreeClusters' ref cTotalClusters);  				uint cbKbFree =  					(uint)(((Int64)cFreeClusters * cSectorsPerCluster * cBytesPerSector) >> 10);    				edtAvailableDiskSpace.Text =  					string.Format(m_sAvailableDiskSpaceFmt' cbKbFree' strRoot);  			}  			catch  			{  				// ignore errors  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The following statement contains a magic number: try  			{  				// Set the Application label to the name of the app  				VersionInfoProvider viProvider = new VersionInfoProvider(ProductExecutableAssembly' true);  				lblName.Text = viProvider.ProductName;  				lblAppVersion.Text = viProvider.ApplicationVersion;  				lblFwVersion.Text = viProvider.MajorVersion;    				// List the copyright information  				Dictionary<string' AcknowledgementAttribute> acknowlegements = AcknowledgementsProvider.CollectAcknowledgements();  				var list = acknowlegements.Keys.ToList();  				list.Sort();  				string text = viProvider.CopyrightString + Environment.NewLine + viProvider.LicenseString + Environment.NewLine + viProvider.LicenseURL;  				foreach (var key in list)  				{  					text += "\r\n" + "\r\n" + key + "\r\n" + acknowlegements[key].Copyright + " " + acknowlegements[key].Url + " " + acknowlegements[key].LicenseUrl;  				}  				txtCopyright.Text = text;    				// Set the title bar text  				Text = string.Format(m_sTitleFmt' viProvider.ProductName);    				string strRoot = Path.GetPathRoot(Application.ExecutablePath);    				// Set the memory information  				Win32.MemoryStatus ms = new Win32.MemoryStatus();  				Win32.GlobalMemoryStatus(ref ms);  				edtAvailableMemory.Text = string.Format(m_sAvailableMemoryFmt'  					ms.dwAvailPhys / 1024' ms.dwTotalPhys / 1024);    				// Set the available disk space information.  				uint cSectorsPerCluster = 0' cBytesPerSector = 0' cFreeClusters = 0'  					cTotalClusters = 0;  				Win32.GetDiskFreeSpace(strRoot' ref cSectorsPerCluster' ref cBytesPerSector'  					ref cFreeClusters' ref cTotalClusters);  				uint cbKbFree =  					(uint)(((Int64)cFreeClusters * cSectorsPerCluster * cBytesPerSector) >> 10);    				edtAvailableDiskSpace.Text =  					string.Format(m_sAvailableDiskSpaceFmt' cbKbFree' strRoot);  			}  			catch  			{  				// ignore errors  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,OnHandleCreated,The following statement contains a magic number: try  			{  				// Set the Application label to the name of the app  				VersionInfoProvider viProvider = new VersionInfoProvider(ProductExecutableAssembly' true);  				lblName.Text = viProvider.ProductName;  				lblAppVersion.Text = viProvider.ApplicationVersion;  				lblFwVersion.Text = viProvider.MajorVersion;    				// List the copyright information  				Dictionary<string' AcknowledgementAttribute> acknowlegements = AcknowledgementsProvider.CollectAcknowledgements();  				var list = acknowlegements.Keys.ToList();  				list.Sort();  				string text = viProvider.CopyrightString + Environment.NewLine + viProvider.LicenseString + Environment.NewLine + viProvider.LicenseURL;  				foreach (var key in list)  				{  					text += "\r\n" + "\r\n" + key + "\r\n" + acknowlegements[key].Copyright + " " + acknowlegements[key].Url + " " + acknowlegements[key].LicenseUrl;  				}  				txtCopyright.Text = text;    				// Set the title bar text  				Text = string.Format(m_sTitleFmt' viProvider.ProductName);    				string strRoot = Path.GetPathRoot(Application.ExecutablePath);    				// Set the memory information  				Win32.MemoryStatus ms = new Win32.MemoryStatus();  				Win32.GlobalMemoryStatus(ref ms);  				edtAvailableMemory.Text = string.Format(m_sAvailableMemoryFmt'  					ms.dwAvailPhys / 1024' ms.dwTotalPhys / 1024);    				// Set the available disk space information.  				uint cSectorsPerCluster = 0' cBytesPerSector = 0' cFreeClusters = 0'  					cTotalClusters = 0;  				Win32.GetDiskFreeSpace(strRoot' ref cSectorsPerCluster' ref cBytesPerSector'  					ref cFreeClusters' ref cTotalClusters);  				uint cbKbFree =  					(uint)(((Int64)cFreeClusters * cSectorsPerCluster * cBytesPerSector) >> 10);    				edtAvailableDiskSpace.Text =  					string.Format(m_sAvailableDiskSpaceFmt' cbKbFree' strRoot);  			}  			catch  			{  				// ignore errors  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwHelpAbout,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwHelpAbout.cs,HandleSystemMonitorLinkClicked,The following statement contains a magic number: using (var process = MiscUtils.RunProcess(program' null' null))  			{  				Thread.Sleep(300);  				// If gnome-system-monitor is already open' HasExited will be true with ExitCode of 0  				if (process.HasExited && process.ExitCode != 0)  					MessageBox.Show(string.Format(FwCoreDlgs.kstidUnableToStart' program));  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,OnPaint,The following statement contains a magic number: int y = (m_lblProjectName.Top + m_lblProjectName.Bottom) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,OnPaint,The following statement contains a magic number: y = (m_lblSpecifyWrtSys.Top + m_lblSpecifyWrtSys.Bottom) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,CheckForValidProjectName,The following statement contains a magic number: for (int n = 0; n < 32; n++)  			{  				int index = sIllegalCharsKeyboard.IndexOf((char)n);  				if (index >= 0)  					sIllegalCharsKeyboard = sIllegalCharsKeyboard.Remove(index' 1);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,FwStylesDlg,The following statement contains a magic number: Debug.Assert(m_cboTypes.Items.Count == 5);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,FwStylesDlg,The following statement contains a magic number: m_lastStyleTypeEntryForOtherApp = m_cboTypes.Items[4];
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,FwStylesDlg,The following statement contains a magic number: m_cboTypes.Items.RemoveAt(4);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_cboTypes_SelectedIndexChanged,The following statement contains a magic number: if (m_fShowTEStyleTypes)  			{  				m_styleListHelper.ShowOnlyUserModifiedStyles = false;  				switch (m_cboTypes.SelectedIndex)  				{  					case 0:	// basic  						m_styleListHelper.MaxStyleLevel = 0;  						break;    					case 1:	// all  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						break;    					case 2:	// custom  						m_styleListHelper.MaxStyleLevel = m_customUserLevel;  						break;  					case 3:	// user-modified  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						m_styleListHelper.ShowOnlyUserModifiedStyles = true;  						break;  				}  			}  			else  			{  				StyleListItem current = m_styleListHelper.SelectedStyle;  				m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  				m_styleListHelper.ExplicitStylesToDisplay = null;  				List<string> stylesToExclude = GetExcludedFlexStyleNames();  				if (current != null && stylesToExclude.Contains(current.Name))  				{  					UpdateChanges((StyleInfo)current.StyleInfo);  					stylesToExclude = GetExcludedFlexStyleNames();	// in case style name changed in interesting way.  				}  				m_styleListHelper.ExplicitStylesToExclude = stylesToExclude;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_cboTypes_SelectedIndexChanged,The following statement contains a magic number: if (m_fShowTEStyleTypes)  			{  				m_styleListHelper.ShowOnlyUserModifiedStyles = false;  				switch (m_cboTypes.SelectedIndex)  				{  					case 0:	// basic  						m_styleListHelper.MaxStyleLevel = 0;  						break;    					case 1:	// all  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						break;    					case 2:	// custom  						m_styleListHelper.MaxStyleLevel = m_customUserLevel;  						break;  					case 3:	// user-modified  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						m_styleListHelper.ShowOnlyUserModifiedStyles = true;  						break;  				}  			}  			else  			{  				StyleListItem current = m_styleListHelper.SelectedStyle;  				m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  				m_styleListHelper.ExplicitStylesToDisplay = null;  				List<string> stylesToExclude = GetExcludedFlexStyleNames();  				if (current != null && stylesToExclude.Contains(current.Name))  				{  					UpdateChanges((StyleInfo)current.StyleInfo);  					stylesToExclude = GetExcludedFlexStyleNames();	// in case style name changed in interesting way.  				}  				m_styleListHelper.ExplicitStylesToExclude = stylesToExclude;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,GetExcludedFlexStyleNames,The following statement contains a magic number: switch (m_cboTypes.SelectedIndex)  			{  				case 0:	// basic -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (style.StartsWith("Dictionary") || style.StartsWith("Classified"))  							styles.Add(style);  					}  					break;    				case 1:	// all  					break;    				case 2:	// custom -- styleSheet contains all built-in styles (can't change names)  					foreach (var style in m_styleSheet.Styles)  					{  						if (style.IsBuiltIn)  							styles.Add(style.Name);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;    				case 3: // dictionary -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (!style.StartsWith("Dictionary") && !style.StartsWith("Classified"))  							styles.Add(style);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,GetExcludedFlexStyleNames,The following statement contains a magic number: switch (m_cboTypes.SelectedIndex)  			{  				case 0:	// basic -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (style.StartsWith("Dictionary") || style.StartsWith("Classified"))  							styles.Add(style);  					}  					break;    				case 1:	// all  					break;    				case 2:	// custom -- styleSheet contains all built-in styles (can't change names)  					foreach (var style in m_styleSheet.Styles)  					{  						if (style.IsBuiltIn)  							styles.Add(style.Name);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;    				case 3: // dictionary -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (!style.StartsWith("Dictionary") && !style.StartsWith("Classified"))  							styles.Add(style);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_btnCopy_Click,The following statement contains a magic number: int styleNum = 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,StyleTypeMenuItem_Click,The following statement contains a magic number: int styleNum = 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,FwUserProperties,The following statement contains a magic number: tabControl.TabPages.RemoveAt(2);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,InitializeComponent,The following statement contains a magic number: this.tvwDataAccess.ItemHeight = 16;
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,OnPaint,The following statement contains a magic number: LineDrawing.DrawDialogControlSeparator(e.Graphics' ClientRectangle'  				tabControl.Bottom + (btnOk.Top - tabControl.Bottom) / 4);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,tabAccount_Paint,The following statement contains a magic number: LineDrawing.Draw(e.Graphics' lblPasswordGroup.Right'  				lblPasswordGroup.Top + lblPasswordGroup.Height / 2'  				txtUserDescription.Right - lblPasswordGroup.Right' LineTypes.Etched);
Magic Number,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,tabAccount_Paint,The following statement contains a magic number: LineDrawing.Draw(e.Graphics' lblMaintenanceAccess.Right'  				lblMaintenanceAccess.Top + lblMaintenanceAccess.Height / 2'  				txtUserDescription.Right - lblMaintenanceAccess.Right' LineTypes.Etched);
Magic Number,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,lblFilename_MouseEnter,The following statement contains a magic number: m_tooltip.SetToolTip(lblFilename'  				(lblFilename.Width < szPreferred.Width + 8 ? lblFilename.Text : null));
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The following statement contains a magic number: this.progressLine.ForeColor2 = System.Drawing.Color.FromArgb(((int)(((byte)(0))))' ((int)(((byte)(90))))' ((int)(((byte)(152)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The following statement contains a magic number: this.progressLine.ForeColor2 = System.Drawing.Color.FromArgb(((int)(((byte)(0))))' ((int)(((byte)(90))))' ((int)(((byte)(152)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,InitializeComponent,The following statement contains a magic number: this.progressLine.MaxValue = 1000;
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,OnVisibleChanged,The following statement contains a magic number: if (Visible)  			{  				m_waitHandle.Set();  				m_timer = new System.Threading.Timer(UpdateOpacityCallback' null' 0' 50);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,SetPosition,The following statement contains a magic number: Left = (ScreenHelper.PrimaryScreen.WorkingArea.Width - Width) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,SetPosition,The following statement contains a magic number: Top = (ScreenHelper.PrimaryScreen.WorkingArea.Height - Height) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,RealSplashScreen,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\RealSplashScreen.cs,UpdateOpacity,The following statement contains a magic number: try  			{  				double currentOpacity = Opacity;  				if (currentOpacity < 1.0)  #if !__MonoCS__  					Opacity = currentOpacity + 0.05;  #else  					Opacity = currentOpacity + 0.025; // looks nicer on mono/linux  #endif  				else if (m_timer != null)  				{  					m_timer.Dispose();  					m_timer = null;  				}  			}  			catch  			{  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: gridCharInventory.DefaultCellStyle.SelectionBackColor =  				ColorHelper.CalculateColor(SystemColors.Window' SystemColors.Highlight' 150);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: Font fnt = new Font(m_ws.DefaultFontName' 16);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: lblFirstCharCode.Top = txtFirstChar.Bottom + 5;
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: lblLastCharCode.Top = txtLastChar.Bottom + 5;
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: lblFirstChar.Top = txtFirstChar.Top +  				(txtFirstChar.Height - lblFirstChar.Height) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: lblLastChar.Top = txtLastChar.Top +  				(txtLastChar.Height - lblLastChar.Height) / 2;
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: fnt = new Font(m_ws.DefaultFontName' 12);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,ValidCharactersDlg,The following statement contains a magic number: var gridcol = gridCharInventory.Columns[3];
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,AddRangeOfCharacters,The following statement contains a magic number: using (new WaitCursor(this))  			{  				var undefinedChars = new List<string>();  				for (int i = first; i <= last; i++)  				{  					string chr = ((char)i).ToString(CultureInfo.InvariantCulture);    					try  					{  						if (!string.IsNullOrEmpty(chr))  						chr = LCModel.Core.Text.Icu.Normalize(chr' LCModel.Core.Text.Icu.UNormalizationMode.UNORM_NFD);  					}  					catch  					{  					}    					if (TsStringUtils.IsCharacterDefined(chr))  						chars.Add(chr);  					else if (undefinedChars.Count < 7)  					{  						string codepoint = i.ToString("x4").ToUpperInvariant();  						undefinedChars.Add(codepoint);  					}  				}    				// If there are some undefined characters' then tell the user what  				// they are and remove them from the list of valid characters.  				if (undefinedChars.Count > 0)  				{  					var bldr = new StringBuilder();  					bldr.AppendLine(ResourceHelper.GetResourceString("kstidUndefinedCharactersMsg"));  					bldr.AppendLine();    					for (int i = 0; i < 6 && i < undefinedChars.Count; i++)  						bldr.AppendLine("U+" + undefinedChars[i]);    					if (undefinedChars.Count > 6)  						bldr.Append("...");    					ShowMessageBox(bldr.ToString().TrimEnd(Environment.NewLine.ToCharArray()));  				}    				if (chars.Count > 0)  					m_validCharsGridMngr.AddCharacters(chars);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,AddRangeOfCharacters,The following statement contains a magic number: using (new WaitCursor(this))  			{  				var undefinedChars = new List<string>();  				for (int i = first; i <= last; i++)  				{  					string chr = ((char)i).ToString(CultureInfo.InvariantCulture);    					try  					{  						if (!string.IsNullOrEmpty(chr))  						chr = LCModel.Core.Text.Icu.Normalize(chr' LCModel.Core.Text.Icu.UNormalizationMode.UNORM_NFD);  					}  					catch  					{  					}    					if (TsStringUtils.IsCharacterDefined(chr))  						chars.Add(chr);  					else if (undefinedChars.Count < 7)  					{  						string codepoint = i.ToString("x4").ToUpperInvariant();  						undefinedChars.Add(codepoint);  					}  				}    				// If there are some undefined characters' then tell the user what  				// they are and remove them from the list of valid characters.  				if (undefinedChars.Count > 0)  				{  					var bldr = new StringBuilder();  					bldr.AppendLine(ResourceHelper.GetResourceString("kstidUndefinedCharactersMsg"));  					bldr.AppendLine();    					for (int i = 0; i < 6 && i < undefinedChars.Count; i++)  						bldr.AppendLine("U+" + undefinedChars[i]);    					if (undefinedChars.Count > 6)  						bldr.Append("...");    					ShowMessageBox(bldr.ToString().TrimEnd(Environment.NewLine.ToCharArray()));  				}    				if (chars.Count > 0)  					m_validCharsGridMngr.AddCharacters(chars);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,AddRangeOfCharacters,The following statement contains a magic number: using (new WaitCursor(this))  			{  				var undefinedChars = new List<string>();  				for (int i = first; i <= last; i++)  				{  					string chr = ((char)i).ToString(CultureInfo.InvariantCulture);    					try  					{  						if (!string.IsNullOrEmpty(chr))  						chr = LCModel.Core.Text.Icu.Normalize(chr' LCModel.Core.Text.Icu.UNormalizationMode.UNORM_NFD);  					}  					catch  					{  					}    					if (TsStringUtils.IsCharacterDefined(chr))  						chars.Add(chr);  					else if (undefinedChars.Count < 7)  					{  						string codepoint = i.ToString("x4").ToUpperInvariant();  						undefinedChars.Add(codepoint);  					}  				}    				// If there are some undefined characters' then tell the user what  				// they are and remove them from the list of valid characters.  				if (undefinedChars.Count > 0)  				{  					var bldr = new StringBuilder();  					bldr.AppendLine(ResourceHelper.GetResourceString("kstidUndefinedCharactersMsg"));  					bldr.AppendLine();    					for (int i = 0; i < 6 && i < undefinedChars.Count; i++)  						bldr.AppendLine("U+" + undefinedChars[i]);    					if (undefinedChars.Count > 6)  						bldr.Append("...");    					ShowMessageBox(bldr.ToString().TrimEnd(Environment.NewLine.ToCharArray()));  				}    				if (chars.Count > 0)  					m_validCharsGridMngr.AddCharacters(chars);  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,SortInventoryGrid,The following statement contains a magic number: switch (SortedInventoryColumn)  			{  				case 0: m_inventoryRows.Sort(InventoryCharComparer); break;  				case 1: m_inventoryRows.Sort(InventoryCharCodeComparer); break;  				case 2: m_inventoryRows.Sort(InventoryCountComparer); break;  				case 3: m_inventoryRows.Sort(InventoryIsValidComparer); break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,SortInventoryGrid,The following statement contains a magic number: switch (SortedInventoryColumn)  			{  				case 0: m_inventoryRows.Sort(InventoryCharComparer); break;  				case 1: m_inventoryRows.Sort(InventoryCharCodeComparer); break;  				case 2: m_inventoryRows.Sort(InventoryCountComparer); break;  				case 3: m_inventoryRows.Sort(InventoryIsValidComparer); break;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,InitializeComponent,The following statement contains a magic number: dataGridViewCellStyle3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255))))' ((int)(((byte)(255))))' ((int)(((byte)(128)))));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharGridsManager,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,DrawWordFormingGridCellBackground,The following statement contains a magic number: Color clr1 = (selected ? ColorHelper.CalculateColor(  					Color.White' clrSelBack' 120) : m_gridWordForming.BackgroundColor);
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharGridsManager,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,DrawWordFormingGridCellBackground,The following statement contains a magic number: Color clr2 = (selected ? e.CellStyle.SelectionBackColor :  					ColorHelper.CalculateColor(Color.White' clrSelBack' 100));
Magic Number,SIL.FieldWorks.FwCoreDlgs,ValidCharGridsManager,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,DrawWordFormingGridCellBackground,The following statement contains a magic number: using (LinearGradientBrush br = new LinearGradientBrush(e.CellBounds' clr1' clr2' 90))  					e.Graphics.FillRectangle(br' e.CellBounds);
Magic Number,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,btnModifyEthnologueInfo_Click,The following statement contains a magic number: if (!CheckWSIetfLanguageTagChange())  			{  				// revert back to original language  				foreach (var wsData in origWsData)  				{  					wsData.WritingSystem.Language = wsData.Language;  					if (!wsData.IsChanged)  						wsData.WritingSystem.AcceptChanges();  				}  			}  			else  			{  				Set_tbLanguageName(languageSubtag.Name);  				SetupEthnologueCode(CurrentWritingSystem);  				if (m_tbLanguageName.Text != origLangName)  				{  					int len = Math.Min(3' m_tbLanguageName.Text.Length);  					m_ShortWsName.Text = m_tbLanguageName.Text.Substring(0' len);  				}    				UpdateDialogWithChangesToLanguageName();  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,GetPrivateUseLangCodeForNewLang,The following statement contains a magic number: string isoCode = builder.ToString().Substring(0' Math.Min(3' builder.Length));
Magic Number,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,GetPrivateUseLangCodeForNewLang,The following statement contains a magic number: while (LangTagInUse(wsManager' "qaa-x-" + builder))  			{  				var newCharLast = (char)(builder[2] + 1);  				if (newCharLast > 'z')  				{  					// Incremented the last letter too far so reset it back to 'a' and increment the middle letter  					newCharLast = 'a';  					var newCharMiddle = (char)(builder[1] + 1);  					if (newCharMiddle > 'z')  					{  						// Incremented the middle letter too far so reset it back to 'a' and increment the first letter  						// Assume we won't ever have more then 4096 (26^3) custom writing systems  						newCharMiddle = 'a';  						builder[0] = (char)(builder[0] + 1);  					}  					builder[1] = newCharMiddle;  				}  				builder[2] = newCharLast;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,GetPrivateUseLangCodeForNewLang,The following statement contains a magic number: while (LangTagInUse(wsManager' "qaa-x-" + builder))  			{  				var newCharLast = (char)(builder[2] + 1);  				if (newCharLast > 'z')  				{  					// Incremented the last letter too far so reset it back to 'a' and increment the middle letter  					newCharLast = 'a';  					var newCharMiddle = (char)(builder[1] + 1);  					if (newCharMiddle > 'z')  					{  						// Incremented the middle letter too far so reset it back to 'a' and increment the first letter  						// Assume we won't ever have more then 4096 (26^3) custom writing systems  						newCharMiddle = 'a';  						builder[0] = (char)(builder[0] + 1);  					}  					builder[1] = newCharMiddle;  				}  				builder[2] = newCharLast;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,LoadShortWsNameFromCurrentWritingSystem,The following statement contains a magic number: m_ShortWsName.Text = shortAbbr ?? langName.Substring(0' Math.Min(langName.Length' 3));
Magic Number,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectPresenter,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectPresenter.cs,FileNameProblems,The following statement contains a magic number: if (settings.AdjustedComment.Trim() != settings.Comment.TrimEnd())  			{  				string displayComment;  				string format = FwCoreDlgs.ksCharactersNotPossible;  				if (File.Exists(settings.ZipFileName))  					format = FwCoreDlgs.ksCharactersNotPossibleOverwrite;  				displayComment = settings.Comment.Trim();  				if (displayComment.Length > 255)  					displayComment = displayComment.Substring(0' 255) + "...";      				string msg = string.Format(format' settings.AdjustedComment' displayComment);  				return MessageBox.Show(messageBoxOwner' msg' FwCoreDlgs.ksCommentWillBeAltered' MessageBoxButtons.OKCancel'  					File.Exists(settings.ZipFileName) ? MessageBoxIcon.Warning : MessageBoxIcon.Information)  					== DialogResult.Cancel;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs.BackupRestore,BackupProjectPresenter,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\BackupProjectPresenter.cs,FileNameProblems,The following statement contains a magic number: if (settings.AdjustedComment.Trim() != settings.Comment.TrimEnd())  			{  				string displayComment;  				string format = FwCoreDlgs.ksCharactersNotPossible;  				if (File.Exists(settings.ZipFileName))  					format = FwCoreDlgs.ksCharactersNotPossibleOverwrite;  				displayComment = settings.Comment.Trim();  				if (displayComment.Length > 255)  					displayComment = displayComment.Substring(0' 255) + "...";      				string msg = string.Format(format' settings.AdjustedComment' displayComment);  				return MessageBox.Show(messageBoxOwner' msg' FwCoreDlgs.ksCommentWillBeAltered' MessageBoxButtons.OKCancel'  					File.Exists(settings.ZipFileName) ? MessageBoxIcon.Warning : MessageBoxIcon.Information)  					== DialogResult.Cancel;  			}
Magic Number,SIL.FieldWorks.FwCoreDlgs.BackupRestore,OverwriteExistingProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\OverwriteExistingProject.cs,InitializeComponent,The following statement contains a magic number: this.label2.MaximumSize = new System.Drawing.Size(300' 20);
Magic Number,SIL.FieldWorks.FwCoreDlgs.BackupRestore,OverwriteExistingProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\BackupRestore\OverwriteExistingProject.cs,InitializeComponent,The following statement contains a magic number: this.label2.MaximumSize = new System.Drawing.Size(300' 20);
Missing Default,SIL.FieldWorks.FwCoreDlgs,AddCnvtrDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\AddCnvtrDlg.cs,btnHelp_Click,The following switch statement is missing a default case: switch (m_addCnvtrTabCtrl.SelectedIndex)  			{  				case kECProperties:  					helpTopicKey.Append("Properties");  					break;  				case kECTest:  					helpTopicKey.Append("Test");  					break;  				case kECAdvanced:  					helpTopicKey.Append("Advanced");  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,CharContextCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CharContextCtrl.cs,gridContext_CellValueNeeded,The following switch statement is missing a default case: switch (e.ColumnIndex)  			{  				case kiColRef: e.Value = info.Reference; break;  				case kiColContextBefore: e.Value = info.Before; break;  				case kiColContextItem: e.Value = info.Character; break;  				case kiColContextAfter: e.Value = info.After; break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,CnvtrPropertiesCtrl,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\CnvtrPropertiesCtrl.cs,cboConverter_SelectedIndexChanged,The following switch statement is missing a default case: switch (((CnvtrTypeComboItem)cboConverter.SelectedItem).Type)  					{  						case ConverterType.ktypeCC:  							setType = ConvType.Legacy_to_Unicode;  							break;  						case ConverterType.ktypeIcuConvert:  							setType = ConvType.Legacy_to_from_Unicode;  							break;  						case ConverterType.ktypeIcuTransduce:  							setType = ConvType.Unicode_to_from_Unicode;  							break;  						case ConverterType.ktypeTecKitTec:  						case ConverterType.ktypeTecKitMap:  						case ConverterType.ktypeCodePage:  							setType = ConvType.Legacy_to_from_Unicode;  							break;  					}
Missing Default,SIL.FieldWorks.FwCoreDlgs,SampleVc,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ConverterTest.cs,Display,The following switch statement is missing a default case: switch(frag)  			{  			case (int)SampleFrags.kfrText:  				if (m_fontName != null && m_fontName.Length > 0)  					vwenv.set_StringProperty((int)FwTextPropType.ktptFontFamily' m_fontName);  				// Force to 12 point.  				vwenv.set_IntProperty((int)FwTextPropType.ktptFontSize'  					(int)FwTextPropVar.ktpvMilliPoint' 12000);  				vwenv.OpenDiv();  				vwenv.AddLazyVecItems((int)SampleTags.ktagTextParas' this' (int)SampleFrags.kfrPara);  				vwenv.CloseDiv();  				break;  			case (int)SampleFrags.kfrPara:  				vwenv.AddStringProp((int)SampleTags.ktagParaContents' this);  				break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,MoveOrCopyFilesController,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\MoveOrCopyFilesController.cs,PerformMoveCopyOrLeaveFile,The following switch statement is missing a default case: switch (action)  				{  					case FileLocationChoice.Move:  						File.Move(sFile' sNewFile);  						break;  					case FileLocationChoice.Copy:  						File.Copy(sFile' sNewFile);  						break;  				}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwApplyStyleDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwApplyStyleDlg.cs,m_cboTypes_SelectedIndexChanged,The following switch statement is missing a default case: switch (m_cboTypes.SelectedIndex)  			{  				case 0:	// basic  					m_styleListHelper.MaxStyleLevel = 0;  					break;    				case 1:	// all  					m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  					break;    				case 2:	// custom  					m_styleListHelper.MaxStyleLevel = m_customUserLevel;  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwNewLangProject,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwNewLangProject.cs,btnOK_Click,The following switch statement is missing a default case: switch (dlg.DialogResult)  					{  						case DialogResult.OK:  							m_fCreateNew = false;  							m_dbFile = Path.Combine(FwDirectoryFinder.ProjectsDirectory'  								ProjectName + LcmFileHelper.ksFwDataXmlFileExtension);  							break;  						case DialogResult.Cancel:  							Enabled = true;  							DialogResult = DialogResult.None; // Return to New FieldWorks Project dialog  							break;  					}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwProjPropertiesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwProjPropertiesDlg.cs,m_btnHelp_Click,The following switch statement is missing a default case: switch (m_tabControl.SelectedIndex)  			{  				case kGeneralTab:  					topicKey = "khtpProjectProperties_General";  					break;  				case kWritingSystemTab:  					topicKey = "khtpProjectProperties_WritingSystem";  					break;  				case kExternalLinksTab:  					topicKey = "khtpProjectProperties_ExternalLinks";  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,m_cboTypes_SelectedIndexChanged,The following switch statement is missing a default case: switch (m_cboTypes.SelectedIndex)  				{  					case 0:	// basic  						m_styleListHelper.MaxStyleLevel = 0;  						break;    					case 1:	// all  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						break;    					case 2:	// custom  						m_styleListHelper.MaxStyleLevel = m_customUserLevel;  						break;  					case 3:	// user-modified  						m_styleListHelper.MaxStyleLevel = Int32.MaxValue;  						m_styleListHelper.ShowOnlyUserModifiedStyles = true;  						break;  				}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwStylesDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwStylesDlg.cs,GetExcludedFlexStyleNames,The following switch statement is missing a default case: switch (m_cboTypes.SelectedIndex)  			{  				case 0:	// basic -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (style.StartsWith("Dictionary") || style.StartsWith("Classified"))  							styles.Add(style);  					}  					break;    				case 1:	// all  					break;    				case 2:	// custom -- styleSheet contains all built-in styles (can't change names)  					foreach (var style in m_styleSheet.Styles)  					{  						if (style.IsBuiltIn)  							styles.Add(style.Name);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;    				case 3: // dictionary -- use current table of styles to obtain names  					foreach (var style in m_styleTable.Keys)  					{  						if (!style.StartsWith("Dictionary") && !style.StartsWith("Classified"))  							styles.Add(style);  					}  					styles.Add(StyleUtils.DefaultParaCharsStyleName);  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,FwUserProperties,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\FwUserProperties.cs,btnHelp_Click,The following switch statement is missing a default case: switch (tabControl.SelectedIndex)  			{  				case kAccountTab:  					helpTopicKey = "khtpUserProperties_Account";  					break;  				case kFeaturesTab:  					helpTopicKey = "khtpUserProperties_Features";  					break;  				case kDataAccessTab:  					helpTopicKey = "khtpUserProperties_Features";  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,PicturePropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\PicturePropertiesDialog.cs,ApplyDefaultFileLocationChoice,The following switch statement is missing a default case: switch (s_defaultFileLocChoiceForSession)  			{  				case FileLocationChoice.Copy:  					m_rbCopy.Checked = true;  					break;  				case FileLocationChoice.Move:  					m_rbMove.Checked = true;  					break;  				case FileLocationChoice.Leave:  					m_rbLeave.Checked = true;  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,btnAddCharacters_Click,The following switch statement is missing a default case: switch (tabCtrlAddFrom.SelectedIndex)  			{  				case kiTabBasedOn:  					if (btnSimilarWs.SelectedLocaleId != null)  						AddExemplarChars(btnSimilarWs.SelectedLocaleId);  					break;    				case kiTabManual:  					if (rbSingleChar.Checked)  						AddSingleCharacter(txtManualCharEntry);  					else if (rbCharRange.Checked)  						AddRangeOfCharacters();  					else  						AddSingleCharacter(txtUnicodeValue);    					tabControlAddFrom_SelectedIndexChanged(null' null);  					break;    				case kiTabData:  					if (gridCharInventory.RowCount > 0)  					{  						chars = new List<string>();  						foreach (CharacterInventoryRow charRow in m_inventoryRows)  						{  							if (charRow.IsValid)  								chars.Add(charRow.Character);  						}    						m_validCharsGridMngr.AddCharacters(chars);  					}    					break;    				case kiTabUnicode:  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,tabControlAddFrom_SelectedIndexChanged,The following switch statement is missing a default case: switch (tabCtrlAddFrom.SelectedIndex)  			{  				case kiTabBasedOn:  					if (rdoLanguageFile.Checked)  						btnAddCharacters.Enabled = (txtLanguageFile.Text.Length > 0);  					else  						btnAddCharacters.Enabled = (btnSimilarWs.SelectedLocaleId != null);  					break;    				case kiTabManual:  					fUseWsKeyboard = !rbUnicodeValue.Checked;  					btnAddCharacters.Enabled =  						((rbUnicodeValue.Checked && txtUnicodeValue.Text.Length > 0) ||  						(rbSingleChar.Checked && txtManualCharEntry.Text.Length > 0) ||  						(rbCharRange.Checked &&	txtFirstChar.Text.Length > 0 &&  						txtLastChar.Text.Length > 0 && txtFirstChar.Tag == null &&  						txtLastChar.Tag == null));  					break;    				case kiTabData:  					btnAddCharacters.Enabled = (gridCharInventory.RowCount > 0);  					break;    				case kiTabUnicode:  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,SortInventoryGrid,The following switch statement is missing a default case: switch (SortedInventoryColumn)  			{  				case 0: m_inventoryRows.Sort(InventoryCharComparer); break;  				case 1: m_inventoryRows.Sort(InventoryCharCodeComparer); break;  				case 2: m_inventoryRows.Sort(InventoryCountComparer); break;  				case 3: m_inventoryRows.Sort(InventoryIsValidComparer); break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,gridCharInventory_CellValueNeeded,The following switch statement is missing a default case: switch (e.ColumnIndex)  				{  					case kiCharCol:  						string chr = m_inventoryRows[i].Character;  						if (!LCModel.Core.Text.Icu.IsSpace(chr[0]) && !LCModel.Core.Text.Icu.IsControl(chr[0]))  						{  							e.Value = chr;  							gridCharInventory[e.ColumnIndex' e.RowIndex].Tag = null;  						}  						else  						{  							e.Value = CharacterGrid.GetSpecialCharDisplayText(chr);  							gridCharInventory[e.ColumnIndex' e.RowIndex].Tag = m_fntForSpecialChar;  						}  						return;    					case kiCharCodeCol: e.Value = m_inventoryRows[i].CharacterCodes; return;  					case kiCharCountCol: e.Value = m_inventoryRows[i].Count; return;  					case kiCharValidCol: e.Value = m_inventoryRows[i].IsValid; return;  				}
Missing Default,SIL.FieldWorks.FwCoreDlgs,ValidCharactersDlg,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\ValidCharactersDlg.cs,btnHelp_Click,The following switch statement is missing a default case: switch (tabCtrlAddFrom.SelectedIndex)  			{  				case kiTabBasedOn:  					helpTopicKey = "khtpValidCharsTabBasedOn";  					break;  				case kiTabManual:  					helpTopicKey = "khtpValidCharsTabManual";  					break;  				case kiTabData:  					helpTopicKey = "khtpValidCharsTabData";  					break;  				case kiTabUnicode:		//This tab is not currently visible so this help topic does not exist yet.  					helpTopicKey = "khtpValidCharsTabUnicode";  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,SetupSortTab,The following switch statement is missing a default case: switch (m_currentCollationRulesType)  			{  				case CollationRulesType.DefaultOrdering:  					m_sortLanguagePanel.Visible = false;  					m_sortRulesPanel.Visible = false;  					break;    				case CollationRulesType.CustomIcu:  					m_sortLanguagePanel.Visible = false;  					m_sortRulesPanel.Visible = true;  					m_sortRulesButtonPanel.Visible = true;  					m_sortRulesLoadPanel.Visible = true;  					m_sortingHelpLabel.Text = string.Format(FwCoreDlgs.kstidIcuSortingHelp' Environment.NewLine);  					var icuCollation = (IcuRulesCollationDefinition) ws.DefaultCollation;  					m_sortRulesTextBox.Tss = TsStringUtils.MakeString(icuCollation.CollationRules.Replace("\t"' "")' ws.Handle);  					break;    				case CollationRulesType.CustomSimple:  					m_sortLanguagePanel.Visible = false;  					m_sortRulesPanel.Visible = true;  					m_sortRulesButtonPanel.Visible = false;  					m_sortRulesLoadPanel.Visible = false;  					m_sortingHelpLabel.Text = string.Format(FwCoreDlgs.kstidSimpleSortingHelp' Environment.NewLine);  					var simpleCollation = (SimpleRulesCollationDefinition) ws.DefaultCollation;  					m_sortRulesTextBox.Tss = TsStringUtils.MakeString(simpleCollation.SimpleRules' ws.Handle);  					break;    				case CollationRulesType.OtherLanguage:  					m_sortRulesPanel.Visible = false;  					m_sortLanguagePanel.Visible = true;  					var systemCollation = (SystemCollationDefinition) ws.DefaultCollation;  					if (string.IsNullOrEmpty(systemCollation.LanguageTag))  					{  						string message;  						systemCollation.LanguageTag = SystemCollator.ValidateLanguageTag(ws.LanguageTag' out message) ? ws.LanguageTag : (string) m_sortLanguageComboBox.SelectedValue;  					}  					m_sortLanguageComboBox.SelectedValue = systemCollation.LanguageTag;  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,btnHelp_Click,The following switch statement is missing a default case: switch (tabControl.SelectedIndex)  			{  				case kWsGeneral:  					helpTopicKey = "khtpWsGeneral";  					break;  				case kWsFonts:  					helpTopicKey = "khtpWsFonts";  					break;  				case kWsKeyboard:  					helpTopicKey = "khtpWsKeyboard";  					break;  				case kWsConverters:  					helpTopicKey = "khtpWsConverters";  					break;  				case kWsSorting:  					helpTopicKey = "khtpWsSorting";  					break;  				case kWsPUACharacters:  					helpTopicKey = "khtpWsPUACharacters";  					break;  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,tabControl_SelectedIndexChanged,The following switch statement is missing a default case: switch (tabControl.SelectedIndex)  				{  					case kWsSorting:  						SetupSortTab(CurrentWritingSystem);  						break;    					case kWsKeyboard:  						break;  				}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,SwitchTab,The following switch statement is missing a default case: switch(index)  			{  				case kWsGeneral:  					{  						m_regionVariantControl.Select();  						break;  					}  				case kWsSorting:  					{  						tabControl.Update();  						m_sortRulesTextBox.Select();  						m_sortRulesTextBox.SelectAll();  						break;  					}  			}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,m_sortRulesTextBox_TextChanged,The following switch statement is missing a default case: switch (m_currentCollationRulesType)  				{  					case CollationRulesType.CustomIcu:  						var icuCollation = (IcuRulesCollationDefinition) ws.DefaultCollation;  						icuCollation.Imports.Clear();  						icuCollation.IcuRules = rules;  						break;    					case CollationRulesType.CustomSimple:  						((SimpleRulesCollationDefinition) ws.DefaultCollation).SimpleRules = rules;  						break;  				}
Missing Default,SIL.FieldWorks.FwCoreDlgs,WritingSystemPropertiesDialog,C:\repos\sillsdev_FieldWorks\Src\FwCoreDlgs\WritingSystemPropertiesDialog.cs,m_sortUsingComboBox_SelectedIndexChanged,The following switch statement is missing a default case: switch (m_currentCollationRulesType)  			{  				case CollationRulesType.DefaultOrdering:  				case CollationRulesType.CustomIcu:  					ws.DefaultCollation = new IcuRulesCollationDefinition(ws.DefaultCollationType);  					break;  				case CollationRulesType.CustomSimple:  					ws.DefaultCollation = new SimpleRulesCollationDefinition(ws.DefaultCollationType);  					break;  				case CollationRulesType.OtherLanguage:  					ws.DefaultCollation = new SystemCollationDefinition();  					break;  			}
