Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,UpdateExternalLinks,The method has 108 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetFontProperties,The method has 131 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetParagraphProperties,The method has 246 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteCssFile,The method has 154 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessDictionaryTypeClasses,The method has 177 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessDictionaryCssStyle,The method has 170 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,The method has 142 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessNotebookCssStyle,The method has 125 lines of code.
Long Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,FinalizeXhtml,The method has 111 lines of code.
Complex Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,Dispose,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,TileWindows,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,Synchronize,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,UpdateExternalLinks,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CollectMovableFilesFromFolder,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,FwEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwEditingHelper.cs,OnCharAux,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,UpdateStyleComboBoxValue,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,ShowApplyStyleDialog,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,GetStyleNames,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,CreateAndUpdateStyles,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,GetFunction,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,EnsureCompatibleFactoryStyle,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetFontProperties,Cyclomatic complexity of the method is 22
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretUnderlineType,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetParagraphProperties,Cyclomatic complexity of the method is 38
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetBulNumFontInfoProperties,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetBasedOnAndNextProps,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretBulNumSchemeAttribute,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,OnKeyDown,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteCssFile,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteHeaderFooterBlock,Cyclomatic complexity of the method is 17
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessScriptureCssStyle,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteScriptureCssStyle,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,GetValidCssClassName,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessDictionaryTypeClasses,Cyclomatic complexity of the method is 33
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessDictionaryCssStyle,Cyclomatic complexity of the method is 35
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,Cyclomatic complexity of the method is 38
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontInfoToCss,Cyclomatic complexity of the method is 20
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,Cyclomatic complexity of the method is 32
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaStyleInfoToCss,Cyclomatic complexity of the method is 20
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessNotebookTypeClasses,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ProcessNotebookCssStyle,Cyclomatic complexity of the method is 27
Complex Method,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,FinalizeXhtml,Cyclomatic complexity of the method is 21
Long Parameter List,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CalcTileSizeAndSpacing,The method has 5 parameters. Parameters: scrn' screenDimension' minWindowDimension' desiredWindowDimension' windowSpacing
Long Parameter List,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CalcTileSizeAndSpacing,The method has 6 parameters. Parameters: scrn' windowsToTile' screenDimension' minWindowDimension' desiredWindowDimension' windowSpacing
Long Parameter List,SIL.FieldWorks.Common.Framework,FwEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwEditingHelper.cs,AddHyperlink,The method has 5 parameters. Parameters: strBldr' ws' sLinkText' sUrl' stylesheet
Long Parameter List,SIL.FieldWorks.Common.Framework,FwEditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwEditingHelper.cs,InsertPictureOrc,The method has 6 parameters. Parameters: pict' tss' ich' hvoObj' propTag' ws
Long Parameter List,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,FindOrCreateStyle,The method has 6 parameters. Parameters: styleName' styleType' context' structure' function' factoryGuid
Long Parameter List,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,EnsureCompatibleFactoryStyle,The method has 5 parameters. Parameters: style' type' context' structure' function
Long Parameter List,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetFontProperties,The method has 5 parameters. Parameters: styleName' styleTag' setIntProp' setStrProp' options
Long Parameter List,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetParagraphProperties,The method has 5 parameters. Parameters: styleName' styleTag' setIntProp' setStrProp' options
Long Parameter List,SIL.FieldWorks.Common.Framework,ReservedStyleInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ReservedStyleInfo,The method has 7 parameters. Parameters: context' structure' function' styleType' nextStyle' basedOn' guid
Long Parameter List,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,The method has 5 parameters. Parameters: ws' sAttr' esi' sCss' fTopLevel
Long Identifier,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetParagraphProperties,The length of the parameter fFirstLineOrHangingIndentSpecified is 34.
Long Statement,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,Dispose,The length of the statement  "				List<IFwMainWnd> mainWnds = new List<IFwMainWnd>(m_rgMainWindows); // Use another array' since m_rgMainWindows may change. " is 122.
Long Statement,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,UpdateExternalLinks,The length of the statement  "				CollectMovableFilesFromFolder(lp.FilePathsInTsStringsOA' rgFilesToMove' sOldLinkedFilesRootDir' sNewLinkedFilesRootDir); " is 120.
Long Statement,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,UpdateExternalLinks,The length of the statement  "					using (MoveOrCopyFilesDlg dlg = new MoveOrCopyFilesDlg()) // REVIEW (Hasso) 2015.08: should this go in MoveOrCopyFilesController? " is 129.
Long Statement,SIL.FieldWorks.Common.Framework,StatusBarProgressHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StatusBarProgressHandler.cs,Dispose,The length of the statement  "			System.Diagnostics.Debug.WriteLineIf(!fFromDispose' "****************** Missing Dispose() call for " + GetType().Name + ". ******************"); " is 144.
Long Statement,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,FindOrCreateStyle,The length of the statement  "			if (m_htOrigStyles.TryGetValue(styleName' out style) && EnsureCompatibleFactoryStyle(style' styleType' context' structure' function)) " is 133.
Long Statement,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,FindOrCreateStyle,The length of the statement  "				m_htUpdatedStyles[styleName] = style; // REVIEW (Hasso) 2017.04: any reason this is shoved in the middle here? Parallel or UOW reasons' perhaps? " is 144.
Long Statement,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,FindOrCreateStyle,The length of the statement  "				m_htUpdatedStyles[styleName] = style; // REVIEW (Hasso) 2017.04: any reason this is shoved in the middle here? Parallel or UOW reasons' perhaps? " is 144.
Long Statement,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,EnsureCompatibleFactoryStyle,The length of the statement  "			// Handle an incompatible Style by renaming a conflicting User style or reporting an invalid installation for an incompatible built-in style. " is 141.
Long Statement,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,InitializeComponent,The length of the statement  "			this.m_NumberOfUndoes.ImageAlign = ((System.Drawing.ContentAlignment)(resources.GetObject("m_NumberOfUndoes.ImageAlign"))); " is 123.
Long Statement,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,InitializeComponent,The length of the statement  "			this.m_NumberOfUndoes.RightToLeft = ((System.Windows.Forms.RightToLeft)(resources.GetObject("m_NumberOfUndoes.RightToLeft"))); " is 126.
Long Statement,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,InitializeComponent,The length of the statement  "			this.m_NumberOfUndoes.TextAlign = ((System.Drawing.ContentAlignment)(resources.GetObject("m_NumberOfUndoes.TextAlign"))); " is 121.
Long Statement,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteCssFile,The length of the statement  "				foreach (var ws in langProj.CurrentAnalysisWritingSystems.Union(langProj.CurrentPronunciationWritingSystems).Union(langProj.CurrentVernacularWritingSystems)) " is 157.
Long Statement,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,GetValidCssClassName,The length of the statement  "			var validStarts = new Regex("^[a-zA-Z]"); // standard allows _' -' but these are reserved for browser specials and have other conditions. " is 137.
Long Statement,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The length of the statement  "				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?) " is 125.
Long Statement,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The length of the statement  "				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?) " is 139.
Complex Conditional,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,UpdateStyleComboBoxValue,The conditional expression  "CharStyleListHelper.ActiveView != rootsite as Control ||  					m_prevParaStyleContext != currentContext ||  					(charStyleName != null && !CharStyleListHelper.Contains(charStyleName)) ||  					(charStyleName == null && m_prevParaStyleContext == ContextValues.Note) ||  					(fwEditingHelper != null && fwEditingHelper.ForceCharStyleComboRefresh)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,ShowStylesDialog,The conditional expression  "paraStyleName == null && charStyleName == null && EditingHelper.CurrentSelection != null  				&& EditingHelper.CurrentSelection.Selection != null"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,EnsureCompatibleFactoryStyle,The conditional expression  "style.IsBuiltIn &&  				(style.Context != context ||  				style.Function != function) &&  				IsValidInternalStyleContext(style' context)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,EnsureCompatibleFactoryStyle,The conditional expression  "style.Type != type ||  				!CompatibleContext(style.Context' context) ||  				style.Structure != structure ||  				!CompatibleFunction(style.Function' function)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,CompatibleContext,The conditional expression  "(currContext == ContextValues.InternalMappable && proposedContext == ContextValues.Internal) ||  				(proposedContext == ContextValues.InternalMappable && currContext == ContextValues.Internal)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,GetValidCssClassName,The conditional expression  "ch32 != '_'  && ch32 != '-' && !Icu.Character.IsAlphabetic(ch32) &&  					!Icu.Character.IsNumeric(ch32) && !Icu.Character.IsDiacritic(ch32)"  is complex.
Empty Catch Block,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,LoadSettings,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,AdjustNewWindowPosition,The following statement contains a magic number: rcNewWnd.Width -=  SystemInformation.CaptionHeight * 2;
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,AdjustNewWindowPosition,The following statement contains a magic number: rcNewWnd.Height -=  SystemInformation.CaptionHeight * 2;
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CascadeSize,The following statement contains a magic number: int retSize = (screenSize * 2) / 3;
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CascadeSize,The following statement contains a magic number: int retSize = (screenSize * 2) / 3;
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,CalcTileSizeAndSpacing,The following statement contains a magic number: windowSpacing = minWindowDimension - (int)Math.Round(overlap + 0.5);
Magic Number,SIL.FieldWorks.Common.Framework,FwApp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwApp.cs,UpdateExternalLinks,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,SIL.FieldWorks.Common.Framework,FwRegistrySettings,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwRegistrySettings.cs,AddErrorReportingInfo,The following statement contains a magic number: int cmin = TotalAppRuntime / 60;
Magic Number,SIL.FieldWorks.Common.Framework,FwRegistrySettings,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwRegistrySettings.cs,AddErrorReportingInfo,The following statement contains a magic number: ErrorReporter.AddProperty("TotalRuntime"' String.Format("{0}:{1}"' cmin / 60' cmin % 60));
Magic Number,SIL.FieldWorks.Common.Framework,FwRegistrySettings,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\FwRegistrySettings.cs,AddErrorReportingInfo,The following statement contains a magic number: ErrorReporter.AddProperty("TotalRuntime"' String.Format("{0}:{1}"' cmin / 60' cmin % 60));
Magic Number,SIL.FieldWorks.Common.Framework,MainWindowDelegate,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\MainWindowDelegate.cs,CreateProjectLauncher,The following statement contains a magic number: int tailNumber = 2;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,CreateStyles,The following statement contains a magic number: Debug.Assert(parameters.Length == 3);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,CreateStyles,The following statement contains a magic number: m_deleteMissingStyles = (bool)parameters[2];
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,CreateStyles,The following statement contains a magic number: m_progressDlg.Maximum = tagList.Count * 2;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ColorVal,The following statement contains a magic number: int blue = Convert.ToInt32(val.Substring(secondComma + 1' val.Length - secondComma - 2));
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ColorVal,The following statement contains a magic number: return(blue * 256 + green) * 256 + red;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ColorVal,The following statement contains a magic number: return(blue * 256 + green) * 256 + red;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ColorVal,The following statement contains a magic number: return (col.B * 256 + col.G) * 256 + col.R;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,ColorVal,The following statement contains a magic number: return (col.B * 256 + col.G) * 256 + col.R;
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetParagraphProperties,The following statement contains a magic number: setIntProp(nBorder' (int)FwTextPropVar.ktpvDefault'  					500);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetBulNumFontInfoProperties,The following statement contains a magic number: StringBuilder bulletProps = new StringBuilder(propsBldr.IntPropCount * 3 + propsBldr.StrPropCount * 3);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetBulNumFontInfoProperties,The following statement contains a magic number: StringBuilder bulletProps = new StringBuilder(propsBldr.IntPropCount * 3 + propsBldr.StrPropCount * 3);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,SetBulNumFontInfoProperties,The following statement contains a magic number: bulletProps.Append((char) ((intValue >> 16) & 0xFFFF));
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretMeasurementAttribute,The following statement contains a magic number: string number = sSize.Substring(0' sSize.Length - 3);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretMeasurementAttribute,The following statement contains a magic number: return (int)(double.Parse(number' new CultureInfo("en-US")) * 1000.0);
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretMeasurementAttribute,The following statement contains a magic number: sSize.Length >= 4
Magic Number,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretBulNumSchemeAttribute,The following statement contains a magic number: Int32.TryParse(sScheme.Substring(7)' out nVal)
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,UndoRedoDropDown,The following statement contains a magic number: m_NumberOfUndoes.BackColor = Color.FromArgb(200' m_NumberOfUndoes.BackColor);
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,UndoRedoDropDown,The following statement contains a magic number: clr = Color.FromArgb(Math.Abs(clr.R - 15)' Math.Abs(clr.G - 15)' Math.Abs(clr.B - 15));
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,UndoRedoDropDown,The following statement contains a magic number: clr = Color.FromArgb(Math.Abs(clr.R - 15)' Math.Abs(clr.G - 15)' Math.Abs(clr.B - 15));
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,UndoRedoDropDown,The following statement contains a magic number: clr = Color.FromArgb(Math.Abs(clr.R - 15)' Math.Abs(clr.G - 15)' Math.Abs(clr.B - 15));
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,AdjustHeight,The following statement contains a magic number: int nMaxItems = Math.Min(m_Actions.Items.Count' 10);
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,AdjustHeight,The following statement contains a magic number: Height = nMaxItems * m_Actions.ItemHeight + m_NumberOfUndoes.Height  				+ 2 * SystemInformation.BorderSize.Height;
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,OnKeyDown,The following statement contains a magic number: switch (e.KeyCode)  			{  				case Keys.Down:  				{  					if (m_Actions.SelectedIndices.Count >= m_Actions.Items.Count)  						return;    					int iLastSelected = m_Actions.SelectedIndices.Count;  					if (iLastSelected > m_Actions.TopIndex + m_Actions.ItemsPerPage - 1)  					{  						m_Actions.VerticalScroll(ScrollEventType.SmallIncrement);    					}  					else  						SelectListItems(iLastSelected' m_Actions.TopIndex);    					// for some reason changing the selection here causes a MouseMove message  					// to happen which resets the selection. Therefore we set a flag that the  					// next MouseMove event will be ignored.  					if (m_Actions.DisplayRectangle.Contains(  						m_Actions.PointToClient(MousePosition)))  					{  						m_fIgnoreNextMouseMoved = true;  					}  					break;  				}  				case Keys.Up:  				{  					if (m_Actions.SelectedIndices.Count <= 1) // always keep first one selected  						return;    					int topIndex = m_Actions.TopIndex;  					int iLastSelected = m_Actions.SelectedIndices.Count - 2;  					if (iLastSelected < topIndex)  						m_Actions.VerticalScroll(ScrollEventType.SmallDecrement);  					else  						SelectListItems(iLastSelected' topIndex);    					// for some reason changing the selection here causes a MouseMove message  					// to happen which resets the selection. Therefore we set a flag that the  					// next MouseMove event will be ignored.  					if (m_Actions.DisplayRectangle.Contains(  						m_Actions.PointToClient(MousePosition)))  					{  						m_fIgnoreNextMouseMoved = true;  					}  					break;  				}  				case Keys.PageDown:  				{  					// want to select to end of page  					int iLastSelected = m_Actions.SelectedIndices.Count + m_Actions.ItemsPerPage - 2;  					if (iLastSelected > m_Actions.TopIndex + m_Actions.ItemsPerPage - 1)  						m_Actions.VerticalScroll(ScrollEventType.LargeIncrement);  					else  						SelectListItems(iLastSelected' m_Actions.TopIndex);  					break;  				}  				case Keys.PageUp:  				{  					if (m_Actions.SelectedIndices.Count <= 1) // always keep first one selected  						return;    					int topIndex = m_Actions.TopIndex;  					int iLastSelected = m_Actions.SelectedIndices.Count - m_Actions.ItemsPerPage;  					if (iLastSelected < topIndex)  						m_Actions.VerticalScroll(ScrollEventType.LargeDecrement);  					else  						SelectListItems(iLastSelected' topIndex);  					break;  				}  				case Keys.Escape:  					Hide();  					break;  				default:  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,UndoRedoDropDown,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\UndoRedoDropDown.cs,OnKeyDown,The following statement contains a magic number: switch (e.KeyCode)  			{  				case Keys.Down:  				{  					if (m_Actions.SelectedIndices.Count >= m_Actions.Items.Count)  						return;    					int iLastSelected = m_Actions.SelectedIndices.Count;  					if (iLastSelected > m_Actions.TopIndex + m_Actions.ItemsPerPage - 1)  					{  						m_Actions.VerticalScroll(ScrollEventType.SmallIncrement);    					}  					else  						SelectListItems(iLastSelected' m_Actions.TopIndex);    					// for some reason changing the selection here causes a MouseMove message  					// to happen which resets the selection. Therefore we set a flag that the  					// next MouseMove event will be ignored.  					if (m_Actions.DisplayRectangle.Contains(  						m_Actions.PointToClient(MousePosition)))  					{  						m_fIgnoreNextMouseMoved = true;  					}  					break;  				}  				case Keys.Up:  				{  					if (m_Actions.SelectedIndices.Count <= 1) // always keep first one selected  						return;    					int topIndex = m_Actions.TopIndex;  					int iLastSelected = m_Actions.SelectedIndices.Count - 2;  					if (iLastSelected < topIndex)  						m_Actions.VerticalScroll(ScrollEventType.SmallDecrement);  					else  						SelectListItems(iLastSelected' topIndex);    					// for some reason changing the selection here causes a MouseMove message  					// to happen which resets the selection. Therefore we set a flag that the  					// next MouseMove event will be ignored.  					if (m_Actions.DisplayRectangle.Contains(  						m_Actions.PointToClient(MousePosition)))  					{  						m_fIgnoreNextMouseMoved = true;  					}  					break;  				}  				case Keys.PageDown:  				{  					// want to select to end of page  					int iLastSelected = m_Actions.SelectedIndices.Count + m_Actions.ItemsPerPage - 2;  					if (iLastSelected > m_Actions.TopIndex + m_Actions.ItemsPerPage - 1)  						m_Actions.VerticalScroll(ScrollEventType.LargeIncrement);  					else  						SelectListItems(iLastSelected' m_Actions.TopIndex);  					break;  				}  				case Keys.PageUp:  				{  					if (m_Actions.SelectedIndices.Count <= 1) // always keep first one selected  						return;    					int topIndex = m_Actions.TopIndex;  					int iLastSelected = m_Actions.SelectedIndices.Count - m_Actions.ItemsPerPage;  					if (iLastSelected < topIndex)  						m_Actions.VerticalScroll(ScrollEventType.LargeDecrement);  					else  						SelectListItems(iLastSelected' topIndex);  					break;  				}  				case Keys.Escape:  					Hide();  					break;  				default:  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaBulletInfoToCss,The following statement contains a magic number: switch (scheme)  			{  				case VwBulNum.kvbnArabic:	type = "' decimal";	break;  				case VwBulNum.kvbnArabic01:	type = "' decimal-leading-zero";	break;  				case VwBulNum.kvbnRomanLower:	type = "' lower-roman";	break;  				case VwBulNum.kvbnRomanUpper:	type = "' upper-roman";	break;  				case VwBulNum.kvbnLetterLower:	type = "' lower-latin";	break;  				case VwBulNum.kvbnLetterUpper:	type = "' upper-latin";	break;  				case VwBulNum.kvbnBulletBase + 0: bullet = "\\00B7"; break;		// MIDDLE DOT  				case VwBulNum.kvbnBulletBase + 1: bullet = "\\2022"; break;		// BULLET (note: in a list item' consider using 'disc' somehow?)  				case VwBulNum.kvbnBulletBase + 2: bullet = "\\25CF"; break;		// BLACK CIRCLE  				case VwBulNum.kvbnBulletBase + 3: bullet = "\\274D"; break;		// SHADOWED WHITE CIRCLE  				case VwBulNum.kvbnBulletBase + 4: bullet = "\\25AA"; break;		// BLACK SMALL SQUARE (note: in a list item' consider using 'square' somehow?)  				case VwBulNum.kvbnBulletBase + 5: bullet = "\\25A0"; break;		// BLACK SQUARE  				case VwBulNum.kvbnBulletBase + 6: bullet = "\\25AB"; break;		// WHITE SMALL SQUARE  				case VwBulNum.kvbnBulletBase + 7: bullet = "\\25A1"; break;		// WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 8: bullet = "\\2751"; break;		// LOWER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 9: bullet = "\\2752"; break;		// UPPER RIGHT SHADOWED WHITE SQUARE  				case VwBulNum.kvbnBulletBase + 10: bullet = "\\2B27"; break;	// BLACK MEDIUM LOZENGE  				case VwBulNum.kvbnBulletBase + 11: bullet = "\\29EB"; break;	// BLACK LOZENGE  				case VwBulNum.kvbnBulletBase + 12: bullet = "\\25C6"; break;	// BLACK DIAMOND  				case VwBulNum.kvbnBulletBase + 13: bullet = "\\2756"; break;	// BLACK DIAMOND MINUS WHITE X  				case VwBulNum.kvbnBulletBase + 14: bullet = "\\2318"; break;	// PLACE OF INTEREST SIGN  				case VwBulNum.kvbnBulletBase + 15: bullet = "\\261E"; break;	// WHITE RIGHT POINTING INDEX  				case VwBulNum.kvbnBulletBase + 16: bullet = "\\271D"; break;	// LATIN CROSS  				case VwBulNum.kvbnBulletBase + 17: bullet = "\\271E"; break;	// SHADOWED WHITE LATIN CROSS  				case VwBulNum.kvbnBulletBase + 18: bullet = "\\2730"; break;	// SHADOWED WHITE STAR  				case VwBulNum.kvbnBulletBase + 19: bullet = "\\27A2"; break;	// THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD  				case VwBulNum.kvbnBulletBase + 20: bullet = "\\27B2"; break;	// CIRCLED HEAVY WHITE RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 21: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 22: bullet = "\\2794"; break;	// HEAVY WIDE-HEADED RIGHTWARDS ARROW  				case VwBulNum.kvbnBulletBase + 23: bullet = "\\21E8"; break;	// RIGHTWARDS WHITE ARROW  				case VwBulNum.kvbnBulletBase + 24: bullet = "\\2713"; break;	// CHECK MARK  				default:  					if (scheme >= VwBulNum.kvbnBulletBase && scheme <= VwBulNum.kvbnBulletMax)  						bullet = "*";  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,The following statement contains a magic number: switch (sAttr)  			{  				case "font-family":  					if (fi.m_fontName.ValueIsSet)  					{  						string sFontName = esi.RealFontNameForWs(ws);  						if (String.IsNullOrEmpty(sFontName))  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' fi.m_fontName.Value' sInheritance);  						else  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' sFontName' sInheritance);  						return true;  					}  					fInherited = fi.m_fontName.IsInherited;  					break;  				case "font-size":  					bool superSub = fi.m_superSub.ValueIsSet && fi.m_superSub.Value != FwSuperscriptVal.kssvOff;  					if (fi.m_fontSize.ValueIsSet)  					{  						var pointSize = fi.m_fontSize.Value;  						if (superSub)  							pointSize = pointSize*55/100;  						m_writer.WriteLine("    font-size: {0}pt;{1}"' ConvertMptToPt(pointSize)' sInheritance);  						return true;  					}  					if (superSub)  					{  						m_writer.WriteLine("    font-size: 55%;{0}"' sInheritance);  						return true;  					}  					fInherited = fi.m_fontSize.IsInherited;  					break;  				case "font-weight":  					if (fi.m_bold.ValueIsSet)  					{  						m_writer.WriteLine("    font-weight: {0};{1}"' fi.m_bold.Value ? "bold" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_bold.IsInherited;  					break;  				case "font-style":  					if (fi.m_italic.ValueIsSet)  					{  						m_writer.WriteLine("    font-style: {0};{1}"' fi.m_italic.Value ? "italic" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_italic.IsInherited;  					break;  				case "color":  					if (fi.m_fontColor.ValueIsSet)  					{  						//Black as a font color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_fontColor.Value != Color.Black || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    color: rgb({0}'{1}'{2});{3}"'  											   fi.m_fontColor.Value.R'  											   fi.m_fontColor.Value.G'  											   fi.m_fontColor.Value.B'  											   sInheritance);  						}  						return true;  					}  					fInherited = fi.m_fontColor.IsInherited;  					break;  				case "background-color":  					if (fi.m_backColor.ValueIsSet)  					{  						//White as a background color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_backColor.Value != Color.White || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    background-color: rgb({0}'{1}'{2});{3}"'  											   fi.m_backColor.Value.R'  											   fi.m_backColor.Value.G'  											   fi.m_backColor.Value.B'  											   sInheritance);  						}  					return true;  					}  					fInherited = fi.m_backColor.IsInherited;  					break;  				case "vertical-align":  					if (fi.m_superSub.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0};{1}"' GetVerticalAlign(fi.m_superSub.Value)' sInheritance);  						return true;  					}  					if (fi.m_offset.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0}pt;{1}"' ConvertMptToPt(fi.m_offset.Value)' sInheritance);  						return true;  					}  					fInherited = fi.m_offset.IsInherited || fi.m_superSub.IsInherited;  					break;  				case "text-decoration":  					if (fi.m_underline.ValueIsSet)  					{  						m_writer.WriteLine("    text-decoration: {0};{1}"'  							(fi.m_underline.Value == FwUnderlineType.kuntNone ? "none" : "underline")' sInheritance);  						return true;  					}  					fInherited = fi.m_underline.IsInherited;  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,The following statement contains a magic number: switch (sAttr)  			{  				case "font-family":  					if (fi.m_fontName.ValueIsSet)  					{  						string sFontName = esi.RealFontNameForWs(ws);  						if (String.IsNullOrEmpty(sFontName))  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' fi.m_fontName.Value' sInheritance);  						else  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' sFontName' sInheritance);  						return true;  					}  					fInherited = fi.m_fontName.IsInherited;  					break;  				case "font-size":  					bool superSub = fi.m_superSub.ValueIsSet && fi.m_superSub.Value != FwSuperscriptVal.kssvOff;  					if (fi.m_fontSize.ValueIsSet)  					{  						var pointSize = fi.m_fontSize.Value;  						if (superSub)  							pointSize = pointSize*55/100;  						m_writer.WriteLine("    font-size: {0}pt;{1}"' ConvertMptToPt(pointSize)' sInheritance);  						return true;  					}  					if (superSub)  					{  						m_writer.WriteLine("    font-size: 55%;{0}"' sInheritance);  						return true;  					}  					fInherited = fi.m_fontSize.IsInherited;  					break;  				case "font-weight":  					if (fi.m_bold.ValueIsSet)  					{  						m_writer.WriteLine("    font-weight: {0};{1}"' fi.m_bold.Value ? "bold" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_bold.IsInherited;  					break;  				case "font-style":  					if (fi.m_italic.ValueIsSet)  					{  						m_writer.WriteLine("    font-style: {0};{1}"' fi.m_italic.Value ? "italic" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_italic.IsInherited;  					break;  				case "color":  					if (fi.m_fontColor.ValueIsSet)  					{  						//Black as a font color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_fontColor.Value != Color.Black || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    color: rgb({0}'{1}'{2});{3}"'  											   fi.m_fontColor.Value.R'  											   fi.m_fontColor.Value.G'  											   fi.m_fontColor.Value.B'  											   sInheritance);  						}  						return true;  					}  					fInherited = fi.m_fontColor.IsInherited;  					break;  				case "background-color":  					if (fi.m_backColor.ValueIsSet)  					{  						//White as a background color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_backColor.Value != Color.White || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    background-color: rgb({0}'{1}'{2});{3}"'  											   fi.m_backColor.Value.R'  											   fi.m_backColor.Value.G'  											   fi.m_backColor.Value.B'  											   sInheritance);  						}  					return true;  					}  					fInherited = fi.m_backColor.IsInherited;  					break;  				case "vertical-align":  					if (fi.m_superSub.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0};{1}"' GetVerticalAlign(fi.m_superSub.Value)' sInheritance);  						return true;  					}  					if (fi.m_offset.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0}pt;{1}"' ConvertMptToPt(fi.m_offset.Value)' sInheritance);  						return true;  					}  					fInherited = fi.m_offset.IsInherited || fi.m_superSub.IsInherited;  					break;  				case "text-decoration":  					if (fi.m_underline.ValueIsSet)  					{  						m_writer.WriteLine("    text-decoration: {0};{1}"'  							(fi.m_underline.Value == FwUnderlineType.kuntNone ? "none" : "underline")' sInheritance);  						return true;  					}  					fInherited = fi.m_underline.IsInherited;  					break;  			}
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaStyleInfoToCss,The following statement contains a magic number: firstLineIndentAdjusted = firstLineIndentAdjusted/3;
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaStyleInfoToCss,The following statement contains a magic number: m_writer.WriteLine("    line-height: {0}%;"' lhi.m_lineHeight / 100);
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ConvertMptToPt,The following statement contains a magic number: int pt = mpt / 1000;
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ConvertMptToPt,The following statement contains a magic number: int frac = Math.Abs(mpt) % 1000;
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,FinalizeXhtml,The following statement contains a magic number: int idxMin = idxClass + 8;
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,FinalizeXhtml,The following statement contains a magic number: int idxLang = idxLim + 8;
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,InsertHtmlNamespace,The following statement contains a magic number: sLine = sLine.Insert(idxHtml + 5' " xmlns=\"http://www.w3.org/1999/xhtml\"");
Magic Number,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,ExtractText,The following statement contains a magic number: int horizon = 30;
Missing Default,SIL.FieldWorks.Common.Framework,StylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\StylesXmlAccessor.cs,InterpretBulNumSchemeAttribute,The following switch statement is missing a default case: switch (sScheme)  			{  				case "None":		return (int)VwBulNum.kvbnNone;  				case "Arabic":		return (int)VwBulNum.kvbnArabic;  				case "Arabic01":	return (int)VwBulNum.kvbnArabic01;  				case "LetterUpper":	return (int)VwBulNum.kvbnLetterUpper;  				case "LetterLower":	return (int)VwBulNum.kvbnLetterLower;  				case "RomanUpper":	return (int)VwBulNum.kvbnRomanUpper;  				case "RomanLower":	return (int)VwBulNum.kvbnRomanLower;  				case "Custom":      return (int)VwBulNum.kvbnBullet;  			}
Missing Default,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteFontAttr,The following switch statement is missing a default case: switch (sAttr)  			{  				case "font-family":  					if (fi.m_fontName.ValueIsSet)  					{  						string sFontName = esi.RealFontNameForWs(ws);  						if (String.IsNullOrEmpty(sFontName))  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' fi.m_fontName.Value' sInheritance);  						else  							m_writer.WriteLine("    font-family: \"{0}\"' serif;{1}"' sFontName' sInheritance);  						return true;  					}  					fInherited = fi.m_fontName.IsInherited;  					break;  				case "font-size":  					bool superSub = fi.m_superSub.ValueIsSet && fi.m_superSub.Value != FwSuperscriptVal.kssvOff;  					if (fi.m_fontSize.ValueIsSet)  					{  						var pointSize = fi.m_fontSize.Value;  						if (superSub)  							pointSize = pointSize*55/100;  						m_writer.WriteLine("    font-size: {0}pt;{1}"' ConvertMptToPt(pointSize)' sInheritance);  						return true;  					}  					if (superSub)  					{  						m_writer.WriteLine("    font-size: 55%;{0}"' sInheritance);  						return true;  					}  					fInherited = fi.m_fontSize.IsInherited;  					break;  				case "font-weight":  					if (fi.m_bold.ValueIsSet)  					{  						m_writer.WriteLine("    font-weight: {0};{1}"' fi.m_bold.Value ? "bold" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_bold.IsInherited;  					break;  				case "font-style":  					if (fi.m_italic.ValueIsSet)  					{  						m_writer.WriteLine("    font-style: {0};{1}"' fi.m_italic.Value ? "italic" : "normal"' sInheritance);  						return true;  					}  					fInherited = fi.m_italic.IsInherited;  					break;  				case "color":  					if (fi.m_fontColor.ValueIsSet)  					{  						//Black as a font color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_fontColor.Value != Color.Black || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    color: rgb({0}'{1}'{2});{3}"'  											   fi.m_fontColor.Value.R'  											   fi.m_fontColor.Value.G'  											   fi.m_fontColor.Value.B'  											   sInheritance);  						}  						return true;  					}  					fInherited = fi.m_fontColor.IsInherited;  					break;  				case "background-color":  					if (fi.m_backColor.ValueIsSet)  					{  						//White as a background color is a default setting' we will ignore it (LT-10891)  						//however' if it is explicitly set we need to include it.  						if (fi.m_backColor.Value != Color.White || fi.m_fontColor.IsExplicit)  						{  							m_writer.WriteLine("    background-color: rgb({0}'{1}'{2});{3}"'  											   fi.m_backColor.Value.R'  											   fi.m_backColor.Value.G'  											   fi.m_backColor.Value.B'  											   sInheritance);  						}  					return true;  					}  					fInherited = fi.m_backColor.IsInherited;  					break;  				case "vertical-align":  					if (fi.m_superSub.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0};{1}"' GetVerticalAlign(fi.m_superSub.Value)' sInheritance);  						return true;  					}  					if (fi.m_offset.ValueIsSet)  					{  						m_writer.WriteLine("    vertical-align: {0}pt;{1}"' ConvertMptToPt(fi.m_offset.Value)' sInheritance);  						return true;  					}  					fInherited = fi.m_offset.IsInherited || fi.m_superSub.IsInherited;  					break;  				case "text-decoration":  					if (fi.m_underline.ValueIsSet)  					{  						m_writer.WriteLine("    text-decoration: {0};{1}"'  							(fi.m_underline.Value == FwUnderlineType.kuntNone ? "none" : "underline")' sInheritance);  						return true;  					}  					fInherited = fi.m_underline.IsInherited;  					break;  			}
Missing Default,SIL.FieldWorks.Common.Framework,XhtmlHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\Framework\XhtmlHelper.cs,WriteParaStyleInfoToCss,The following switch statement is missing a default case: switch (esi.Alignment)  				{  					case FwTextAlign.ktalCenter:  						m_writer.WriteLine("    text-align: center;");  						break;  					case FwTextAlign.ktalJustify:  						m_writer.WriteLine("    text-align: justify;");  						break;  					case FwTextAlign.ktalLeft:  						m_writer.WriteLine("    text-align: left;");  						break;  					case FwTextAlign.ktalRight:  						m_writer.WriteLine("    text-align: right;");  						break;  					case FwTextAlign.ktalLeading:  						m_writer.WriteLine("    /*text-align: leading;*/");  						m_writer.WriteLine("    text-align: {0};"' sLeading);  						break;  					case FwTextAlign.ktalTrailing:  						m_writer.WriteLine("    /*text-align: trailing;*/");  						m_writer.WriteLine("    text-align: {0};"' sTrailing);  						break;  				}
