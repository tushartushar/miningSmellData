Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The method has 113 lines of code.
Complex Method,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,Cyclomatic complexity of the method is 27
Complex Method,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,CacheUndoAction,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,CacheObject,Cyclomatic complexity of the method is 11
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,IsParagraphProps,The method has 6 parameters. Parameters: vwsel' hvoText' tagText' vqvps' ihvoAnchor' ihvoEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,GetParagraphProps,The method has 7 parameters. Parameters: vwsel' hvoText' tagText' vqvps' ihvoFirst' ihvoLast' vqttp
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,OnInsertDiffParas,The method has 6 parameters. Parameters: prootb' ttpDest' cPara' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,OnInsertDiffPara,The method has 5 parameters. Parameters: prootb' ttpDest' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,RequestSelectionAtEndOfUow,The method has 10 parameters. Parameters: rootb' ihvoRoot' cvlsi' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProviderViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,MakeRoot,The method has 5 parameters. Parameters: hvoRoot' flid' frag' hvoDefaultWs' vc
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleStyleSheet,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,PutStyle,The method has 9 parameters. Parameters: bstrName' bstrUsage' hvoStyle' hvoBasedOn' hvoNext' nType' fBuiltIn' fModified' _ttp
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelectionHelperTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,CheckSelectionHelperValues,The method has 14 parameters. Parameters: type' selectionHelper' ihvoRoot' nPrevProps' ich' nWs' fAssocPrev' nLevels' tag1' cpropPrev1' ihvo1' tag0' cpropPrev0' ihvo0
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelectionHelperTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection,The method has 8 parameters. Parameters: cPropPrevFootnoteVec' iFootnote' cPropPrevParaVec' iPara' cPropPrevParaContents' ichAnchor' ichEnd' fAnchor
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelectionHelperTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeSelection,The method has 6 parameters. Parameters: cPropPrevFootnoteVec' iFootnote' cPropPrevParaVec' iPara' ichAnchor' ichEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,SimulateKeypress,The method has 6 parameters. Parameters: ibusCommunicator' keys' expectedDocument' expectedSelectionText' expectedAnchor' expectedEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,CorrectPlacementOfPreedit,The method has 7 parameters. Parameters: input' anchor' end' expectedText' expectedPreedit' expectedAnchor' expectedEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,GetHardAndSoftParaProps,The method has 5 parameters. Parameters: cttpMax' _rgpttpPara' _rgpttpHard' _rgpvpsSoft' _cttp
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,TextSelInfo,The method has 7 parameters. Parameters: fEndPoint' _ptss' _ich' _fAssocPrev' _hvoObj' _tag' _ws
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,PropInfo,The method has 7 parameters. Parameters: fEndPoint' ilev' _hvoObj' _tag' _ihvo' _cpropPrevious' _pvps
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,AllTextSelInfo,The method has 11 parameters. Parameters: _ihvoRoot' cvlsi' _rgvsli' _tagTextProp' _cpropPrevious' _ichAnchor' _ichEnd' _ws' _fAssocPrev' _ihvoEnd' _pttp
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,AllSelEndInfo,The method has 10 parameters. Parameters: fEndPoint' _ihvoRoot' cvlsi' _rgvsli' _tagTextProp' _cpropPrevious' _ich' _ws' _fAssocPrev' _pttp
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyVwSelection,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,Location,The method has 7 parameters. Parameters: _vg' rcSrc' rcDst' _rdPrimary' _rdSecondary' _fSplit' _fEndBeforeAnchor
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,VecProp,The method has 5 parameters. Parameters: hvo' tag' chvoMax' _chvo' _rghvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,BinaryPropRgb,The method has 5 parameters. Parameters: obj' tag' _rgb' cbMax' _cb
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,UnicodePropRgch,The method has 5 parameters. Parameters: obj' tag' _rgch' cchMax' _cch
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,InsertNew,The method has 5 parameters. Parameters: hvoObj' tag' ihvo' chvo' _ss
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MoveOwnSeq,The method has 7 parameters. Parameters: hvoSrcOwner' tagSrc' ihvoStart' ihvoEnd' hvoDstOwner' tagDst' ihvoDstStart
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MoveOwn,The method has 6 parameters. Parameters: hvoSrcOwner' tagSrc' hvo' hvoDstOwner' tagDst' ihvoDstStart
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,Replace,The method has 6 parameters. Parameters: hvoObj' tag' ihvoMin' ihvoLim' _rghvo' chvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,PropChanged,The method has 7 parameters. Parameters: _nchng' _ct' hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,InsertRelExtra,The method has 5 parameters. Parameters: hvoSrc' tag' ihvo' hvoDst' bstrExtra
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyDataAccess,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MoveString,The method has 10 parameters. Parameters: hvoSource' flidSrc' wsSrc' ichMin' ichLim' hvoDst' flidDst' wsDst' ichDest' fDstIsNew
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,SetRootObjects,The method has 5 parameters. Parameters: _rghvo' _rgpvwvc' _rgfrag' _ss' chvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MakeTextSelection,The method has 12 parameters. Parameters: ihvoRoot' cvlsi' _rgvsli' tagTextProp' cpropPrevious' ichAnchor' ichEnd' ws' fAssocPrev' ihvoEnd' _ttpIns' fInstall
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MakeTextSelInObj,The method has 10 parameters. Parameters: ihvoRoot' cvsli' _rgvsli' cvsliEnd' _rgvsliEnd' fInitial' fEdit' fRange' fWholeObj' fInstall
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MakeSelInObj,The method has 5 parameters. Parameters: ihvoRoot' cvsli' _rgvsli' tag' fInstall
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MakeSelAt,The method has 5 parameters. Parameters: xd' yd' rcSrc' rcDst' fInstall
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,MakeSelInBox,The method has 7 parameters. Parameters: _selInit' fEndPoint' iLevel' iBox' fInitial' fRange' fInstall
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,get_IsClickInObject,The method has 5 parameters. Parameters: xd' yd' rcSrc' rcDst' _odt
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,get_IsClickInOverlayTag,The method has 9 parameters. Parameters: xd' yd' rcSrc1' rcDst1' _iGuid' _bstrGuids' _rcTag' _rcAllTags' _fOpeningTag
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,DummyRootBox,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,DrawRoot2,The method has 6 parameters. Parameters: _vg' rcSrc' rcDst' fDrawSel' ysTop' dysHeight
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,UpdatePreedit,The method has 8 parameters. Parameters: text' selectionStart' selectionEnd' composition' cursorPos' expectedText' expectedSelectionStart' expectedSelectionEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,UpdatePreedit_SecondUpdatePreedit,The method has 10 parameters. Parameters: text' selectionStart' selectionEnd' firstComposition' firstCursorPos' composition' cursorPos' expectedText' expectedSelectionStart' expectedSelectionEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,CommitOrReset,The method has 5 parameters. Parameters: underline' expectedRetVal' expectedText' expectedSelStart' expectedSelEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,CommitText,The method has 9 parameters. Parameters: text' selectionStart' selectionEnd' composition' cursorPos' commitText' expectedText' expectedSelectionStart' expectedSelectionEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,DeleteSurroundingText,The method has 5 parameters. Parameters: cursorPos' offset' nChars' expectedText' expectedCursorPos
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,UnicodePropRgch,The method has 5 parameters. Parameters: obj' tag' rgch' cchMax' cch
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,BinaryPropRgb,The method has 5 parameters. Parameters: obj' tag' rgb' cbMax' cb
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,VecProp,The method has 5 parameters. Parameters: obj' tag' chvoMax' chvo' rghvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,CacheReplace,The method has 6 parameters. Parameters: hvoObj' tag' ihvoMin' ihvoLim' rghvo' chvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,MoveOwnSeq,The method has 7 parameters. Parameters: hvoSrcOwner' tagSrc' ihvoStart' ihvoEnd' hvoDstOwner' tagDst' ihvoDstStart
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,MoveOwn,The method has 6 parameters. Parameters: hvoSrcOwner' tagSrc' hvo' hvoDstOwner' tagDst' ihvoDstStart
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,Replace,The method has 6 parameters. Parameters: hvoObj' tag' ihvoMin' ihvoLim' rghvo' chvo
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,InsertRelExtra,The method has 5 parameters. Parameters: hvoSrc' tag' ihvo' hvoDst' bstrExtra
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,InsertNew,The method has 5 parameters. Parameters: hvoObj' tag' ihvo' chvo' _ss
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,PropChanged,The method has 7 parameters. Parameters: _nchng' _ct' hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,UndoableRealDataCache,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,MoveString,The method has 10 parameters. Parameters: hvoSource' flidSrc' wsSrc' ichMin' ichLim' hvoDst' flidDst' wsDst' ichDest' fDstIsNew
Long Parameter List,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,CacheInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,CacheInfo,The method has 5 parameters. Parameters: type' hvo' flid' ws' obj
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The length of the statement  "			int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2); " is 139.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The length of the statement  "			int hvoTitlePara1 = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 0); " is 146.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The length of the statement  "			m_cache.SetUnknown(hvoTitlePara1' SimpleRootsiteTestsConstants.kflidParaProperties' TsStringUtils.MakeProps("Title"' m_wsEng)); " is 127.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The length of the statement  "			int hvoTitlePara2 = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 1); " is 146.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The length of the statement  "			m_cache.SetUnknown(hvoTitlePara2' SimpleRootsiteTestsConstants.kflidParaProperties' TsStringUtils.MakeProps("Conclusion"' m_wsEng)); " is 132.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The length of the statement  "			int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2); " is 139.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The length of the statement  "			int hvoTitlePara1 = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 0); " is 146.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The length of the statement  "			m_cache.SetUnknown(hvoTitlePara1' SimpleRootsiteTestsConstants.kflidParaProperties' TsStringUtils.MakeProps("Title"' m_wsEng)); " is 127.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The length of the statement  "			int hvoTitlePara2 = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 1); " is 146.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The length of the statement  "			m_cache.SetUnknown(hvoTitlePara2' SimpleRootsiteTestsConstants.kflidParaProperties' TsStringUtils.MakeProps("Title"' m_wsEng)); " is 127.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextFlid,The length of the statement  "			int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2); " is 139.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextFlid,The length of the statement  "			int hvoTitlePara = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 0); " is 145.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootsiteTestsBase<T>,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,AddFootnoteAndParagraph,The length of the statement  "			int hvoFootnote = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStFootnote' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocFootnotes' cTexts); " is 154.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootsiteTestsBase<T>,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,AddFootnoteAndParagraph,The length of the statement  "			int hvoPara = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' hvoFootnote' SimpleRootsiteTestsConstants.kflidTextParas' 0); " is 143.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,SetLocation,The length of the statement  "			}).IgnoreArguments().OutRef(new Rect(rcPrimary.left - scrollPos.X' rcPrimary.top - scrollPos.Y' rcPrimary.right - scrollPos.X' " is 126.
Long Statement,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,SetupInitialText,The length of the statement  "			int hvoPara = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStTxtPara' m_hvoRoot' SimpleRootsiteTestsConstants.kflidTextParas' cParas); " is 146.
Empty Catch Block,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleBasicView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleBasicView.cs,MakeRoot,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProviderViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,ShowForm,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,RenderEngineFactoryTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\RenderEngineFactoryTests.cs,get_Renderer_Uniscribe,The following statement contains a magic number: var chrp = new LgCharRenderProps { ws = ws.Handle' szFaceName = new ushort[32] };
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,RenderEngineFactoryTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\RenderEngineFactoryTests.cs,get_Renderer_Graphite,The following statement contains a magic number: var chrp = new LgCharRenderProps { ws = ws.Handle' szFaceName = new ushort[32] };
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProviderView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProviderView,The following statement contains a magic number: Width = 300;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProviderView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProviderView,The following statement contains a magic number: Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProviderView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProviderView,The following statement contains a magic number: Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProvider_MultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProvider_MultiStringView,The following statement contains a magic number: Width = 300;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProvider_MultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProvider_MultiStringView,The following statement contains a magic number: Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootSiteDataProvider_MultiStringView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteDataProviderView.cs,SimpleRootSiteDataProvider_MultiStringView,The following statement contains a magic number: Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleViewVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleViewVc.cs,Display,The following statement contains a magic number: switch(frag)  			{  				case 1: // the root; display the subitems' first using non-lazy view' then lazy one.  					if ((m_displayType & DisplayType.kFootnoteDetailsSeparateParas) == DisplayType.kFootnoteDetailsSeparateParas)  						vwenv.AddObjVecItems(m_flid' this' 10);  					if ((m_displayType & DisplayType.kFootnoteDetailsSinglePara) == DisplayType.kFootnoteDetailsSinglePara)  						vwenv.AddObjVecItems(m_flid' this' 11);  					else  					{  						if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						{  							vwenv.AddObjVecItems(m_flid' this' 3);  						}  						if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						{  							vwenv.AddObjVecItems(m_flid' this' 2);  						}  					}  					if ((m_displayType & DisplayType.kTitle) == DisplayType.kTitle)  						vwenv.AddObjProp(SimpleRootsiteTestsConstants.kflidDocTitle' this' 3);  					if (m_displayType == DisplayType.kOuterObjDetails)  						vwenv.AddObjVecItems(m_flid' this' 6);  					break;  				case 2: // An StText' display paragraphs lazily  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddLazyVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 3: // An StText' display paragraphs not lazily.  					if ((m_displayType & DisplayType.kWithTopMargin) == DisplayType.kWithTopMargin)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 4);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					if ((m_displayType & DisplayType.kDuplicateParagraphs) != 0)  						vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 5);  					break;  				case 4: // StTxtPara' display contents with top margin  					OpenParaIfNeeded(vwenv' hvo);  					vwenv.set_IntProperty((int)FwTextPropType.ktptMarginTop'  						(int)FwTextPropVar.ktpvMilliPoint' kMarginTop);  					AddParagraphContents(vwenv);  					break;  				case 5: // StTxtPara' display contents without top margin  					OpenParaIfNeeded(vwenv' hvo);  					AddParagraphContents(vwenv);  					break;  				case 6: // StTxtPara' display details of our outer object  					int hvoOuter' tag' ihvo;  					vwenv.GetOuterObject(vwenv.EmbeddingLevel - 1' out hvoOuter' out tag' out ihvo);  					ITsString tss = TsStringUtils.MakeString("Hvo = " + hvoOuter + "; Tag = " + tag + "; Ihvo = " + ihvo'  						m_wsDefault);  					vwenv.AddString(tss);  					break;  				case SimpleRootsiteTestsConstants.kflidDocDivisions:  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocDivisions' this'  						SimpleRootsiteTestsConstants.kflidSectionStuff);  					break;  				case SimpleRootsiteTestsConstants.kflidSectionStuff:  					if ((m_displayType & DisplayType.kNormal) == DisplayType.kNormal)  						vwenv.AddObjProp(frag' this' 3);  					if ((m_displayType & DisplayType.kLazy) == DisplayType.kLazy)  						vwenv.AddObjProp(frag' this' 2);  					break;  				case 7: // ScrBook  					vwenv.OpenDiv();  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidDocFootnotes' this' 8);  					vwenv.CloseDiv();  					break;  				case 8: // StFootnote  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 9: // StTxtPara  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					break;  				case 10:  					// Display a Footnote by displaying its "FootnoteMarker" in a paragraph  					// by itself' followed by the sequence of paragraphs.  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this'  						9);  					break;  				case 11:  					// Display a Footnote by displaying its "FootnoteMarker" followed by the  					// contents of its first paragraph (similar to the way footnotes are displayed in  					// real life.  					vwenv.AddObjVecItems(SimpleRootsiteTestsConstants.kflidTextParas' this' 12);  					break;  				case 12: // Footnote paragraph with marker  					vwenv.OpenMappedTaggedPara();  					// The footnote marker is not editable.  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidFootnoteMarker' null);    					// add a read-only space after the footnote marker  					vwenv.set_IntProperty((int)FwTextPropType.ktptEditable'  						(int)FwTextPropVar.ktpvEnum'  						(int)TptEditable.ktptNotEditable);  					ITsIncStrBldr strBldr = TsStringUtils.MakeIncStrBldr();  					strBldr.Append(" ");  					vwenv.AddString(strBldr.GetString());  					vwenv.AddStringProp(SimpleRootsiteTestsConstants.kflidParaContents' null);  					vwenv.CloseParagraph();  					break;  				default:  					throw new ApplicationException("Unexpected frag in DummyBasicViewVc");  			}
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The following statement contains a magic number: int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithDifferentStyles,The following statement contains a magic number: Assert.AreEqual(2' m_cache.get_VecSize(hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The following statement contains a magic number: int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The following statement contains a magic number: Assert.AreEqual(4' m_cache.get_VecSize(hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The following statement contains a magic number: Assert.AreEqual(hvoTitlePara2 + 2' m_cache.get_VecItem(hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 1));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The following statement contains a magic number: Assert.AreEqual(hvoTitlePara1' m_cache.get_VecItem(hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 2));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,PasteParagraphsWithSameStyle,The following statement contains a magic number: Assert.AreEqual(hvoTitlePara2' m_cache.get_VecItem(hvoTitle' SimpleRootsiteTestsConstants.kflidTextParas' 3));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextInstanceOfSameParaContents,The following statement contains a magic number: SetSelection(0' 0' 0' 0' 1' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextInstanceOfSameParaContents,The following statement contains a magic number: SetSelection(0' 0' 0' 0' 1' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextInstanceOfSameParaContents,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				2' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 0'  				SimpleRootsiteTestsConstants.kflidTextParas' 0' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextInstanceOfSameParaContents,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				2' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 0'  				SimpleRootsiteTestsConstants.kflidTextParas' 0' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextText,The following statement contains a magic number: SetSelection(0' 0' 1' 0' 2' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextText,The following statement contains a magic number: SetSelection(0' 0' 1' 0' 2' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextText,The following statement contains a magic number: SetSelection(0' 0' 1' 0' 2' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextText,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 0' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextFlid,The following statement contains a magic number: int hvoTitle = m_cache.MakeNewObject(SimpleRootsiteTestsConstants.kclsidStText' m_hvoRoot' SimpleRootsiteTestsConstants.kflidDocTitle' -2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextFlid,The following statement contains a magic number: SetSelection(0' 1' 0' 0' 2' 0' 0' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_NextFlid,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocTitle' 0' 0'  				SimpleRootsiteTestsConstants.kflidTextParas' 0' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 2' 6' 0' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 2' 6' 0' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				2' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				2' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				2' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				2' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_LastParaInView,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				2' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_MultiParaRangeSelection,The following statement contains a magic number: SetSelection(0' 0' 0' 0' 2' 1' 1' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_MultiParaRangeSelection,The following statement contains a magic number: SetSelection(0' 1' 0' 0' 1' 12' 12' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_MultiParaRangeSelection,The following statement contains a magic number: SetSelection(0' 1' 0' 0' 1' 12' 12' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GoToNextPara_MultiParaRangeSelection,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 0' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 0'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,EditingHelperTests_Clipboard,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\EditingHelperTests.cs,GetSetClipboard,The following statement contains a magic number: Assert.AreEqual(2' tss.RunCount);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleStyleSheet,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,get_NthStyle,The following statement contains a magic number: return 1234;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootsiteTestsBase<T>,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,ShowForm,The following statement contains a magic number: m_basicView.Width = 300;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootsiteTestsBase<T>,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,ShowForm,The following statement contains a magic number: m_basicView.Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SimpleRootsiteTestsBase<T>,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootsiteTestsBase.cs,ShowForm,The following statement contains a magic number: m_basicView.Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelectionHelperTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,CheckSelectionHelperValues,The following statement contains a magic number: nLevels >= 2
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelectionHelperTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection,The following statement contains a magic number: m_SelectionHelper.SetNumberOfLevels(type' 2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetSelectionInfoTestValues,The following statement contains a magic number: Assert.AreEqual(2' selectionHelper.NumberOfLevels);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 6);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 6);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 6);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_IPInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 6' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 7);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 7);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: MakeSelection(0' 2' 1' 0' 6' 7);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 7' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 7' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeInSamePara,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0'  				0' 7' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 3' 3' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 3' 3' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 3' 3' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				3' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				3' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_RangeDifferentParas,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				3' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: SetSelection(0' 2' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' selectionHelper' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				6' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				6' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,SetSelection_DifferingLevelInfos,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' selectionHelper' 0' 0'  				6' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 2'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: vwsel = MakeSelection(0' 2' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: vwsel = MakeSelection(0' 2' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: vwsel = MakeSelection(0' 4' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: vwsel = MakeSelection(0' 4' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetFirstWsOfSelection,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetWsOfEntireSelection_AssocPrev,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetWsOfEntireSelection_AssocPrev,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetWsOfEntireSelection_AssocAfter,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetWsOfEntireSelection_AssocAfter,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,GetWsOfEntireSelection_Range,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 0' 9);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: IVwSelection vwsel = MakeSelection(0' 0' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: vwsel = MakeSelection(0' 0' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: vwsel = MakeSelection(0' 0' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: vwsel = MakeSelection(0' 0' 0' 0' 0' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: IVwSelection vwselFra = MakeSelection(0' 2' 1' 0' 3' 3);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ReduceSelectionToIp,The following statement contains a magic number: Assert.AreEqual(3' selHelper.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,RestoreSelectionAndScrollPos_MiddleOfWindow,The following statement contains a magic number: MakeSelection(0' 3' 1' 0' 2' 2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,RestoreSelectionAndScrollPos_MiddleOfWindow,The following statement contains a magic number: MakeSelection(0' 3' 1' 0' 2' 2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,RestoreSelectionAndScrollPos_MiddleOfWindow,The following statement contains a magic number: MakeSelection(0' 3' 1' 0' 2' 2);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,SelHelperTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,RestoreSelectionAndScrollPos_BottomOfWindow,The following statement contains a magic number: m_basicView.CallOnMouseDown(new MouseEventArgs(MouseButtons.Left' 1' 10'  				m_basicView.ClientRectangle.Height' 0));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingIPPos,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 2' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingIPPos,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 2' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingIPPos,The following statement contains a magic number: Assert.AreEqual(2' newSel.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingIPPos,The following statement contains a magic number: Assert.AreEqual(2' newSel.IchEnd);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,AfterEndOfLine,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,AfterEndOfLine,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EmptyLine,The following statement contains a magic number: SetSelection(0' 2' 0' 0' 0' 5' 5' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EmptyLine,The following statement contains a magic number: SetSelection(0' 2' 0' 0' 0' 5' 5' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EmptyLine,The following statement contains a magic number: SetSelection(0' 2' 0' 0' 0' 5' 5' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingRange,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 5' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingRange,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 5' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingRange,The following statement contains a magic number: Assert.AreEqual(2' newSel.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingRange,The following statement contains a magic number: Assert.AreEqual(5' newSel.IchEnd);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EndpointAfterEndOfLine,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 3' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EndpointAfterEndOfLine,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 3' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EndpointAfterEndOfLine,The following statement contains a magic number: Assert.AreEqual(3' newSel.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingEndBeforeAnchor,The following statement contains a magic number: SetSelection(1' 0' 1' 0' 0' 5' 4' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingEndBeforeAnchor,The following statement contains a magic number: SetSelection(1' 0' 1' 0' 0' 5' 4' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingEndBeforeAnchor,The following statement contains a magic number: Assert.AreEqual(5' newSel.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,ExistingEndBeforeAnchor,The following statement contains a magic number: Assert.AreEqual(4' newSel.IchEnd);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeBest_AnchorAfterEndOfLine,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 88' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeBest_AnchorAfterEndOfLine,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 88' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeBest_AnchorAfterEndOfLine,The following statement contains a magic number: Assert.AreEqual(2' newSel.IchEnd);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 2' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 2' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				2' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_ExistingAnchorBeforeEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				2' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				SimpleBasicView.kSecondParaEng.Length' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 77' 77' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 77' 77' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' SimpleBasicView.kSecondParaEng.Length' 0' false' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_NonExistingAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				1' 0' true' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 2' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0' 0'  				2' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0' 0'  				2' 0' true' 2'  SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' 99' 99' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' SimpleBasicView.kSecondParaEng.Length' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeNonExistingAnchor,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterNonExistingEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 77' 77' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterNonExistingEnd,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 77' 77' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterNonExistingEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 1' 0' true' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterNonExistingEnd,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				SimpleBasicView.kSecondParaEng.Length' 0' false' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EndpointAtEndOfLine,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 3' SimpleBasicView.kSecondParaEng.Length' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,EndpointAtEndOfLine,The following statement contains a magic number: Assert.AreEqual(3' newSel.IchAnchor);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeBest_AnchorAtEndOfLine,The following statement contains a magic number: SetSelection(1' 1' 1' 0' 0' SimpleBasicView.kSecondParaEng.Length' 2' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MakeBest_AnchorAtEndOfLine,The following statement contains a magic number: Assert.AreEqual(2' newSel.IchEnd);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndAtEOT,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndAtEOT,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				SimpleBasicView.kSecondParaEng.Length' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' SimpleBasicView.kSecondParaEng.Length' 0' false' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				1' 0' true' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchorAtEOT,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchorAtEOT,The following statement contains a magic number: SetSelection(0' 1' 1' 0' 0' 6' 6' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchorAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' SimpleBasicView.kSecondParaEng.Length' 0' true' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchorAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_EndBeforeAnchorAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				6' 0' false' 2' SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterEndAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.Anchor' newSel' 0'  				0' 1' 0' true' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 1' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,MakeBestTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SelectionHelperTests.cs,MultiSection_AnchorAfterEndAtEOT,The following statement contains a magic number: CheckSelectionHelperValues(SelectionHelper.SelLimitType.End' newSel' 0' 0'  				SimpleBasicView.kSecondParaEng.Length' 0' false' 2'  				SimpleRootsiteTestsConstants.kflidDocFootnotes' 0' 1'  				SimpleRootsiteTestsConstants.kflidTextParas' 1' 0);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,Setup,The following statement contains a magic number: rootb.Expect(rb => rb.Height).Return(10000);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,Setup,The following statement contains a magic number: m_site.ScrollMinSize = new Size(m_site.ClientRectangle.Width' 10000);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IsInClientWindow,The following statement contains a magic number: return endPos >= yScrollPos + (fRange && !fEndBeforeAnchor ? 2 : 1) * m_site.LineHeight &&  				endPos <= yScrollPos + m_site.ClientHeight - (fRange && fEndBeforeAnchor ? 2 : 1) * m_site.LineHeight;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollTestsBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IsInClientWindow,The following statement contains a magic number: return endPos >= yScrollPos + (fRange && !fEndBeforeAnchor ? 2 : 1) * m_site.LineHeight &&  				endPos <= yScrollPos + m_site.ClientHeight - (fRange && fEndBeforeAnchor ? 2 : 1) * m_site.LineHeight;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPVisibleWhenFlagIsSetMiddleWindow,The following statement contains a magic number: SetLocation(new Rect(0' 50' 0' 50 + m_site.LineHeight)' false' new Point(0' 0)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPVisibleWhenFlagIsSetMiddleWindow,The following statement contains a magic number: SetLocation(new Rect(0' 50' 0' 50 + m_site.LineHeight)' false' new Point(0' 0)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false' new Point(0' 0)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false' new Point(0' 0)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false' new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false' new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false' new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: m_site.ScrollMinSize = new Size(m_site.ClientRectangle.Width' 10000);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisible,The following statement contains a magic number: m_site.ScrollPosition = new Point(0' 400);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: m_site.ScrollMinSize = new Size(m_site.ClientRectangle.Width' 10000);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: m_site.ScrollPosition = new Point(0' 400);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901 - m_site.ClientHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901 - m_site.ClientHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901 - m_site.ClientHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901 - m_site.ClientHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901 - m_site.ClientHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostAboveWindowAnchorAbove,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1099)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostAboveWindowAnchorAbove,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1099)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostAboveWindowAnchorAbove,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1099)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostAboveWindowAnchorAbove,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1099)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IsSelectionVisibleTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_IsSelectionVisibleTests.cs,RangeSelEndAlmostAboveWindowAnchorAbove,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1099)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPVisible,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 950)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPVisible,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 950)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPVisible,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 950)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPVisible,The following statement contains a magic number: Assert.AreEqual(new Point(0'- 950)' m_site.ScrollPosition'  				"Scroll position should not change if IP is already visible");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false' new Point(0'0)'  				false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false' new Point(0'0)'  				false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPBelowWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(5000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 5001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostBelowWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(5000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyBelowWindow,The following statement contains a magic number: SetLocation(new Rect(0' 5000' 0' 5000 + m_site.LineHeight)' false'  				new Point(0' 4999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyBelowWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(5000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 2000)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 1001)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPPartlyAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(0' 1000' 0' 1000 + m_site.LineHeight)' false'  				new Point(0' 999 + m_site.LineHeight)' false);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,IPAlmostAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1000));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllVisible,The following statement contains a magic number: Assert.AreEqual(new Point(0' -1000)' m_site.ScrollPosition'  				"Scroll position should not change if selection is already visible");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' false' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisible,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1100));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: SetLocation(new Rect(30' 1020' 60' 1100)' true' new Point(0' 400)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAllNotVisibleEndBeforeAnchor,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1020));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorAboveWindow,The following statement contains a magic number: Assert.AreEqual(new Point(0' -1000)' m_site.ScrollPosition'  				"Scroll position should not change if end of selection is already visible");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(900));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 901)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndPartlyAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(900));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 899 + m_site.LineHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 899 + m_site.LineHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 899 + m_site.LineHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 899 + m_site.LineHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 899 + m_site.LineHeight)'  				true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostAboveWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(900));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelAnchorBelowWindow,The following statement contains a magic number: Assert.AreEqual(new Point(0' -850)' m_site.ScrollPosition'  				"Scroll position should not change if end of selection is already visible");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true'  				new Point(0' 901 - m_site.ClientHeight)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true'  				new Point(0' 901 - m_site.ClientHeight)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true'  				new Point(0' 901 - m_site.ClientHeight)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true'  				new Point(0' 901 - m_site.ClientHeight)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' true'  				new Point(0' 901 - m_site.ClientHeight)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndAlmostBelowWindowAnchorBelow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(900));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1100)' false' new Point(0' 850)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelEndBelowWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1100));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: SetLocation(new Rect(30' 900' 60' 1300)' false' new Point(0' 1000)' true);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,ScrollSelectionIntoView_Default,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\SimpleRootSiteTests_ScrollSelectionIntoView.cs,RangeSelBothOutsideWindow,The following statement contains a magic number: Assert.IsTrue(IsInClientWindow(1300));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,Focus_Unfocused_KeypressAcceptedAsNormal,The following statement contains a magic number: Assert.AreEqual(2' dummySelection.Anchor' "Selection anchor");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,Focus_Unfocused_KeypressAcceptedAsNormal,The following statement contains a magic number: Assert.AreEqual(2' dummySelection.End' "Selection end");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,CorrectPlacementOfTypedChars,The following statement contains a magic number: Assert.That(preedit.Anchor' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,CorrectPlacementOfTypedChars,The following statement contains a magic number: Assert.That(preedit.End' Is.EqualTo(2));
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,KeyboardThatSendsBackspacesAsForwardKeyEvents,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests.cs,ProcessKeyEvent,The following statement contains a magic number: int mysteryValue = 22;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,ShowThisForm,The following statement contains a magic number: m_basicView.Width = 300;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,ShowThisForm,The following statement contains a magic number: m_basicView.Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,ShowThisForm,The following statement contains a magic number: m_basicView.Height = 307 - 25;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,ShowThisForm,The following statement contains a magic number: m_basicView.MakeRoot(m_hvoRoot' SimpleRootsiteTestsConstants.kflidTextParas' 3' m_wsFrn);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_Ipa,The following statement contains a magic number: Assert.That(selHelper.IchAnchor' Is.EqualTo(2)' "SelectionStart");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_Ipa,The following statement contains a magic number: Assert.That(selHelper.IchEnd' Is.EqualTo(2)' "SelectionEnd");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_IpaTwoCommits,The following statement contains a magic number: const int KeySymBackspace = 65288;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_IpaTwoCommits,The following statement contains a magic number: const int ScanCodeBackspace = 14;
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_IpaTwoCommits,The following statement contains a magic number: Assert.That(selHelper.IchAnchor' Is.EqualTo(2)' "SelectionStart");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,IbusRootSiteEventHandlerTests_Simple,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\IbusRootSiteEventHandlerTests_Simple.cs,Commit_IpaTwoCommits,The following statement contains a magic number: Assert.That(selHelper.IchEnd' Is.EqualTo(2)' "SelectionEnd");
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,CacheUndoAction,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,Undo,The following statement contains a magic number: RootBox.PropChanged(m_Before.Hvo' m_Before.Flid' 0' 1000' 1000);
Magic Number,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,CacheUndoAction,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,Undo,The following statement contains a magic number: RootBox.PropChanged(m_Before.Hvo' m_Before.Flid' 0' 1000' 1000);
Missing Default,SIL.FieldWorks.Common.RootSites.SimpleRootSiteTests,CacheUndoAction,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSiteTests\UndoableRealDataCache.cs,CacheObject,The following switch statement is missing a default case: switch (cacheInfo.Type)  				{  					case ObjType.Object:  						m_Cache.CacheUnknown(cacheInfo.Hvo' cacheInfo.Flid' cacheInfo.Object);  						break;  					case ObjType.BasicTsString:  						m_Cache.CacheStringProp(cacheInfo.Hvo' cacheInfo.Flid' cacheInfo.Object as ITsString);  						break;  					case ObjType.ExtendedTsString:  						m_Cache.CacheStringAlt(cacheInfo.Hvo' cacheInfo.Flid' cacheInfo.Ws' cacheInfo.Object as ITsString);  						break;  					case ObjType.ByteArray:  						byte[] array = cacheInfo.Object as byte[];  						m_Cache.CacheBinaryProp(cacheInfo.Hvo' cacheInfo.Flid' array' array.Length);  						break;  					case ObjType.String:  						var str = cacheInfo.Object as string;  						m_Cache.CacheUnicodeProp(cacheInfo.Hvo' cacheInfo.Flid' str' str.Length);  						break;  					case ObjType.Guid:  						m_Cache.CacheGuidProp(cacheInfo.Hvo' cacheInfo.Flid' (Guid)cacheInfo.Object);  						break;  					case ObjType.Int:  						m_Cache.CacheIntProp(cacheInfo.Hvo' cacheInfo.Flid' (int)cacheInfo.Object);  						break;  					case ObjType.Long:  						m_Cache.CacheInt64Prop(cacheInfo.Hvo' cacheInfo.Flid' (long)cacheInfo.Object);  						break;  					case ObjType.Bool:  						m_Cache.CacheBooleanProp(cacheInfo.Hvo' cacheInfo.Flid' (bool)cacheInfo.Object);  						break;  					case ObjType.Vector:  						int[] vector = cacheInfo.Object as int[];  						m_Cache.CacheVecProp(cacheInfo.Hvo' cacheInfo.Flid' vector' vector.Length);  						break;  					case ObjType.Time:  						m_Cache.CacheTimeProp(cacheInfo.Hvo' cacheInfo.Flid' (long)cacheInfo.Object);  						break;  				}
