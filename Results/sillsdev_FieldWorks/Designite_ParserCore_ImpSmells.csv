Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The method has 153 lines of code.
Long Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorphs,The method has 115 lines of code.
Long Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The method has 153 lines of code.
Complex Method,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,MorphologicalRuleNotApplied,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,ParseFailed,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,Cyclomatic complexity of the method is 35
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLexEntries,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLexEntryOfVariant,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMorphologicalRules,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadDerivAffixProcessRule,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorphs,Cyclomatic complexity of the method is 21
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsValidEnvironment,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadCircumfixAffixProcessAllomorph,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorph,Cyclomatic complexity of the method is 18
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,Cyclomatic complexity of the method is 18
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixTemplate,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadEndoCompoundingRule,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadRewriteRule,Cyclomatic complexity of the method is 18
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMetathesisRule,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNode,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadCharacterDefinitionTable,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,GetMorphs,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,GetMorphTypeString,Cyclomatic complexity of the method is 19
Complex Method,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateMorphemeElement,Cyclomatic complexity of the method is 17
Complex Method,SIL.FieldWorks.WordWorks.Parser,ParseFiler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseFiler.cs,ProcessAnalysis,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMsaElement,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteStemMsaXmlElement,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ParseWord,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ConvertFailures,Cyclomatic complexity of the method is 10
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,PhonologicalRuleNotApplied,The method has 5 parameters. Parameters: rule' subruleIndex' input' reason' failureObj
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,MorphologicalRuleNotApplied,The method has 5 parameters. Parameters: rule' subruleIndex' input' reason' failureObj
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,ParseFailed,The method has 5 parameters. Parameters: lang' word' reason' allomorph' failureObj
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateAllomorphElement,The method has 5 parameters. Parameters: name' form' msa' inflType' circumfix
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,ParserModelChangeListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserModelChangeListener.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMsaElement,The method has 6 parameters. Parameters: writer' cache' formID' msaID' type' wordType
Long Parameter List,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMorphInfoElements,The method has 6 parameters. Parameters: writer' cache' formID' msaID' wordType' props
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,AnalyzeWord,The length of the statement  "			input.CurrentTrace = new XElement("WordAnalysisTrace"' new XElement("InputWord"' input.Shape.ToString(lang.SurfaceStratum.CharacterDefinitionTable' true))); " is 156.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateMprFeaturesFailureElement,The length of the statement  "				new XElement("MprFeatures"' input.MprFeatures.Where(mf => mf.Group == group).Select(f => new XElement("MprFeature"' f)))' " is 121.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateMprFeaturesFailureElement,The length of the statement  "				new XElement("ConstrainingMprFeatrues"' feats.Where(mf => mf.Group == group).Select(f => new XElement("MprFeature"' f)))); " is 122.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateWordElement,The length of the statement  "				wordStr = analysis ? word.Shape.ToRegexString(word.Stratum.CharacterDefinitionTable' true) : word.Shape.ToString(word.Stratum.CharacterDefinitionTable' true); " is 158.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateMorphemeElement,The length of the statement  "			if (inflTypeID != 0 && !m_cache.ServiceLocator.GetInstance<ILexEntryInflTypeRepository>().TryGetObject(inflTypeID' out inflType)) " is 129.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateAllomorphElement,The length of the statement  "				return new XElement("Allomorph"' new XAttribute("id"' 0)' new XAttribute("type"' isPrefix ? MoMorphTypeTags.kMorphPrefix : MoMorphTypeTags.kMorphSuffix)' " is 153.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateAllomorphElement,The length of the statement  "						new XElement("HeadWord"' string.Format("Automatically generated null affix for the {0} irregularly inflected form"' nullInflType.Name.BestAnalysisAlternative.Text))' " is 165.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateAllomorphElement,The length of the statement  "						new XElement("Gloss"' (nullInflType.GlossPrepend.BestAnalysisAlternative.Text == "***" ? "" : nullInflType.GlossPrepend.BestAnalysisAlternative.Text) " is 149.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateAllomorphElement,The length of the statement  "							+ (nullInflType.GlossAppend.BestAnalysisAlternative.Text == "***" ? "" : nullInflType.GlossAppend.BestAnalysisAlternative.Text))' " is 129.
Long Statement,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,CreateAllomorphElement,The length of the statement  "			if (inflTypeID != 0 && !m_cache.ServiceLocator.GetInstance<ILexEntryInflTypeRepository>().TryGetObject(inflTypeID' out inflType)) " is 129.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (ICmPossibility prodRestrict in m_cache.LanguageProject.MorphologicalDataOA.ProdRestrictOA.ReallyReallyAllPossibilities) " is 128.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			var lexEntryInflTypesGroup = new MprFeatureGroup {Name = "lexEntryInflTypes"' MatchType = MprFeatureGroupMatchType.All}; " is 120.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (ILexEntryInflType inflType in m_cache.ServiceLocator.GetInstance<ILexEntryInflTypeRepository>().AllInstances()) " is 120.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			m_morphophonemic = new Stratum(m_table) {Name = "Morphophonemic"' MorphologicalRuleOrder = MorphologicalRuleOrder.Unordered}; " is 125.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "				foreach (IMoCompoundRule compoundRule in m_cache.LanguageProject.MorphologicalDataOA.CompoundRulesOS.Where(r => !r.Disabled)) " is 125.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (IMoInflAffixTemplate template in m_cache.ServiceLocator.GetInstance<IMoInflAffixTemplateRepository>().AllInstances().Where(t => !t.Disabled)) " is 150.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "				IMoInflAffixSlot[] slots = template.SuffixSlotsRS.Concat(template.PrefixSlotsRS.Reverse()).Where(s => s.Affixes.Any(msa => m_morphemes.ContainsKey(msa))).ToArray(); " is 164.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (IPhSegmentRule prule in m_cache.LanguageProject.PhonologicalDataOA.PhonRulesOS.Where(r => !r.Disabled).OrderBy(r => r.OrderNumber)) " is 140.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (IMoAlloAdhocProhib alloAdhocProhib in m_cache.ServiceLocator.GetInstance<IMoAlloAdhocProhibRepository>().AllInstances() " is 128.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The length of the statement  "			foreach (IMoMorphAdhocProhib morphAdhocProhib in m_cache.ServiceLocator.GetInstance<IMoMorphAdhocProhibRepository>().AllInstances() " is 131.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadRootAllomorph,The length of the statement  "					hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' LoadEnvironmentPattern(contexts.Item1' true)' " is 133.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorphs,The length of the statement  "				foreach (IMoAffixAllomorph prefixAllo in allos.OfType<IMoAffixAllomorph>().Where(a => a.MorphTypeRA.Guid == MoMorphTypeTags.kguidMorphPrefix)) " is 142.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorphs,The length of the statement  "					foreach (IMoAffixAllomorph suffixAllo in allos.OfType<IMoAffixAllomorph>().Where(a => a.MorphTypeRA.Guid == MoMorphTypeTags.kguidMorphSuffix)) " is 142.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadCircumfixAffixProcessAllomorph,The length of the statement  "				hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' leftEnvPattern' rightEnvPattern) {Name = name}); " is 136.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The length of the statement  "							hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' null' LoadEnvironmentPattern(contexts.Item2' false)) {Name = env.StringRepresentation.Text}); " is 181.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The length of the statement  "							hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' LoadEnvironmentPattern(contexts.Item1' true)' null) {Name = env.StringRepresentation.Text}); " is 180.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadReduplicationPatterns,The length of the statement  "					var pattern = new Pattern<Word' ShapeNode>(token.Substring(1' token.Length - 2).Trim()' new Constraint<Word' ShapeNode>(ctxt.FeatureStruct) {Tag = ctxt}); " is 154.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixTemplate,The length of the statement  "				hcTemplate.Slots.Add(new AffixTemplateSlot(rules) {Name = slot.Name.BestAnalysisAlternative.Text' Optional = slot.Optional}); " is 125.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,AnyPlus,The length of the statement  "			yield return new Quantifier<Word' ShapeNode>(1' -1' new Constraint<Word' ShapeNode>(m_any.FeatureStruct) {Tag = m_any}); " is 120.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,AnyStar,The length of the statement  "			yield return new Quantifier<Word' ShapeNode>(0' -1' new Constraint<Word' ShapeNode>(m_any.FeatureStruct) {Tag = m_any}); " is 120.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNodes,The length of the statement  "						yield return new Quantifier<Word' ShapeNode>(0' 1' new Group<Word' ShapeNode>(LoadPatternNodes(token.Substring(1' token.Length - 2).Trim()))); " is 142.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNodes,The length of the statement  "						yield return new Group<Word' ShapeNode>(segments.Shape.Select(n => new Constraint<Word' ShapeNode>(n.Annotation.FeatureStruct))) {Tag = segments}; " is 146.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFeatureSystem,The length of the statement  "						closedFeature.ValuesOC.Select(sfv => new FeatureSymbol("sym" + sfv.Hvo) {Description = sfv.Abbreviation.BestAnalysisAlternative.Text})) " is 135.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFeatureSystem,The length of the statement  "					hcFeatSys.Add(new ComplexFeature("feat" + feature.Hvo) {Description = feature.Abbreviation.BestAnalysisAlternative.Text}); " is 122.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadCharacterDefinitionTable,The length of the statement  "			foreach (IPhBdryMarker bdry in phonemeSet.BoundaryMarkersOC.Where(bdry => bdry.Guid != LangProjectTags.kguidPhRuleWordBdry)) " is 124.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,LoadParser,The length of the statement  "				XElement delReappsElem = parserParamsElem.Elements("ParserParameters").Elements("HC").Elements("DelReapps").FirstOrDefault(); " is 125.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,ParseToXml,The length of the statement  "							wordformElem.Add(new XElement("Analysis"' morphs.Select(mi => CreateAllomorphElement("Morph"' mi.Form' mi.Msa' mi.InflType' mi.IsCircumfix)))); " is 143.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,WriteDataIssues,The length of the statement  "					var predictedPhonemes = new HashSet<IPhPhoneme>(m_cache.LangProject.PhonologicalDataOA.PhonemeSetsOS.SelectMany(ps => ps.PhonemesOC).Where(p => GetFeatures(p) != null && feats.IsSubsetOf(GetFeatures(p)))); " is 205.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,WriteDataIssues,The length of the statement  "						writer.WriteElementString("ImpliedPhonologicalFeatures"' feats.Count == 0 ? "" : string.Format("[{0}]"' string.Join(" "' feats.Select(v => string.Format("{0}:{1}"' GetFeatureString(v)' GetValueString(v)))))); " is 208.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,WriteDataIssues,The length of the statement  "						writer.WriteElementString("PredictedPhonemes"' string.Join(" "' predictedPhonemes.Select(p => p.Name.BestVernacularAlternative.Text))); " is 135.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,WriteDataIssues,The length of the statement  "						writer.WriteElementString("ActualPhonemes"' string.Join(" "' natClass.SegmentsRC.Select(p => p.Name.BestVernacularAlternative.Text))); " is 134.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,GetMorphs,The length of the statement  "				if (inflTypeID > 0 && !m_cache.ServiceLocator.GetInstance<ILexEntryInflTypeRepository>().TryGetObject(inflTypeID' out inflType)) " is 128.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateAllomorphElement,The length of the statement  "			Guid morphTypeGuid = circumfix ? MoMorphTypeTags.kguidMorphCircumfix : (form.MorphTypeRA == null ? Guid.Empty : form.MorphTypeRA.Guid); " is 135.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateAllomorphElement,The length of the statement  "			var elem = new XElement(name' new XAttribute("id"' form.Hvo)' new XAttribute("type"' GetMorphTypeString(morphTypeGuid))' " is 120.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateAllomorphElement,The length of the statement  "				new XElement("Form"' circumfix ? form.OwnerOfClass<ILexEntry>().HeadWord.Text : form.GetFormWithMarkers(form.Cache.DefaultVernWs))' " is 131.
Long Statement,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateMorphemeElement,The length of the statement  "						msaElem.Add(new XElement("FromCategories"' stemMsa.FromPartsOfSpeechRC.Select(pos => new XElement("Category"' pos.Abbreviation.BestAnalysisAlternative.Text)))); " is 160.
Long Statement,SIL.FieldWorks.WordWorks.Parser,M3ToXAmpleTransformer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\M3ToXAmpleTransformer.cs,PrepareTemplatesForXAmpleFiles,The length of the statement  "				.Where(pe => pe.Elements("AffixTemplates").Elements("MoInflAffixTemplate").Any(te => te.Element("PrefixSlots") != null || te.Element("SuffixSlots") != null))) " is 158.
Long Statement,SIL.FieldWorks.WordWorks.Parser,ParseFiler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseFiler.cs,UpdateWordforms,The length of the statement  "			// update all of the wordforms in a batch' this might slow down the UI thread a little' if it causes too much unresponsiveness " is 126.
Long Statement,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMsaElement,The length of the statement  "			// Irregulary inflected forms can have a combination MSA hvo: the LexEntry hvo' a period' and an index to the LexEntryRef " is 121.
Long Statement,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteStemMsaXmlElement,The length of the statement  "						pos = clsid == PartOfSpeechTags.kClassId ? stemMsa.Services.GetInstance<IPartOfSpeechRepository>().GetObject(pos.Owner.Hvo) : null; " is 131.
Long Statement,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteInflectionClassXmlAttribute,The length of the statement  "				writer.WriteAttributeString(sInflClass + "Abbr"' inflClass.Hvo > 0 ? inflClass.Abbreviation.BestAnalysisAlternative.Text : ""); " is 127.
Long Statement,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMorphInfoElements,The length of the statement  "			ICmObject obj = cache.ServiceLocator.GetInstance<ICmObjectRepository>().GetObject(int.Parse(formID' CultureInfo.InvariantCulture)); " is 131.
Long Statement,SIL.FieldWorks.WordWorks.Parser,TaskReport,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\TaskReport.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + ". ******************"); " is 122.
Long Statement,SIL.FieldWorks.WordWorks.Parser,TaskReport,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\TaskReport.cs,RemoveChildTaskReport,The length of the statement  "				if (m_subTasks.Count == 0)	// other places in the code expect a non null value to mean data' so set it to null when empty. " is 122.
Long Statement,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,Update,The length of the statement  "				XElement maxAnalCountElem = model.Elements("M3Dump").Elements("ParserParameters").Elements("ParserParameters").Elements("XAmple").Elements("MaxAnalysesToReturn").FirstOrDefault(); " is 179.
Long Statement,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,TryCreateParseMorph,The length of the statement  "			// Irregulary inflected forms can have a combination MSA hvo: the LexEntry hvo' a period' and an index to the LexEntryRef " is 121.
Long Statement,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,TraceWordXml,The length of the statement  "			var sb = new StringBuilder(m_xample.TraceWord(word' selectTraceMorphs == null ? null : string.Join(" "' selectTraceMorphs))); " is 125.
Long Statement,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ConvertFailures,The length of the statement  "				else if ((test.StartsWith("ANCC_FT") || test.StartsWith("MCC_FT")) && !test.Contains("ExcpFeat") && !test.Contains("StemName") " is 126.
Complex Conditional,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ConvertFailures,The conditional expression  "(test.StartsWith("ANCC_FT") || test.StartsWith("MCC_FT")) && !test.Contains("ExcpFeat") && !test.Contains("StemName")  					&& !test.Contains("IrregInflForm")"  is complex.
Empty Catch Block,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsValidEnvironment,The method has an empty catch block.
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadReduplicationPatterns,The following statement contains a magic number: var pattern = new Pattern<Word' ShapeNode>(token.Substring(1' token.Length - 2).Trim()' new Constraint<Word' ShapeNode>(ctxt.FeatureStruct) {Tag = ctxt});
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadReduplicationOutputActions,The following statement contains a magic number: yield return new CopyFromInput(token.Substring(1' token.Length - 2).Trim());
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadRewriteRule,The following statement contains a magic number: switch (prule.Direction)  			{  				case 0:  					hcPrule.Direction = Direction.LeftToRight;  					hcPrule.ApplicationMode = RewriteApplicationMode.Iterative;  					break;    				case 1:  					hcPrule.Direction = Direction.RightToLeft;  					hcPrule.ApplicationMode = RewriteApplicationMode.Iterative;  					break;    				case 2:  					hcPrule.Direction = Direction.LeftToRight;  					hcPrule.ApplicationMode = RewriteApplicationMode.Simultaneous;  					break;  			}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMetathesisRule,The following statement contains a magic number: switch (prule.Direction)  			{  				case 0:  				case 2:  					hcPrule.Direction = Direction.LeftToRight;  					break;    				case 1:  					hcPrule.Direction = Direction.RightToLeft;  					break;  			}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,GetAdjacency,The following statement contains a magic number: switch (adj)  			{  				case 0:  					return MorphCoOccurrenceAdjacency.Anywhere;  				case 1:  					return MorphCoOccurrenceAdjacency.SomewhereToLeft;  				case 2:  					return MorphCoOccurrenceAdjacency.SomewhereToRight;  				case 3:  					return MorphCoOccurrenceAdjacency.AdjacentToLeft;  				case 4:  					return MorphCoOccurrenceAdjacency.AdjacentToRight;  			}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,GetAdjacency,The following statement contains a magic number: switch (adj)  			{  				case 0:  					return MorphCoOccurrenceAdjacency.Anywhere;  				case 1:  					return MorphCoOccurrenceAdjacency.SomewhereToLeft;  				case 2:  					return MorphCoOccurrenceAdjacency.SomewhereToRight;  				case 3:  					return MorphCoOccurrenceAdjacency.AdjacentToLeft;  				case 4:  					return MorphCoOccurrenceAdjacency.AdjacentToRight;  			}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,GetAdjacency,The following statement contains a magic number: switch (adj)  			{  				case 0:  					return MorphCoOccurrenceAdjacency.Anywhere;  				case 1:  					return MorphCoOccurrenceAdjacency.SomewhereToLeft;  				case 2:  					return MorphCoOccurrenceAdjacency.SomewhereToRight;  				case 3:  					return MorphCoOccurrenceAdjacency.AdjacentToLeft;  				case 4:  					return MorphCoOccurrenceAdjacency.AdjacentToRight;  			}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNodes,The following statement contains a magic number: switch (token[0])  				{  					case '#':  						break;    					case '[':  						IPhNaturalClass nc = m_naturalClassLookup[token.Substring(1' token.Length - 2).Trim()];  						SimpleContext ctxt;  						TryLoadSimpleContext(nc' out ctxt);  						yield return new Constraint<Word' ShapeNode>(ctxt.FeatureStruct) {Tag = ctxt};  						break;    					case '(':  						yield return new Quantifier<Word' ShapeNode>(0' 1' new Group<Word' ShapeNode>(LoadPatternNodes(token.Substring(1' token.Length - 2).Trim())));  						break;    					default:  						string representation = token.Trim();  						Segments segments = Segments(representation);  						yield return new Group<Word' ShapeNode>(segments.Shape.Select(n => new Constraint<Word' ShapeNode>(n.Annotation.FeatureStruct))) {Tag = segments};  						break;  				}
Magic Number,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNodes,The following statement contains a magic number: switch (token[0])  				{  					case '#':  						break;    					case '[':  						IPhNaturalClass nc = m_naturalClassLookup[token.Substring(1' token.Length - 2).Trim()];  						SimpleContext ctxt;  						TryLoadSimpleContext(nc' out ctxt);  						yield return new Constraint<Word' ShapeNode>(ctxt.FeatureStruct) {Tag = ctxt};  						break;    					case '(':  						yield return new Quantifier<Word' ShapeNode>(0' 1' new Group<Word' ShapeNode>(LoadPatternNodes(token.Substring(1' token.Length - 2).Trim())));  						break;    					default:  						string representation = token.Trim();  						Segments segments = Segments(representation);  						yield return new Group<Word' ShapeNode>(segments.Shape.Select(n => new Constraint<Word' ShapeNode>(n.Annotation.FeatureStruct))) {Tag = segments};  						break;  				}
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseResult,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: int code = 23;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseResult,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + analysis.GetHashCode();
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseResult,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + (m_errorMessage == null ? 0 : m_errorMessage.GetHashCode());
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseAnalysis,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: int code = 23;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseAnalysis,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + morph.GetHashCode();
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseMorph,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: int code = 23;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseMorph,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + m_form.Guid.GetHashCode();
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseMorph,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + m_msa.Guid.GetHashCode();
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParseMorph,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParseResult.cs,GetHashCode,The following statement contains a magic number: code = code * 31 + (m_inflType == null ? 0 : m_inflType.Guid.GetHashCode());
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,ProcessMsaHvo,The following statement contains a magic number: return Tuple.Create(int.Parse(msaHvoParts[0])' msaHvoParts.Length == 2 ? int.Parse(msaHvoParts[1]) : 0);
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMorphInfoElements,The following statement contains a magic number: int iLastSpace = shortName.LastIndexOf("):"' StringComparison.Ordinal) + 2;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteStemNameAffixElement,The following statement contains a magic number: string id = (prop.Substring(i + 13)).Trim();
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteNotAffixAlloFeatsElement,The following statement contains a magic number: int iNot = s.IndexOf("Not"' StringComparison.Ordinal) + 3;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteNotAffixAlloFeatsElement,The following statement contains a magic number: iNot = iNextNot + 3;
Magic Number,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteNotAffixAlloFeatsElement,The following statement contains a magic number: iNot > 3
Magic Number,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ConvertNameToUseAnsiCharacters,The following statement contains a magic number: value > 255
Magic Number,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,Update,The following statement contains a magic number: int maxAnalCount = 20;
Magic Number,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ProcessMsaHvo,The following statement contains a magic number: return Tuple.Create(int.Parse(msaHvoParts[0])' msaHvoParts.Length == 2 ? int.Parse(msaHvoParts[1]) : 0);
Magic Number,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,TraceWordXml,The following statement contains a magic number: sb.Remove(0' 47);
Missing Default,SIL.FieldWorks.WordWorks.Parser,FwXmlTraceManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\FwXmlTraceManager.cs,PhonologicalRuleNotApplied,The following switch statement is missing a default case: switch (reason)  				{  					case FailureReason.RequiredSyntacticFeatureStruct:  						pruleTrace.Add(new XElement("FailureReason"' new XAttribute("type"' "category")'  							new XElement("Category"' input.SyntacticFeatureStruct.PartsOfSpeech().FirstOrDefault())'  							new XElement("RequiredCategories"' sr.RequiredSyntacticFeatureStruct.PartsOfSpeech()  								.Select(pos => new XElement("Category"' pos)))));  						break;    					case FailureReason.RequiredMprFeatures:  						pruleTrace.Add(CreateMprFeaturesFailureElement(true' (MprFeatureGroup) failureObj' sr.RequiredMprFeatures' input));  						break;    					case FailureReason.ExcludedMprFeatures:  						pruleTrace.Add(CreateMprFeaturesFailureElement(false' (MprFeatureGroup) failureObj' sr.ExcludedMprFeatures' input));  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The following switch statement is missing a default case: switch (compoundRule.ClassID)  					{  						case MoEndoCompoundTags.kClassId:  							m_morphophonemic.MorphologicalRules.Add(LoadEndoCompoundingRule((IMoEndoCompound) compoundRule));  							break;    						case MoExoCompoundTags.kClassId:  							m_morphophonemic.MorphologicalRules.AddRange(LoadExoCompoundingRule((IMoExoCompound) compoundRule));  							break;  					}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadLanguage,The following switch statement is missing a default case: switch (prule.ClassID)  				{  					case PhRegularRuleTags.kClassId:  						var regRule = (IPhRegularRule) prule;  						if (regRule.StrucDescOS.Count > 0 || regRule.RightHandSidesOS.Any(rhs => rhs.StrucChangeOS.Count > 0))  						{  							RewriteRule hcRegRule = LoadRewriteRule(regRule);  							m_morphophonemic.PhonologicalRules.Add(hcRegRule);  							if (!m_notOnClitics)  								m_clitic.PhonologicalRules.Add(hcRegRule);  							m_language.PhonologicalRules.Add(hcRegRule);  						}  						break;    					case PhMetathesisRuleTags.kClassId:  						var metaRule = (IPhMetathesisRule) prule;  						if (metaRule.LeftSwitchIndex != -1 && metaRule.RightSwitchIndex != -1)  						{  							MetathesisRule hcMetaRule = LoadMetathesisRule(metaRule);  							m_morphophonemic.PhonologicalRules.Add(hcMetaRule);  							if (!m_notOnClitics)  								m_clitic.PhonologicalRules.Add(hcMetaRule);  							m_language.PhonologicalRules.Add(hcMetaRule);  						}  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsValidRuleForm,The following switch statement is missing a default case: switch (form.MorphTypeRA.Guid.ToString())  				{  					case MoMorphTypeTags.kMorphProclitic:  					case MoMorphTypeTags.kMorphEnclitic:  						return true;    					case MoMorphTypeTags.kMorphPrefix:  					case MoMorphTypeTags.kMorphPrefixingInterfix:  					case MoMorphTypeTags.kMorphSuffix:  					case MoMorphTypeTags.kMorphSuffixingInterfix:  						if (formStr.Contains("[") && !formStr.Contains("[...]"))  							return ((IMoAffixAllomorph) form).PhoneEnvRC.Any(env => IsValidEnvironment(env.StringRepresentation.Text));  						return true;    					case MoMorphTypeTags.kMorphInfix:  					case MoMorphTypeTags.kMorphInfixingInterfix:  						return ((IMoAffixAllomorph) form).PositionRS.Any(env => IsValidEnvironment(env.StringRepresentation.Text));  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsStemType,The following switch statement is missing a default case: switch (type.Guid.ToString())  			{  				case MoMorphTypeTags.kMorphRoot:  				case MoMorphTypeTags.kMorphStem:  				case MoMorphTypeTags.kMorphBoundRoot:  				case MoMorphTypeTags.kMorphBoundStem:  				case MoMorphTypeTags.kMorphPhrase:  					return true;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsCliticType,The following switch statement is missing a default case: switch (type.Guid.ToString())  			{  				case MoMorphTypeTags.kMorphClitic:  				case MoMorphTypeTags.kMorphEnclitic:  				case MoMorphTypeTags.kMorphProclitic:  				case MoMorphTypeTags.kMorphParticle:  					return true;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadRootAllomorph,The following switch statement is missing a default case: switch (allo.MorphTypeRA.Guid.ToString())  			{  				case MoMorphTypeTags.kMorphBoundRoot:  				case MoMorphTypeTags.kMorphBoundStem:  					hcAllo.IsBound = true;  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMorphologicalRule,The following switch statement is missing a default case: switch (msa.ClassID)  			{  				case MoDerivAffMsaTags.kClassId:  					mrule = LoadDerivAffixProcessRule(entry' (IMoDerivAffMsa) msa' allos);  					break;    				case MoInflAffMsaTags.kClassId:  					var inflMsa = (IMoInflAffMsa) msa;  					if (inflMsa.SlotsRC.Count > 0)  						s = null;  					mrule = LoadInflAffixProcessRule(entry' inflMsa' allos);  					break;    				case MoUnclassifiedAffixMsaTags.kClassId:  					mrule = LoadUnclassifiedAffixProcessRule(entry' (IMoUnclassifiedAffixMsa) msa' allos);  					break;    				case MoStemMsaTags.kClassId:  					mrule = LoadCliticAffixProcessRule(entry' (IMoStemMsa) msa' allos);  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorphs,The following switch statement is missing a default case: switch (allo.ClassID)  					{  						case MoAffixProcessTags.kClassId:  							var affixProcess = (IMoAffixProcess) allo;  							AffixProcessAllomorph hcAffixProcessAllo = null;  							try  							{  								hcAffixProcessAllo = LoadAffixProcessAllomorph(affixProcess);  								if (msa is IMoInflAffMsa)  									hcAffixProcessAllo.RequiredMprFeatures.AddRange(LoadAllInflClasses(affixProcess.InflectionClassesRC));  								m_allomorphs.GetValue(allo' () => new List<Allomorph>()).Add(hcAffixProcessAllo);  							}  							catch (InvalidShapeException ise)  							{  								m_logger.InvalidShape(ise.String' ise.Position' msa);  							}  							catch (InvalidAffixProcessException iape)  							{  								m_logger.InvalidAffixProcess(affixProcess' iape.IsInvalidLhs' msa);  							}  							if (hcAffixProcessAllo != null)  								yield return hcAffixProcessAllo;  							break;    						case MoAffixAllomorphTags.kClassId:  							var affixAllo = (IMoAffixAllomorph) allo;  							MprFeature[] requiredMprFeatures = null;  							if (msa is IMoInflAffMsa)  								requiredMprFeatures = LoadAllInflClasses(affixAllo.InflectionClassesRC).ToArray();  							foreach (IPhEnvironment env in GetAffixAllomorphEnvironments(affixAllo' msa))  							{  								AffixProcessAllomorph hcAffixAllo = null;  								try  								{  									hcAffixAllo = LoadFormAffixProcessAllomorph(affixAllo' env);  									if (requiredMprFeatures != null)  										hcAffixAllo.RequiredMprFeatures.AddRange(requiredMprFeatures);  									var requiredFS = new FeatureStruct();  									if (affixAllo.MsEnvFeaturesOA != null && !affixAllo.MsEnvFeaturesOA.IsEmpty)  										requiredFS.AddValue(m_headFeature' LoadFeatureStruct(affixAllo.MsEnvFeaturesOA' m_language.SyntacticFeatureSystem));  									requiredFS.Freeze();  									hcAffixAllo.RequiredSyntacticFeatureStruct = requiredFS;  									m_allomorphs.GetValue(allo' () => new List<Allomorph>()).Add(hcAffixAllo);  								}  								catch (InvalidShapeException ise)  								{  									m_logger.InvalidShape(ise.String' ise.Position' msa);  								}  								catch (InvalidReduplicationFormException iee)  								{  									m_logger.InvalidReduplicationForm(affixAllo' iee.Message' msa);  								}  								if (hcAffixAllo != null)  									yield return hcAffixAllo;  							}  							break;    						case MoStemAllomorphTags.kClassId:  							var stemAllo = (IMoStemAllomorph) allo;  							foreach (IPhEnvironment env in GetStemAllomorphEnvironments(stemAllo' msa))  							{  								AffixProcessAllomorph hcStemAllo = null;  								try  								{  									hcStemAllo = LoadFormAffixProcessAllomorph(allo' env);  									m_allomorphs.GetValue(allo' () => new List<Allomorph>()).Add(hcStemAllo);  								}  								catch (InvalidShapeException ise)  								{  									m_logger.InvalidShape(ise.String' ise.Position' msa);  								}  								if (hcStemAllo != null)  									yield return hcStemAllo;  							}  							break;  					}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,IsValidEnvironment,The following switch statement is missing a default case: switch (status)  				{  					case "class":  						error = string.Format("Unrecognized natural class at position {0}."' pos);  						break;  					case "segment":  						error = string.Format("Unrecognized phoneme at position {0}."' pos);  						break;  					case "missingClosingParen":  						error = string.Format("Missing closing parenthesis at position {0}."' pos);  						break;  					case "missingOpeningParen":  						error = string.Format("Missing opening parenthesis at position {0}."' pos);  						break;  					case "missingClosingSquareBracket":  						error = string.Format("Missing closing bracket at position {0}."' pos);  						break;  					case "missingOpeningSquareBracket":  						error = string.Format("Missing opening bracket at position {0}."' pos);  						break;  					case "syntax":  						error = string.Format("Invalid format at position {0}."' pos);  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorph,The following switch statement is missing a default case: switch (mapping.ClassID)  				{  					case MoInsertNCTags.kClassId:  						var insertNC = (IMoInsertNC) mapping;  						if (insertNC.ContentRA != null)  						{  							SimpleContext ctxt;  							if (!TryLoadSimpleContext(insertNC.ContentRA' out ctxt))  								throw new InvalidAffixProcessException(allo' false);  							hcAllo.Rhs.Add(new InsertSimpleContext(ctxt));  						}  						break;    					case MoCopyFromInputTags.kClassId:  						var copyFromInput = (IMoCopyFromInput) mapping;  						if (copyFromInput.ContentRA != null)  						{  							string partName = (copyFromInput.ContentRA.IndexInOwner + 1).ToString(CultureInfo.InvariantCulture);  							hcAllo.Rhs.Add(new CopyFromInput(partName));  						}  						break;    					case MoInsertPhonesTags.kClassId:  						var insertPhones = (IMoInsertPhones) mapping;  						if (insertPhones.ContentRS.Count > 0)  						{  							var sb = new StringBuilder();  							foreach (IPhTerminalUnit termUnit in insertPhones.ContentRS)  							{  								IPhCode code = termUnit.CodesOS[0];  								string strRep = termUnit.ClassID == PhBdryMarkerTags.kClassId ? code.Representation.BestVernacularAlternative.Text  									: code.Representation.VernacularDefaultWritingSystem.Text;  								strRep = strRep.Trim();  								if (string.IsNullOrEmpty(strRep))  									throw new InvalidAffixProcessException(allo' false);  								sb.Append(strRep);  							}  							hcAllo.Rhs.Add(new InsertSegments(Segments(sb.ToString())));  						}  						break;    					case MoModifyFromInputTags.kClassId:  						var modifyFromInput = (IMoModifyFromInput) mapping;  						if (modifyFromInput.ContentRA != null && modifyFromInput.ModificationRA != null)  						{  							SimpleContext ctxt;  							if (!TryLoadSimpleContext(modifyFromInput.ModificationRA' out ctxt))  								throw new InvalidAffixProcessException(allo' false);  							string partName = (modifyFromInput.ContentRA.IndexInOwner + 1).ToString(CultureInfo.InvariantCulture);  							hcAllo.Rhs.Add(new ModifyFromInput(partName' ctxt));  						}  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadAffixProcessAllomorph,The following switch statement is missing a default case: switch (allo.MorphTypeRA.Guid.ToString())  				{  					case MoMorphTypeTags.kMorphPrefix:  						hcAllo.ReduplicationHint = ReduplicationHint.Prefix;  						break;    					case MoMorphTypeTags.kMorphSuffix:  						hcAllo.ReduplicationHint = ReduplicationHint.Suffix;  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The following switch statement is missing a default case: switch (allo.MorphTypeRA.Guid.ToString())  					{  						case MoMorphTypeTags.kMorphPrefix:  							hcAllo.ReduplicationHint = ReduplicationHint.Prefix;  							break;    						case MoMorphTypeTags.kMorphSuffix:  							hcAllo.ReduplicationHint = ReduplicationHint.Suffix;  							break;  					}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The following switch statement is missing a default case: switch (allo.MorphTypeRA.Guid.ToString())  					{  						case MoMorphTypeTags.kMorphSuffix:  						case MoMorphTypeTags.kMorphSuffixingInterfix:  						case MoMorphTypeTags.kMorphEnclitic:  							hcAllo.Lhs.Add(stemPattern);  							hcAllo.Lhs.AddRange(LoadReduplicationPatterns(contexts.Item1));  							var suffixNull = new Pattern<Word' ShapeNode>("suffixNull"' SuffixNull());  							suffixNull.Freeze();  							hcAllo.Lhs.Add(suffixNull);    							hcAllo.Rhs.Add(new CopyFromInput("stem"));  							hcAllo.Rhs.AddRange(LoadReduplicationOutputActions(contexts.Item1));  							hcAllo.Rhs.Add(new CopyFromInput("suffixNull"));  							hcAllo.Rhs.Add(new InsertSegments(Segments("+")));  							hcAllo.Rhs.AddRange(LoadReduplicationOutputActions(form));  							break;    						case MoMorphTypeTags.kMorphPrefix:  						case MoMorphTypeTags.kMorphPrefixingInterfix:  						case MoMorphTypeTags.kMorphProclitic:  							var prefixNull = new Pattern<Word' ShapeNode>("prefixNull"' PrefixNull());  							prefixNull.Freeze();  							hcAllo.Lhs.Add(prefixNull);  							hcAllo.Lhs.AddRange(LoadReduplicationPatterns(contexts.Item2));  							hcAllo.Lhs.Add(stemPattern);    							hcAllo.Rhs.AddRange(LoadReduplicationOutputActions(form));  							hcAllo.Rhs.Add(new InsertSegments(Segments("+")));  							hcAllo.Rhs.Add(new CopyFromInput("prefixNull"));  							hcAllo.Rhs.AddRange(LoadReduplicationOutputActions(contexts.Item2));  							hcAllo.Rhs.Add(new CopyFromInput("stem"));  							break;  					}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadFormAffixProcessAllomorph,The following switch statement is missing a default case: switch (allo.MorphTypeRA.Guid.ToString())  				{  					case MoMorphTypeTags.kMorphInfix:  					case MoMorphTypeTags.kMorphInfixingInterfix:  						var leftInfixPattern = new Pattern<Word' ShapeNode>("left");  						if (contexts.Item1.StartsWith("#"))  							leftInfixPattern.Children.Add(PrefixNull());  						else  							leftInfixPattern.Children.AddRange(AnyStar());  						leftInfixPattern.Children.AddRange(LoadPatternNodes(contexts.Item1));  						leftInfixPattern.Freeze();  						hcAllo.Lhs.Add(leftInfixPattern);    						var rightInfixPattern = new Pattern<Word' ShapeNode>("right");  						rightInfixPattern.Children.AddRange(LoadPatternNodes(contexts.Item2));  						if (contexts.Item2.EndsWith("#"))  							rightInfixPattern.Children.Add(SuffixNull());  						else  							rightInfixPattern.Children.AddRange(AnyStar());  						rightInfixPattern.Freeze();  						hcAllo.Lhs.Add(rightInfixPattern);    						hcAllo.Rhs.Add(new CopyFromInput("left"));  						hcAllo.Rhs.Add(new InsertSegments(Segments("+" + form + "+")));  						hcAllo.Rhs.Add(new CopyFromInput("right"));  						break;    					case MoMorphTypeTags.kMorphSuffix:  					case MoMorphTypeTags.kMorphSuffixingInterfix:  					case MoMorphTypeTags.kMorphEnclitic:  						var suffixPattern = new Pattern<Word' ShapeNode>("stem");  						if (string.IsNullOrEmpty(contexts.Item1))  						{  							suffixPattern.Children.AddRange(AnyPlus());  						}  						else  						{  							if (contexts.Item1.StartsWith("#"))  								suffixPattern.Children.Add(PrefixNull());  							else  								suffixPattern.Children.AddRange(AnyStar());    							suffixPattern.Children.AddRange(LoadPatternNodes(contexts.Item1));  							suffixPattern.Children.Add(SuffixNull());  						}  						suffixPattern.Freeze();  						hcAllo.Lhs.Add(suffixPattern);    						hcAllo.Rhs.Add(new CopyFromInput("stem"));  						hcAllo.Rhs.Add(new InsertSegments(Segments("+" + form)));    						if (!string.IsNullOrEmpty(contexts.Item2))  							hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' null' LoadEnvironmentPattern(contexts.Item2' false)) {Name = env.StringRepresentation.Text});  						break;    					case MoMorphTypeTags.kMorphPrefix:  					case MoMorphTypeTags.kMorphPrefixingInterfix:  					case MoMorphTypeTags.kMorphProclitic:  						var prefixPattern = new Pattern<Word' ShapeNode>("stem");  						if (string.IsNullOrEmpty(contexts.Item2))  						{  							prefixPattern.Children.AddRange(AnyPlus());  						}  						else  						{  							prefixPattern.Children.Add(PrefixNull());  							prefixPattern.Children.AddRange(LoadPatternNodes(contexts.Item2));  							if (contexts.Item2.EndsWith("#"))  								prefixPattern.Children.Add(SuffixNull());  							else  								prefixPattern.Children.AddRange(AnyStar());  						}  						prefixPattern.Freeze();  						hcAllo.Lhs.Add(prefixPattern);    						hcAllo.Rhs.Add(new InsertSegments(Segments(form + "+")));  						hcAllo.Rhs.Add(new CopyFromInput("stem"));    						if (!string.IsNullOrEmpty(contexts.Item1))  							hcAllo.Environments.Add(new AllomorphEnvironment(m_spanFactory' ConstraintType.Require' LoadEnvironmentPattern(contexts.Item1' true)' null) {Name = env.StringRepresentation.Text});  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadRewriteRule,The following switch statement is missing a default case: switch (prule.Direction)  			{  				case 0:  					hcPrule.Direction = Direction.LeftToRight;  					hcPrule.ApplicationMode = RewriteApplicationMode.Iterative;  					break;    				case 1:  					hcPrule.Direction = Direction.RightToLeft;  					hcPrule.ApplicationMode = RewriteApplicationMode.Iterative;  					break;    				case 2:  					hcPrule.Direction = Direction.LeftToRight;  					hcPrule.ApplicationMode = RewriteApplicationMode.Simultaneous;  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMetathesisRule,The following switch statement is missing a default case: switch (prule.Direction)  			{  				case 0:  				case 2:  					hcPrule.Direction = Direction.LeftToRight;  					break;    				case 1:  					hcPrule.Direction = Direction.RightToLeft;  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,GetAdjacency,The following switch statement is missing a default case: switch (adj)  			{  				case 0:  					return MorphCoOccurrenceAdjacency.Anywhere;  				case 1:  					return MorphCoOccurrenceAdjacency.SomewhereToLeft;  				case 2:  					return MorphCoOccurrenceAdjacency.SomewhereToRight;  				case 3:  					return MorphCoOccurrenceAdjacency.AdjacentToLeft;  				case 4:  					return MorphCoOccurrenceAdjacency.AdjacentToRight;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadPatternNode,The following switch statement is missing a default case: switch (ctxt.ClassID)  			{  				case PhSequenceContextTags.kClassId:  					var seqCtxt = (IPhSequenceContext) ctxt;  					var nodes = new List<PatternNode<Word' ShapeNode>>();  					foreach (IPhPhonContext member in seqCtxt.MembersRS)  					{  						PatternNode<Word' ShapeNode> n;  						if (LoadPatternNode(member' variables' out n))  							nodes.Add(n);  					}  					if (nodes.Count > 0)  					{  						node = nodes.Count == 1 ? nodes.First() : new Group<Word' ShapeNode>(nodes);  						return true;  					}  					break;    				case PhIterationContextTags.kClassId:  					var iterCtxt = (IPhIterationContext) ctxt;  					PatternNode<Word' ShapeNode> childNode;  					if (LoadPatternNode(iterCtxt.MemberRA' variables' out childNode))  					{  						node = new Quantifier<Word' ShapeNode>(iterCtxt.Minimum' iterCtxt.Maximum' childNode);  						return true;  					}  					break;    				case PhSimpleContextBdryTags.kClassId:  					var bdryCtxt = (IPhSimpleContextBdry) ctxt;  					IPhBdryMarker bdry = bdryCtxt.FeatureStructureRA;  					if (bdry != null && bdry.Guid != LangProjectTags.kguidPhRuleWordBdry)  					{  						CharacterDefinition cd;  						if (m_charDefs.TryGetValue(bdry' out cd))  						{  							node = new Constraint<Word' ShapeNode>(cd.FeatureStruct) {Tag = cd};  							return true;  						}  					}  					break;    				case PhSimpleContextSegTags.kClassId:  					var segCtxt = (IPhSimpleContextSeg) ctxt;  					IPhPhoneme phoneme = segCtxt.FeatureStructureRA;  					if (phoneme != null)  					{  						CharacterDefinition cd;  						if (m_charDefs.TryGetValue(phoneme' out cd))  						{  							node = new Constraint<Word' ShapeNode>(cd.FeatureStruct) {Tag = cd};  							return true;  						}  					}  					break;    				case PhSimpleContextNCTags.kClassId:  					var ncCtxt = (IPhSimpleContextNC) ctxt;  					SimpleContext hcCtxt;  					if (TryLoadSimpleContext(ncCtxt' variables' out hcCtxt))  					{  						node = new Constraint<Word' ShapeNode>(hcCtxt.FeatureStruct) {Tag = hcCtxt};  						return true;  					}  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCLoader,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCLoader.cs,LoadMprFeatures,The following switch statement is missing a default case: switch (ruleFeat.ItemRA.ClassID)  			{  				case MoInflClassTags.kClassId:  					foreach (MprFeature mprFeat in LoadAllInflClasses((IMoInflClass) ruleFeat.ItemRA))  						yield return mprFeat;  					break;    				case CmPossibilityTags.kClassId:  					yield return m_mprFeatures[ruleFeat.ItemRA];  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,GetMorphTypeString,The following switch statement is missing a default case: switch (typeGuid.ToString())  			{  				case MoMorphTypeTags.kMorphBoundRoot:  					return "boundRoot";  				case MoMorphTypeTags.kMorphBoundStem:  					return "boundStem";  				case MoMorphTypeTags.kMorphCircumfix:  					return "circumfix";  				case MoMorphTypeTags.kMorphClitic:  					return "clitic";  				case MoMorphTypeTags.kMorphDiscontiguousPhrase:  					return "discontigPhrase";  				case MoMorphTypeTags.kMorphEnclitic:  					return "enclitic";  				case MoMorphTypeTags.kMorphInfix:  					return "infix";  				case MoMorphTypeTags.kMorphInfixingInterfix:  					return "infixIterfix";  				case MoMorphTypeTags.kMorphParticle:  					return "particle";  				case MoMorphTypeTags.kMorphPhrase:  					return "phrase";  				case MoMorphTypeTags.kMorphPrefix:  					return "prefix";  				case MoMorphTypeTags.kMorphPrefixingInterfix:  					return "prefixInterfix";  				case MoMorphTypeTags.kMorphProclitic:  					return "proclitic";  				case MoMorphTypeTags.kMorphRoot:  					return "root";  				case MoMorphTypeTags.kMorphSimulfix:  					return "simulfix";  				case MoMorphTypeTags.kMorphStem:  					return "stem";  				case MoMorphTypeTags.kMorphSuffix:  					return "suffix";  				case MoMorphTypeTags.kMorphSuffixingInterfix:  					return "suffixInterfix";  				case MoMorphTypeTags.kMorphSuprafix:  					return "suprafix";  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,HCParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\HCParser.cs,CreateMorphemeElement,The following switch statement is missing a default case: switch (msa.ClassID)  			{  				case MoStemMsaTags.kClassId:  					var stemMsa = (IMoStemMsa) msa;  					msaElem.Add(new XAttribute("type"' "stem"));  					if (stemMsa.PartOfSpeechRA != null)  						msaElem.Add(new XElement("Category"' stemMsa.PartOfSpeechRA.Abbreviation.BestAnalysisAlternative.Text));  					if (stemMsa.FromPartsOfSpeechRC.Count > 0)  						msaElem.Add(new XElement("FromCategories"' stemMsa.FromPartsOfSpeechRC.Select(pos => new XElement("Category"' pos.Abbreviation.BestAnalysisAlternative.Text))));  					if (stemMsa.InflectionClassRA != null)  						msaElem.Add(new XElement("InflClass"' stemMsa.InflectionClassRA.Abbreviation.BestAnalysisAlternative.Text));  					break;    				case MoDerivAffMsaTags.kClassId:  					var derivMsa = (IMoDerivAffMsa) msa;  					msaElem.Add(new XAttribute("type"' "deriv"));  					if (derivMsa.FromPartOfSpeechRA != null)  						msaElem.Add(new XElement("FromCategory"' derivMsa.FromPartOfSpeechRA.Abbreviation.BestAnalysisAlternative.Text));  					if (derivMsa.ToPartOfSpeechRA != null)  						msaElem.Add(new XElement("ToCategory"' derivMsa.ToPartOfSpeechRA.Abbreviation.BestAnalysisAlternative.Text));  					if (derivMsa.ToInflectionClassRA != null)  						msaElem.Add(new XElement("ToInflClass"' derivMsa.ToInflectionClassRA.Abbreviation.BestAnalysisAlternative.Text));  					break;    				case MoUnclassifiedAffixMsaTags.kClassId:  					var unclassMsa = (IMoUnclassifiedAffixMsa) msa;  					msaElem.Add(new XAttribute("type"' "unclass"));  					if (unclassMsa.PartOfSpeechRA != null)  						msaElem.Add(new XElement("Category"' unclassMsa.PartOfSpeechRA.Abbreviation.BestAnalysisAlternative.Text));  					break;    				case MoInflAffMsaTags.kClassId:  					var inflMsa = (IMoInflAffMsa) msa;  					msaElem.Add(new XAttribute("type"' "infl"));  					if (inflMsa.PartOfSpeechRA != null)  						msaElem.Add(new XElement("Category"' inflMsa.PartOfSpeechRA.Abbreviation.BestAnalysisAlternative.Text));  					if (inflMsa.SlotsRC.Count > 0)  					{  						IMoInflAffixSlot slot = inflMsa.SlotsRC.First();  						msaElem.Add(new XElement("Slot"' new XAttribute("optional"' slot.Optional)' slot.Name.BestAnalysisAlternative.Text));  					}  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,ParserModelChangeListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserModelChangeListener.cs,PropChanged,The following switch statement is missing a default case: switch (clsid)  			{  				case LexDbTags.kClassId:  				case LexEntryTags.kClassId:  				case LexSenseTags.kClassId:  				case LexEntryInflTypeTags.kClassId:    				case FsClosedValueTags.kClassId:  				case FsComplexValueTags.kClassId:  				case FsFeatStrucTags.kClassId:  				case FsFeatStrucTypeTags.kClassId:  				case FsClosedFeatureTags.kClassId:  				case FsComplexFeatureTags.kClassId:  				case FsFeatureSystemTags.kClassId:  				case FsSymFeatValTags.kClassId:    				case MoMorphTypeTags.kClassId:  				case MoAdhocProhibGrTags.kClassId:  				case MoAlloAdhocProhibTags.kClassId:  				case MoMorphAdhocProhibTags.kClassId:  				case MoEndoCompoundTags.kClassId:  				case MoExoCompoundTags.kClassId:  				case MoInflAffixSlotTags.kClassId:  				case MoInflAffixTemplateTags.kClassId:  				case MoInflClassTags.kClassId:  				case MoAffixAllomorphTags.kClassId:  				case MoStemAllomorphTags.kClassId:  				case MoAffixProcessTags.kClassId:  				case MoCopyFromInputTags.kClassId:  				case MoInsertPhonesTags.kClassId:  				case MoInsertNCTags.kClassId:  				case MoModifyFromInputTags.kClassId:  				case MoDerivAffMsaTags.kClassId:  				case MoInflAffMsaTags.kClassId:  				case MoUnclassifiedAffixMsaTags.kClassId:  				case MoStemMsaTags.kClassId:  				case MoMorphDataTags.kClassId:  				case PartOfSpeechTags.kClassId:    				case PhCodeTags.kClassId:  				case PhIterationContextTags.kClassId:  				case PhMetathesisRuleTags.kClassId:  				case PhRegularRuleTags.kClassId:  				case PhSegRuleRHSTags.kClassId:  				case PhPhonemeSetTags.kClassId:  				case PhFeatureConstraintTags.kClassId:  				case PhNCFeaturesTags.kClassId:  				case PhNCSegmentsTags.kClassId:  				case PhPhonDataTags.kClassId:  				case PhPhonemeTags.kClassId:  				case PhSequenceContextTags.kClassId:  				case PhSimpleContextBdryTags.kClassId:  				case PhSimpleContextNCTags.kClassId:  				case PhSimpleContextSegTags.kClassId:  				case PhVariableTags.kClassId:  				case PhEnvironmentTags.kClassId:  					lock (m_syncRoot)  						m_changed = true;  					break;  			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,ParserXmlWriterExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\ParserXmlWriterExtensions.cs,WriteMorphInfoElements,The following switch statement is missing a default case: switch (form.ClassID)  			{  				case MoStemAllomorphTags.kClassId:  					WriteStemNameElement(writer' form' props);  					break;  				case MoAffixAllomorphTags.kClassId:  					WriteAffixAlloFeatsElement(writer' form' props);  					WriteStemNameAffixElement(writer' cache' props);  					break;    			}
Missing Default,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,ParseWord,The following switch statement is missing a default case: switch ((string) exceptionElem.Attribute("code"))  				{  					case "ReachedMaxAnalyses":  						errorMessage = String.Format(ParserCoreStrings.ksReachedMaxAnalysesAllowed'  							totalAnalysesValue);  						break;  					case "ReachedMaxBufferSize":  						errorMessage = String.Format(ParserCoreStrings.ksReachedMaxInternalBufferSize'  							totalAnalysesValue);  						break;  				}
Missing Default,SIL.FieldWorks.WordWorks.Parser,XAmpleParser,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\LexText\ParserCore\XAmpleParser.cs,GetStrRep,The following switch statement is missing a default case: switch (classID)  			{  				case MoFormTags.kClassId:  					var form = obj as IMoForm;  					if (form != null)  						return form.ShortName;  					throw new ApplicationException(ParserCoreStrings.ksUnknownAllomorph);    				case MoMorphSynAnalysisTags.kClassId:  					var msa = obj as IMoMorphSynAnalysis;  					if (msa != null)  						return msa.LongName;  					throw new ApplicationException(ParserCoreStrings.ksUnknownMorpheme);    				case PhNaturalClassTags.kClassId:  					var nc = obj as IPhNCSegments;  					if (nc != null)  						return nc.Name.BestAnalysisAlternative.Text;  					throw new ApplicationException(ParserCoreStrings.ksUnknownNaturalClass);  			}
