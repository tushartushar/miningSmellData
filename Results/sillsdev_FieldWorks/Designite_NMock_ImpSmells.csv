Implementation smell,Namespace,Class,File,Method,Description
Long Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,Generate,The method has 113 lines of code.
Complex Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ClassGenerator,Cyclomatic complexity of the method is 19
Complex Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,Generate,Cyclomatic complexity of the method is 17
Complex Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementMethods,Cyclomatic complexity of the method is 8
Complex Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreateCheckForIgnore,Cyclomatic complexity of the method is 17
Complex Method,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementProperty,Cyclomatic complexity of the method is 9
Long Parameter List,NMock,IMock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\IMock.cs,ExpectAndReturn,The method has 5 parameters. Parameters: methodName' returnVal' args' argTypes' outParams
Long Parameter List,NMock,IMock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\IMock.cs,ExpectAndReturn,The method has 6 parameters. Parameters: nCount' methodName' returnVal' args' argTypes' outParams
Long Parameter List,NMock,IMock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\IMock.cs,SetupResultInOrder,The method has 5 parameters. Parameters: nCount' methodName' returnVal' inputTypes' returnParams
Long Parameter List,NMock,IMock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\IMock.cs,SetupResultForParams,The method has 5 parameters. Parameters: methodName' returnVal' args' argTypes' outParams
Long Parameter List,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,ExpectAndReturn,The method has 5 parameters. Parameters: methodName' returnVal' args' argTypes' outParams
Long Parameter List,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,ExpectAndReturn,The method has 6 parameters. Parameters: nCount' methodName' returnVal' args' argTypes' outParams
Long Parameter List,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,SetupResultInOrder,The method has 5 parameters. Parameters: nCount' methodName' returnVal' inputTypes' returnParams
Long Parameter List,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,SetupResultForParams,The method has 5 parameters. Parameters: methodName' returnVal' args' argTypes' returnParams
Long Parameter List,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,AddMethodWithoutExpecations,The method has 5 parameters. Parameters: signature' methodType' returnVal' returnParams' inParams
Long Parameter List,NMock,MockCall,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\MockCall.cs,MockCall,The method has 5 parameters. Parameters: signature' returnValue' e' expectedArgs' returnArgs
Long Parameter List,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ClassGenerator,The method has 5 parameters. Parameters: type' handler' methodsToIgnore' superclassIfTypeIsInterface' additionalReferences
Long Parameter List,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreateCheckForIgnore,The method has 5 parameters. Parameters: source' methodInfo' returnType' parameters' fProperty
Long Parameter List,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreateMethodHeader,The method has 5 parameters. Parameters: source' methodInfo' returnType' parameters' fInterface
Long Parameter List,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreatePropertyHeader,The method has 5 parameters. Parameters: source' methodInfo' returnType' parameters' fInterface
Long Parameter List,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreateIndexerHeader,The method has 5 parameters. Parameters: source' methodInfo' returnType' parameters' fInterface
Complex Conditional,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,Invoke,The conditional expression  "(methodName.StartsWith("get_") && args.Length == 0) ||  				(methodName == "get_Item" && args.Length == 1)"  is complex.
Complex Conditional,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ShouldImplement,The conditional expression  "(! methodInfo.IsVirtual) || methodInfo.IsFinal || methodInfo.IsAssembly ||  				methodInfo.ReturnType.IsGenericType	|| methodInfo.ContainsGenericParameters ||  				methodInfo.IsGenericMethod"  is complex.
Complex Conditional,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementMethod,The conditional expression  "(methodInfo.Name.StartsWith("get_") && parameters.Length == 0)  				|| (methodInfo.Name.StartsWith("set_") && parameters.Length == 1)"  is complex.
Complex Conditional,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,GetRealType,The conditional expression  "realType.IsNotPublic  				|| (realType.DeclaringType != null && realType.DeclaringType.IsNotPublic)  				|| (elementType != null && (elementType.IsNotPublic  				|| (elementType.DeclaringType != null && elementType.DeclaringType.IsNotPublic)))"  is complex.
Empty Catch Block,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementMethods,The method has an empty catch block.
Magic Number,NMock,Mock,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Mock.cs,Invoke,The following statement contains a magic number: methodName = methodName.Substring(4);
Magic Number,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementProperty,The following statement contains a magic number: m_LastProperty != methodInfo.Name.Substring(4)
Magic Number,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,ImplementProperty,The following statement contains a magic number: m_LastProperty = methodInfo.Name.Substring(4);
Magic Number,NMock.Dynamic,ClassGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,CreatePropertyHeader,The following statement contains a magic number: source.AppendFormat("{0} {1} {2} {3}\n{{\n"' methodInfo.IsPublic ? "public" : "protected"'  				fInterface ? "new" : methodInfo.IsVirtual ? "override" : "new"'  				returnType' methodInfo.Name.Substring(4));
Magic Number,NMock.Dynamic,CompareMethodInfo,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Bin\nmock\src\src\NMock\Dynamic\ClassGenerator.cs,GetName,The following statement contains a magic number: return info.Name.Substring(4) + "_get";
