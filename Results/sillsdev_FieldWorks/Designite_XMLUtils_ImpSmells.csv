Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,NodesMatch,Cyclomatic complexity of the method is 19
Long Parameter List,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,GetStaticMethod,The method has 5 parameters. Parameters: node' sAssemblyAttr' sClassAttr' sMethodName' typeFound
Long Parameter List,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,GetStaticMethod,The method has 5 parameters. Parameters: sAssemblyName' sClassName' sMethodName' sContext' typeFound
Long Statement,SIL.Utils,DynamicLoader,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\DynamicLoader.cs,CouldNotCreateObjectMsg,The length of the statement  "				+ ". If there are no 'InnerExceptions' below' then make sure capitalization is correct and that you include the name space (e.g. XCore.Ticker)."; " is 145.
Long Statement,SIL.Utils,DynamicLoader,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\DynamicLoader.cs,GetPlugins,The length of the statement  "					// We use LoadFrom rather than LoadFile so that if we have already loaded this assembly' we don't load another copy of it. " is 122.
Long Statement,SIL.Utils,DynamicLoader,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\DynamicLoader.cs,GetPlugins,The length of the statement  "					// In real use' this would be a problem if the DLL defining the interface was also one of the ones providing implementations. " is 125.
Long Statement,SIL.Utils,DynamicLoader,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\DynamicLoader.cs,GetPlugins,The length of the statement  "					// Maybe not a .NET DLL? Anyway just ignore it. (Enhance JohnT: any way we can predict what exceptions should be ignored here? " is 126.
Long Statement,SIL.Utils,ConfigurationException,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\SILExceptions.cs,ShowDialog,The length of the statement  "			System.Windows.Forms.MessageBox.Show(this.Message' XmlUtilsStrings.XMLConfigurationError' System.  Windows.Forms.MessageBoxButtons.OK'System.  Windows.  Forms.  MessageBoxIcon.Exclamation); " is 189.
Empty Catch Block,SIL.Utils,DynamicLoader,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\DynamicLoader.cs,GetPlugins,The method has an empty catch block.
Empty Catch Block,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,DeserializeXmlString,The method has an empty catch block.
Magic Number,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,MakeIntegerListValue,The following statement contains a magic number: var builder = new StringBuilder(vals.Length * 7);
Magic Number,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,MakeListValue,The following statement contains a magic number: var builder = new StringBuilder(vals.Count * 7);
Magic Number,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,MakeListValue,The following statement contains a magic number: var builder = new StringBuilder(vals.Count * 7);
Magic Number,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,GetStaticMethod,The following statement contains a magic number: try  			{  				string baseDir = Path.GetDirectoryName(  					Assembly.GetExecutingAssembly().CodeBase).  					Substring(MiscUtils.IsUnix ? 5 : 6);  				assemblyFound = Assembly.LoadFrom(  					Path.Combine(baseDir' sAssemblyName));  			}  			catch (Exception error)  			{  				string sMainMsg = "DLL at " + sAssemblyName;  				string sMsg = MakeGetStaticMethodErrorMessage(sMainMsg' sContext);  				throw new RuntimeConfigurationException(sMsg' error);  			}
Magic Number,SIL.Utils,XmlUtils,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,GetStaticMethod,The following statement contains a magic number: try  			{  				string baseDir = Path.GetDirectoryName(  					Assembly.GetExecutingAssembly().CodeBase).  					Substring(MiscUtils.IsUnix ? 5 : 6);  				assemblyFound = Assembly.LoadFrom(  					Path.Combine(baseDir' sAssemblyName));  			}  			catch (Exception error)  			{  				string sMainMsg = "DLL at " + sAssemblyName;  				string sMsg = MakeGetStaticMethodErrorMessage(sMainMsg' sContext);  				throw new RuntimeConfigurationException(sMsg' error);  			}
Magic Number,SIL.Utils,XmlResourceResolver,C:\repos\sillsdev_FieldWorks\Src\Utilities\XMLUtils\XmlUtils.cs,GetEntity,The following statement contains a magic number: switch (absoluteUri.Scheme)  				{  				case "res":  					return m_assembly.GetManifestResourceStream(absoluteUri.OriginalString.Substring(6));    				default:  					// Handle file:// and http://  					// requests from the XmlUrlResolver base class  					return base.GetEntity(absoluteUri' role' ofObjectToReturn);  				}
