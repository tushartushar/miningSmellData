Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,InitializeComponent,The method has 205 lines of code.
Long Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForFieldByReflection,The method has 140 lines of code.
Long Method,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The method has 518 lines of code.
Long Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The method has 112 lines of code.
Long Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The method has 153 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,DictionaryConfigurationController,The method has 140 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationDlg.cs,InitializeComponent,The method has 210 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The method has 178 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadNode,The method has 115 lines of code.
Long Method,SIL.FieldWorks.XWorks,DictionaryConfigurationImportDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportDlg.cs,InitializeComponent,The method has 153 lines of code.
Long Method,SIL.FieldWorks.XWorks,LegacyConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LegacyConfigurationUtils.cs,StoreChildNodeInfo,The method has 116 lines of code.
Long Method,SIL.FieldWorks.XWorks,CustomListDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CustomListDlg.cs,InitializeComponent,The method has 159 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,InitializeComponent,The method has 106 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,btnExport_Click,The method has 148 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,DoExport,The method has 101 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,The method has 103 lines of code.
Long Method,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,InitializeComponent,The method has 137 lines of code.
Long Method,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,FollowActiveLink,The method has 121 lines of code.
Long Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportRecord,The method has 133 lines of code.
Long Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportCustomFields,The method has 168 lines of code.
Long Method,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The method has 237 lines of code.
Long Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,The method has 142 lines of code.
Long Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The method has 200 lines of code.
Long Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,The method has 105 lines of code.
Long Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeWsListView,The method has 118 lines of code.
Long Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The method has 402 lines of code.
Long Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,LayoutTreeNode,The method has 160 lines of code.
Long Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,IsNodeDirty,The method has 120 lines of code.
Long Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,GetModifiedLayouts,The method has 141 lines of code.
Long Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The method has 135 lines of code.
Long Method,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,InitializeComponent,The method has 151 lines of code.
Complex Method,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,GetListsComboItems,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,FindAffectedLayouts,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,m_deleteButton_Click,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForFieldByReflection,Cyclomatic complexity of the method is 29
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPropValueForCustomField,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPropertyTypeFromReflectedTypes,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetTypeForConfigurationNode,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetCustomFieldType,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSubentries,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsAllGramInfoTheSame,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,CheckIfAllGramInfoTheSame,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCollectionItemContent,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsListItemSelectedForExport,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsListItemSelectedForExportInternal,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForValue,Cyclomatic complexity of the method is 22
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForStrings,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForString,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSpanWithPossibleLink,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromConfigurationNode,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,Cyclomatic complexity of the method is 19
Complex Method,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,Cyclomatic complexity of the method is 28
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,RefreshView,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixTypeListOnNode,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixOptionsAccordingToCurrentTypes,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,LoadAvailableWsList,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,EnsureValidStylesInNodeOptions,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,SetStartingNode,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,GetCurrentConfiguration,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadNode,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,FindNodes,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,GetLexicalRelationTypes,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ReversalIndexServices,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ReversalIndexServices.cs,CreateOrRemoveReversalIndexConfigurationFiles,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,LegacyConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LegacyConfigurationUtils.cs,BuildTreeFromLayoutAndParts,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,LegacyConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LegacyConfigurationUtils.cs,AddChildNodes,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.XWorks,LegacyConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LegacyConfigurationUtils.cs,StoreChildNodeInfo,Cyclomatic complexity of the method is 22
Complex Method,SIL.FieldWorks.XWorks,LegacyConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LegacyConfigurationUtils.cs,NodesMatch,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_ObjectProp,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,Cyclomatic complexity of the method is 22
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetOwnClsName,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetDstClsId,Cyclomatic complexity of the method is 19
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldName,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldType,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,BuildHomographInfo,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,get_MultiStringAlt,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,VecProp,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,InsertMediaFile,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDataTreeInsert,Cyclomatic complexity of the method is 19
Complex Method,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,CanInsert,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,btnExport_Click,Cyclomatic complexity of the method is 21
Complex Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,OpenExportFolder,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,AddFxts,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ConfigureItem,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.XWorks,TranslatedListsExporter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportTranslatedItem,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnMasterRefresh,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,OnSaveAsWebpage,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,PropChanged,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,AddChapterToInterestingTexts,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,FollowActiveLink,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportLanguages,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportRecord,Cyclomatic complexity of the method is 18
Complex Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportCustomFields,Cyclomatic complexity of the method is 32
Complex Method,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportStText,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,UploadToWebonary,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,TreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBarTreeHandler.cs,MoveItem,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,SetInfoBarText,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,TryRestoreSorter,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnJumpToRecord,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnPropertyChanged,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,UpdateOwningObject,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,SelectedRecordChanged,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,SetCurrentFromRelatedClerk,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnListChanged,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,FindClosestValidIndex,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,OnPrint,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,PossibilityRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetListFromOwnerAndProperty,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,RemoveUnwantedSortItems,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReplaceListItem,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,SendPropChangedOnListChange,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,OnChangeFilter,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CreateNewObject,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,Cyclomatic complexity of the method is 30
Complex Method,SIL.FieldWorks.XWorks,WritingSystemListHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TextListeners.cs,DecodeSetName,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,WritingSystemListHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TextListeners.cs,OnDisplayWritingSystemList,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,OnDomKeyPress,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetActiveSelectedEntryOnView,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,Cyclomatic complexity of the method is 17
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildEntryTypeList,Cyclomatic complexity of the method is 17
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,DuplicateLayoutSubtree,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,ProcessPartChildForDuplication,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnWritingSystemsItemCheck,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,StoreNodeData,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeWsListView,Cyclomatic complexity of the method is 24
Complex Method,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SaveModifiedLayouts,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,LayoutTreeNode,Cyclomatic complexity of the method is 28
Complex Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,IsNodeDirty,Cyclomatic complexity of the method is 34
Complex Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,GetModifiedLayouts,Cyclomatic complexity of the method is 36
Complex Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,CopyPartAttributes,Cyclomatic complexity of the method is 21
Complex Method,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,MakeSenseNumberFormatConsistent,Cyclomatic complexity of the method is 16
Complex Method,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SetInfoBarText,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,OnMouseClick,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SelectAndScrollToCurrentRecord,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,AddMetsPairs,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,UpgradeEtymologyCluster,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,RenameReversalConfigFiles,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertLayoutTreeNodeToConfigNode,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CreateOptionsFromLayoutTreeNode,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyDefaultsIntoConfigNode,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,HandleChildNodeRenaming,Cyclomatic complexity of the method is 15
Complex Method,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,SetupCustomField,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,WriteFontAndParagraphRulesXml,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectFontProps,Cyclomatic complexity of the method is 11
Complex Method,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectParagraphProps,Cyclomatic complexity of the method is 12
Complex Method,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectBulletProps,Cyclomatic complexity of the method is 14
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePreviewHtmlWithStyles,The method has 6 parameters. Parameters: entryHvos' publicationDecorator' configuration' propertyTable' progress' entriesPerPage
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,The method has 7 parameters. Parameters: entryHvos' publicationDecorator' entriesPerPage' configuration' propertyTable' xhtmlPath' progress
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateTopOfPageButtonsIfNeeded,The method has 6 parameters. Parameters: settings' entryHvos' entriesPerPage' currentPageBounds' xhtmlWriter' cssWriter
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateBottomOfPageButtonsIfNeeded,The method has 5 parameters. Parameters: settings' entryHvos' entriesPerPage' currentPageBounds' xhtmlWriter
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateNextFewEntries,The method has 9 parameters. Parameters: publicationDecorator' entryHvos' currentConfigPath' settings' oldCurrentPageRange' oldAdjacentPageRange' entriesToAddCount' currentPage' adjacentPage
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateAdjustedPageButtons,The method has 7 parameters. Parameters: entryHvos' settings' currentPageRange' adjacentPageRange' entriesToAddCount' newCurrentPageRange' newAdjacentPageRange
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratePageButtons,The method has 5 parameters. Parameters: settings' entryHvos' pageRanges' currentPageBounds' xhtmlWriter
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratePageButton,The method has 6 parameters. Parameters: settings' entryHvos' pageRanges' currentPageBounds' xhtmlWriter' page
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForFieldByReflection,The method has 6 parameters. Parameters: field' config' publicationDecorator' settings' info' fUseReverseSubField
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPropValueForCustomField,The method has 6 parameters. Parameters: fieldOwner' config' cache' customFieldOwnerClassName' customFieldName' propertyValue
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The method has 6 parameters. Parameters: collectionField' config' pubDecorator' collectionOwner' settings' info
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefCollection,The method has 7 parameters. Parameters: config' collection' collectionOwner' pubDecorator' settings' typeNode' isComplex
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefsByType,The method has 8 parameters. Parameters: config' lerCollection' collectionOwner' pubDecorator' settings' bldr' typeNode' isComplex
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSubentries,The method has 6 parameters. Parameters: config' collection' collectionOwner' pubDecorator' settings' bldr
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSenses,The method has 5 parameters. Parameters: config' publicationDecorator' settings' senseCollection' info
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsAllGramInfoTheSame,The method has 5 parameters. Parameters: config' collection' isSubsense' lastGrammaticalInfo' langId
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,CheckIfAllGramInfoTheSame,The method has 5 parameters. Parameters: config' collection' isSameGrammaticalInfo' lastGrammaticalInfo' langId
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSenseContent,The method has 7 parameters. Parameters: config' publicationDecorator' item' isThisSenseNumbered' settings' isSameGrammaticalInfo' info
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratePictureContent,The method has 5 parameters. Parameters: config' publicationDecorator' item' settings' bldr
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCollectionItemContent,The method has 6 parameters. Parameters: config' publicationDecorator' item' collectionOwner' settings' factoredTypeField
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexReferenceCollection,The method has 6 parameters. Parameters: config' collection' cmOwner' pubDecorator' settings' bldr
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,MoveTargetsToMasterList,The method has 5 parameters. Parameters: cmOwner' curType' config' bucketList' lexRefTargetList
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The method has 5 parameters. Parameters: config' publicationDecorator' referenceList' collectionOwner' settings
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSubentryTypeChild,The method has 5 parameters. Parameters: config' publicationDecorator' subEntry' mainEntryOrSense' settings
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForVirtualStrings,The method has 5 parameters. Parameters: owningObject' multiStringAccessor' config' settings' guid
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateWsPrefixAndString,The method has 6 parameters. Parameters: config' settings' wsOptions' wsId' requestedString' guid
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForString,The method has 5 parameters. Parameters: fieldValue' config' settings' linkTarget' writingSystem
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSpanWithPossibleLink,The method has 7 parameters. Parameters: settings' writingSystem' writer' style' text' linkDestination' rightToLeft
Long Parameter List,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForAudioFile,The method has 5 parameters. Parameters: classname' audioId' srcAttribute' caption' settings
Long Parameter List,SIL.FieldWorks.XWorks,GeneratorSettings,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratorSettings,The method has 7 parameters. Parameters: cache' propertyTable' relativePaths' copyFiles' exportPath' rightToLeft' isWebExport
Long Parameter List,SIL.FieldWorks.XWorks,GeneratorSettings,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratorSettings,The method has 7 parameters. Parameters: cache' propertyTable' relativePaths' copyFiles' exportPath' rightToLeft' isWebExport
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The method has 5 parameters. Parameters: configNode' senseOptions' styleSheet' baseSelection' propertyTable
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The method has 5 parameters. Parameters: configNode' styleSheet' bulletSelector' propertyTable' styleDeclaration
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromListAndParaOptions,The method has 6 parameters. Parameters: configNode' listAndParaOpts' styleSheet' baseSelection' cache' propertyTable
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromWsOptions,The method has 5 parameters. Parameters: configNode' wsOptions' styleSheet' baseSelection' propertyTable
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The method has 5 parameters. Parameters: parentSelector' configNode' baseSelection' cache' propertyTable
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The method has 5 parameters. Parameters: styleName' wsId' node' propertyTable' calculateFirstSenseStyle
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AddInfoFromWsOrDefaultValue,The method has 6 parameters. Parameters: wsFontInfo' defaultFontInfo' propName' trueValue' falseValue' declaration
Long Parameter List,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AddInfoFromWsOrDefaultValue,The method has 5 parameters. Parameters: wsFontInfo' defaultFontInfo' propName' termType' declaration
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,MoveNodeIntoGroup,The method has 5 parameters. Parameters: node' direction' parent' newNodeIndex' nodeIndex
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixTypeListOnNode,The method has 7 parameters. Parameters: node' complexTypes' variantTypes' referenceTypes' noteTypes' isHybrid' cache
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixOptionsAccordingToCurrentTypes,The method has 5 parameters. Parameters: options' possibilities' node' filterInflectionalVariantTypes' cache
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,DictionaryConfigurationManagerController,The method has 6 parameters. Parameters: cache' mediator' configurations' publications' projectConfigDir' defaultConfigDir
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,DictionaryConfigurationManagerController,The method has 8 parameters. Parameters: view' propertyTable' mediator' configurations' publications' projectConfigDir' defaultConfigDir' currentConfig
Long Parameter List,SIL.FieldWorks.XWorks,ReversalIndexServices,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ReversalIndexServices.cs,CreateOrRemoveReversalIndexConfigurationFiles,The method has 5 parameters. Parameters: wsMgr' cache' defaultConfigDir' projectsDir' originalProjectName
Long Parameter List,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryConfigMgrDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigMgrDlg.cs,DictionaryConfigMgrDlg,The method has 5 parameters. Parameters: mediator' propertyTable' objType' configViews' current
Long Parameter List,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,Initialize,The method has 5 parameters. Parameters: propertyTable' cache' titleFrag' defaultExt' filter
Long Parameter List,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,FwXWindow,The method has 5 parameters. Parameters: app' wndCopyFrom' iconStream' configFile' startupLink
Long Parameter List,SIL.FieldWorks.XWorks,IFlexMacro,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\IFlexMacro.cs,Enabled,The method has 5 parameters. Parameters: target' targetField' wsId' start' length
Long Parameter List,SIL.FieldWorks.XWorks,IFlexMacro,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\IFlexMacro.cs,RunMacro,The method has 5 parameters. Parameters: target' targetField' wsId' startOffset' length
Long Parameter List,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,InterestingTextList,The method has 5 parameters. Parameters: mediator' propertyTable' repo' stTextRepo' includeScripture
Long Parameter List,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,MacroListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\MacroListener.cs,SafeToDoMacro,The method has 6 parameters. Parameters: sel' obj' flid' ws' start' length
Long Parameter List,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportMultiString,The method has 6 parameters. Parameters: writer' tss' ws' fieldName' p' fieldName_6
Long Parameter List,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportReferenceList,The method has 5 parameters. Parameters: writer' collection' fieldName' targetType' cpt
Long Parameter List,SIL.FieldWorks.XWorks,TreeBarHandlerUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TreeBarHandlerUtils.cs,CreateDuplicate,The method has 5 parameters. Parameters: orig' ownerHvo' flid' order' cache
Long Parameter List,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,CreateBrowseViewer,The method has 8 parameters. Parameters: nodeSpec' hvoRoot' fakeFlid' cache' mediator' propertyTable' sortItemProvider' sda
Long Parameter List,SIL.FieldWorks.XWorks,RecordBrowseActiveView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,CreateBrowseViewer,The method has 8 parameters. Parameters: nodeSpec' hvoRoot' fakeFlid' cache' mediator' propertyTable' sortItemProvider' sda
Long Parameter List,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,PossibilityRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetTargetFieldInfo,The method has 6 parameters. Parameters: targetClsId' owner' targetFlid' owningObj' flid' flidName
Long Parameter List,SIL.FieldWorks.XWorks,MatchingItemsRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,TryHandleUpdateOrMarkPendingReload,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,TryModifyingExistingList,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The method has 9 parameters. Parameters: name' owner' analysisWs' cache' mediator' propertyTable' owningObject' fontName' typeSize
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The method has 6 parameters. Parameters: propertyName' owner' cache' mediator' propertyTable' owningObject
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The method has 8 parameters. Parameters: name' owner' cache' mediator' propertyTable' owningObject' fontName' typeSize
Long Parameter List,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetDefaultFontNameAndSize,The method has 5 parameters. Parameters: analysisWs' cache' propertyTable' fontName' typeSize
Long Parameter List,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,HandleDomRightClick,The method has 5 parameters. Parameters: browser' e' element' propertyTable' mediator
Long Parameter List,SIL.FieldWorks.XWorks,XhtmlRecordDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlRecordDocView.cs,PropChanged,The method has 5 parameters. Parameters: hvo' tag' ivMin' cvIns' cvDel
Long Parameter List,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetConfigDlgInfo,The method has 7 parameters. Parameters: configurationParameters' cache' styleSheet' mainWindowDelegateCallbacks' mediator' propertyTable' sLayoutPropertyName
Long Parameter List,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,ProcessPartChildrenForDuplication,The method has 5 parameters. Parameters: className' xnCaller' xmlNodeList' suffixCode' duplicates
Long Parameter List,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,ProcessPartChildForDuplication,The method has 5 parameters. Parameters: className' xnCaller' xnField' suffixCode' duplicates
Long Parameter List,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,The method has 6 parameters. Parameters: where' clsid' view' cache' sortItemProvider' adjuster
Long Parameter List,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,ArchiveNow,The method has 7 parameters. Parameters: owner' dialogFont' localizationDialogIcon' filesToArchive' propertyTable' thisapp' cache
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixOptionsAccordingToCurrentTypes,The length of the parameter filterInflectionalVariantTypes is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FilterInvalidPublicationsFromModel,The length of the parameter allPossiblePublicationsInAllWs is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,,The length of the parameter _allEntriesPublicationDecorator is 31.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationDlg.cs,,The length of the parameter manageConfigs_treeDetailButton_split is 36.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,ImportStyles,The length of the parameter correspondingPreImportStyleInfo is 31.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,,The length of the parameter _temporaryImportConfigLocation is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,,The length of the parameter ReversalIndexConfigurationDirectoryName is 39.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,,The length of the parameter DictionaryConfigurationDirectoryName is 36.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,,The length of the parameter configurationsTableLayoutPanel is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,,The length of the parameter configurationsExplanationLabel is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationModel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationModel.cs,,The length of the parameter AllReversalIndexesFilenameBase is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,GetCountsOfReversalIndexes,The length of the parameter relevantReversalIndexesAndTheirCounts is 37.
Long Identifier,SIL.FieldWorks.XWorks,SilErrorReportingAdapter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SilErrorReportingAdapter.cs,NotifyUserOfProblem,The length of the parameter resultIfAlternateButtonPressed is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationImportDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportDlg.cs,,The length of the parameter overwriteOptionFlowLayoutPanel is 30.
Long Identifier,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,AddNewLexEntryRef,The length of the parameter unspecComplexFormEntryTypeGuid is 30.
Long Identifier,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,,The length of the parameter ksLiftExportPicturesPropertyName is 32.
Long Identifier,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,,The length of the parameter m_additionalMinimumHeightForMono is 32.
Long Identifier,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,,The length of the parameter settingsForWebonaryTableLayoutPanel is 35.
Long Identifier,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,,The length of the parameter publicationSelectionTableLayoutPanel is 36.
Long Identifier,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,,The length of the parameter m_fHandlingFilterChangedByClerk is 31.
Long Identifier,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,UpdateOwningObject,The length of the parameter fUpdateOwningObjectOnlyIfChanged is 32.
Long Identifier,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter SelectedListBarNodeErrorMessage is 31.
Long Identifier,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fReloadingDueToMissingObject is 30.
Long Identifier,SIL.FieldWorks.XWorks,ListUpdateHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fOriginalListLoadingSuppressedState is 37.
Long Identifier,SIL.FieldWorks.XWorks,ListUpdateHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fOriginalSkipRecordNavigationState is 36.
Long Identifier,SIL.FieldWorks.XWorks,ListUpdateHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fOriginalLoadRequestedWhileSuppressed is 39.
Long Identifier,SIL.FieldWorks.XWorks,ListUpdateHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fOriginalSuppressSaveOnChangeRecord is 37.
Long Identifier,SIL.FieldWorks.XWorks,ListUpdateHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,,The length of the parameter m_fTriggerPendingReloadOnDispose is 32.
Long Identifier,SIL.FieldWorks.XWorks,PossibilityRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetMatchingClass,The length of the parameter classNameOfOwnerOfCurrentObject is 31.
Long Identifier,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,,The length of the parameter m_suspendReloadUntilOnChangeListItemsClass is 42.
Long Identifier,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,,The length of the parameter m_requestedLoadWhileSuppressed is 30.
Long Identifier,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,,The length of the parameter m_configNotLocalizedObjectName is 30.
Long Identifier,SIL.FieldWorks.XWorks,DictionaryConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationUtils.cs,SetReversalIndexGuidBasedOnReversalIndexConfiguration,The length of the parameter reversalIndexConfigWritingSystemLanguage is 40.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,,The length of the parameter m_classToCustomFieldsLabelToName is 32.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,,The length of the parameter m_configDirSuffixBeingMigrated is 30.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,,The length of the parameter dropDownParentSenseNumberStyle is 30.
Long Identifier,SIL.FieldWorks.XWorks.DictionaryDetailsView,SpecialCharacterHandling,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SpecialCharacterHandling.cs,,The length of the parameter s_visibleCharacterSubstitutions is 31.
Long Statement,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,EnableTypeControls,The length of the statement  "			m_listComboBox.Enabled = m_fdwCurrentField.IsNew && (type == CustomFieldType.ListRefAtomic || type == CustomFieldType.ListRefCollection); " is 137.
Long Statement,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,EnableTypeControls,The length of the statement  "			m_wsComboBox.Enabled = m_fdwCurrentField.IsNew && (type == CustomFieldType.SingleLineText || type == CustomFieldType.MultiparagraphText); " is 137.
Long Statement,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AddCustomFieldDlg)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,InitializeComponent,The length of the statement  "			this.m_fieldsListView.ItemSelectionChanged += new System.Windows.Forms.ListViewItemSelectionChangedEventHandler(this.m_fieldsListView_ItemSelectionChanged); " is 156.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfigurableDictionaryNode.cs,Equals,The length of the statement  "			if (otherNode == null || Label != otherNode.Label || LabelSuffix != otherNode.LabelSuffix || FieldDescription != otherNode.FieldDescription) " is 140.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfigurableDictionaryNode.cs,CheckParents,The length of the statement  "			return first.Label == second.Label && first.LabelSuffix == second.LabelSuffix && CheckParents(first.Parent' second.Parent); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfigurableDictionaryNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfigurableDictionaryNode.cs,GatherReallyReallyAllSiblings,The length of the statement  "				siblings = Parent.IsSharedItem ? Parent.Parent.Parent.ReferencedOrDirectChildren : Parent.Parent.ReferencedOrDirectChildren; " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateEntryHtmlWithStyles,The length of the statement  "				var exportSettings = new GeneratorSettings(readOnlyPropTable.GetValue<LcmCache>("cache")' readOnlyPropTable' false' false' null' " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateOpeningHtml,The length of the statement  "			// Use the WriteRaw' WriteFullEndElement hack to avoid a self closing tag which is invalid xhtml. This empty title is here to make more valid xhtml. " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateWritingSystemsMetadata,The length of the statement  "			var wsList = lp.CurrentAnalysisWritingSystems.Union(lp.CurrentVernacularWritingSystems.Union(lp.CurrentPronunciationWritingSystems)); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePreviewHtmlWithStyles,The length of the statement  "			var preferredPath = GetPreferredPreviewPath(configuration' propertyTable.GetValue<LcmCache>("cache")' entryHvos.Length == 1); " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePreviewHtmlWithStyles,The length of the statement  "				SavePublishedHtmlWithStyles(entryHvos' publicationDecorator' entriesPerPage' configuration' propertyTable' xhtmlPath' progress); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePreviewHtmlWithStyles,The length of the statement  "						SavePublishedHtmlWithStyles(entryHvos' publicationDecorator' entriesPerPage' configuration' propertyTable' xhtmlPath' progress); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsNormalRtl,The length of the statement  "			var dictionaryNormalStyle = new ExportStyleInfo(FontHeightAdjuster.StyleSheetFromPropertyTable(propertyTable).Styles["Dictionary-Normal"]); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,The length of the statement  "			var wantLetterHeaders = (entryCount > 1 || !IsLexEditPreviewOnly(publicationDecorator)) && (RecordClerk.IsClerkSortingByHeadword(clerk)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,The length of the statement  "				var settings = new GeneratorSettings(cache' readOnlyPropertyTable' true' true' Path.GetDirectoryName(xhtmlPath)' IsNormalRtl(readOnlyPropertyTable)' Path.GetFileName(cssPath) == "configured.css"); " is 196.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,The length of the statement  "					CopyFileSafely(settings' Path.Combine(FwDirectoryFinder.FlexFolder' ImagesFolder' CurrentEntryMarker)' CurrentEntryMarker); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratePageButton,The length of the statement  "			xhtmlWriter.WriteString(GeneratePageButtonText(entryHvos[page.Item1]' entryHvos[page.Item2]' settings' page.Item1 == 0)); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPageRanges,The length of the statement  "					pageRanges.Add(new Tuple<int' int>(Math.Max(entryHvos.Length - entryHvos.Length % entriesPerPage - entriesPerPage' 0)' entryHvos.Length - 1)); " is 142.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SpawnEntryGenerationThreadsAndWait,The length of the statement  "				// Note that the loop index variable startIndex cannot be used in an action defined as a closure.  So we have to define all the " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SpawnEntryGenerationThreadsAndWait,The length of the statement  "				// possible closures explicitly to achieve the parallelism reliably.  (Remember your theoretical computer science lessons " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SpawnEntryGenerationThreadsAndWait,The length of the statement  "				// ReSharper disable AccessToDisposedClosure Justification: threads are guaranteed to finish before countDown is disposed " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateLetterHeaderIfNeeded,The length of the statement  "			var firstLetter = ConfiguredExport.GetLeadChar(GetHeadwordForLetterHead(entry)' wsString' dummyOne' dummyTwo' dummyThree' " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForMainEntry,The length of the statement  "			if (configuration.DictionaryNodeOptions != null && ((ILexEntry)entry).ComplexFormEntryRefs.Any() && !IsListItemSelectedForExport(configuration' entry)) " is 151.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForMinorEntry,The length of the statement  "			return applicablePart == null ? string.Empty : GenerateXHTMLForEntry(entry' applicablePart' publicationDecorator' settings); " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsMainEntry,The length of the statement  "				|| !lexEntry.EntryRefsOS.Any()) // owning an ILexEntryRef denotes Complex Forms or Variants (not owning any denotes Main Entries) " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForEntry,The length of the statement  "				return CustomIcu.GetIcuNormalizer(FwNormalizationMode.knmNFC).Normalize(bldr.ToString()); // All content should be in NFC (LT-18177) " is 132.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForFieldByReflection,The length of the statement  "				if (!GetPropValueForCustomField(field' config' cache' customFieldOwnerClassName' config.FieldDescription' ref propertyValue)) " is 125.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetSortedReferencePropertyValue,The length of the statement  "			// LT-17384: LexReferences are not ordered (they are put in some order each time FLEx starts)' but we want to have a consistent order each " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetSortedReferencePropertyValue,The length of the statement  "			// LT-15764 We're actually going to sort the ConfigTargets of the LexReference objects later' so what this really accomplishes " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetSortedReferencePropertyValue,The length of the statement  "			// REVIEW (Hasso) 2016.03: this Where is redundant to the IsListItemSelectedForExport call in GenerateCollectionItemContent " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetCustomFieldFlid,The length of the statement  "				// ENHANCE (Hasso) 2016.06: take pity on the poor user who has defined identically-named Custom Fields on both Sense and Entry " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForPicture,The length of the statement  "			var srcAttribute = GenerateSrcAttributeFromFilePath(pictureFile' settings.UseRelativePaths ? "pictures" : null' settings); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetProperty,The length of the statement  "				propInfo = current.GetProperty(propertyOfInterest' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "					bldr.Append(GenerateXHTMLForILexEntryRefCollection(config' collection' cmOwner' pubDecorator' settings' lexEntryTypeNode' false)); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "					bldr.Append(GenerateXHTMLForILexEntryRefCollection(config' collection' cmOwner' pubDecorator' settings' lexEntryTypeNode' true)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "							"double calls to GenerateXHTMLForILexEntryRefsByType don't play nicely with ListOptions. Everything will be generated twice (if it doesn't crash)"); " is 148.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "						GenerateXHTMLForILexEntryRefsByType(config' lerCollection' collectionOwner' pubDecorator' settings' bldr' lexEntryTypeNode' " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "						GenerateXHTMLForILexEntryRefsByType(config' lerCollection' collectionOwner' pubDecorator' settings' bldr' lexEntryTypeNode' " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForCollection,The length of the statement  "					GenerateXHTMLForILexReferenceCollection(config' collection.Cast<ILexReference>()' cmOwner' pubDecorator' settings' bldr); " is 121.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsFactoredReference,The length of the statement  "			return IsVariantEntryType(node' out typeChild) || IsComplexEntryType(node' out typeChild) || IsPrimaryEntryReference(node' out typeChild); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsComplexEntryType,The length of the statement  "				complexEntryTypeNode = config.ReferencedOrDirectChildren.FirstOrDefault(child => child.FieldDescription == "ComplexEntryTypesRS"); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsVariantEntryType,The length of the statement  "				variantEntryTypeNode = config.ReferencedOrDirectChildren.FirstOrDefault(x => x.FieldDescription == "VariantEntryTypesRS"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefCollection,The length of the statement  "			// ComplexFormsNotSubentries is a filtered version of VisibleComplexFormBackRefs' so it doesn't have it's own VirtualOrdering. " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefCollection,The length of the statement  "			var fieldForVO = config.FieldDescription == "ComplexFormsNotSubentries" ? "VisibleComplexFormBackRefs" : config.FieldDescription; " is 129.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefCollection,The length of the statement  "			if (typeNode.IsEnabled && typeNode.ReferencedOrDirectChildren != null && typeNode.ReferencedOrDirectChildren.Any(y => y.IsEnabled)) " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefCollection,The length of the statement  "				GenerateXHTMLForILexEntryRefsByType(config' lerCollection' collectionOwner' pubDecorator' settings' bldr' typeNode' isComplex); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForILexEntryRefsByType,The length of the statement  "					if (isComplex ? lexEntRef.ComplexEntryTypesRS.Any(t => t.Guid == typeGuid) : lexEntRef.VariantEntryTypesRS.Any(t => t.Guid == typeGuid)) " is 136.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsCollectionInNeedOfSorting,The length of the statement  "			return fieldDescr.EndsWith("RC") || fieldDescr.EndsWith("OC"); // Reference Collection' Owning Collection (vs. Sequence) " is 120.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSenses,The length of the statement  "			var isSameGrammaticalInfo = IsAllGramInfoTheSame(config' filteredSenseCollection' isSubsense' out lastGrammaticalInfo' out langId); " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSenses,The length of the statement  "			// Calculating isThisSenseNumbered may make sense to do for each item in the foreach loop below' but because of how the answer " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSenses,The length of the statement  "				bldr.Append(GenerateSenseContent(config' publicationDecorator' item' isThisSenseNumbered' settings' isSameGrammaticalInfo' info)); " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,CheckIfAllGramInfoTheSame,The length of the statement  "				var grammaticalInfo = config.ReferencedOrDirectChildren.FirstOrDefault(e => e.FieldDescription == "MorphoSyntaxAnalysisRA" && e.IsEnabled); " is 139.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,CheckIfAllGramInfoTheSame,The length of the statement  "				var child = grammaticalInfo.ReferencedOrDirectChildren.FirstOrDefault(e => e.IsEnabled && e.ReferencedOrDirectChildren.Count == 0); " is 131.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSenseContent,The length of the statement  "				// Wrap the number and sense combination in a sensecontent span so that can both be affected by DisplayEachSenseInParagraph " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GeneratePictureContent,The length of the statement  "			//  Should we choose in the future to generate the Picture's sense number using ConfiguredXHTMLGenerator based on a SenseOption' " is 128.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCollectionItemContent,The length of the statement  "			if ((config.DictionaryNodeOptions is DictionaryNodeListOptions && !IsListItemSelectedForExport(config' item' collectionOwner)) " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SortAndFilterLexRefsAndTargets,The length of the statement  "					|| (LexRefTypeTags.IsAsymmetric((LexRefTypeTags.MappingTypes)type.Item1.MappingType) && !type.Item2.Equals(curType.Item2))) " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SortAndFilterLexRefsAndTargets,The length of the statement  "					allTargetsForType.Add(new Tuple<ISenseOrEntry' ILexReference>(lexReference.ConfigTargets.First(t => !IsOwner(t' cmOwner))' lexReference)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,MoveTargetsToMasterList,The length of the statement  "			// In a "Sequence" type lexical relation (e.g. days of the week)' the current item should be displayed in its location in the sequence. " is 135.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The length of the statement  "							// OwnerType is a LexRefType' some of which are asymmetric (e.g. Part/Whole). If this Type is symmetric or we are currently " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The length of the statement  "							// in the reverse direction' we need to display the ReverseName or ReverseAbbreviation instead of the Name or Abbreviation. " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The length of the statement  "							if (LexRefTypeTags.IsAsymmetric((LexRefTypeTags.MappingTypes)reference.OwnerType.MappingType) && LexRefDirection(reference' collectionOwner) == ":r") " is 149.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The length of the statement  "								xw.WriteRaw(GenerateXHTMLForFieldByReflection(reference' child' publicationDecorator' settings' fUseReverseSubField: true)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateCrossReferenceChildren,The length of the statement  "							throw new NotImplementedException("The field " + child.FieldDescription + " is not supported on Cross References or Lexical Relations. Supported fields are OwnerType and ConfigTargets"); " is 186.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,EntryRefForSubentry,The length of the statement  "			var complexEntryRef = subEntry.ComplexFormEntryRefs.FirstOrDefault(entryRef => entryRef.PrimaryLexemesRS.Contains(mainEntry) // subsubentries " is 141.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForICmObject,The length of the statement  "			if (propertyValue == null || config.ReferencedOrDirectChildren == null || !config.ReferencedOrDirectChildren.Any(node => node.IsEnabled)) " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsCollectionType,The length of the statement  "			// The collections we test here are generic collection types (e.g. IEnumerable<T>). Note: This (and other code) does not work for arrays. " is 137.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsListItemSelectedForExport,The length of the statement  "				throw new ArgumentException(string.Format("This configuration node had no options and we were expecting them: {0} ({1})"' config.DisplayLabel' config.FieldDescription)' "config"); " is 179.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForValue,The length of the statement  "			// If we're working with a headword' either for this entry or another one (Variant or Complex Form' etc.)' store that entry's GUID " is 130.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForValue,The length of the statement  "					return GenerateXHTMLForVirtualStrings(((ISenseOrEntry)field).Item' (IMultiAccessorBase)propertyValue' config' settings' guid); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForValue,The length of the statement  "					Debug.WriteLine(String.Format("Bad configuration node: {0}"' DictionaryConfigurationMigrator.BuildPathStringFromNode(config))); " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForString,The length of the statement  "							writingSystem = writingSystem ?? GetLanguageFromFirstOption(config.DictionaryNodeOptions as DictionaryNodeWritingSystemOptions' " is 127.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForString,The length of the statement  "					return string.Format("<span>\u0FFF\u0FFF\u0FFF<!-- Error generating content for string: '{0}' invalid surrogate pairs replaced with \\u0fff --></span>"' " is 152.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPublicationDecoratorAndEntries,The length of the statement  "			var currentPublicationString = propertyTable.GetStringProperty("SelectedPublication"' xWorksStrings.AllEntriesPublication); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPublicationDecoratorAndEntries,The length of the statement  "			var decorator = new DictionaryPublicationDecorator(cache' clerk.VirtualListPublisher' clerk.VirtualFlid' currentPublication); " is 125.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersController.cs,Save,The length of the statement  "			_homographConfig.CustomHomographNumberList = _view.CustomDigits == null ? new List<string>() : new List<string>(_view.CustomDigits); " is 132.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(HeadwordNumbersDlg)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The length of the statement  "			this.m_chkShowHomographNumInDict.CheckedChanged += new System.EventHandler(this.m_chkShowHomographNumInDict_CheckedChanged); " is 124.
Long Statement,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The length of the statement  "			this.m_writingSystemCombo.SelectedIndexChanged += new System.EventHandler(this.m_writingSystemCombo_SelectedIndexChanged); " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForWsSpanWithNormalStyle,The length of the statement  "			var defaultStyleProps = GetOnlyCharacterStyle(GenerateCssStyleFromLcmStyleSheet("Normal"' DefaultStyle' propertyTable)); " is 120.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForWsSpanWithNormalStyle,The length of the statement  "				defaultStyleProps.Add(new Property("font-size") { Term = new PrimitiveTerm(UnitType.Point' FontInfo.kDefaultFontSize) }); " is 121.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateDictionaryMinorParagraphCss,The length of the statement  "					GenerateCssForWritingSystems(string.Format("div.{0} span"' GetClassAttributeForConfig(minorEntryNode))' styleName' styleSheet' propertyTable); " is 142.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromConfigurationNode,The length of the statement  "					GenerateCssFromPictureOptions(configNode' (DictionaryNodePictureOptions)configNode.DictionaryNodeOptions' styleSheet' baseSelection); " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "			var selectors = GenerateSelectorsFromNode(baseSelection' configNode' out baseSelection' propertyTable.GetValue<LcmCache>("cache")' propertyTable); " is 146.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "			var senseContentSelector = string.Format("{0}> .sensecontent"' baseSelection.Substring(0' baseSelection.LastIndexOf('.'))); " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "				senseNumberRule.Declarations.Properties.AddRange(GenerateCssStyleFromLcmStyleSheet(senseOptions.NumberStyle' DefaultStyle' propertyTable)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "			var styleDeclaration = string.IsNullOrEmpty(configNode.Style) ? new StyleDeclaration() : GenerateCssStyleFromLcmStyleSheet(configNode.Style' 0' configNode' propertyTable); " is 171.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "					Value = senseOptions.DisplayFirstSenseInline ? string.Format("{0} + {1}"' senseContentSelector' ".sensecontent") : senseContentSelector " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "				var collectionSelector = senseContentSelector.Substring(0' senseContentSelector.LastIndexOf(" ."' StringComparison.Ordinal)); " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "				foreach (var gramInfoNode in configNode.Children.Where(node => node.FieldDescription == "MorphoSyntaxAnalysisRA" && node.IsEnabled)) " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSenses,The length of the statement  "					GenerateCssFromConfigurationNode(gramInfoNode' styleSheet' collectionSelector + " .sharedgrammaticalinfo"' propertyTable); " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "				var senseSufixRule = senseOptions != null && senseOptions.DisplayFirstSenseInline ? ":not(:first-child):before" : ":before"; " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("font-size") { Term = new PrimitiveTerm(UnitType.Point' MilliPtToPt(wsFontInfo.FontSize.Value)) }); " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("color") { Term = new PrimitiveTerm(UnitType.RGB' wsFontInfo.FontColor.Value.Name) }); " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("font-family") { Term = new PrimitiveTerm(UnitType.Ident' wsFontInfo.FontName.Value) }); " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("font-weight") { Term = new PrimitiveTerm(UnitType.Ident' wsFontInfo.Bold.Value ? "bold" : "normal") }); " is 145.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("font-style") { Term = new PrimitiveTerm(UnitType.Ident' wsFontInfo.Italic.Value ? "italic" : "normal") }); " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "					bulletRule.Declarations.Add(new Property("background-color") { Term = new PrimitiveTerm(UnitType.RGB' wsFontInfo.BackColor.Value.Name) }); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "						bulletRule.Declarations.Add(new Property("text-decoration-style") { Term = new PrimitiveTerm(UnitType.Ident' UnderlineStyleMap[wsFontInfo.Underline.Value.ToString()])}); " is 169.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssforBulletedList,The length of the statement  "						bulletRule.Declarations.Add(new Property("text-decoration-color") { Term = new PrimitiveTerm(UnitType.RGB' wsFontInfo.UnderlineColor.Value.Name) }); " is 148.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromListAndParaOptions,The length of the statement  "					// REVIEW (Hasso) 2016.10: both of these following lines add all rules but BeforeAfter (so if the condition in the first line " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AdjustRuleIfParagraphNumberScheme,The length of the statement  "					bulletRule.Declarations.Add(new Property("font-size") { Term = new PrimitiveTerm(UnitType.Point' MilliPtToPt(wsFontInfo.FontSize.Value)) }); " is 140.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AdjustRuleIfParagraphNumberScheme,The length of the statement  "					bulletRule.Declarations.Add(new Property("color") { Term = new PrimitiveTerm(UnitType.RGB' wsFontInfo.FontColor.Value.Name) }); " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromWsOptions,The length of the statement  "				var wsIdString = possiblyMagic == 0 ? ws.Id : WritingSystemServices.GetWritingSystemList(cache' possiblyMagic' true).First().Id; " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForWritingSystemPrefix,The length of the statement  "			wsRule1.Declarations.Properties.AddRange(GetOnlyCharacterStyle(GenerateCssStyleFromLcmStyleSheet(WritingSystemStyleName' 0' configNode' propertyTable))); " is 153.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "			// TODO: REFACTOR this method to handle certain nodes more specifically. The options type should be used to branch into node specific code. " is 139.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "					dec.Add(new Property("content") { Term = new PrimitiveTerm(UnitType.String' SpecialCharacterHandling.MakeSafeCss(configNode.Between)) }); " is 137.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "						dec.Properties.AddRange(GenerateCssStyleFromLcmStyleSheet(BeforeAfterBetweenStyleName' cache.DefaultAnalWs' propertyTable)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "					// use default (class-named) between selector for factored references' because "span+span" erroneously matches Type spans " is 121.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "				dec.Add(new Property("content") { Term = new PrimitiveTerm(UnitType.String' SpecialCharacterHandling.MakeSafeCss(configNode.Before)) }); " is 136.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "					dec.Properties.AddRange(GenerateCssStyleFromLcmStyleSheet(BeforeAfterBetweenStyleName' cache.DefaultAnalWs' propertyTable)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "				dec.Add(new Property("content") { Term = new PrimitiveTerm(UnitType.String' SpecialCharacterHandling.MakeSafeCss(configNode.After)) }); " is 135.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateSelectorsFromNode,The length of the statement  "					dec.Properties.AddRange(GenerateCssStyleFromLcmStyleSheet(BeforeAfterBetweenStyleName' cache.DefaultAnalWs' propertyTable)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,IsFactoredReferenceType,The length of the statement  "			return parent != null && ConfiguredXHTMLGenerator.IsFactoredReference(parent' out typeNode) && ReferenceEquals(typeNode' configNode); " is 133.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateFlowResetForBaseNode,The length of the statement  "			flowResetRule.Declarations.Properties.Add(new Property("white-space") { Term = new PrimitiveTerm(UnitType.Ident' "pre-wrap") }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,SelectClassName,The length of the statement  "					return string.Format(".{0} .{1}"' GetClassAttributeForConfig(configNode)' GetClassAttributeForCollectionItem(configNode)); " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GetOnlyParagraphStyle,The length of the statement  "			foreach(var prop in fullStyleDeclaration.Where(prop => !prop.Name.Contains("font") && !prop.Name.Contains("color") && !prop.Name.Contains("content") && !prop.Name.Contains("counter-increment"))) " is 194.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GetOnlyBulletContent,The length of the statement  "			foreach (var prop in fullStyleDeclaration.Where(prop => prop.Name.Contains("content") || prop.Name.Contains("counter-increment"))) " is 130.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				declaration.Add(new Property("text-align") { Term = new PrimitiveTerm(UnitType.Ident' exportStyleInfo.Alignment.AsCssString()) }); " is 130.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				declaration.Add(new Property("padding-bottom") { Term = new PrimitiveTerm(UnitType.Point' MilliPtToPt(exportStyleInfo.SpaceAfter)) }); " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				declaration.Add(new Property("padding-top") { Term = new PrimitiveTerm(UnitType.Point' MilliPtToPt(exportStyleInfo.SpaceBefore)) }); " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				declaration.Add(new Property(paddingDirection) { Term = new PrimitiveTerm(UnitType.Point' MilliPtToPt(exportStyleInfo.TrailingIndent)) }); " is 138.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "						declaration.Add(new Property("counter-increment") { Term = new PrimitiveTerm(UnitType.Attribute' " " + node.Label.ToLower()) }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "						declaration.Add(new Property("content") { Term = new PrimitiveTerm(UnitType.Attribute' string.Format(" counter({0}' {1}) {2}"' node.Label.ToLower()' selectedNumStyle' @"' '")) }); " is 179.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "					ancestorIndents = CalculateParagraphIndentsFromAncestors(ancestorIndents.Ancestor' styleSheet' new AncestorIndents(0f' 0f)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				// REVIEW (cont) whose directions oppose Dictionary-Normal. In this case' O Pesky Users' we will need to know which direction the " is 129.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				// REVIEW (cont) paragraph is going when we generate the innermost strings. Implementing this will be pricy for paragraphy " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				// REVIEW (cont) But we may need a CSS fix for bidirectionality until we can get GeckoFx 47+. O Fair Quill' Delicate Parchment. " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The length of the statement  "				declaration.Add(new Property("direction") { Term = new PrimitiveTerm(UnitType.Ident' exportStyleInfo.DirectionIsRightToLeft == TriStateBool.triTrue ? "rtl" : "ltr") }); " is 168.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AddFontInfoCss,The length of the statement  "			// For the following additions' wsFontInfo is publicly accessible InheritableStyleProp value if set (ie. m_fontSize' m_bold' etc.)' " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AddFontInfoCss,The length of the statement  "			AddInfoFromWsOrDefaultValue(wsFontInfo.m_italic' defaultFontInfo.Italic' "font-style"' "italic"' "normal"' declaration); " is 120.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateLetterHeaderCss,The length of the statement  "			letHeadRule.Declarations.Properties.Add(new Property("-moz-column-count") { Term = new PrimitiveTerm(UnitType.Number' 1) }); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateLetterHeaderCss,The length of the statement  "			letHeadRule.Declarations.Properties.Add(new Property("-webkit-column-count") { Term = new PrimitiveTerm(UnitType.Number' 1) }); " is 127.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateLetterHeaderCss,The length of the statement  "			letHeadRule.Declarations.Properties.AddRange(GetOnlyParagraphStyle(GenerateCssStyleFromLcmStyleSheet(LetterHeadingStyleName' 0' propertyTable))); " is 145.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButtonHover.Declarations.Properties.Add(new Property("background") { Term = new PrimitiveTerm(UnitType.Grad' "linear-gradient(to bottom' #dfdfdf 5%' #ededed 100%)") }); " is 172.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButtonHover.Declarations.Properties.Add(new Property("background-color") { Term = new PrimitiveTerm(UnitType.RGB' "#cdcdcd") }); " is 132.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButtonActive.Declarations.Properties.Add(new Property("position") { Term = new PrimitiveTerm(UnitType.Ident' "relative") }); " is 128.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButton.Declarations.Properties.Add(new Property("display") { Term = new PrimitiveTerm(UnitType.Ident' "table-cell") }); " is 123.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButton.Declarations.Properties.Add(new Property("text-decoration") { Term = new PrimitiveTerm(UnitType.Ident' "none") }); " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButton.Declarations.Properties.Add(new Property("text-align") { Term = new PrimitiveTerm(UnitType.Ident' "center") }); " is 122.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButton.Declarations.Properties.Add(new Property("font-weight") { Term = new PrimitiveTerm(UnitType.Ident' "bold") }); " is 121.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			var shadowTerms = BuildTermList(TermList.TermSeparator.Space' new PrimitiveTerm(UnitType.Ident' "inset")' new PrimitiveTerm(UnitType.Pixel' 0)' " is 143.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "				new PrimitiveTerm(UnitType.Pixel' 1)' new PrimitiveTerm(UnitType.Pixel' 0)' new PrimitiveTerm(UnitType.Pixel' 0)' new PrimitiveTerm(UnitType.RGB' "#ffffff")); " is 158.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			var textShadowTerms = BuildTermList(TermList.TermSeparator.Space' new PrimitiveTerm(UnitType.Pixel' 0)' new PrimitiveTerm(UnitType.Pixel' 1)' " is 141.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			pageButton.Declarations.Properties.Add(new Property("background-color") { Term = new PrimitiveTerm(UnitType.RGB' "#ededed")}); " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			currentButtonRule.Declarations.Properties.Add(new Property("background") { Term = new PrimitiveTerm(UnitType.Grad' "linear-gradient(to bottom' #dfdfdf 5%' #ededed 100%)") }); " is 174.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			currentButtonRule.Declarations.Properties.Add(new Property("background-color") { Term = new PrimitiveTerm(UnitType.RGB' "#cdcdcd") }); " is 134.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "			return string.Format("{1}{0}{2}{0}{3}{0}{4}{0}{5}{0}{6}{0}"' Environment.NewLine' screen.ToString(true)' print.ToString(true)' " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The length of the statement  "				pageButton.ToString(true)' pageButtonHover.ToString(true)' pageButtonActive.ToString(true)' currentButtonRule.ToString(true)); " is 126.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "				"linear-gradient(to " + directionOfRule + "' rgb(100'200'245)' rgb(200'238'252) 2em' rgb(200'238'252)' transparent' transparent)") " is 130.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "			selectedEntryBefore.Declarations.Properties.Add(new Property("content") { Term = new PrimitiveTerm(UnitType.Ident' "''") }); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "			selectedEntryBefore.Declarations.Properties.Add(new Property("position") { Term = new PrimitiveTerm(UnitType.Ident' "absolute") }); " is 131.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "			selectedEntryBefore.Declarations.Properties.Add(new Property("z-index") { Term = new PrimitiveTerm(UnitType.Number' -10) }); " is 124.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "			selectedEntryBefore.Declarations.Properties.Add(new Property("width") { Term = new PrimitiveTerm(UnitType.Percentage' 75) }); " is 125.
Long Statement,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The length of the statement  "					"linear-gradient(to bottom " + directionOfRule + "' transparent' rgb(200'238'252) 1em' rgb(200'238'252)' rgb(200'238'252)' transparent)") " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,RefreshView,The length of the statement  "			// Fallback to selecting first root' trying to make sure there is always a selection for the buttons to be enabled or disabled with respect to. " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,RefreshView,The length of the statement  "			// Try to prevent scrolling away from what the user was seeing in the tree. But if necessary' scroll so the selected node is visible. " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,RefreshPreview,The length of the statement  "			View.PreviewData = ConfiguredXHTMLGenerator.GenerateEntryHtmlWithStyles(_previewEntry' _model' _allEntriesPublicationDecorator' _propertyTable); " is 144.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,SetConfigureHomographParameters,The length of the statement  "			var subSubSenseNode = subSenseNode.ReferencedOrDirectChildren.Where(prop => prop.Label == "Subsenses").FirstOrDefault(); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,SetManagerTypeInfo,The length of the statement  "			dialog.HelpTopic = DictionaryConfigurationListener.GetDictionaryConfigurationBaseType(_propertyTable) == xWorksStrings.Dictionary " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,GetDefaultEntryForType,The length of the statement  "					var entryRepo = serviceLocator.GetInstance<IReversalIndexEntryRepository>().AllInstances().ToList(); // TODO pH 2015.07: filter by WS " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,CanReorder,The length of the statement  "			if (direction == Direction.Down && nodeIndex == lastSiblingIndex && !(parent.DictionaryNodeOptions is DictionaryNodeGroupingOptions)) " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,SelectCurrentConfigurationAndRefresh,The length of the statement  "			_model.HomographConfiguration.ExportToHomographConfiguration(Cache.ServiceLocator.GetInstance<HomographConfiguration>()); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,SelectCurrentConfigurationAndRefresh,The length of the statement  "			RefreshView(); // REVIEW pH 2016.02: this is called only in ctor and after ManageViews. do we even want to refresh and set isDirty? " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,ShareNodeAsReference,The length of the statement  "			var dupItem = sharedItems.FirstOrDefault(item => item.FieldDescription == node.FieldDescription && item.SubField == node.SubField); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,ShareNodeAsReference,The length of the statement  "			cssClass = String.IsNullOrEmpty(cssClass) ? String.Format("shared{0}"' CssGenerator.GetClassAttributeForConfig(node)) : cssClass.ToLowerInvariant(); " is 148.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,ShareNodeAsReference,The length of the statement  "				throw new ArgumentException(String.Format("A SharedItem already exists with the Label '{0}' or the class '{1}'"' key' cssClass)); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,ShareNodeAsReference,The length of the statement  "				Children = node.Children' // ENHANCE (Hasso) 2016.03: deep-clone so that unshared changes are not lost? Or only on share-with? " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,ShareNodeAsReference,The length of the statement  "			// ENHANCE pH 2016.04: if we ever allow nodes to have both Referenced and direct Children' all DC-model-sync code will need to change. " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,MergeTypesIntoDictionaryModel,The length of the statement  "				noteTypes = new HashSet<Guid>(cache.LangProject.LexDbOA.ExtendedNoteTypesOA.ReallyReallyAllPossibilities.Select(pos => pos.Guid)) " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,LoadAvailableWsList,The length of the statement  "			// REVIEW (Hasso) 2017.04: most of this method is redundant to UpdateWsOptions; however' it's too risky to remove right before a release. " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,UpdateWsOptions,The length of the statement  "			wsOptions.Options.AddRange(availableWSs.Where(availWs => !int.TryParse(availWs.Id' out magicId) && wsOptions.Options.All(opt => opt.Id != availWs.Id))); " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,GetCurrentWritingSystems,The length of the statement  "					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsPronunciation.ToString() }); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,GetCurrentWritingSystems,The length of the statement  "					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsReversalIndex.ToString() }); " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,GetAllPublications,The length of the statement  "			return cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS.Select(p => p.Name.BestAnalysisAlternative.Text).ToList(); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,MergeCustomFieldsIntoDictionaryModel,The length of the statement  "			// Detect a bad configuration file and report it in an intelligable way. We generated bad configs before the migration code was cleaned up " is 138.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,MergeCustomFieldLists,The length of the statement  "			// If the node is set to hide the custom fields then we will not merge the nodes (but we continue to recurse to its children) " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,MergeCustomFieldLists,The length of the statement  "				foreach (var group in parent.Children.Where(child => child.DictionaryNodeOptions is DictionaryNodeGroupingOptions && child.Children != null)) " is 141.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigurationDlg)); " is 146.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,DoImport,The length of the statement  "			catch (InstallationException e) // This is the exception thrown if the dtd guid in the style file doesn't match our program " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,DoImport,The length of the statement  "			// Set a filename for the new configuration. Use a unique filename that isn't either registered with another configuration' or existing on disk. Note that in this way' we ignore what the original filename was of the configuration file in the .zip file. " is 252.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,DoImport,The length of the statement  "			var outputConfigPath = existingConfigurationInTheWay != null ? existingConfigurationInTheWay.FilePath : NewConfigToImport.FilePath; " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,DoImport,The length of the statement  "			var isCustomizedOriginal = DictionaryConfigurationManagerController.IsConfigurationACustomizedOriginal(NewConfigToImport' configDir' _cache); " is 141.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,ImportStyles,The length of the statement  "			var preimportStyleLinks = _cache.LangProject.StylesOC.Where(style => UnsupportedStyles.Contains(style.Name)).ToDictionary( " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,ImportStyles,The length of the statement  "					postimportStyleToRewire.BasedOnRA = _cache.LangProject.StylesOC.FirstOrDefault(style => style.Name == correspondingPreImportStyleInfo.BasedOn); " is 143.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,ImportStyles,The length of the statement  "					postimportStyleToRewire.NextRA = _cache.LangProject.StylesOC.FirstOrDefault(style => style.Name == correspondingPreImportStyleInfo.Next); " is 137.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,PrepareImport,The length of the statement  "			if (DictionaryConfigurationListener.DictionaryConfigurationDirectoryName.Equals(configDirectory) && NewConfigToImport.IsReversal " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,PrepareImport,The length of the statement  "				|| !DictionaryConfigurationListener.DictionaryConfigurationDirectoryName.Equals(configDirectory) && !NewConfigToImport.IsReversal) " is 130.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,PrepareImport,The length of the statement  "			NewConfigToImport.Publications = DictionaryConfigurationModel.PublicationsInXml(_temporaryImportConfigLocation).ToList(); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,RefreshStatusDisplay,The length of the statement  "					var configType = Path.GetFileName(_projectConfigDir) == DictionaryConfigurationListener.DictionaryConfigurationDirectoryName " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,RefreshStatusDisplay,The length of the statement  "				publicationStatus = xWorksStrings.kstidPublicationsWillBeAdded + Environment.NewLine + string.Join("' "' _newPublications); " is 123.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,RefreshStatusDisplay,The length of the statement  "				customFieldStatus = xWorksStrings.kstidCustomFieldsWillBeAdded + Environment.NewLine + string.Join("' "' _customFieldsToImport); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,OnConfigureDictionary,The length of the statement  "				var controller = new DictionaryConfigurationController(dlg' m_propertyTable' m_mediator' clerk != null ? clerk.CurrentObject : null); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,GetCurrentConfiguration,The length of the statement  "			// before full initialization (if this view is the one being displayed on startup) test the propertyTable before continuing. " is 124.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,GetCurrentConfiguration,The length of the statement  "				// ENHANCE (Hasso) 2016.01: handle copied configs? Naww' the selected configs really should have been updated on migration " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationListener.cs,OnWritingSystemDeleted,The length of the statement  "			if (configuration.HomographConfiguration != null && ((string[])param).Any(x => x.ToString() == configuration.HomographConfiguration.HomographWritingSystem)) " is 156.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,ReLoadConfigurations,The length of the statement  "				_configurations.Select(configuration => new ListViewItem { Tag = configuration' Text = configuration.Label }).ToArray()); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,RenameConfiguration,The length of the statement  "				// - The user has pressed Enter or clicked away without making any changes (can usually be safely interpreted as a cancel) " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,RenameConfiguration,The length of the statement  "				// - Any of the above immediately after the warning to choose a unique name. It would require a fair amount of effort to distinguish " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,GenerateFilePath,The length of the statement  "			while (existingConfigurations.Any(conf => Path.GetFileName(filePath).Equals(Path.GetFileName(conf.FilePath))) || FileUtils.FileExists(Path.Combine(projectConfigDir'filePath))) " is 175.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,FormatFilePath,The length of the statement  "				MiscUtils.FilterForFileName(label' MiscUtils.FilenameFilterStrength.kFilterBackup) + DictionaryConfigurationModel.FileExtension); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnCopyConfiguration,The length of the statement  "			var newConfigListViewItem = _view.configurationsListView.Items.Cast<ListViewItem>().First(item => item.Tag == newConfig); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,ResetConfigurationContents,The length of the statement  "			// The reversals will be reset to what the user has configured under All Reversal Indexes. This makes it useful to actually change that. " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnDeleteConfiguration,The length of the statement  "					if (IsConfigurationAnOriginalReversal(configurationToDelete' _cache) && !IsAllReversalIndexConfig(configurationToDelete)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnDeleteConfiguration,The length of the statement  "				_view.configurationsListView.Items.Cast<ListViewItem>().First(item => item.Text == configurationToDelete.Label).Selected = true; " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnExportConfiguration,The length of the statement  "			var disallowedCharacters = MiscUtils.GetInvalidProjectNameChars(MiscUtils.FilenameFilterStrength.kFilterBackup) + " $%"; " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnExportConfiguration,The length of the statement  "				saveDialog.FileName = StringUtils.FilterForFileName(SelectedConfiguration + "_FLEx-Dictionary-Configuration_" + DateTime.Now.ToString("yyyy-MM-dd")' disallowedCharacters); " is 171.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,OnImportConfiguration,The length of the statement  "			using (var importDialog = new DictionaryConfigurationImportDlg(_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")) { HelpTopic = _view.HelpTopic }) " is 161.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,IsConfigurationACustomizedOriginal,The length of the statement  "			return IsConfigurationACustomizedShippedDefault(config' defaultConfigDir) || IsConfigurationAnOriginalReversal(config' cache); " is 126.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,IsConfigurationAnOriginalReversal,The length of the statement  "			// No configuration.WritingSystem means it is not a reversal' or that it is the AllReversalIndexes which doesn't act any different from a default config " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigurationManagerDlg)); " is 153.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,CreateProjectCustomCssIfNeeded,The length of the statement  "				var customCssPath = Path.Combine(configDir' string.Format("Project{0}Overrides.css"' innerDir == "ReversalIndex" ? "Reversal" : innerDir)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,CreateProjectCustomCssIfNeeded,The length of the statement  "					File.WriteAllText(customCssPath' "/* This file can be used to add custom css rules that will be applied to the xhtml export */"); " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,ConfigFilesInDir,The length of the statement  "			return Directory.Exists(dir) ? Directory.EnumerateFiles(dir' "*" + DictionaryConfigurationModel.FileExtension) : new string[0]; " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,GetConfigsNeedingMigration,The length of the statement  "			var dictionaryConfigLoc = Path.Combine(configSettingsDir' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName); " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,GetConfigsNeedingMigration,The length of the statement  "			var reversalIndexConfigLoc = Path.Combine(configSettingsDir' DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,OverwriteDefaultsWithMatchingNode,The length of the statement  "			var matchingPart = newDefaultList.FirstOrDefault(m => m.Label == oldDefaultNode.Label && m.LabelSuffix == oldDefaultNode.LabelSuffix && m.FieldDescription == oldDefaultNode.FieldDescription); " is 191.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationNodeRenameDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationNodeRenameDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigurationNodeRenameDlg)); " is 156.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigurationTreeControl)); " is 154.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadNode,The length of the statement  "					optionsView = LoadSenseOptions((DictionaryNodeSenseOptions)Options' node.Parent != null && node.FieldDescription == node.Parent.FieldDescription' " is 145.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadNode,The length of the statement  "			else if ("MorphoSyntaxAnalysisRA".Equals(m_node.FieldDescription) && m_node.Parent.DictionaryNodeOptions is DictionaryNodeSenseOptions) " is 135.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,ResetView,The length of the statement  "			view.SurroundingCharsVisible = node.Parent != null; // top-level nodes don't need Surrounding Characters (Before' Between' After) " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadWsOptions,The length of the statement  "			var availableWSs = DictionaryConfigurationController.LoadAvailableWsList(wsOptions' m_cache); // REVIEW (Hasso) 2017.04: is this redundant to the model.Load sync? " is 162.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			senseOptionsView.BeforeTextChanged += (sender' e) => { senseOptions.BeforeNumber = senseOptionsView.BeforeText; RefreshPreview(); }; " is 132.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			senseOptionsView.NumberingStyleChanged += (sender' e) => SenseNumbingStyleChanged(senseOptions' senseOptionsView' isSubsense' isSubSubsense); " is 141.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			senseOptionsView.AfterTextChanged += (sender' e) => { senseOptions.AfterNumber = senseOptionsView.AfterText; RefreshPreview(); }; " is 129.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			senseOptionsView.NumberStyleChanged += (sender' e) => { senseOptions.NumberStyle = senseOptionsView.NumberStyle; RefreshPreview(); }; " is 133.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			senseOptionsView.ParentSenseNumberingStyleChanged += (sender' e) => ParentSenseNumbingStyleChanged(senseOptions' senseOptionsView' isSubsense' isSubSubsense); " is 158.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadSenseOptions,The length of the statement  "			// Justification: senseOptions' senseOptionsView' and all of these lambda functions will all disappear at the same time. " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadListOptions,The length of the statement  "				// DictionaryNodeListAndParaOptions makes use of the Display Option CheckBox below the list; regular List Options do not. " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadGrammaticalInfoOptions,The length of the statement  "			// The option to show grammatical info first is stored on the Sense node' which should be Grammatical Info's direct parent " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,HandleStylesBtn,The length of the statement  "			// If the combo is not enabled' don't allow the Styles dialog to change it (pass null instead). FixStyles will ensure a refresh. " is 128.
Long Statement,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,HandleStylesBtn,The length of the statement  "				m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' new FlexStylesXmlAccessor(m_cache.LanguageProject.LexDbOA).SetPropsToFactorySettings); " is 153.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,IsGenerated,The length of the statement  "				return config.Parts[0].IsEnabled && (!entry.ComplexFormEntryRefs.Any() || ConfiguredXHTMLGenerator.IsListItemSelectedForExport(config.Parts[0]' entry)); " is 152.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,IsGenerated,The length of the statement  "			return entry.PublishAsMinorEntry && config.Parts.Skip(1).Any(part => ConfiguredXHTMLGenerator.IsListItemSelectedForExport(part' entry)); " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,GetCountsOfReversalIndexes,The length of the statement  "				var relevantReversalIndexesAndTheirCounts = m_cache.ServiceLocator.GetInstance<IReversalIndexRepository>().AllInstances() " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,ExportConfiguredXhtml,The length of the statement  "			var publicationDecorator = ConfiguredXHTMLGenerator.GetPublicationDecoratorAndEntries(m_propertyTable' out entriesToSave' exportType); " is 134.
Long Statement,SIL.FieldWorks.XWorks,DictionaryExportService,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,ExportConfiguredXhtml,The length of the statement  "			ConfiguredXHTMLGenerator.SavePublishedHtmlWithStyles(entriesToSave' publicationDecorator' int.MaxValue' configuration' m_propertyTable' xhtmlPath' progress); " is 157.
Long Statement,SIL.FieldWorks.XWorks,ClerkActivator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,ActivateClerkMatchingExportType,The length of the statement  "				return new ClerkActivator(currentClerk); // ensure the current active clerk is reactivated after we use the temporary clerk. " is 124.
Long Statement,SIL.FieldWorks.XWorks,ReversalIndexActivator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,ActivateReversalIndexIfNeeded,The length of the statement  "				// Set the reversal index guid property so that the right guid is found down in DictionaryPublicationDecorater.GetEntriesToPublish' " is 131.
Long Statement,SIL.FieldWorks.XWorks,ReversalIndexActivator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,ActivateReversalIndexIfNeeded,The length of the statement  "				// and manually call OnPropertyChanged to cause LexEdDll ReversalClerk.ChangeOwningObject(guid) to be called. This causes the " is 125.
Long Statement,SIL.FieldWorks.XWorks,DictionaryNodeWritingSystemOptions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryNodeOptions.cs,DeepCloneInto,The length of the statement  "			((DictionaryNodeWritingSystemOptions)target).Options = Options.Select(dno => new DictionaryNodeListOptions.DictionaryNodeOption " is 127.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationImportDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigurationImportDlg)); " is 152.
Long Statement,SIL.FieldWorks.XWorks,CustomListDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CustomListDlg.cs,InitializeHelpProvider,The length of the statement  "			m_helpProvider.SetHelpKeyword(this' m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider").GetHelpString(s_helpTopic)); " is 130.
Long Statement,SIL.FieldWorks.XWorks,CustomListDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CustomListDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(CustomListDlg)); " is 133.
Long Statement,SIL.FieldWorks.XWorks,DataTreeImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DataTreeImages.cs,InitializeComponent,The length of the statement  "			this.nodeImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("nodelImages.ImageStream"))); " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigMgrDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigMgrDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DictionaryConfigMgrDlg)); " is 142.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,PropChanged,The length of the statement  "			if (m_fieldsToFilter.Contains(tag) || m_lexRefFieldsToFilter.Contains(tag) || m_lexEntryRefFieldsToFilter.Contains(tag)) " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,get_BooleanProp,The length of the statement  "				return VecProp(hvo' LexEntryTags.kflidEntryRefs).Select(hvoLer => m_lerRepo.GetObject(hvoLer)).Any(ler => ler.HideMinorEntry == 0); " is 131.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,BuildFieldsToFilter,The length of the statement  "				if (mdc.GetFieldType(flid) != (int)CellarPropertyType.OwningAtomic && mdc.GetFieldType(flid) != (int)CellarPropertyType.ReferenceAtomic) " is 136.
Long Statement,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,VecProp,The length of the statement  "				return result.Where(hvoDest => !m_excludedItems.Contains(hvoDest) && !m_excludeAsMainEntry.Contains(hvoDest)).ToArray(); " is 120.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,InsertMediaFile,The length of the statement  "				dlg.InitialDirectory = m_mediator != null ? m_propertyTable.GetStringProperty("InsertMediaFile-LastDirectory"' defaultDirectory) " is 128.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayDataTreeHelp,The length of the statement  "			display.Visible = display.Enabled = (m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider").GetHelpString(helpTopicID) != null); " is 139.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,DisplayConvertLexEntry,The length of the statement  "			if (restrictToTool != null && restrictToTool != m_propertyTable.GetStringProperty("currentContentControl"' String.Empty)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,AddNewLexEntryRef,The length of the statement  "			if (restrictToTool != null && restrictToTool != m_propertyTable.GetStringProperty("currentContentControl"' String.Empty)) " is 121.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayVisibleComplexForm,The length of the statement  "			if (complexFormsSlice.Flid != Cache.MetaDataCacheAccessor.GetFieldId2(LexEntryTags.kClassId' "ComplexFormEntries"' false) && " is 124.
Long Statement,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,ComponentShowsComplexForm,The length of the statement  "			cfRef = (from item in cplxForm.EntryRefsOS where item.RefType == LexEntryRefTags.krtComplexForm select item).FirstOrDefault(); " is 126.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ExportDialog)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,DoExport,The length of the statement  "							app.SettingsKey' m_propertyTable.GetValue<IFeedbackInfoProvider>("FeedbackInfoProvider").SupportEmailAddress' this' false); " is 123.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ItemDisabled,The length of the statement  "			return ItemDisabled(m_rgFxtTypes[FxtIndex(tag)].m_ft' m_rgFxtTypes[FxtIndex(tag)].m_filtered' m_rgFxtTypes[FxtIndex(tag)].m_sFormat); " is 133.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ItemDisabled,The length of the statement  "			//enable unless the type is pathway & pathway is not installed' or if the type is lift and it is filtered' but there is no filter available' or if the filter excludes all items " is 176.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,The length of the statement  "				string.Format("1. What would you like to say to others about {0}?%0A%0A2. What languages have you used with {0}"' utilityLabel)' " is 128.
Long Statement,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,DoFlexExports,The length of the statement  "				MessageBox.Show(@"The " + currInput + @" Section may be Empty (or) Not exported"' app.ApplicationName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 147.
Long Statement,SIL.FieldWorks.XWorks,ExportSemanticDomainsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportSemanticDomainsDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ExportSemanticDomainsDlg)); " is 144.
Long Statement,SIL.FieldWorks.XWorks,ExportSemanticDomainsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportSemanticDomainsDlg.cs,InitializeComponent,The length of the statement  "			this.m_writingSystemsListBox.SelectedIndexChanged += new System.EventHandler(this.m_writingSystemsListBox_SelectedIndexChanged); " is 128.
Long Statement,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,m_btnHelp_Click,The length of the statement  "			ShowHelp.ShowHelpTopic(m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' "khtpExportTranslatedListsDlg"); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ExportTranslatedListsDlg)); " is 144.
Long Statement,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,InitializeComponent,The length of the statement  "			this.m_lvWritingSystems.ItemChecked += new System.Windows.Forms.ItemCheckedEventHandler(this.m_lvWritingSystems_ItemChecked); " is 125.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			var publications = cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS.Select(p => p.Name.BestAnalysisAlternative.Text).ToList(); " is 138.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			var projectConfigDir = DictionaryConfigurationListener.GetProjectConfigurationDirectory(propertyTable' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName); " is 173.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			var defaultConfigDir = DictionaryConfigurationListener.GetDefaultConfigurationDirectory(DictionaryConfigurationListener.DictionaryConfigurationDirectoryName); " is 158.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			var configurations = DictionaryConfigurationController.GetDictionaryConfigurationLabels(cache' defaultConfigDir' projectConfigDir); " is 131.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			projectConfigDir = DictionaryConfigurationListener.GetProjectConfigurationDirectory(propertyTable' DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName); " is 172.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			defaultConfigDir = DictionaryConfigurationListener.GetDefaultConfigurationDirectory(DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName); " is 157.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ShowUploadToWebonaryDialog,The length of the statement  "			var reversals = DictionaryConfigurationController.GetDictionaryConfigurationLabels(cache' defaultConfigDir' projectConfigDir); " is 126.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnVernWritingSystemProperties,The length of the statement  "			var model = new FwWritingSystemSetupModel(Cache.LangProject' FwWritingSystemSetupModel.ListType.Vernacular' Cache.ServiceLocator.WritingSystemManager' Cache); " is 158.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnVernWritingSystemProperties,The length of the statement  "			var view = new FwWritingSystemSetupDlg(model' m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' m_app); " is 120.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnAnalyWritingSystemProperties,The length of the statement  "			var model = new FwWritingSystemSetupModel(Cache.LangProject' FwWritingSystemSetupModel.ListType.Analysis' Cache.ServiceLocator.WritingSystemManager' Cache); " is 156.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnAnalyWritingSystemProperties,The length of the statement  "			var view = new FwWritingSystemSetupDlg(model' m_propertyTable.GetValue<IHelpTopicProvider>("HelpTopicProvider")' m_app); " is 120.
Long Statement,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnImportTranslatedLists,The length of the statement  "			Debug.WriteLine(String.Format("Total elapsed time for loading translated list(s) from {0} and handling PropChanges = {1}"' " is 122.
Long Statement,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,ReadRegistry,The length of the statement  "				m_sHtmlFileName = (string)regkey.GetValue(m_ksHtmlFilePath' Path.Combine(FwDirectoryFinder.CodeDirectory' InitialDocument)); " is 124.
Long Statement,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,ApplyTransform,The length of the statement  "			string outputFile = Path.Combine(m_outputDirectory' Cache.ProjectId.Name + stylesheetName + "Result." + GetExtensionFromNode(node)); " is 132.
Long Statement,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,ApplyTransform,The length of the statement  "				argumentList.AddParam("prmVernacularFontSize"' ""' GetNormalStyleFontSize(wsContainer.DefaultVernacularWritingSystem.Handle)); " is 126.
Long Statement,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(GeneratedHtmlViewer)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,InitializeComponent,The length of the statement  "			this.imageList1.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("imageList1.ImageStream"))); " is 120.
Long Statement,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ImageHolder)); " is 131.
Long Statement,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The length of the statement  "			this.largeImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("largeImages.ImageStream"))); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The length of the statement  "			this.smallImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("smallImages.ImageStream"))); " is 122.
Long Statement,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The length of the statement  "			this.smallCommandImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("smallCommandImages.ImageStream"))); " is 136.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,ExcludedCoreTextIdList,The length of the statement  "			var idList = m_propertyTable.GetStringProperty(ExcludeCoreTextPropertyName' "").Split(new[] { ''' }' StringSplitOptions.RemoveEmptyEntries); " is 140.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,SetInterestingTexts,The length of the statement  "			while (endMatchCount < minLength - firstChange && newTexts[newTexts.Length - endMatchCount - 1] == oldTexts[oldTexts.Length - endMatchCount - 1]) " is 145.
Long Statement,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,SetInterestingTexts,The length of the statement  "			RaiseInterestingTextsChanged(firstChange' newTexts.Length - firstChange - endMatchCount' oldTexts.Length - firstChange - endMatchCount); " is 136.
Long Statement,SIL.FieldWorks.XWorks,LiftExportMessageDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LiftExportMessageDlg.cs,m_linkWeSay_LinkClicked,The length of the statement  "			using (System.Diagnostics.Process.Start("https://docs.google.com/document/d/1F6jBscOEOonPpx_z6R927fw79zMTOXzzxAYUmnbK9Gw")) " is 123.
Long Statement,SIL.FieldWorks.XWorks,LiftExportMessageDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LiftExportMessageDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(LiftExportMessageDlg)); " is 140.
Long Statement,SIL.FieldWorks.XWorks,LiftExportMessageDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LiftExportMessageDlg.cs,InitializeComponent,The length of the statement  "			this.m_linkWeSay.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.m_linkWeSay_LinkClicked); " is 120.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,OnHandleLocalHotlink,The length of the statement  "				return true; // we can't handle it' but no other colleague can either. Needs to launch whatever can (see VwBaseVc.DoHotLinkAction). " is 131.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,OnAddContextToHistory,The length of the statement  "			//Debug.WriteLineIf(RuntimeSwitches.linkListenerSwitch.TraceInfo' "OnAddContextToHistory(" + m_currentContext + ")"' RuntimeSwitches.linkListenerSwitch.DisplayName); " is 165.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,OnAddContextToHistory,The length of the statement  "				//Debug.WriteLineIf(RuntimeSwitches.linkListenerSwitch.TraceInfo' "   Link equals current context."' RuntimeSwitches.linkListenerSwitch.DisplayName); " is 149.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,OnAddContextToHistory,The length of the statement  "				//Debug.WriteLineIf(RuntimeSwitches.linkListenerSwitch.TraceInfo' "  Pushing current to back: " + m_currentContext' RuntimeSwitches.linkListenerSwitch.DisplayName); " is 164.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,FollowActiveLink,The length of the statement  "				//Debug.Assert(!(m_lnkActive is FwAppArgs)' "Beware: This will not handle link requests for other databases/applications." + " is 124.
Long Statement,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,FollowActiveLink,The length of the statement  "				//	" To handle other databases or applications' pass the FwAppArgs to the IFieldWorksManager.HandleLinkRequest method."); " is 121.
Long Statement,SIL.FieldWorks.XWorks,MacroListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\MacroListener.cs,DoMacro,The length of the statement  "			if (!SafeToDoMacro(sel' out obj' out flid' out ws' out start' out length) || !macro.Enabled(obj' flid' ws' start' length)) " is 122.
Long Statement,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportLanguages,The length of the statement  "				// old writing systems will have. If something needs this' we need to output something new in its place. But I'm pretty sure " is 124.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandlerUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TreeBarHandlerUtils.cs,Tree_Duplicate,The length of the statement  "						// If cloned object should have children make the cloned object the parent' else creating a sibling so pass in same parent " is 122.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,ExportDictionaryContent,The length of the statement  "			webonaryView.UpdateStatus(String.Format(xWorksStrings.ExportingEntriesToWebonary' model.SelectedPublication' model.SelectedConfiguration)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,RecursivelyAddFilesToZip,The length of the statement  "				RecursivelyAddFilesToZip(zipFile' dir' Path.Combine(dirInZip' Path.GetFileName(dir.TrimEnd(Path.DirectorySeparatorChar)))' webonaryView); " is 137.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,ExportReversalContent,The length of the statement  "				var revWsRFC5646 = model.Reversals.Where(prop => prop.Value.Label == reversal).Select(prop => prop.Value.WritingSystem).FirstOrDefault(); " is 137.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,ExportReversalContent,The length of the statement  "				// The reversalWs should always match the RFC5646 of one of the AnalysisWritingSystems' this exception is for future programming errors " is 135.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,UploadToWebonary,The length of the statement  "				client.Headers.Add("user-agent"' string.Format("FieldWorks Language Explorer v.{0}"' Assembly.GetExecutingAssembly().GetName().Version)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,UploadToWebonary,The length of the statement  "						const string errorMessage = "Unable to connect to Webonary.  Please check your username and password and your Internet connection."; " is 132.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryController.cs,UploadFilename,The length of the statement  "			var disallowedCharacters = MiscUtils.GetInvalidProjectNameChars(MiscUtils.FilenameFilterStrength.kFilterProjName) + "_ $.%"; " is 124.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,ValidateSortingOnAlphaHeaders,The length of the statement  "					"Your data is sorted by a field that does not allow us to calculate letter headings. Please change your sort column before uploading to Webonary."' " is 147.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(UploadToWebonaryDlg)); " is 139.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The length of the statement  "			this.reversalsCheckedListBox.SelectedIndexChanged += new System.EventHandler(this.reversalsCheckedListBox_SelectedIndexChanged); " is 128.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryModel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryModel.cs,EncryptPassword,The length of the statement  "				byte[] encryptedData = ProtectedData.Protect(Encoding.Unicode.GetBytes(encryptMe)' Encoding.Unicode.GetBytes(EntropyValue)' DataProtectionScope.CurrentUser); " is 157.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryModel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryModel.cs,DecryptPassword,The length of the statement  "				byte[] decryptedData = ProtectedData.Unprotect(Convert.FromBase64String(decryptMe)' Encoding.Unicode.GetBytes(EntropyValue)' DataProtectionScope.CurrentUser); " is 158.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryModel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryModel.cs,SaveToSettings,The length of the statement  "				PropertyTable.SetProperty(WebonaryConfiguration' m_selectedConfiguration' PropertyTable.SettingsGroup.LocalSettings' false); " is 124.
Long Statement,SIL.FieldWorks.XWorks,UploadToWebonaryModel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryModel.cs,SaveToSettings,The length of the statement  "				PropertyTable.SetProperty(WebonaryPublication' m_selectedPublication' PropertyTable.SettingsGroup.LocalSettings' false); " is 120.
Long Statement,SIL.FieldWorks.XWorks,RecordBarListHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBarListHandler.cs,PopulateRecordBar,The length of the statement  "				window.ClearRecordBarList();	//don't want to directly clear the nodes' because that causes an event to be fired as every single node is removed! " is 144.
Long Statement,SIL.FieldWorks.XWorks,TreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBarTreeHandler.cs,PopulateRecordBar,The length of the statement  "				window.ClearRecordBarList();    //don't want to directly clear the nodes' because that causes an event to be fired as every single note is removed! " is 147.
Long Statement,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,SetupLinkScripture,The length of the statement  "			var interestingTexts = InterestingTextsDecorator.GetInterestingTextList(m_mediator' m_propertyTable' Cache.ServiceLocator); " is 123.
Long Statement,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,ShowRecord,The length of the statement  "			Debug.Assert(m_browseViewer != null' "RecordBrowseView.SetupDataContext() has to be called before RecordBrowseView.ShowRecord()."); " is 131.
Long Statement,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,ShowRecord,The length of the statement  "			int storedIndex = m_propertyTable.GetIntProperty(Clerk.PersistedIndexProperty' currentIndex' PropertyTable.SettingsGroup.LocalSettings); " is 136.
Long Statement,SIL.FieldWorks.XWorks,RecordBrowseView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,OnRecordNavigation,The length of the statement  "			Debug.Assert(m_browseViewer != null' "RecordBrowseView.SetupDataContext() has to be called before RecordBrowseView.OnRecordNavigation()."); " is 139.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,IsClerkSortingByHeadword,The length of the statement  "			return clerk.SortName.StartsWith("Headword") || clerk.SortName.StartsWith("Lexeme Form") || clerk.SortName.StartsWith("Citation Form") " is 134.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,Init,The length of the statement  "							m_propertyTable.SetDefault(CurrentFilterPropertyTableId' m_activeMenuBarFilter.id' PropertyTable.SettingsGroup.LocalSettings' false); " is 133.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,TryRestoreFilter,The length of the statement  "			string persistFilter = m_propertyTable.GetStringProperty(FilterPropertyTableId' null' PropertyTable.SettingsGroup.LocalSettings); " is 129.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,TryRestoreSorter,The length of the statement  "			string persistSorter = m_propertyTable.GetStringProperty(SorterPropertyTableId' null' PropertyTable.SettingsGroup.LocalSettings); " is 129.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnPreviousRecord,The length of the statement  "			/*m_list.CurrentIndex = m_list.CurrentIndex <= m_list.FirstItemIndex ? m_list.FirstItemIndex : m_list.CurrentIndex - 1;*/ " is 121.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnExport,The length of the statement  "				// However' we put in code to prevent punctuation in custom field names at the same time as this check (which is therefore " is 122.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnExport,The length of the statement  "				// for the benefit of older projects)' so it should not be necessary to check any additional classes we allow to have them. " is 123.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnExport,The length of the statement  "				if (AreCustomFieldsAProblem(new int[] { LexEntryTags.kClassId' LexSenseTags.kClassId' LexExampleSentenceTags.kClassId' MoFormTags.kClassId })) " is 142.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnChangeFilterToCheckedListPropertyChoice,The length of the statement  "			string filterName = m_propertyTable.GetStringProperty(CurrentFilterPropertyTableId' ""' PropertyTable.SettingsGroup.LocalSettings); " is 131.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnDeleteRecord,The length of the statement  "						dlg.SetDlgInfo(uiObj' Cache' m_mediator' m_propertyTable' TsStringUtils.MakeString(cannotDeleteMsg' Cache.DefaultUserWs)); " is 122.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,UpdateStatusBarRecordNumber,The length of the statement  "			var noRecordsDefaultText = StringTable.Table.GetString("No Records"' "Misc");// FwXApp.XWorksResources.GetString("stidNoRecords"); " is 130.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnListChanged,The length of the statement  "				throw new NotImplementedException("An enum choice for ListChangedEventArgs was selected that OnListChanged is not aware of."); " is 126.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,JumpToIndex,The length of the statement  "				throw new IndexOutOfRangeException("The RecordClerk tried to jump to a record which is not in the current active set of records."' error); " is 138.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnDuplicateItemInVector,The length of the statement  "				if(original.OwningFlid != subitemFlid && !original.ShortNameTSS.Text.Equals("???")) // Don't duplicate subitems or unnamed items " is 128.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnDuplicateItemInVector,The length of the statement  "				throw new ApplicationException("Could not duplicate the item requested by the command " + command.ConfigurationNode' ae); " is 121.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnChangeSorter,The length of the statement  "				Logger.WriteEvent(String.Format("Sorter changed: {0}"' m_list.Sorter == null ? "(no sorter)" : m_list.Sorter.ToString())); " is 122.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnAdjustFilterSelection,The length of the statement  "				m_propertyTable.SetProperty(CurrentFilterPropertyTableId' (new UncheckAll()).Name' PropertyTable.SettingsGroup.LocalSettings' false); " is 133.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnAdjustFilterSelection,The length of the statement  "				m_propertyTable.SetProperty(CurrentFilterPropertyTableId' (new NoFilters()).Name' PropertyTable.SettingsGroup.LocalSettings' false); " is 132.
Long Statement,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,UpdateFilterStatusBarPanel,The length of the statement  "				ResetStatusBarPanel("DialogFilterStatus"' FilterStatusContents(m_list.Filter != null && m_list.Filter.IsUserVisible) ?? String.Empty); " is 134.
Long Statement,SIL.FieldWorks.XWorks,MatchingItemsRecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,SetListIndex,The length of the statement  "				throw new IndexOutOfRangeException("The MatchingItemsRecordClerk tried to jump to a record which is not in the current active set of records."' error); " is 151.
Long Statement,SIL.FieldWorks.XWorks,ToolConfiguration,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,GetClerkNodeFromToolParamsNode,The length of the statement  "			// REVIEW (Hasso) 2014.02: while //clerks is probably an improvement over ancestors::parameters/clerks' this XPath should be " is 124.
Long Statement,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RecordClerkImages)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The length of the statement  "			this.buttonImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("buttonImages.ImageStream"))); " is 124.
Long Statement,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,Init,The length of the statement  "			m_showDescendantInRoot = XmlUtils.GetOptionalBooleanAttributeValue(configurationParameters' "showDescendantInRoot"' false); " is 123.
Long Statement,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,ShowRecordOnIdle,The length of the statement  "				m_dataEntryForm.ShowObject(obj' m_layoutName' m_layoutChoiceField' Clerk.CurrentObject' ShouldSuppressFocusChange(rni)); " is 120.
Long Statement,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,ShowRecordOnIdle,The length of the statement  "				ErrorReporter.ReportException(error' app.SettingsKey' m_propertyTable.GetValue<IFeedbackInfoProvider>("FeedbackInfoProvider").SupportEmailAddress' " is 146.
Long Statement,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,ShowRecordOnIdle,The length of the statement  "			Debug.WriteLineIf(RuntimeSwitches.RecordTimingSwitch.TraceInfo' "ShowRecord took " + (msEnd - msStart) + " ms"' RuntimeSwitches.RecordTimingSwitch.DisplayName); " is 160.
Long Statement,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The length of the statement  "			this.buttonImages.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject("buttonImages.ImageStream"))); " is 124.
Long Statement,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetNewCurrentIndex,The length of the statement  "				DomainObjectServices.IsSameOrSubclassOf(VirtualListPublisher.MetaDataCache' classOfObsoleteCurrentObj' newListItemsClass)) " is 122.
Long Statement,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetNewCurrentIndex,The length of the statement  "			ISet<int> relatives = m_pot.FindCorrespondingItemsInCurrentList(m_prevFlid' new HashSet<int> {hvoCurrentBeforeGetObjectSet}' " is 124.
Long Statement,SIL.FieldWorks.XWorks,EntriesOrChildClassesRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,FindCorrespondingItemsInCurrentList,The length of the statement  "				relativesInCurrentList.UnionWith(pot.FindCorrespondingItemsInCurrentList(sourceFlidToItems.Key' sourceFlidToItems.Value' " is 120.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CheckExpectedListItemsClassInSync,The length of the statement  "					String.Format("for some reason BulkEditBar.ExpectedListItemsClassId({0}) does not match SortItemProvider.ListItemsClass({1})."' " is 127.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,SendPropChangedOnListChange,The length of the statement  "				newCurrentIndex = m_propertyTable.GetIntProperty(Clerk.PersistedIndexProperty' 0' PropertyTable.SettingsGroup.LocalSettings); " is 125.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CreateAndInsert,The length of the statement  "			Debug.Assert(cpi != null' "This object should not have been asked to insert an object of the class " + className + "."); " is 120.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CreateAndInsert,The length of the statement  "				BaseFDOPropertyVirtualHandler vh = Cache.VwCacheDaAccessor.GetVirtualHandlerId(m_flid) as BaseFDOPropertyVirtualHandler; " is 120.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The length of the statement  "			return GetFlidOfVectorFromName(name' owner' cache' mediator' propertyTable' out owningObject' ref fontName' ref typeSize); " is 122.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The length of the statement  "			return GetFlidOfVectorFromName(propertyName' owner' cache' mediator' propertyTable' out owningObject' ref fontName' ref typeSize); " is 130.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFlidOfVectorFromName,The length of the statement  "						Trace.Fail("Could not get the test Scripture object.  Your language project might not have one (or their could have been some other error).  Try TestLangProj."); " is 161.
Long Statement,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetPersistedCurrentIndex,The length of the statement  "			var persistedCurrentIndex = m_propertyTable.GetIntProperty(Clerk.PersistedIndexProperty' 0' PropertyTable.SettingsGroup.LocalSettings); " is 135.
Long Statement,SIL.FieldWorks.XWorks,RecordView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordView.cs,InitBase,The length of the statement  "				fClerkAlreadySuppressed = clerk.ListLoadingSuppressed; // If we didn't create the clerk' someone else might have suppressed it. " is 127.
Long Statement,SIL.FieldWorks.XWorks,RecordView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordView.cs,SetTreebarAvailability,The length of the statement  "				//				string e = XmlUtils.GetOptionalAttributeValue(m_configurationParameters' "treeBarAvailability"' DefaultTreeBarAvailability); " is 130.
Long Statement,SIL.FieldWorks.XWorks,WritingSystemListHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TextListeners.cs,OnDisplayWritingSystemList,The length of the statement  "					string sValue = DomainObjectServices.JoinIds(cache.ServiceLocator.WritingSystems.CurrentPronunciationWritingSystems.Select(ws => ws.Handle).ToArray()' "'"); " is 156.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,IsObjectVisible,The length of the statement  "			var publications = Cache.LangProject.LexDbOA.PublicationTypesOA.PossibilitiesOS.Select(p => p).Where(p => p.NameHierarchyString == m_currentPublication.ToString()).FirstOrDefault(); " is 181.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "			var dictionaryNormalStyle = new ExportStyleInfo(FontHeightAdjuster.StyleSheetFromPropertyTable(m_propertyTable).Styles["Dictionary-Normal"]); " is 141.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var oldCurPageRange = new Tuple<int' int>(int.Parse(currentPageButton.Attributes["startIndex"].NodeValue)' int.Parse(currentPageButton.Attributes["endIndex"].NodeValue)); " is 170.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var oldAdjPageRange = new Tuple<int' int>(int.Parse(adjacentPageButton.Attributes["startIndex"].NodeValue)' int.Parse(adjacentPageButton.Attributes["endIndex"].NodeValue)); " is 172.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' ""' isNormalRightToLeft); " is 152.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var entries = ConfiguredXHTMLGenerator.GenerateNextFewEntries(PublicationDecorator' entriesToPublish' GetCurrentConfiguration(false)' settings' oldCurPageRange' " is 160.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "					entryElement.InnerHtml = string.Join(""' entryDoc.Root.Elements().Select(x => x.ToString(SaveOptions.DisableFormatting))); " is 122.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var currentPageRange = new Tuple<int' int>(int.Parse(currentPageButton.Attributes["startIndex"].NodeValue)' int.Parse(currentPageButton.Attributes["endIndex"].NodeValue)); " is 171.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var adjacentPageRange = new Tuple<int' int>(int.Parse(adjPage.Attributes["startIndex"].NodeValue)' int.Parse(adjPage.Attributes["endIndex"].NodeValue)); " is 152.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var settings = new ConfiguredXHTMLGenerator.GeneratorSettings(Cache' new ReadOnlyPropertyTable(m_propertyTable)' false' false' ""' isNormalRightToLeft); " is 152.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "				var entries = ConfiguredXHTMLGenerator.GenerateNextFewEntries(PublicationDecorator' entriesToPublish' GetCurrentConfiguration(false)' settings' currentPageRange' " is 161.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,AddMoreEntriesToPage,The length of the statement  "					entryElement.InnerHtml = string.Join(""' entryDoc.Root.Elements().Select(x => x.ToString(SaveOptions.DisableFormatting))); " is 122.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,ChangeHtmlForCurrentAndAdjacentButtons,The length of the statement  "			var adjPageTop = goingUp ? (GeckoHtmlElement)currentPageTop.PreviousSibling : (GeckoHtmlElement)currentPageTop.NextSibling; " is 123.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,ChangeHtmlForCurrentAndAdjacentButtons,The length of the statement  "			var adjPageBottom = goingUp ? (GeckoHtmlElement)currentPageBottom.PreviousSibling : (GeckoHtmlElement)currentPageBottom.NextSibling; " is 132.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,RunConfigureDialogAt,The length of the statement  "				dlg.Text = String.Format(xWorksStrings.ConfigureTitle' DictionaryConfigurationListener.GetDictionaryConfigurationType(propertyTable)); " is 134.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,LoadPageIfNecessary,The length of the statement  "			var currentObjectIndex = Array.IndexOf(PublicationDecorator.GetEntriesToPublish(m_propertyTable' Clerk.VirtualFlid)' currentObjectHvo); " is 135.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,LoadPageIfNecessary,The length of the statement  "			if (currentObjectIndex < 0 || browser == null || browser.Document == null) // If the current item is not to be displayed (invalid' not in this publication) just quit " is 165.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,LoadPageIfNecessary,The length of the statement  "			var currentPageRange = new Tuple<int' int>(int.Parse(currentPage.Attributes["startIndex"].NodeValue)' int.Parse(currentPage.Attributes["endIndex"].NodeValue)); " is 159.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,UpdateContent,The length of the statement  "					var xhtmlPath = progressDlg.RunTask(true' SaveConfiguredXhtmlAndDisplay' publicationDecorator' configurationFile) as string; " is 124.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SaveConfiguredXhtmlAndDisplay,The length of the statement  "			var xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(entriesToPublish' publicationDecorator' configuration' m_propertyTable' progress); " is 149.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetConfigViewTitle,The length of the statement  "			var isReversalIndex = DictionaryConfigurationListener.GetDictionaryConfigurationType(m_propertyTable) == xWorksStrings.ReversalIndex; " is 133.
Long Statement,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetInfoBarText,The length of the statement  "			var isReversalIndex = DictionaryConfigurationListener.GetDictionaryConfigurationType(m_propertyTable) == xWorksStrings.ReversalIndex; " is 133.
Long Statement,SIL.FieldWorks.XWorks,XhtmlRecordDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlRecordDocView.cs,ShowRecord,The length of the statement  "				var xhtmlPath = ConfiguredXHTMLGenerator.SavePreviewHtmlWithStyles(new [] { cmo.Hvo }' null' configuration' m_propertyTable); " is 125.
Long Statement,SIL.FieldWorks.XWorks,XmlDiagnosticsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDiagnosticsDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(XmlDiagnosticsDlg)); " is 137.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetConfigDlgInfo,The length of the statement  "			if (m_propertyTable.PropertyExists("XmlDocConfigureDlg_Location") && m_propertyTable.PropertyExists("XmlDocConfigureDlg_Size")) " is 127.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,m_tb_TextChanged,The length of the statement  "				MessageBox.Show(xWorksStrings.ksIllegalXmlChars' xWorksStrings.ksWarning' MessageBoxButtons.OK' MessageBoxIcon.Warning); " is 120.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,DisplayDetailsForRecursiveNode,The length of the statement  "				m_current.Text' m_current.Configuration.Attributes["recurseConfigLabel"] != null ? m_current.Configuration.Attributes["recurseConfigLabel"].Value " is 145.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,PlaceContextControls,The length of the statement  "			var contextControls = new Control[] {m_lblContext' m_lblBefore' m_lblBetween' m_lblAfter' m_tbBefore' m_tbBetween' m_tbAfter}; " is 126.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(XmlDocConfigureDlg)); " is 138.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The length of the statement  "			this.m_linkConfigureHomograph.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.m_linkConfigureHomograph_LinkClicked); " is 146.
Long Statement,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The length of the statement  "			this.m_linkManageViews.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this.m_linkManageViews_LinkClicked); " is 132.
Long Statement,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,UpdateAttribute,The length of the statement  "					//In LayoutTreeNode(XmlNode' StringTable' string) if the flowtype is "div" we can remove "after" and "sep" attributes' so don't assert on them. " is 143.
Long Statement,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,UpdateAttribute,The length of the statement  "					Debug.Assert(sName == "flowType" || xn.Attributes["flowType"] != null && xn.Attributes["flowType"].Value == "div");		// only values we intentionally delete. " is 156.
Long Statement,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,OnMouseMove,The length of the statement  "			// don't try to update the tooltip by getting a selection while painting the view; leads to recursive expansion of lazy boxes. " is 126.
Long Statement,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,The length of the statement  "			Rectangle selRect = new Rectangle(rcPrimary.left' rcPrimary.top' rcPrimary.right - rcPrimary.left' rcPrimary.bottom - rcPrimary.top); " is 133.
Long Statement,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,The length of the statement  "			// For now I'm putting a special case in. At some point we could move this into a helper that could be configured by XML. " is 121.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationUtils.cs,GatherBuiltInAndUserConfigurations,The length of the statement  "			var defaultConfigs = Directory.EnumerateFiles(Path.Combine(FwDirectoryFinder.DefaultConfigurations' configObjectName)' "*" + DictionaryConfigurationModel.FileExtension); " is 169.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationUtils.cs,GatherBuiltInAndUserConfigurations,The length of the statement  "			var projectConfigPath = Path.Combine(LcmFileHelper.GetConfigSettingsDir(cache.ProjectId.ProjectFolder)' configObjectName); " is 122.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationUtils.cs,GatherBuiltInAndUserConfigurations,The length of the statement  "				// for every configuration in the projects configurations folder either override a shipped configuration or add an entry " is 120.
Long Statement,SIL.FieldWorks.XWorks,DictionaryConfigurationUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationUtils.cs,RemoveAllReversalChoiceFromList,The length of the statement  "				if (reversalIndexConfiguration.value.EndsWith(DictionaryConfigurationModel.AllReversalIndexesFilenameBase + DictionaryConfigurationModel.FileExtension)) " is 152.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ArchivingExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ArchivingExtensions.cs,GetIso3Code,The length of the statement  "			if ((String.Compare(iso3Code' "q"' StringComparison.OrdinalIgnoreCase) > 0) && (String.Compare(iso3Code' "qu"' StringComparison.OrdinalIgnoreCase) < 0)) " is 152.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,ArchiveNow,The length of the statement  "			var model = new RampArchivingDlgViewModel(Application.ProductName' title' projectId' /*appSpecificArchivalProcessInfo:*/ string.Empty' SetFilesToArchive(filesToArchive)' GetFileDescription); " is 190.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,AddMetsPairs,The length of the statement  "				datasetExtent.AppendLineFormat("{0} Notebook record{1}"' new object[] { cNotebookRecords' (cNotebookRecords == 1) ? "" : "s" }' delimiter); " is 139.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,AddMetsPairs,The length of the statement  "				datasetExtent.AppendLineFormat("{0} Lexical entr{1}"' new object[] { cLexicalEntries' (cLexicalEntries == 1) ? "y" : "ies" }' delimiter); " is 137.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,SetFilesToArchive,The length of the statement  "			return advModel => advModel.AddFileGroup(string.Empty' filesToArchive' ResourceHelper.GetResourceString("kstidAddingFwProject")); " is 129.
Long Statement,SIL.FieldWorks.XWorks.Archiving,ReapRamp,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ReapRamp.cs,GetCreateDateRange,The length of the statement  "			foreach (var obj in cache.LangProject.LexDbOA.Entries.Where(o => (o.DateCreated < m_earliest) || (o.DateCreated > m_latest))) " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,AddSharedNodesToAlphaConfigurations,The length of the statement  "			DCM.PerformActionOnNodes(model.PartsAndSharedItems' n => { if (!string.IsNullOrEmpty(n.ReferenceItem)) n.Children = null; }); " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,FindMainEntryDescendant,The length of the statement  "			m_logger.WriteLine(string.Format("Unable to find '{0}'"' string.Join(DCM.NodePathSeparator' new[] { "Main Entry" }.Concat(ancestors)))); " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The length of the statement  "							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n))); " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigrateIfNeeded,The length of the statement  "			var dictionaryConfigLoc = Path.Combine(configSettingsDir' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,LoadBetaDefaultForAlphaConfig,The length of the statement  "			var dictionaryFolder = Path.Combine(FwDirectoryFinder.DefaultConfigurations' DictionaryConfigurationListener.DictionaryConfigurationDirectoryName); " is 147.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,LoadBetaDefaultForAlphaConfig,The length of the statement  "			var reversalFolder = Path.Combine(FwDirectoryFinder.DefaultConfigurations' DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName); " is 148.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,LoadBetaDefaultForAlphaConfig,The length of the statement  "				configPath = Path.Combine(reversalFolder' DictionaryConfigurationModel.AllReversalIndexesFilenameBase + DictionaryConfigurationModel.FileExtension); " is 148.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,ChooseAppropriateComplexForms,The length of the statement  "				if (parentNode.ReferencedOrDirectChildren != null && parentNode.ReferencedOrDirectChildren.Any(node => node.FieldDescription == "Subentries")) " is 142.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,ConflateMainEntriesIfNecessary,The length of the statement  "				logger.WriteLine(string.Format("Unable to conflate main entries for config '{0}' (version {1})"' config.Label' config.Version)); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,UpgradeEtymologyCluster,The length of the statement  "				if (node.IsCustomField) // Unfortunately there are some pathological users who have ancient custom fields named etymology " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,RenameReversalConfigFiles,The length of the statement  "			var reversalIndexConfigLoc = Path.Combine(configSettingsDir' DictionaryConfigurationListener.ReversalIndexConfigurationDirectoryName); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigrateNewChildNodesAndOptionsInto,The length of the statement  "			// REVIEW (Hasso) 2017.03: If this is a NoteInParaStyles node: Rather than overwriting the user's Options' copy their Options into a new WS&ParaOptions " is 151.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigrateNewChildNodesAndOptionsInto,The length of the statement  "			if ((destinationNode.DictionaryNodeOptions == null || DictionaryConfigurationModel.NoteInParaStyles.Contains(sourceNode.FieldDescription)) && " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigrateNewChildNodesAndOptionsInto,The length of the statement  "					InsertNewNodeIntoOldConfig(destinationNode' newChild.DeepCloneUnderParent(destinationNode' true)' sourceNode' indexOfNewChild); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,EnsureCssOverrideAndStylesAreUpdated,The length of the statement  "			if (sourceNode.StyleType != ConfigurableDictionaryNode.StyleTypes.Default && destinationNode.StyleType == ConfigurableDictionaryNode.StyleTypes.Default) " is 152.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,EnsureCssOverrideAndStylesAreUpdated,The length of the statement  "			if (sourceNode.StyleType == destinationNode.StyleType && // in case the user changed' for example' from Paragraph to Character style " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,EnsureCssOverrideAndStylesAreUpdated,The length of the statement  "			if (!string.IsNullOrEmpty(sourceNode.CSSClassNameOverride) && string.IsNullOrEmpty(destinationNode.CSSClassNameOverride)) " is 121.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MoveNodesIntoNewGroups,The length of the statement  "				// DeepClone skips children for grouping nodes. We want this' because we are going to move children in from the old configNode. " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,RemoveHiddenChildren,The length of the statement  "					logger.WriteLine(DCM.BuildPathStringFromNode(p) + " contains both Referenced And Direct Children. Removing Direct Children."); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,AddDictionaryTypeItem,The length of the statement  "			var convertedModel = new DictionaryConfigurationModel { Parts = configNodeList' Label = label' Version = VersionPre83' AllPublications = true }; " is 144.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "			var projectPath = Path.Combine(LcmFileHelper.GetConfigSettingsDir(Cache.ProjectId.ProjectFolder)' m_configDirSuffixBeingMigrated); " is 130.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "			var newDictionaryConfigLoc = Path.Combine(FwDirectoryFinder.DefaultConfigurations' DCL.DictionaryConfigurationDirectoryName); " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "			var newReversalConfigLoc = Path.Combine(FwDirectoryFinder.DefaultConfigurations' DCL.ReversalIndexConfigurationDirectoryName); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					// Though the name change from Stem to Lexeme happened after we shipped the Alpha we will change the name here for pre-Alpha projects " is 133.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "						var customFileName = string.Format("{0}-Stem-{1}{2}"' convertedModel.Label' layout.Substring(customSuffixIndex)' extension); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "						var customFileName = string.Format("{0}-Root-{1}{2}"' convertedModel.Label' layout.Substring(customSuffixIndex)' extension); " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					else if (layout.StartsWith("publishReversal")) // a reversal index for a specific language or a copied Reversal Index Config " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "			// Stem-based treats Complex Forms as Main Entries. Previously' they had all been configured by the same Main Entries node' " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "				convertedModel.Parts.Insert(0' convertedModel.Parts[0].DeepCloneUnderSameParent()); // Split Main into Main and Main (Complex) " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "				CopyDefaultsIntoMinorEntryNode(convertedModel' convertedModel.Parts[1]' alphaDefaultModel.Parts[1]' 0); // Main Entry (Complex Forms) " is 133.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					CopyDefaultsIntoMinorEntryNode(convertedModel' convertedModel.Parts[i]' alphaDefaultModel.Parts[2]' // Minor Entry (Variants) " is 125.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "				CopyDefaultsIntoConfigNode(convertedModel' convertedModel.Parts[0]' alphaDefaultModel.Parts[0]); // copy defaults into Main Entry " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					// Any copies of the minor entry node in the model we are converting should use the defaults from the minor entry nodes' " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					// We should create a Complex Forms node if this is the original (non-duplicate) node' if the user has selected at least one " is 124.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The length of the statement  "					// Complex Form Type' or if the user has not selected any Types for display--otherwise this node would disappear entirely! " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyDefaultsIntoChildren,The length of the statement  "							m_logger.WriteLine(string.Format("Could not match '{0}' in defaults' but it is a valid custom field."' pathStringToNode)); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyDefaultsIntoChildren,The length of the statement  "							m_logger.WriteLine(string.Format("Could not match '{0}' in defaults' but it actually exists in the model."' pathStringToNode)); " is 127.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyDefaultsIntoChildren,The length of the statement  "							"Could not match '{0}' in defaults. It may have been valid in a previous version' but is no longer. It will be removed next time the model is loaded."' " is 151.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertLayoutTreeNodeToConfigNode,The length of the statement  "			// ConfigurableDictionaryNode.Label properties don't include the suffix like XmlDocConfigureDlg.LayoutTreeNode.Label properties do. " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,BuildPathStringFromNode,The length of the statement  "			while (node.Parent != null // If 'Minor Entry' is duplicated' both copies get a new' common parent 'Minor Entry'' which does not affect migration " is 145.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,HasComplexFormTypesSelected,The length of the statement  "			return AvailableComplexFormTypes.Intersect(options.Where(option => option.IsEnabled).Select(option => option.Id)).Any(); " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertReferencedEntries,The length of the statement  "			var newChildren = new List<ConfigurableDictionaryNode>(defaultNode.Children.Select(n => n.DeepCloneUnderParent(convertedNode))); " is 128.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertReferencedEntries,The length of the statement  "			newHeadword.Before = !string.IsNullOrEmpty(oldHeadwordNode.Before) ? oldHeadwordNode.Before : oldSenseHeadwordNode.Before; " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertReferencedEntries,The length of the statement  "			newHeadword.Between = !string.IsNullOrEmpty(oldHeadwordNode.Between) ? oldHeadwordNode.Between : oldSenseHeadwordNode.Between; " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertReferencedEntries,The length of the statement  "			var oldGlossNode = convertedNode.Children.FirstOrDefault(child => child.Label == "Gloss") ?? new ConfigurableDictionaryNode(); " is 126.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,GenerateNumberStyleFromLayoutTreeNode,The length of the statement  "							propsBldr.SetIntPropValues((int)FwTextPropType.ktptBold' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn); " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,GenerateNumberStyleFromLayoutTreeNode,The length of the statement  "							propsBldr.SetIntPropValues((int)FwTextPropType.ktptItalic' (int)FwTextPropVar.ktpvEnum' (int)FwTextToggleVal.kttvForceOn); " is 122.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The length of the statement  "			if (!string.IsNullOrEmpty(node.NumStyle) && ((node.NumStyle.Contains("-bold") && fontInfo.Bold.ValueIsSet && fontInfo.Bold.Value) || " is 132.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The length of the statement  "				(!node.NumStyle.Contains("-bold") && node.NumStyle.Contains("bold") && fontInfo.Bold.ValueIsSet && !fontInfo.Bold.Value) || " is 123.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The length of the statement  "				(node.NumStyle.Contains("bold") && !fontInfo.Bold.ValueIsSet) || (!node.NumStyle.Contains("bold") && fontInfo.Bold.ValueIsSet) || " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The length of the statement  "				(!node.NumStyle.Contains("-italic") && node.NumStyle.Contains("italic") && fontInfo.Italic.ValueIsSet && !fontInfo.Italic.Value) || " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The length of the statement  "				(node.NumStyle.Contains("italic") && !fontInfo.Italic.ValueIsSet) || (!node.NumStyle.Contains("italic") && fontInfo.Italic.ValueIsSet))) " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,MigrateWsOptions,The length of the statement  "			return wsLabel.Split(''').Select(item => new DictionaryNodeListOptions.DictionaryNodeOption { Id = item.Trim()' IsEnabled = true }).ToList(); " is 141.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,GroupingOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\GroupingOptionsView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(GroupingOptionsView)); " is 139.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,LabelOverPanel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\LabelOverPanel.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(LabelOverPanel)); " is 134.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,ButtonOverPanel,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ButtonOverPanel.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ButtonOverPanel)); " is 135.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,SetStyles,The length of the statement  "			labelStyle.Text = usingParaStyles ? xWorksStrings.ksParagraphStyleForContent : xWorksStrings.ksCharacterStyleForContent; " is 120.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,SetStyles,The length of the statement  "			dropDownStyle.SelectedIndex = 0; // default so we don't have a null item selected.  If there are 0 items' we have other problems. " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DetailsView)); " is 131.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,SetStyles,The length of the statement  "			dropDownStyle.SelectedIndex = 0; // default so we don't have a null item selected.  If there are 0 items' we have other problems. " is 129.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(SenseOptionsView)); " is 136.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,OnSizeChanged,The length of the statement  "			Control firstCheckBox = checkBoxDisplayOption.Visible ? checkBoxDisplayOption : checkBoxDisplayOption2.Visible ? checkBoxDisplayOption2 : null; " is 143.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,OnSizeChanged,The length of the statement  "			Control secondCheckBox = firstCheckBox != checkBoxDisplayOption2 ? checkBoxDisplayOption2.Visible ? checkBoxDisplayOption2 : null : null; " is 137.
Long Statement,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ListOptionsView)); " is 135.
Long Statement,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectParagraphProps,The length of the statement  "			GetPointPropAttribute((int)FwTextPropType.ktptTrailingIndent' "indentRight"' styleRules.RealStyle.Rules' paragraphProps); " is 121.
Complex Conditional,SIL.FieldWorks.XWorks,ConfigurableDictionaryNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfigurableDictionaryNode.cs,Equals,The conditional expression  "otherNode == null || Label != otherNode.Label || LabelSuffix != otherNode.LabelSuffix || FieldDescription != otherNode.FieldDescription"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForSubentries,The conditional expression  "listOptions != null && typeNode != null && typeNode.IsEnabled  				&& typeNode.ReferencedOrDirectChildren != null && typeNode.ReferencedOrDirectChildren.Any(n => n.IsEnabled)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DictionaryConfigurationImportController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportController.cs,PrepareImport,The conditional expression  "DictionaryConfigurationListener.DictionaryConfigurationDirectoryName.Equals(configDirectory) && NewConfigToImport.IsReversal  				|| !DictionaryConfigurationListener.DictionaryConfigurationDirectoryName.Equals(configDirectory) && !NewConfigToImport.IsReversal"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,CanInsertFieldIntoObj,The conditional expression  "fdoCache == null || parentObj == null || (!parentObj.IsValidObject) || String.IsNullOrEmpty(fieldName)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,CanInsertFieldIntoObj,The conditional expression  "type == CellarPropertyType.OwningSequence ||  				type == CellarPropertyType.OwningCollection ||  				type == CellarPropertyType.ReferenceCollection ||  				type == CellarPropertyType.ReferenceSequence"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayDataTreeInsert,The conditional expression  "command != null && slice != null && !slice.IsDisposed &&  				m_dataEntryForm.Visible && this.CanInsert(command' slice' out index)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayDataTreeCopy,The conditional expression  "command != null && slice != null && !slice.IsDisposed && this.CanInsert(command' slice' out index)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayAddComponentToPrimary,The conditional expression  "ler != null && ler.RefType == LexEntryRefTags.krtComplexForm &&  							(target is ILexEntry || target is ILexSense)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,OnUndo,The conditional expression  "focusRootSite != null && !focusRootSite.IsDisposed &&  					focusRootSite.RootBox != null && focusRootSite.RootBox.Selection != null"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,WndProc,The conditional expression  "MiscUtils.IsMono && m.Msg == (int)Win32.WinMsgs.WM_ACTIVATE && m.HWnd == this.Handle &&  				DesiredControl != null && !DesiredControl.IsDisposed && DesiredControl.Visible && DesiredControl.Enabled"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,ViewChangedSelectedRecord,The conditional expression  "e.Index >= 0 && CurrentIndex == e.Index && hvoCurrent == e.Hvo ||  				e.Index < 0 && hvoCurrent == e.Hvo"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,RemoveNotification,The conditional expression  "m_list == null || m_list.IsDisposed || Cache == null || Cache.IsDisposed || Cache.DomainDataByFlid == null"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnListChanged,The conditional expression  "m_recordBarHandler is TreeBarHandler && m_list.CurrentObject != null &&  						(m_list.CurrentObject.Cache != null || m_list.SortedObjects.Count != 1)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,UpdateSortStatusBarPanel,The conditional expression  "m_list.Sorter == null || SortName == null  				|| (m_isDefaultSort && ToolConfiguration.GetDefaultSorter(m_clerkConfiguration) != null)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,PossibilityRecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The conditional expression  "tag == CmPossibilityTags.kflidSubPossibilities  				 || tag == CmPossibilityListTags.kflidPossibilities  				&& (cvIns > 0 || cvDel > 0)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PropChanged,The conditional expression  "m_owningObject != null && hvo == m_owningObject.Hvo && tag != m_flid && cvIns > 0"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,The conditional expression  "cvIns == 1 && (cvDel == 1 || cvDel == 0) &&  				m_owningObject != null && m_hvoCurrent != 0 && m_currentIndex >= 0"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,The conditional expression  "cvIns == 0 && cvDel == 0 && m_owningObject != null && m_hvoCurrent != 0"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReplaceListItem,The conditional expression  "remainingInsertItems.Count == 1 && remainingInsertItems[0] is IManyOnePathSortItem  &&  					m_filter == null &&  					SortedObjects.Count == (items.Count - 1)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,The conditional expression  "m_owningObject != null && SortedObjects.Count > 0 && Clerk.UpdateHelper != null &&  					((Clerk.UpdateHelper.ClearBrowseListUntilReload) || !Clerk.IsActiveInGui)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,ReloadList,The conditional expression  "m_sortedObjects != null && m_currentIndex != -1 && m_sortedObjects.Count > m_currentIndex  					&& CurrentObjectIsValid"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,PersistOn,The conditional expression  "item.KeyObject <= 0 || item.RootObjectHvo <= 0 ||  					// The object might have been deleted.  See LT-11169.  					!repo.IsValidObjectId(item.KeyObject) || !repo.IsValidObjectId(item.RootObjectHvo)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XhtmlRecordDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlRecordDocView.cs,ShowRecord,The conditional expression  "!m_fullyInitialized || IsDisposed || m_mainView.IsDisposed || !Visible"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XhtmlRecordDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlRecordDocView.cs,PropChanged,The conditional expression  "Clerk == null || m_mainView == null || m_mediator == null || hvo != Clerk.CurrentObjectHvo"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,The conditional expression  "lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryAsymmetricPair ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryCollection ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryPair ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntrySequence ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryTree"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,The conditional expression  "lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseAsymmetricPair ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseCollection ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSensePair ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseSequence ||  						lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseTree"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,The conditional expression  "lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryTree ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseTree ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseTree"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,BuildRelationTypeList,The conditional expression  "lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseAsymmetricPair ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryTree ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseTree ||  					lrt.MappingType == (int)LexRefTypeTags.MappingTypes.kmtSenseTree"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetActiveNode,The conditional expression  "XmlUtils.GetOptionalAttributeValue(ltn.Configuration' "ref") == partRef  				&& ltn.ParentLayout != null // is this ever possible?  				&& XmlUtils.GetOptionalAttributeValue(ltn.ParentLayout' "class") == className  				&& XmlUtils.GetOptionalAttributeValue(ltn.ParentLayout' "name") == layoutName"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,MakeDivInParaChildNotVisible,The conditional expression  "tn.Checked && tn.FlowType == "span" &&  							 tn.Label.Contains(xWorksStrings.ksReferencedComplexForm) &&  							 tn.ShowComplexFormPara"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,ShowRecord,The conditional expression  "m_currentObject != null && clerk.CurrentObject != null  				&& m_currentIndex == currentIndex  				&& m_currentObject.Hvo == clerk.CurrentObject.Hvo"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,OnPaint,The conditional expression  "m_mainView != null && m_mainView.RootBox != null && !m_mainView.PaintInProgress && !m_mainView.LayoutInProgress  				&& m_mainView.RootBox.Selection == null"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The conditional expression  "n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS")"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The conditional expression  "(n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under"))"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The conditional expression  "!string.IsNullOrEmpty(node.NumStyle) && ((node.NumStyle.Contains("-bold") && fontInfo.Bold.ValueIsSet && fontInfo.Bold.Value) ||  				(!node.NumStyle.Contains("-bold") && node.NumStyle.Contains("bold") && fontInfo.Bold.ValueIsSet && !fontInfo.Bold.Value) ||  				(node.NumStyle.Contains("bold") && !fontInfo.Bold.ValueIsSet) || (!node.NumStyle.Contains("bold") && fontInfo.Bold.ValueIsSet) ||  				(node.NumStyle.Contains("-italic") && fontInfo.Italic.ValueIsSet && fontInfo.Italic.Value) ||  				(!node.NumStyle.Contains("-italic") && node.NumStyle.Contains("italic") && fontInfo.Italic.ValueIsSet && !fontInfo.Italic.Value) ||  				(node.NumStyle.Contains("italic") && !fontInfo.Italic.ValueIsSet) || (!node.NumStyle.Contains("italic") && fontInfo.Italic.ValueIsSet))"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,LayoutOptionsMatchStyle,The conditional expression  "string.IsNullOrEmpty(node.NumFont) && fontInfo.FontName.ValueIsSet || // node value is empty but fontInfo isn't  				!string.IsNullOrEmpty(node.NumFont) && !fontInfo.FontName.ValueIsSet || // fontinfo is empty but node value isn't  				(fontInfo.FontName.ValueIsSet && string.Compare(node.NumFont' fontInfo.FontName.Value' StringComparison.Ordinal) != 0)"  is complex.
Complex Conditional,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,ValidateContext,The conditional expression  "context != ContextValues.InternalConfigureView &&  				context != ContextValues.Internal &&  				context != ContextValues.General &&  				context != ContextValues.Book &&  				context != ContextValues.Text &&  				context != ContextValues.PsuedoStyle &&  				context != ContextValues.InternalMappable &&  				context != ContextValues.Note &&  				context != ContextValues.Title"  is complex.
Empty Catch Block,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,CanInsert,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,OnHandleLocalHotlink,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,TryToDelete,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SelectAndScrollToCurrentRecord,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,WriteFontAndParagraphRulesXml,The method has an empty catch block.
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,m_descTextBox_TextChanged,The following statement contains a magic number: m_descTextBox.Text = m_descTextBox.Text.Substring(0' 100);
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,m_descTextBox_TextChanged,The following statement contains a magic number: m_descTextBox.Text.Length > 100
Magic Number,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,m_typeComboBox_SelectedIndexChanged,The following statement contains a magic number: CurrentFieldListViewItem.SubItems[2].Text = ((IdAndString<CustomFieldType>) m_typeComboBox.SelectedItem).Name;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,ConfiguredXHTMLGenerator,The following statement contains a magic number: EntriesToAddCount = 5;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SavePublishedHtmlWithStyles,The following statement contains a magic number: var entryStringBuilder = new StringBuilder(100);
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPageRanges,The following statement contains a magic number: entryHvos.Length % entriesPerPage <= entriesPerPage / 10
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SpawnEntryGenerationThreadsAndWait,The following statement contains a magic number: var maxThreadCount = Math.Min(16' (int)(Environment.ProcessorCount * 1.5));
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,SpawnEntryGenerationThreadsAndWait,The following statement contains a magic number: var maxThreadCount = Math.Min(16' (int)(Environment.ProcessorCount * 1.5));
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetAlphaSenseCounter,The following statement contains a magic number: var asciiBytes = 64;
Magic Number,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateSpanWithPossibleLink,The following statement contains a magic number: const char txtlineSplit = (Char)8232;
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersController.cs,HeadwordNumbersController,The following statement contains a magic number: _view.OkButtonEnabled = _homographConfig.CustomHomographNumberList == null  				|| !_homographConfig.CustomHomographNumberList.Any() || _homographConfig.CustomHomographNumberList.Count == 10;
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersController.cs,OnViewCustomDigitsChanged,The following statement contains a magic number: _view.OkButtonEnabled = !_view.CustomDigits.Any()  				|| _view.CustomDigits.Count(digit => !string.IsNullOrWhiteSpace(digit)) == 10;
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,SetWsFactoryForCustomDigits,The following statement contains a magic number: i < 10
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainLayoutTable.Controls.Add(this.referenceNumberGroup' 0' 4);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainLayoutTable.Controls.Add(this.buttonLayoutPanel' 0' 6);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainLayoutTable.Controls.Add(this.customNumbersPanel' 0' 5);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainLayoutTable.Controls.Add(this.homographStylePanel' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainLayoutTable.Controls.Add(this.senseNumberStylePanel' 0' 3);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitNine' 9' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitEight' 8' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitSeven' 7' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitSix' 6' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitFive' 5' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitFour' 4' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitThree' 3' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.m_digitTwo' 2' 1);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label11' 9' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label10' 8' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label9' 7' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label8' 6' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label7' 5' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label6' 4' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label4' 3' 0);
Magic Number,SIL.FieldWorks.XWorks,HeadwordNumbersDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\HeadWordNumbersDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel1.Controls.Add(this.label3' 2' 0);
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromPictureOptions,The following statement contains a magic number: var marginValues = BuildTermList(TermList.TermSeparator.Space' new PrimitiveTerm(UnitType.Point' 0)'  				new PrimitiveTerm(UnitType.Point' 0)' new PrimitiveTerm(UnitType.Point' 4)' new PrimitiveTerm(UnitType.Point' 4));
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromPictureOptions,The following statement contains a magic number: var marginValues = BuildTermList(TermList.TermSeparator.Space' new PrimitiveTerm(UnitType.Point' 0)'  				new PrimitiveTerm(UnitType.Point' 0)' new PrimitiveTerm(UnitType.Point' 4)' new PrimitiveTerm(UnitType.Point' 4));
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssFromPictureOptions,The following statement contains a magic number: pictureProps.Add(new Property("padding") { Term = new PrimitiveTerm(UnitType.Point' 2) });
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GetBaseSelectionWithSelectors,The following statement contains a magic number: baseSelection.LastIndexOf("span"' StringComparison.Ordinal) != baseSelection.Length - 4
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GetClassAttributeForCollectionItem,The following statement contains a magic number: singularBase = classNameBase.Remove(classNameBase.Length - 3) + "y";
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssStyleFromLcmStyleSheet,The following statement contains a magic number: lineHeight.Term = new PrimitiveTerm(UnitType.Number' Math.Abs(exportStyleInfo.LineSpacing.m_lineHeight) / 10000.0F);
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,CalculateMarginLeft,The following statement contains a magic number: return (float)Math.Round(leadingIndent' 3);
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,MilliPtToPt,The following statement contains a magic number: return (float)Math.Round((float)millipoints / 1000' 3);
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,MilliPtToPt,The following statement contains a magic number: return (float)Math.Round((float)millipoints / 1000' 3);
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateLetterHeaderCss,The following statement contains a magic number: letHeadRule.Declarations.Properties.Add(new Property("width") { Term = new PrimitiveTerm(UnitType.Percentage' 100) });
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The following statement contains a magic number: screenPages.Declarations.Properties.Add(new Property("width") { Term = new PrimitiveTerm(UnitType.Percentage' 100) });
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForPageButtons,The following statement contains a magic number: pageButton.Declarations.Properties.Add(new Property("border-radius") { Term = new PrimitiveTerm(UnitType.Pixel' 6) });
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The following statement contains a magic number: selectedEntryBefore.Declarations.Properties.Add(new Property("background-position")  			{  				Term = new TermList(new PrimitiveTerm(UnitType.Pixel' 0)' new PrimitiveTerm(UnitType.Pixel' 3))  			});
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The following statement contains a magic number: selectedEntryBefore.Declarations.Properties.Add(new Property("z-index") { Term = new PrimitiveTerm(UnitType.Number' -10) });
Magic Number,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,GenerateCssForSelectedEntry,The following statement contains a magic number: selectedEntryBefore.Declarations.Properties.Add(new Property("width") { Term = new PrimitiveTerm(UnitType.Percentage' 75) });
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,FixOptionsAccordingToCurrentTypes,The following statement contains a magic number: var isValidGuid = Guid.TryParse(options[i].Id.Substring(0' Math.Min(options[i].Id.Length' 36))' out guid);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,LoadAvailableWsList,The following statement contains a magic number: var insertionIdx = wsOptions.WsType == DictionaryNodeWritingSystemOptions.WritingSystemType.Both ? 2 : 1;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationDlg.cs,DictionaryConfigurationDlg,The following statement contains a magic number: this.MinimumSize = new Size(m_grpConfigurationManagement.Width + 3' manageConfigs_treeDetailButton_split.Height);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerController.cs,CopyConfiguration,The following statement contains a magic number: int i = 2;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainTableLayoutPanel.Controls.Add(this.buttonTableLayoutPanel' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.mainTableLayoutPanel.SetColumnSpan(this.explanationLabel' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.buttonTableLayoutPanel.Controls.Add(this.helpButton' 2' 0);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.Controls.Add(this.importButton' 1' 4);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.Controls.Add(this.exportButton' 1' 5);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.Controls.Add(this.removeButton' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.Controls.Add(this.resetButton' 1' 3);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.SetRowSpan(this.configurationsListView' 6);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.configurationsTableLayoutPanel.SetColumnSpan(this.configurationsExplanationLabel' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationManagerDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationManagerDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationsTableLayoutPanel.SetRowSpan(this.publicationsListView' 3);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrator.cs,SetWritingSystemForReversalModel,The following statement contains a magic number: fileParts.Length == 3
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationNodeRenameDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationNodeRenameDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.ok' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationNodeRenameDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationNodeRenameDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.cancel' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationNodeRenameDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationNodeRenameDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.description' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationNodeRenameDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationNodeRenameDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.newSuffix' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.duplicate' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.remove' 1' 3);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.rename' 1' 4);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.highlight' 1' 5);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationTreeControl,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationTreeControl.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetRowSpan(this.tree' 6);
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadWsOptions,The following statement contains a magic number: wsOptionsView.DisplayOptionCheckBoxEnabled = (availableWSs.Count(item => item.Checked) >= 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,LoadWsAndParaOptions,The following statement contains a magic number: wsapOptionsView.DisplayOptionCheckBoxEnabled = (availableWSs.Count(item => item.Checked) >= 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryDetailsController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsController.cs,ListItemCheckedChanged,The following statement contains a magic number: listOptionsView.DisplayOptionCheckBoxEnabled = (items.Cast<ListViewItem>().Count(item => item.Checked) >= 2);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigurationImportDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationImportDlg.cs,DictionaryConfigurationImportDlg,The following statement contains a magic number: var optimalWidthOnMono = 582;
Magic Number,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetDstClsId,The following statement contains a magic number: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences: // Fall through.  				case ConcDecorator.kflidWfOccurrences:  					return 0;  				case ConcDecorator.kflidTextObject:  					return CmObjectTags.kClassId;  				case ConcDecorator.kflidParagraph:  					return StTxtParaTags.kClassId;  				case ConcDecorator.kflidOccurrenceCount:  					return 0;  				case ConcDecorator.kflidReference:  					return 0; // 'Reference' of an occurrence.  				case ConcDecorator.kflidBeginOffset:  					return 0; // 'BeginOffset' of an occurrence.  				case ConcDecorator.kflidEndOffset:  					return 0; // 'EndOffset' of an occurrence.  				case ConcDecorator.kflidSenseOccurrences:  					return 0; // top-level property for occurrences of a sense.  				case ConcDecorator.kflidSegment:  					return 030; // segment from occurrence.  				case ConcDecorator.kflidConcOccurrences:  					return 0; // occurrences in Concordance view' supposedly of LangProject.  				case ConcDecorator.kflidAnalysis:  					return 032; // from fake concordance object to Analysis.  				case ConcDecorator.kflidWaExactOccurrences: // Fall through.  				case ConcDecorator.kflidWaOccurrences:  					return 0; // occurrences of a WfiAnalysis  				case ConcDecorator.kflidWgExactOccurrences: // Fall through.  				case ConcDecorator.kflidWgOccurrences:  					return 0; // occurrences of a WfiGloss.  				case ConcDecorator.kflidTextTitle:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextGenres:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextIsTranslation:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextSource:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextComment:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kclidFakeOccurrence:  					return 0;  			}
Magic Number,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetDstClsId,The following statement contains a magic number: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences: // Fall through.  				case ConcDecorator.kflidWfOccurrences:  					return 0;  				case ConcDecorator.kflidTextObject:  					return CmObjectTags.kClassId;  				case ConcDecorator.kflidParagraph:  					return StTxtParaTags.kClassId;  				case ConcDecorator.kflidOccurrenceCount:  					return 0;  				case ConcDecorator.kflidReference:  					return 0; // 'Reference' of an occurrence.  				case ConcDecorator.kflidBeginOffset:  					return 0; // 'BeginOffset' of an occurrence.  				case ConcDecorator.kflidEndOffset:  					return 0; // 'EndOffset' of an occurrence.  				case ConcDecorator.kflidSenseOccurrences:  					return 0; // top-level property for occurrences of a sense.  				case ConcDecorator.kflidSegment:  					return 030; // segment from occurrence.  				case ConcDecorator.kflidConcOccurrences:  					return 0; // occurrences in Concordance view' supposedly of LangProject.  				case ConcDecorator.kflidAnalysis:  					return 032; // from fake concordance object to Analysis.  				case ConcDecorator.kflidWaExactOccurrences: // Fall through.  				case ConcDecorator.kflidWaOccurrences:  					return 0; // occurrences of a WfiAnalysis  				case ConcDecorator.kflidWgExactOccurrences: // Fall through.  				case ConcDecorator.kflidWgOccurrences:  					return 0; // occurrences of a WfiGloss.  				case ConcDecorator.kflidTextTitle:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextGenres:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextIsTranslation:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextSource:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextComment:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kclidFakeOccurrence:  					return 0;  			}
Magic Number,SIL.FieldWorks.XWorks,AddListDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CustomListDlg.cs,CreateList,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do(xWorksStrings.ksUndoCreateList' xWorksStrings.ksRedoCreateList'  				Cache.ActionHandlerAccessor' () =>  				{  					var ws = Cache.DefaultUserWs; // get default ws  					var listName = m_lmscListName.Value(ws);  					var newList = Cache.ServiceLocator.GetInstance<ICmPossibilityListFactory>().CreateUnowned(  						listName.Text' ws);  					SetAllMultiAlternatives(newList.Name' m_lmscListName);    					// Set various properties of CmPossibilityList  					newList.DisplayOption = (int)DisplayBy;  					newList.PreventDuplicates = !AllowDuplicate;  					newList.IsSorted = SortByName;  					var wss = SelectedWs;  					newList.WsSelector = wss;  					if (wss == WritingSystemServices.kwsVerns || wss == WritingSystemServices.kwsVernAnals)  						newList.IsVernacular = true;  					else  						newList.IsVernacular = false;  					newList.Depth = 1;  					if (SupportsHierarchy)  						newList.Depth = 127;  					SetAllMultiAlternatives(newList.Description' m_lmscDescription);  				});
Magic Number,SIL.FieldWorks.XWorks,ConfigureListDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CustomListDlg.cs,DoOKAction,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do(xWorksStrings.ksUndoConfigureList' xWorksStrings.ksRedoConfigureList'  				Cache.ActionHandlerAccessor' () =>  				{  					var wsToUse = Cache.DefaultAnalWs;  					m_curList.WsSelector = SelectedWs;  					if (SelectedWs == WritingSystemServices.kwsVerns || SelectedWs == WritingSystemServices.kwsVernAnals)  						m_curList.IsVernacular = true;  					else  						m_curList.IsVernacular = false;  					SetAllMultiAlternatives(m_curList.Name' m_lmscListName);  					SetAllMultiAlternatives(m_curList.Description' m_lmscDescription);  					m_curList.DisplayOption = (int)DisplayBy;  					m_curList.IsSorted = SortByName;  					m_curList.PreventDuplicates = !AllowDuplicate;  					m_curList.Depth = SupportsHierarchy ? 127 : 1;  				});
Magic Number,SIL.FieldWorks.XWorks,DataTreeImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DataTreeImages.cs,InitializeComponent,The following statement contains a magic number: this.nodeImages.ImageSize = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.XWorks,DataTreeImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DataTreeImages.cs,InitializeComponent,The following statement contains a magic number: this.nodeImages.ImageSize = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.XWorks,DictConfigItem,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigManager.cs,CreateUniqueIdCode,The following statement contains a magic number: var nameSeed = oldName.PadRight(5);
Magic Number,SIL.FieldWorks.XWorks,DictConfigItem,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigManager.cs,CreateUniqueIdCode,The following statement contains a magic number: return result.Substring(0' 5) + num;
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigMgrDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigMgrDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_listView.MinimumSize = new System.Drawing.Size(425' 122);
Magic Number,SIL.FieldWorks.XWorks,DictionaryConfigMgrDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigMgrDlg.cs,InitializeComponent,The following statement contains a magic number: this.m_listView.MinimumSize = new System.Drawing.Size(425' 122);
Magic Number,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,IsPublishableLexRef,The following statement contains a magic number: publishableItems.Length < 2
Magic Number,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayMoveUpObjectInSequence,The following statement contains a magic number: chvo < 2
Magic Number,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnMoveDownObjectInSequence,The following statement contains a magic number: UndoableUnitOfWorkHelper.Do(xWorksStrings.UndoMoveItem' xWorksStrings.RedoMoveItem' cache.ActionHandlerAccessor'  					()=>cache.DomainDataByFlid.MoveOwnSeq(hvoOwner' (int)flid' ihvo' ihvo'  						hvoOwner' (int)flid' ihvo + 2));
Magic Number,SIL.FieldWorks.XWorks,DTMenuHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DTMenuHandler.cs,OnDisplayMoveDownObjectInSequence,The following statement contains a magic number: chvo < 2
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_exportList.MinimumSize = new System.Drawing.Size(256' 183);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_exportList.MinimumSize = new System.Drawing.Size(256' 183);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,btnExport_Click,The following statement contains a magic number: bool fLiftExport = m_exportItems[0].SubItems[2].Text == "lift";
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportGrammarSketch,The following statement contains a magic number: var sXslts = (string) args[2];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportGrammarSketch,The following statement contains a magic number: m_progressDlg.Step(1000);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportFxt,The following statement contains a magic number: Debug.Assert(parameters.Length == 3);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportFxt,The following statement contains a magic number: bool fLiftOutput = (bool)parameters[2];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportConfiguredDocView,The following statement contains a magic number: Debug.Assert(parameters.Length == 4);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportConfiguredDocView,The following statement contains a magic number: var ft = (FxtType) parameters[2];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportConfiguredDocView,The following statement contains a magic number: var vss = (IVwStylesheet) parameters[3];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,m_exportList_SelectedIndexChanged,The following statement contains a magic number: m_description.Text = m_exportList.SelectedItems[0].SubItems[4].Text;
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportSemanticDomains,The following statement contains a magic number: var fxtPath = (string) parameters[2];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportSemanticDomains,The following statement contains a magic number: bool allQuestions = (bool) parameters[3];
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,The following statement contains a magic number: UsageEmailDialog.DoTrivialUsageReport(utilityLabel' applicationKey' FeedbackEmailAddress'  				string.Format("1. Do you have suggestions to improve the program?%0A%0A2. What are you happy with?")'  				false' 10' assembly);
Magic Number,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,The following statement contains a magic number: UsageEmailDialog.DoTrivialUsageReport(utilityLabel' applicationKey' FeedbackEmailAddress'  				string.Format("1. What would you like to say to others about {0}?%0A%0A2. What languages have you used with {0}"' utilityLabel)'  				false' 40' assembly);
Magic Number,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,ExportTranslatedListsDlg,The following statement contains a magic number: m_columnLists.Width = m_lvLists.Width - 25;
Magic Number,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,ExportTranslatedListsDlg,The following statement contains a magic number: m_columnWs.Width = m_lvWritingSystems.Width - 25;
Magic Number,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,OnSizeChanged,The following statement contains a magic number: m_columnLists.Width = m_lvLists.Width - 25;
Magic Number,SIL.FieldWorks.XWorks,ExportTranslatedListsDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportTranslatedListsDlg.cs,OnSizeChanged,The following statement contains a magic number: m_columnWs.Width = m_lvWritingSystems.Width - 25;
Magic Number,SIL.FieldWorks.XWorks,FwXWindow,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FwXWindow.cs,ImportTranslatedLists,The following statement contains a magic number: dlg.Maximum = 200;
Magic Number,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,OnBackButtonClick,The following statement contains a magic number: m_iURLCounter -= 2;
Magic Number,SIL.FieldWorks.XWorks,GeneratedHtmlViewer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\GeneratedHtmlViewer.cs,OnSaveAsWebpage,The following statement contains a magic number: switch (whatToSave)  				{  					case "GrammarSketchXLingPaper":  							if (File.Exists(m_sAlsoSaveFileName))  							{  								string inputFile = m_sAlsoSaveFileName;  								if (!string.IsNullOrEmpty(xsltFiles))  								{  									string newFileName = Path.GetFileNameWithoutExtension(outPath);  									string tempFileName = Path.Combine(Path.GetTempPath()' newFileName);  									string outputFile = tempFileName;  									string[] rgsXslts = xsltFiles.Split(new[] { ';' });  									int cXslts = rgsXslts.GetLength(0);  									for (int i = 0; i < cXslts; ++i)  									{  										outputFile = outputFile + (i + 1);  										XslCompiledTransform transform = GetTransformFromFile(Path.Combine(ExportTemplatePath' rgsXslts[i]));  										var xmlReaderSettings = new XmlReaderSettings { DtdProcessing = DtdProcessing.Parse };  										using (var writer = new StreamWriter(outputFile + ".xml"))  										using (var reader = XmlReader.Create(inputFile' xmlReaderSettings))  											transform.Transform(reader' null' writer);  										inputFile = outputFile + ".xml";  									}  								}  								CopyFile(inputFile' outPath);  								return true;  							}  						break;  					default:  						if (File.Exists(m_sHtmlFileName))  						{  							CopyFile(m_sHtmlFileName' outPath);  							// This task is too fast on Linux/Mono (FWNX-1191).  Wait half a second...  							// (I would like a more principled fix' but have spent too much time on this issue already.)  							System.Threading.Thread.Sleep(500);  							return true;  						}  						break;  			}
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(2' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(3' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(4' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(5' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(6' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(7' "Lexicon 32.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(8' "Lists 32.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(9' "Texts 32.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(10' "Words 32.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.largeImages.Images.SetKeyName(11' "Grammar 32.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(2' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(3' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(4' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(5' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(6' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(7' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(8' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(9' "ExternalLink.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallImages.Images.SetKeyName(10' "SideBySideView.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(2' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(3' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(4' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(5' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(6' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(7' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(8' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(9' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(10' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(11' "");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(12' "MoveUp.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(13' "MoveRight.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(14' "MoveDown.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(15' "MoveLeft.bmp");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.smallCommandImages.Images.SetKeyName(16' "columnChooser.ico");
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.button1.ImageIndex = 6;
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(32' 40);
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.button1.Location = new System.Drawing.Point(32' 40);
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(75' 56);
Magic Number,SIL.FieldWorks.XWorks,ImageHolder,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ImageHolder.cs,InitializeComponent,The following statement contains a magic number: this.button1.Size = new System.Drawing.Size(75' 56);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,AddChapterToInterestingTexts,The following statement contains a magic number: int chapMax = sec.VerseRefMax / 1000;
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,AddChapterToInterestingTexts,The following statement contains a magic number: int chapMin = sec.VerseRefMin / 1000;
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,AddChapterToInterestingTexts,The following statement contains a magic number: secNext.VerseRefMin / 1000 != chapMax
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,AddChapterToInterestingTexts,The following statement contains a magic number: secPrev.VerseRefMax / 1000 != chapMin
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,TextPosition,The following statement contains a magic number: return BookPosition(book)  				   + section.IndexInOwner * 2 + 2  				   + (flid == ScrSectionTags.kflidContent ? 1 : 0);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,TextPosition,The following statement contains a magic number: return BookPosition(book)  				   + section.IndexInOwner * 2 + 2  				   + (flid == ScrSectionTags.kflidContent ? 1 : 0);
Magic Number,SIL.FieldWorks.XWorks,InterestingTextList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextList.cs,BookPosition,The following statement contains a magic number: return book.IndexInOwner * 10000;
Magic Number,SIL.FieldWorks.XWorks,LinkListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\LinkListener.cs,FollowActiveLink,The following statement contains a magic number: switch (majorObject.ClassID)  					{  						case ReversalIndexTags.kClassId:  							realTool = "reversalToolEditComplete";  							break;  						case TextTags.kClassId:  							realTool = "interlinearEdit";  							break;  						case LexEntryTags.kClassId:  							realTool = "lexiconEdit";  							break;  						case ScriptureTags.kClassId:  							ShowCantJumpMessage(xWorksStrings.ksCantJumpToScripture);  							return false; // Todo: don't know how to handle this yet.  							//app = FwUtils.ksTeAbbrev;  							//realTool = "reversalToolEditComplete";  							//break;  						case CmPossibilityListTags.kClassId:  							// The area listener knows about the possible list tools.  							// Unfortunately AreaListener is in an assembly we can't reference.  							// But there may be custom ones' so just listing them all here does not seem to be an option'  							// and anyway it would be hard to maintain.  							// Thus we've created this method (on AreaListener) which we call awkwardly throught the mediator.  							var parameters = new object[2];  							parameters[0] = majorObject;  							m_mediator.SendMessage("GetToolForList"' parameters);  							realTool = (string)parameters[1];  							break;  						case RnResearchNbkTags.kClassId:  							realTool = "notebookEdit";  							break;  						case DsConstChartTags.kClassId:  							realTarget = ((IDsConstChart) majorObject).BasedOnRA;  							realTool = "interlinearEdit";  							// Enhance JohnT: do something to make it switch to Discourse tab  							break;  						case LexDbTags.kClassId: // other things owned by this??  						case LangProjectTags.kClassId:  							ShowCantJumpMessage(xWorksStrings.ksCantJumpToLangProj);  							return false;  						default:  							var msg = string.Format(xWorksStrings.ksCantJumpToObject'  								cache.MetaDataCacheAccessor.GetClassName(majorObject.ClassID));  							ShowCantJumpMessage(msg);  							return false; // can't jump to it.  					}
Magic Number,SIL.FieldWorks.XWorks,MacroListener,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\MacroListener.cs,GetMacro,The following statement contains a magic number: int index = XmlUtils.GetMandatoryIntegerAttributeValue(paramNode' "key") - 2;
Magic Number,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportNotebook,The following statement contains a magic number: FxtType ft = (FxtType)args[2];
Magic Number,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportNotebook,The following statement contains a magic number: progress.Maximum = m_cache.LangProject.ResearchNotebookOA.RecordsOC.Count + 6;
Magic Number,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportNotebook,The following statement contains a magic number: progress.Step(3);
Magic Number,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportNotebook,The following statement contains a magic number: progress.Step(3);
Magic Number,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportLanguages,The following statement contains a magic number: string type = code.Length == 2 ? "ISO-639-1" : "ISO-639-3";
Magic Number,SIL.FieldWorks.XWorks,TreeBarHandlerUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TreeBarHandlerUtils.cs,CreateDuplicate,The following statement contains a magic number: UndoableUnitOfWorkHelper.DoUsingNewOrCurrentUOW(string.Format(xWorksStrings.ksUndoDuplicate' "Item")'  				string.Format(xWorksStrings.ksRedoDuplicate' "Item")' cache.ActionHandlerAccessor' () =>  				{  					const int itemFlid = 8008;  					ISilDataAccess sda = cache.MainCacheAccessor;  					int hvoNew = sda.MakeNewObject(orig.ClassID' ownerHvo' flid' order);  					newObj = (ICmPossibility)cache.ServiceLocator.GetObject(hvoNew);  					int ws = orig.Name.AvailableWritingSystemIds[0];  					newObj.Name.set_String(ws' orig.Name.UiString);  					newObj.Name.AnalysisDefaultWritingSystem = orig.Name.AnalysisDefaultWritingSystem;  					newObj.Name.VernacularDefaultWritingSystem = orig.Name.VernacularDefaultWritingSystem;  					if (flid == itemFlid) //Only the top node needs a name change  						newObj.Name.set_String(ws' ChangeName(newObj));  					if (!String.IsNullOrEmpty(orig.Abbreviation.UiString))  						newObj.Abbreviation.set_String(ws' orig.Abbreviation.UiString);  					if (!String.IsNullOrEmpty(orig.Description.UiString))  						newObj.Description.set_String(ws' orig.Description.UiString);  					newObj.StatusRA = orig.StatusRA;  					if(newObj.DiscussionOA != null)  						newObj.DiscussionOA = orig.DiscussionOA;  					newObj.ConfidenceRA = orig.ConfidenceRA;  					foreach (ICmPerson person in orig.ResearchersRC)  					{  						newObj.ResearchersRC.Add(person);  					}  					foreach (ICmPossibility poss in orig.RestrictionsRC)  					{  						newObj.RestrictionsRC.Add(poss);  					}  				});
Magic Number,SIL.FieldWorks.XWorks,TreeBarHandlerUtils,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\TreeBarHandlerUtils.cs,ChangeName,The following statement contains a magic number: int temp = Convert.ToInt32(match.Groups[2].Value);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.publishButton' 0' 5);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.closeButton' 1' 5);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.outputLogTextbox' 0' 6);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.helpButton' 2' 5);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.helpButton' 2' 5);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.Controls.Add(this.publicationGroupBox' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.explanationLabel' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.outputLogTextbox' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.webonarySettingsGroupbox' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.settingsForWebonaryTableLayoutPanel.Controls.Add(this.webonaryPasswordTextbox' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.settingsForWebonaryTableLayoutPanel.Controls.Add(this.passwordLabel' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.settingsForWebonaryTableLayoutPanel.Controls.Add(this.webonaryDomainLabel' 2' 0);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.settingsForWebonaryTableLayoutPanel.Controls.Add(this.rememberPasswordCheckbox' 2' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.settingsForWebonaryTableLayoutPanel.Controls.Add(this.rememberPasswordCheckbox' 2' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.tableLayoutPanel.SetColumnSpan(this.publicationGroupBox' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.Controls.Add(this.reversalsLabel' 0' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.Controls.Add(this.howManyPubsAlertLabel' 0' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.Controls.Add(this.reversalsCheckedListBox' 1' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.SetColumnSpan(this.configurationBox' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.SetColumnSpan(this.publicationBox' 2);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.SetColumnSpan(this.howManyPubsAlertLabel' 3);
Magic Number,SIL.FieldWorks.XWorks,UploadToWebonaryDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\UploadToWebonaryDlg.cs,InitializeComponent,The following statement contains a magic number: this.publicationSelectionTableLayoutPanel.SetColumnSpan(this.reversalsCheckedListBox' 2);
Magic Number,SIL.FieldWorks.XWorks,SemanticDomainRdeTreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SemanticDomainRdeTreeBarHandler.cs,Init,The following statement contains a magic number: m_searchTimer = new SearchTimer(treeBarControl' 500' HandleChangeInSearchText'  				new List<Control> { treeBarControl.TreeView' treeBarControl.ListView });
Magic Number,SIL.FieldWorks.XWorks,SemanticDomainRdeTreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SemanticDomainRdeTreeBarHandler.cs,CreateSearchBox,The following statement contains a magic number: searchBox.Location = new Point(0' 25);
Magic Number,SIL.FieldWorks.XWorks,SemanticDomainRdeTreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SemanticDomainRdeTreeBarHandler.cs,CreateSearchBox,The following statement contains a magic number: searchBox.Size = new Size(305' 20);
Magic Number,SIL.FieldWorks.XWorks,SemanticDomainRdeTreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SemanticDomainRdeTreeBarHandler.cs,CreateSearchBox,The following statement contains a magic number: searchBox.Size = new Size(305' 20);
Magic Number,SIL.FieldWorks.XWorks,TreeBarHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBarTreeHandler.cs,OkToDrop,The following statement contains a magic number: m_list.OwningObject is ICmPossibilityList && (m_list.OwningObject as ICmPossibilityList).Depth < 2
Magic Number,SIL.FieldWorks.XWorks,RecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerk.cs,OnDuplicateItemInVector,The following statement contains a magic number: const int subitemFlid = 7004;
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(2' "");
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(3' "");
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(4' "sendReceive16x16.png");
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(5' "SendReceiveGetArrow16x16.png");
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(6' "chorus16.png");
Magic Number,SIL.FieldWorks.XWorks,RecordClerkImages,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordClerkImages.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.Images.SetKeyName(7' "sendReceiveFirst16x16.png");
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.ImageSize = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.buttonImages.ImageSize = new System.Drawing.Size(16' 16);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_panel.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_panel.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_panel.TabIndex = 2;
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_dataEntryForm.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_dataEntryForm.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,RecordEditView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordEditView.cs,InitializeComponent,The following statement contains a magic number: this.m_dataEntryForm.TabIndex = 3;
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFontHeightFromStylesheet,The following statement contains a magic number: fontHeight = FontHeightAdjuster.GetFontHeightForStyle(  					"Normal"' stylesheet'  					wsContainer.DefaultAnalysisWritingSystem.Handle'  					cache.WritingSystemFactory) / 1000;
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,GetFilteredSortedList,The following statement contains a magic number: var newPercentDone = done*20/count;
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,SortList,The following statement contains a magic number: ((IReportsSortProgress) m_sorter).SetPercentDone =  						percent =>  							{  								progress.PercentDone = 20 + percent * 4 / 5;  								progress.Breath();  							};
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,SortList,The following statement contains a magic number: ((IReportsSortProgress) m_sorter).SetPercentDone =  						percent =>  							{  								progress.PercentDone = 20 + percent * 4 / 5;  								progress.Breath();  							};
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,SortList,The following statement contains a magic number: ((IReportsSortProgress) m_sorter).SetPercentDone =  						percent =>  							{  								progress.PercentDone = 20 + percent * 4 / 5;  								progress.Breath();  							};
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CreateNewObject,The following statement contains a magic number: cpiPath.Count > 2
Magic Number,SIL.FieldWorks.XWorks,RecordList,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordList.cs,CreateNewObject,The following statement contains a magic number: hvoNew = sda.MakeNewObject(cpiLevel2.signatureClsid' hvoOwner' flid' -2);
Magic Number,SIL.FieldWorks.XWorks,RecordView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,RecordView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,SubitemRecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SubitemRecordClerk.cs,ViewChangedSelectedRecord,The following statement contains a magic number: clevels < 2
Magic Number,SIL.FieldWorks.XWorks,SubitemRecordClerk,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\SubitemRecordClerk.cs,ViewChangedSelectedRecord,The following statement contains a magic number: sel.PropInfo(false' clevels - 2' out hvoObj' out tag' out ihvo'  				out cpropPrevious' out vps);
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,OnDomKeyPress,The following statement contains a magic number: const int UP = 38;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,OnDomKeyPress,The following statement contains a magic number: const int DOWN = 40;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,OnDomKeyPress,The following statement contains a magic number: const int PAGEUP = 33;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,OnDomKeyPress,The following statement contains a magic number: const int PAGEDOWN = 34;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,GetHrefFromGeckoDomElement,The following statement contains a magic number: return !hrefVal.StartsWith("#g") ? Guid.Empty : new Guid(hrefVal.Substring(2));
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,RunConfigureDialogAt,The following statement contains a magic number: var classList = tagObjects[2] as List<string>;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,RunConfigureDialogAt,The following statement contains a magic number: var guid = (Guid)tagObjects[3];
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,RunDiagnosticsDialogAt,The following statement contains a magic number: var guid = (Guid)tagObjects[2];
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetActiveSelectedEntryOnView,The following statement contains a magic number: var yPosition = currElementTop - (browser.Height / 4);
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SaveConfiguredXhtmlAndDisplay,The following statement contains a magic number: args.Length != 2
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SaveConfiguredXhtmlAndDisplay,The following statement contains a magic number: progress.Maximum = entryCount + 1 + entryCount / 100;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetConfigViewTitle,The following statement contains a magic number: var maxViewWidth = Width/2 - kSpaceForMenuButton;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetConfigViewTitle,The following statement contains a magic number: curViewName = TrimToMaxPixelWidth(Math.Max(2' maxViewWidth)' curViewName);
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetInfoBarText,The following statement contains a magic number: var maxViewWidth = Width / 2 - kSpaceForMenuButton;
Magic Number,SIL.FieldWorks.XWorks,XhtmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlDocView.cs,SetInfoBarText,The following statement contains a magic number: titleStr = TrimToMaxPixelWidth(Math.Max(2' maxViewWidth)' titleStr);
Magic Number,SIL.FieldWorks.XWorks,XhtmlRecordDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XhtmlRecordDocView.cs,ShowRecordOnIdle,The following statement contains a magic number: ui != null && DateTime.Now - ui.LastActivityTime < TimeSpan.FromMilliseconds(400)
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,From96dpiY,The following statement contains a magic number: return (int)Math.Round(input*g.DpiY/96.0);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,From96dpiX,The following statement contains a magic number: return (int)Math.Round(input * g.DpiX / 96.0);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_cfgParentNode.Location = new Point(From96dpiX(9)' From96dpiY(57));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_cfgParentNode.Location = new Point(From96dpiX(9)' From96dpiY(57));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_chkShowSingleGramInfoFirst.Location = new Point(From96dpiX(10)' From96dpiY(104));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_chkShowSingleGramInfoFirst.Location = new Point(From96dpiX(10)' From96dpiY(104));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_cfgSenses.Location = new Point(From96dpiX(10)'  				m_chkShowSingleGramInfoFirst.Location.Y + m_chkShowSingleGramInfoFirst.Height + From96dpiY(4));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,XmlDocConfigureDlg,The following statement contains a magic number: m_cfgSenses.Location = new Point(From96dpiX(10)'  				m_chkShowSingleGramInfoFirst.Location.Y + m_chkShowSingleGramInfoFirst.Height + From96dpiY(4));
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetActiveNode,The following statement contains a magic number: idParts.Length != 4
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetActiveNode,The following statement contains a magic number: var partRef = idParts[2];
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,m_btnMoveDown_Click,The following statement contains a magic number: tnParent.Nodes.Insert(idx + 2' ltn);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,PlaceContextControls,The following statement contains a magic number: m_dyContextOffset = 8;
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetItemListLocations,The following statement contains a magic number: y = m_chkDisplayData.Location.Y + m_chkDisplayData.Size.Height + 7;
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetItemListLocations,The following statement contains a magic number: y += m_lblItemsList.Size.Height + 7;
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetItemListLocations,The following statement contains a magic number: y += 12;
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,SetItemListLocations,The following statement contains a magic number: y += m_btnMoveItemUp.Size.Height + 6;
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The following statement contains a magic number: this.panel1.MaximumSize = new System.Drawing.Size(362' 1009);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The following statement contains a magic number: this.panel1.MaximumSize = new System.Drawing.Size(362' 1009);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The following statement contains a magic number: this.panel1.MinimumSize = new System.Drawing.Size(362' 440);
Magic Number,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,InitializeComponent,The following statement contains a magic number: this.panel1.MinimumSize = new System.Drawing.Size(362' 440);
Magic Number,SIL.FieldWorks.XWorks,LayoutTreeNode,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,GetModifiedLayouts,The following statement contains a magic number: rgixn[i] <= xnLayout.ChildNodes.Count/2
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SetConfigViewTitle,The following statement contains a magic number: var maxLayoutViewWidth = Width/2 - kSpaceForMenuButton;
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SetConfigViewTitle,The following statement contains a magic number: curViewName = TrimToMaxPixelWidth(Math.Max(2' maxLayoutViewWidth)' curViewName);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,MakePublicationTitlePart,The following statement contains a magic number: var maxPublicationTitleWidth = Math.Max(2' Width/2 - kSpaceForMenuButton);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,MakePublicationTitlePart,The following statement contains a magic number: var maxPublicationTitleWidth = Math.Max(2' Width/2 - kSpaceForMenuButton);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,The following statement contains a magic number: selRect.Inflate(8'2);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SubitemClicked,The following statement contains a magic number: selRect.Inflate(8'2);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,SetupDataContext,The following statement contains a magic number: Controls.Count == 2
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,XmlDocView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocView.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(752' 150);
Magic Number,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,TrimToMaxPixelWidth,The following statement contains a magic number: charsAllowed < 5
Magic Number,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,TrimToMaxPixelWidth,The following statement contains a magic number: return sPixelWidth < pixelWidthAllowed ? sToTrim : sToTrim.Substring(0' charsAllowed-4) + kEllipsis;
Magic Number,SIL.FieldWorks.XWorks.Archiving,ArchivingExtensions,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\Archiving\ArchivingExtensions.cs,GetIso3Code,The following statement contains a magic number: string.IsNullOrEmpty(iso3Code) || (iso3Code.Length != 3)
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,MigrateFrom83Alpha,The following statement contains a magic number: switch (alphaModel.Version)  			{  				case -1:  				case 1:  				case 2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 2' alphaModel.IsReversal);  					goto case 3;  				case 3:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 3' alphaModel.IsReversal);  					DCM.SetWritingSystemForReversalModel(alphaModel' Cache);  					AddSharedNodesToAlphaConfigurations(alphaModel);  					goto case 4;  				case 4:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 4' alphaModel.IsReversal);  					goto case VersionAlpha2;  				case VersionAlpha2:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' VersionAlpha2' alphaModel.IsReversal);  					goto case 6;  				case 6:  					HandleNodewiseChanges(alphaModel.PartsAndSharedItems' m_logger' 6' alphaModel.IsReversal);  					goto case 7;  				case 7:  					var fileName = Path.GetFileNameWithoutExtension(alphaModel.FilePath);  					if (!alphaModel.IsRootBased)  						alphaModel.IsRootBased = fileName == DCM.RootFileName;  					break;  				default:  					m_logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' alphaModel.Label' alphaModel.Version));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following statement contains a magic number: switch (version)  			{  				case 2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == "OwningEntry" && n.SubField == "MLHeadWord")  							n.SubField = newHeadword;  					});  					break;  				case 3:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.Label == "Gloss (or Summary Definition)")  							n.FieldDescription = "GlossOrSummary";  						if (n.Parent == null)  							return;  						if (n.Parent.FieldDescription == "ExamplesOS" && n.FieldDescription == "Example")  							n.Label = "Example Sentence";  						else if (n.Parent.FieldDescription == "ReferringSenses")  						{  							if (n.FieldDescription == "Owner" && n.SubField == "Bibliography")  								n.Label = "Bibliography (Entry)";  							else if (n.FieldDescription == "Bibliography")  								n.Label = "Bibliography (Sense)";  						}  					});  					break;  				case 4:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}  					});  					break;  				case VersionAlpha2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == null)  						{  							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n)));  							return;  						}  						if (n.FieldDescription == "VisibleVariantEntryRefs" && n.Label == "Variant Of")  							n.Label = "Variant of";  						else if (n.FieldDescription.Contains("EntryType"))  						{  							var parentFd = n.Parent.FieldDescription;  							if (n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS"))  							{  								if (parentFd == "ComplexFormEntryRefs")  								{  									// set type children to RevAbbr/RevName  									SetEntryTypeChildrenBackward(n);  								}  								else  								{  									// set type children to Abbr/Name  									SetEntryTypeChildrenForward(n);  								}  							}  							else if (parentFd.EndsWith("BackRefs") || parentFd == "ComplexFormsNotSubentries")  							{  								// set type children to Abbr/Name  								SetEntryTypeChildrenForward(n);  							}  							else  							{  								// set type children to RevAbbr/RevName  								SetEntryTypeChildrenBackward(n);  							}  						}  						else if ((n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under")))  						{  							n.Label = "Referenced Headword";  						}  						else if (n.Label == "Subsenses" && n.Parent.FieldDescription == "SensesOS")  						{  							var senseNode = (DictionaryNodeSenseOptions)n.DictionaryNodeOptions;  							if (senseNode != null)  							{  								senseNode.ParentSenseNumberingStyle = "%.";  								senseNode.NumberingStyle = "%d";  								n.DictionaryNodeOptions = senseNode;  							}  						}  						else if (n.Label == "Allomorphs" && n.FieldDescription == "Owner")  						{  							n.FieldDescription = "Entry";  						}  						if (n.Label == "Referenced Headword")  						{  							n.FieldDescription = newHeadword;  							if (isReversal && n.DictionaryNodeOptions == null)  								n.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions  								{  									WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular'  									Options = new List<DictionaryNodeListOptions.DictionaryNodeOption>  									{  										new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular"' IsEnabled = true }  									}  								};  						}  					});  					break;  				case 6:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (isReversal && n.Label == "Pronunciation" && n.Parent.Label == "Pronunciations")  						{  							var parent = n.Parent;  							parent.Before = "[";  							parent.Between = " ";  							parent.After = "] ";  							n.Before = "";  							n.Between = "";  							n.After = " ";  						}  						UpdatePicturesChildren(n);  					});  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following statement contains a magic number: switch (version)  			{  				case 2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == "OwningEntry" && n.SubField == "MLHeadWord")  							n.SubField = newHeadword;  					});  					break;  				case 3:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.Label == "Gloss (or Summary Definition)")  							n.FieldDescription = "GlossOrSummary";  						if (n.Parent == null)  							return;  						if (n.Parent.FieldDescription == "ExamplesOS" && n.FieldDescription == "Example")  							n.Label = "Example Sentence";  						else if (n.Parent.FieldDescription == "ReferringSenses")  						{  							if (n.FieldDescription == "Owner" && n.SubField == "Bibliography")  								n.Label = "Bibliography (Entry)";  							else if (n.FieldDescription == "Bibliography")  								n.Label = "Bibliography (Sense)";  						}  					});  					break;  				case 4:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}  					});  					break;  				case VersionAlpha2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == null)  						{  							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n)));  							return;  						}  						if (n.FieldDescription == "VisibleVariantEntryRefs" && n.Label == "Variant Of")  							n.Label = "Variant of";  						else if (n.FieldDescription.Contains("EntryType"))  						{  							var parentFd = n.Parent.FieldDescription;  							if (n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS"))  							{  								if (parentFd == "ComplexFormEntryRefs")  								{  									// set type children to RevAbbr/RevName  									SetEntryTypeChildrenBackward(n);  								}  								else  								{  									// set type children to Abbr/Name  									SetEntryTypeChildrenForward(n);  								}  							}  							else if (parentFd.EndsWith("BackRefs") || parentFd == "ComplexFormsNotSubentries")  							{  								// set type children to Abbr/Name  								SetEntryTypeChildrenForward(n);  							}  							else  							{  								// set type children to RevAbbr/RevName  								SetEntryTypeChildrenBackward(n);  							}  						}  						else if ((n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under")))  						{  							n.Label = "Referenced Headword";  						}  						else if (n.Label == "Subsenses" && n.Parent.FieldDescription == "SensesOS")  						{  							var senseNode = (DictionaryNodeSenseOptions)n.DictionaryNodeOptions;  							if (senseNode != null)  							{  								senseNode.ParentSenseNumberingStyle = "%.";  								senseNode.NumberingStyle = "%d";  								n.DictionaryNodeOptions = senseNode;  							}  						}  						else if (n.Label == "Allomorphs" && n.FieldDescription == "Owner")  						{  							n.FieldDescription = "Entry";  						}  						if (n.Label == "Referenced Headword")  						{  							n.FieldDescription = newHeadword;  							if (isReversal && n.DictionaryNodeOptions == null)  								n.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions  								{  									WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular'  									Options = new List<DictionaryNodeListOptions.DictionaryNodeOption>  									{  										new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular"' IsEnabled = true }  									}  								};  						}  					});  					break;  				case 6:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (isReversal && n.Label == "Pronunciation" && n.Parent.Label == "Pronunciations")  						{  							var parent = n.Parent;  							parent.Before = "[";  							parent.Between = " ";  							parent.After = "] ";  							n.Before = "";  							n.Between = "";  							n.After = " ";  						}  						UpdatePicturesChildren(n);  					});  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following statement contains a magic number: switch (version)  			{  				case 2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == "OwningEntry" && n.SubField == "MLHeadWord")  							n.SubField = newHeadword;  					});  					break;  				case 3:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.Label == "Gloss (or Summary Definition)")  							n.FieldDescription = "GlossOrSummary";  						if (n.Parent == null)  							return;  						if (n.Parent.FieldDescription == "ExamplesOS" && n.FieldDescription == "Example")  							n.Label = "Example Sentence";  						else if (n.Parent.FieldDescription == "ReferringSenses")  						{  							if (n.FieldDescription == "Owner" && n.SubField == "Bibliography")  								n.Label = "Bibliography (Entry)";  							else if (n.FieldDescription == "Bibliography")  								n.Label = "Bibliography (Sense)";  						}  					});  					break;  				case 4:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}  					});  					break;  				case VersionAlpha2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == null)  						{  							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n)));  							return;  						}  						if (n.FieldDescription == "VisibleVariantEntryRefs" && n.Label == "Variant Of")  							n.Label = "Variant of";  						else if (n.FieldDescription.Contains("EntryType"))  						{  							var parentFd = n.Parent.FieldDescription;  							if (n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS"))  							{  								if (parentFd == "ComplexFormEntryRefs")  								{  									// set type children to RevAbbr/RevName  									SetEntryTypeChildrenBackward(n);  								}  								else  								{  									// set type children to Abbr/Name  									SetEntryTypeChildrenForward(n);  								}  							}  							else if (parentFd.EndsWith("BackRefs") || parentFd == "ComplexFormsNotSubentries")  							{  								// set type children to Abbr/Name  								SetEntryTypeChildrenForward(n);  							}  							else  							{  								// set type children to RevAbbr/RevName  								SetEntryTypeChildrenBackward(n);  							}  						}  						else if ((n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under")))  						{  							n.Label = "Referenced Headword";  						}  						else if (n.Label == "Subsenses" && n.Parent.FieldDescription == "SensesOS")  						{  							var senseNode = (DictionaryNodeSenseOptions)n.DictionaryNodeOptions;  							if (senseNode != null)  							{  								senseNode.ParentSenseNumberingStyle = "%.";  								senseNode.NumberingStyle = "%d";  								n.DictionaryNodeOptions = senseNode;  							}  						}  						else if (n.Label == "Allomorphs" && n.FieldDescription == "Owner")  						{  							n.FieldDescription = "Entry";  						}  						if (n.Label == "Referenced Headword")  						{  							n.FieldDescription = newHeadword;  							if (isReversal && n.DictionaryNodeOptions == null)  								n.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions  								{  									WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular'  									Options = new List<DictionaryNodeListOptions.DictionaryNodeOption>  									{  										new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular"' IsEnabled = true }  									}  								};  						}  					});  					break;  				case 6:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (isReversal && n.Label == "Pronunciation" && n.Parent.Label == "Pronunciations")  						{  							var parent = n.Parent;  							parent.Before = "[";  							parent.Between = " ";  							parent.After = "] ";  							n.Before = "";  							n.Between = "";  							n.After = " ";  						}  						UpdatePicturesChildren(n);  					});  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following statement contains a magic number: switch (version)  			{  				case 2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == "OwningEntry" && n.SubField == "MLHeadWord")  							n.SubField = newHeadword;  					});  					break;  				case 3:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.Label == "Gloss (or Summary Definition)")  							n.FieldDescription = "GlossOrSummary";  						if (n.Parent == null)  							return;  						if (n.Parent.FieldDescription == "ExamplesOS" && n.FieldDescription == "Example")  							n.Label = "Example Sentence";  						else if (n.Parent.FieldDescription == "ReferringSenses")  						{  							if (n.FieldDescription == "Owner" && n.SubField == "Bibliography")  								n.Label = "Bibliography (Entry)";  							else if (n.FieldDescription == "Bibliography")  								n.Label = "Bibliography (Sense)";  						}  					});  					break;  				case 4:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}  					});  					break;  				case VersionAlpha2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == null)  						{  							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n)));  							return;  						}  						if (n.FieldDescription == "VisibleVariantEntryRefs" && n.Label == "Variant Of")  							n.Label = "Variant of";  						else if (n.FieldDescription.Contains("EntryType"))  						{  							var parentFd = n.Parent.FieldDescription;  							if (n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS"))  							{  								if (parentFd == "ComplexFormEntryRefs")  								{  									// set type children to RevAbbr/RevName  									SetEntryTypeChildrenBackward(n);  								}  								else  								{  									// set type children to Abbr/Name  									SetEntryTypeChildrenForward(n);  								}  							}  							else if (parentFd.EndsWith("BackRefs") || parentFd == "ComplexFormsNotSubentries")  							{  								// set type children to Abbr/Name  								SetEntryTypeChildrenForward(n);  							}  							else  							{  								// set type children to RevAbbr/RevName  								SetEntryTypeChildrenBackward(n);  							}  						}  						else if ((n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under")))  						{  							n.Label = "Referenced Headword";  						}  						else if (n.Label == "Subsenses" && n.Parent.FieldDescription == "SensesOS")  						{  							var senseNode = (DictionaryNodeSenseOptions)n.DictionaryNodeOptions;  							if (senseNode != null)  							{  								senseNode.ParentSenseNumberingStyle = "%.";  								senseNode.NumberingStyle = "%d";  								n.DictionaryNodeOptions = senseNode;  							}  						}  						else if (n.Label == "Allomorphs" && n.FieldDescription == "Owner")  						{  							n.FieldDescription = "Entry";  						}  						if (n.Label == "Referenced Headword")  						{  							n.FieldDescription = newHeadword;  							if (isReversal && n.DictionaryNodeOptions == null)  								n.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions  								{  									WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular'  									Options = new List<DictionaryNodeListOptions.DictionaryNodeOption>  									{  										new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular"' IsEnabled = true }  									}  								};  						}  					});  					break;  				case 6:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (isReversal && n.Label == "Pronunciation" && n.Parent.Label == "Pronunciations")  						{  							var parent = n.Parent;  							parent.Before = "[";  							parent.Between = " ";  							parent.After = "] ";  							n.Before = "";  							n.Between = "";  							n.After = " ";  						}  						UpdatePicturesChildren(n);  					});  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstBetaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstBetaMigrator.cs,MigratePartFromOldVersionToCurrent,The following statement contains a magic number: switch (oldVersion)  			{  				case FirstAlphaMigrator.VersionAlpha3:  					MoveNodesIntoNewGroups(oldConfigPart' currentDefaultConfigPart);  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 9;  				case 9:  					UpgradeEtymologyCluster(oldConfigPart' oldConfig);  					goto case 10;  				case 10:  				case 11:  				case 12:  				case 13:  					RemoveMostOfGramInfoUnderRefdComplexForms(oldConfigPart);  					goto case VersionBeta5;  				case VersionBeta5:  				case 15:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					goto case 16;  				case 16:  					RemoveHiddenChildren(oldConfigPart' logger);  					goto case VersionRC2;  				case VersionRC2:  					ChangeReferenceSenseHeadwordFieldName(oldConfigPart);  					goto case 18;  				case 18:  					RemoveReferencedHeadwordSubField(oldConfigPart);  					goto case 19;  				case 19:  					ChangeReferringsensesToSenses(oldConfigPart);  					goto case 20;  				case 20:  					UseConfigReferencedEntriesAsPrimary(oldConfigPart);  					goto case 21;  				case 21:  					MigrateNewChildNodesAndOptionsInto(oldConfigPart' currentDefaultConfigPart);  					break;  				default:  					logger.WriteLine(string.Format(  						"Unable to migrate {0}: no migration instructions for version {1}"' oldConfigPart.Label' oldVersion));  					break;  			}
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,CopyNewDefaultsIntoConvertedModel,The following statement contains a magic number: CopyDefaultsIntoMinorEntryNode(convertedModel' convertedModel.Parts[i]' alphaDefaultModel.Parts[2]' // Minor Entry (Variants)  						DictionaryNodeListOptions.ListIds.Variant);
Magic Number,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,ConvertReferencedEntries,The following statement contains a magic number: convertedNode.Children.Count != 4
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,SetPanelOptionsSize,The following statement contains a magic number: panelOptions.Size = new Size(Width - 10' Height - (m_deltaStyleLabel + 10));
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,SetPanelOptionsSize,The following statement contains a magic number: panelOptions.Size = new Size(Width - 10' Height - (m_deltaStyleLabel + 10));
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(320' 100);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,DetailsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\DetailsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(320' 100);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(0' 193);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(305' 220);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,SenseOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\SenseOptionsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(305' 220);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,OnSizeChanged,The following statement contains a magic number: var listViewBottom = this.Height - firstCheckBox.Height - secondCheckBox.Height - 3;
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,OnSizeChanged,The following statement contains a magic number: var firstCheckBoxTop = listViewBottom + 3;
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(300' 100);
Magic Number,SIL.FieldWorks.XWorks.DictionaryDetailsView,ListOptionsView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryDetailsView\ListOptionsView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(300' 100);
Magic Number,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectParagraphProps,The following statement contains a magic number: paragraphProps.Add(new Tuple<string' string>("hanging"' -(styleRules.FirstLineIndent / 1000) + " pt"));
Magic Number,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectParagraphProps,The following statement contains a magic number: var lineSpace = Math.Abs(styleRules.LineSpacing.m_lineHeight) / 1000 + " pt";
Magic Number,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,GetPointPropAttribute,The following statement contains a magic number: resultsList.Add(new Tuple<string' string>(attributeName' propValue / 1000 + " pt"));
Magic Number,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,GetPointPropAttribute,The following statement contains a magic number: resultsList.Add(new Tuple<string' string>(attributeName' sizeProp.Value / 1000 + " pt"));
Missing Default,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,AddCustomFieldDlg,The following switch statement is missing a default case: switch (locationType)  			{  				case LocationType.Lexicon:  					// If you add classes here which have subclasses'  a change is also needed in BasicCustomPropertyFixer (FixFwDataDll).  					m_locationComboBox.Items.Add(new IdAndString<int>(LexEntryTags.kClassId' xWorksStrings.Entry));  					m_locationComboBox.Items.Add(new IdAndString<int>(LexSenseTags.kClassId' xWorksStrings.Sense));  					m_locationComboBox.Items.Add(new IdAndString<int>(LexExampleSentenceTags.kClassId' xWorksStrings.ExampleSentence));  					m_locationComboBox.Items.Add(new IdAndString<int>(MoFormTags.kClassId' xWorksStrings.Allomorph));  					break;    				case LocationType.Interlinear:  					m_locationComboBox.Items.Add(new IdAndString<int>(SegmentTags.kClassId' "Segment"));  					break;  				case LocationType.Notebook:  					// If you add classes here which have subclasses'  a change is also needed in BasicCustomPropertyFixer (FixFwDataDll).  					m_locationComboBox.Items.Add(new IdAndString<int>(RnGenericRecTags.kClassId' xWorksStrings.ksRecord));  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,AddCustomFieldDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\AddCustomFieldDlg.cs,SetFieldType,The following switch statement is missing a default case: switch (((IdAndString<CustomFieldType>) m_typeComboBox.SelectedItem).Id)  			{  				case CustomFieldType.SingleLineText:  					//if there is no selected item (for whatever reason) rather than crash just pick the first one in the combo.  					int ws = m_wsComboBox.SelectedItem != null ? ((IdAndString<int>)m_wsComboBox.SelectedItem).Id  															   : ((IdAndString<int>)m_wsComboBox.Items[0]).Id;  					fd.Type = ws == WritingSystemServices.kwsAnal || ws == WritingSystemServices.kwsVern ?  						CellarPropertyType.String : CellarPropertyType.MultiUnicode;  					fd.WsSelector = ws;  					break;    				case CustomFieldType.MultiparagraphText:  					fd.Type = CellarPropertyType.OwningAtomic;  					fd.DstCls = StTextTags.kClassId;  					break;    				case CustomFieldType.Number:  					fd.Type = CellarPropertyType.Integer;  					break;    				case CustomFieldType.Date:  					fd.Type = CellarPropertyType.GenDate;  					break;    				case CustomFieldType.ListRefAtomic:  					fd.Type = CellarPropertyType.ReferenceAtomic;  					fd.DstCls = CmPossibilityTags.kClassId;  					fd.ListRootId = ((IdAndString<Guid>)m_listComboBox.SelectedItem).Id;  					break;    				case CustomFieldType.ListRefCollection:  					fd.Type = CellarPropertyType.ReferenceCollection;  					fd.DstCls = CmPossibilityTags.kClassId;  					fd.ListRootId = ((IdAndString<Guid>)m_listComboBox.SelectedItem).Id;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GenerateXHTMLForFieldByReflection,The following switch statement is missing a default case: switch (typeForNode)  			{  				case PropertyType.CollectionType:  					if (!IsCollectionEmpty(propertyValue))  						return GenerateXHTMLForCollection(propertyValue' config' publicationDecorator' field' settings' info);  					return string.Empty;    				case PropertyType.MoFormType:  					return GenerateXHTMLForMoForm(propertyValue as IMoForm' config' settings);    				case PropertyType.CmObjectType:  					return GenerateXHTMLForICmObject(propertyValue as ICmObject' config' settings);    				case PropertyType.CmPictureType:  					fileProperty = propertyValue as ICmFile;  					fileOwner = field as ICmObject;  					return fileProperty != null && fileOwner != null  						? GenerateXHTMLForPicture(fileProperty' config' fileOwner' settings)  						: GenerateXHTMLForPictureCaption(propertyValue' config' settings);    				case PropertyType.CmPossibility:  					return GenerateXHTMLForPossibility(propertyValue' config' publicationDecorator' settings);    				case PropertyType.CmFileType:  					fileProperty = propertyValue as ICmFile;  					string internalPath = null;  					if (fileProperty != null && fileProperty.InternalPath != null)  						internalPath = fileProperty.InternalPath;  					// fileProperty.InternalPath can have a backward slash so that gets replaced with a forward slash in Linux  					if (!Platform.IsWindows && !string.IsNullOrEmpty(internalPath))  						internalPath = fileProperty.InternalPath.Replace('\\'' '/');    					if (fileProperty != null && !string.IsNullOrEmpty(internalPath))  					{  						var srcAttr = GenerateSrcAttributeForMediaFromFilePath(internalPath' "AudioVisual"' settings);  						if (IsVideo(fileProperty.InternalPath))  							return GenerateXHTMLForVideoFile(fileProperty.ClassName' srcAttr' MovieCamera);  						fileOwner = field as ICmObject;  						if (fileOwner != null)  						{  							// the XHTML id attribute must be unique. The owning ICmMedia has a unique guid.  							// The ICmFile is used for all references to the same file within the project' so its guid is not unique.  							return GenerateXHTMLForAudioFile(fileProperty.ClassName' fileOwner.Guid.ToString()' srcAttr' LoudSpeaker' settings);  						}  					}  					return string.Empty;  			}
Missing Default,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,GetPropValueForCustomField,The following switch statement is missing a default case: switch (customFieldType)  				{  					case (int)CellarPropertyType.ReferenceCollection:  					case (int)CellarPropertyType.OwningCollection:  					// Collections are stored essentially the same as sequences.  					case (int)CellarPropertyType.ReferenceSequence:  					case (int)CellarPropertyType.OwningSequence:  						{  							var sda = cache.MainCacheAccessor;  							// This method returns the hvo of the object pointed to  							var chvo = sda.get_VecSize(specificObject.Hvo' customFieldFlid);  							int[] contents;  							using (var arrayPtr = MarshalEx.ArrayToNative<int>(chvo))  							{  								sda.VecProp(specificObject.Hvo' customFieldFlid' chvo' out chvo' arrayPtr);  								contents = MarshalEx.NativeToArray<int>(arrayPtr' chvo);  							}  							// if the hvo is invalid set propertyValue to null otherwise get the object  							propertyValue = contents.Select(id => cache.LangProject.Services.GetObject(id));  							break;  						}  					case (int)CellarPropertyType.ReferenceAtomic:  					case (int)CellarPropertyType.OwningAtomic:  						{  							// This method returns the hvo of the object pointed to  							propertyValue = cache.MainCacheAccessor.get_ObjectProp(specificObject.Hvo' customFieldFlid);  							// if the hvo is invalid set propertyValue to null otherwise get the object  							propertyValue = (int)propertyValue > 0 ? cache.LangProject.Services.GetObject((int)propertyValue) : null;  							break;  						}  					case (int)CellarPropertyType.GenDate:  						{  							propertyValue = new GenDate(cache.MainCacheAccessor.get_IntProp(specificObject.Hvo' customFieldFlid));  							break;  						}    					case (int)CellarPropertyType.Time:  						{  							propertyValue = SilTime.ConvertFromSilTime(cache.MainCacheAccessor.get_TimeProp(specificObject.Hvo' customFieldFlid));  							break;  						}  					case (int)CellarPropertyType.MultiUnicode:  					case (int)CellarPropertyType.MultiString:  						{  							propertyValue = cache.MainCacheAccessor.get_MultiStringProp(specificObject.Hvo' customFieldFlid);  							break;  						}  					case (int)CellarPropertyType.String:  						{  							propertyValue = cache.MainCacheAccessor.get_StringProp(specificObject.Hvo' customFieldFlid);  							break;  						}  					case (int)CellarPropertyType.Integer:  						{  							propertyValue = cache.MainCacheAccessor.get_IntProp(specificObject.Hvo' customFieldFlid);  							break;  						}  				}
Missing Default,SIL.FieldWorks.XWorks,ConfiguredXHTMLGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConfiguredXHTMLGenerator.cs,IsVideo,The following switch statement is missing a default case: switch (extension.ToLowerInvariant())  			{  				// any others we should detect?  				case ".mp4":  				case ".avi":  				case ".swf":  				case ".mov":  				case ".flv":  				case ".ogv":  				case ".3gp":  					return true;  			}
Missing Default,SIL.FieldWorks.XWorks,CssGenerator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\CssGenerator.cs,AddInfoForUnderline,The following switch statement is missing a default case: switch(underlineType)  			{  				case(FwUnderlineType.kuntDouble):  				{  					// use border to generate second underline then generate the standard underline  					var fontProp = new Property("border-bottom");  					var termList = new TermList();  					termList.AddTerm(new PrimitiveTerm(UnitType.Pixel' 1));  					termList.AddSeparator(TermList.TermSeparator.Space);  					termList.AddTerm(new PrimitiveTerm(UnitType.Ident' "solid"));  					fontProp.Term = termList;  					declaration.Add(fontProp);    					// The wsFontInfo is publicly accessible InheritableStyleProp value if set' checks for explicit overrides.  					// Otherwise the defaultFontInfo if set' or null.  					AddInfoFromWsOrDefaultValue(wsFont.m_underlineColor' defaultFont.UnderlineColor' "border-bottom-color"' declaration);  					goto case FwUnderlineType.kuntSingle; //fall through to single  				}  				case(FwUnderlineType.kuntSingle):  				{  					var fontProp = new Property("text-decoration");  					fontProp.Term = new PrimitiveTerm(UnitType.Ident' "underline");  					declaration.Add(fontProp);    					// The wsFontInfo is publicly accessible InheritableStyleProp value if set' checks for explicit overrides.  					// Otherwise the defaultFontInfo if set' or null.  					AddInfoFromWsOrDefaultValue(wsFont.m_underlineColor' defaultFont.UnderlineColor' "text-decoration-color"' declaration);  					break;  				}  				case(FwUnderlineType.kuntStrikethrough):  				{  					var fontProp = new Property("text-decoration");  					fontProp.Term = new PrimitiveTerm(UnitType.Ident' "line-through");  					declaration.Add(fontProp);    					// The wsFontInfo is publicly accessible InheritableStyleProp value if set' checks for explicit overrides.  					// Otherwise the defaultFontInfo if set' or null.  					AddInfoFromWsOrDefaultValue(wsFont.m_underlineColor' defaultFont.UnderlineColor' "text-decoration-color"' declaration);  					break;  				}  				case (FwUnderlineType.kuntDashed):  				case (FwUnderlineType.kuntDotted):  				{  					// use border to generate a dotted or dashed underline  					var fontProp = new Property("border-bottom");  					var termList = new TermList();  					termList.AddTerm(new PrimitiveTerm(UnitType.Pixel' 1));  					termList.AddSeparator(TermList.TermSeparator.Space);  					termList.AddTerm(new PrimitiveTerm(UnitType.Ident'  																  underlineType == FwUnderlineType.kuntDashed ? "dashed" : "dotted"));  					fontProp.Term = termList;  					declaration.Add(fontProp);    					// The wsFontInfo is publicly accessible InheritableStyleProp value if set' checks for explicit overrides.  					// Otherwise the defaultFontInfo if set' or null.  					AddInfoFromWsOrDefaultValue(wsFont.m_underlineColor' defaultFont.UnderlineColor' "border-bottom-color"' declaration);  					break;  				}  			}
Missing Default,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,GetCurrentWritingSystems,The following switch statement is missing a default case: switch (wsType)  			{  				case DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular:  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsVern.ToString() });  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentVernacularWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					break;  				case DictionaryNodeWritingSystemOptions.WritingSystemType.Analysis:  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsAnal.ToString() });  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentAnalysisWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					break;  				case DictionaryNodeWritingSystemOptions.WritingSystemType.Both:  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsVern.ToString() });  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsAnal.ToString() });  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentVernacularWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentAnalysisWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					break;  				case DictionaryNodeWritingSystemOptions.WritingSystemType.Pronunciation:  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsPronunciation.ToString() });  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentPronunciationWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					break;  				case DictionaryNodeWritingSystemOptions.WritingSystemType.Reversal:  					wsList.Add(new DictionaryNodeListOptions.DictionaryNodeOption() { Id = WritingSystemServices.kwsReversalIndex.ToString() });  					wsList.AddRange(cache.ServiceLocator.WritingSystems.CurrentAnalysisWritingSystems.Select(  							ws => new DictionaryNodeListOptions.DictionaryNodeOption() { Id = ws.Id }));  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,DictionaryConfigurationController,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationController.cs,BuildOptionsForType,The following switch statement is missing a default case: switch(fieldType)  			{  				case (int)CellarPropertyType.MultiString:  				case (int)CellarPropertyType.MultiUnicode:  				{  					var wsTypeId = WritingSystemServices.GetMagicWsNameFromId(metaDataCache.GetFieldWs(fieldId));  					return BuildWsOptionsForWsType(wsTypeId);  				}  				case (int)CellarPropertyType.OwningCollection:  				case (int)CellarPropertyType.OwningSequence:  				case (int)CellarPropertyType.ReferenceCollection:  				case (int)CellarPropertyType.ReferenceSequence:  					return new DictionaryNodeListOptions();  			}
Missing Default,SIL.FieldWorks.XWorks,ClerkActivator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryExportService.cs,CacheClerk,The following switch statement is missing a default case: switch (clerkType)  				{  					case DictionaryType:  						s_dictionaryClerk = clerk;  						break;  					case ReversalType:  						s_reversalIndexClerk = clerk;  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,VecProp,The following switch statement is missing a default case: switch (tag)  			{  				case kflidWfExactOccurrences:  				case kflidWaExactOccurrences:  				case kflidWgExactOccurrences:  					return GetAnalysisOccurrences(hvo' false); // Do not include children.  				case kflidWfOccurrences:  				case kflidWaOccurrences:  				case kflidWgOccurrences:  					return GetAnalysisOccurrences(hvo);  				case kflidConcOccurrences:  					return m_concValues;  				case kflidSenseOccurrences:  					return GetSenseOccurrences(hvo);  				case kflidTextGenres:  					var text = GetStText(hvo);  					if (text != null)  						return (from poss in text.GenreCategories select poss.Hvo).ToArray();  					return new int[0];    			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_VecItem,The following switch statement is missing a default case: switch (tag)  			{  				case kflidWfExactOccurrences:  				case kflidWaExactOccurrences:  				case kflidWgExactOccurrences:  					return GetAnalysisOccurrences(hvo' false)[index];  				case kflidWfOccurrences:  				case kflidWaOccurrences:  				case kflidWgOccurrences:  					return GetAnalysisOccurrences(hvo)[index];  				case kflidConcOccurrences:  					return m_concValues[index];  				case kflidSenseOccurrences:  					return GetSenseOccurrences(hvo)[index];  				case kflidTextGenres:  					var text = GetStText(hvo);  					if (text != null)  						return text.GenreCategories[index].Hvo;  					return 0;  			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_VecSize,The following switch statement is missing a default case: switch (tag)  			{  				case kflidWfExactOccurrences:  				case kflidWaExactOccurrences:  				case kflidWgExactOccurrences:  					return GetAnalysisOccurrences(hvo' false).Length;  				case kflidWfOccurrences:  				case kflidWaOccurrences:  				case kflidWgOccurrences:  					return GetAnalysisOccurrences(hvo).Length;  				case kflidConcOccurrences:  					return m_concValues.Length;  				case kflidSenseOccurrences:  					return GetSenseOccurrences(hvo).Length;  				case kflidTextGenres:  					var text = GetStText(hvo);  					if (text != null)  						return text.GenreCategories.Count;  					return 0;  			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_BooleanProp,The following switch statement is missing a default case: switch(tag)  			{  				case kflidTextIsTranslation:  					var text = GetStText(hvo);  					if (text != null)  						return text.IsTranslation;  					return false;    			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_IntProp,The following switch statement is missing a default case: switch (tag)  			{  				case kflidOccurrenceCount:  					return GetAnalysisOccurrences(hvo).Length;  				case kflidBeginOffset:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid)  							return occurrence.GetMyBeginOffsetInPara();  						return 0;  					}  				case kflidEndOffset:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid)  							return occurrence.GetMyEndOffsetInPara();  						return 0;  					}  				case CmObjectTags.kflidClass:  					if (hvo < 0) return kclidFakeOccurrence;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_StringProp,The following switch statement is missing a default case: switch (tag)  			{  				case kflidReference:  					return m_occurrences.ContainsKey(hvo) ? m_occurrences[hvo].Reference ?? EmptyUserString() : EmptyUserString();  			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_MultiStringAlt,The following switch statement is missing a default case: switch(tag)  			{  				case kflidTextTitle:  					{  						var text = GetStText(hvo);  						if (text != null)  							return text.Title.get_String(ws);  						return TsStringUtils.EmptyString(ws);  					}  				case kflidTextSource:  					{  						var text = GetStText(hvo);  						if (text != null)  							return text.Source.get_String(ws);  						return TsStringUtils.EmptyString(ws);  					}  				case kflidTextComment:  					{  						var text = GetStText(hvo);  						if (text != null)  							return text.Comment.get_String(ws);  						return TsStringUtils.EmptyString(ws);  					}  			}
Missing Default,SIL.FieldWorks.XWorks,ConcDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,get_ObjectProp,The following switch statement is missing a default case: switch (tag)  			{  				case kflidTextObject:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid)  							return occurrence.TextObject.Hvo;  						return 0;  					}  				case kflidSegment:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid && occurrence.Segment != null)  							return occurrence.Segment.Hvo;  						return 0;  					}  				case kflidAnalysis:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid && occurrence.Analysis != null)  							return occurrence.Analysis.Hvo;  						return 0;  					}  				case kflidParagraph:  					{  						IParaFragment occurrence;  						if (m_occurrences.TryGetValue(hvo' out occurrence) && occurrence.IsValid)  							return occurrence.Paragraph.Hvo;  						return 0;  					}  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (luClid)  			{  				case WfiWordformTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWfExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWfOccurrences;  							case "ConcOccurrences":  								return ConcDecorator.kflidConcOccurrences;  							case "OccurrenceCount":  								return ConcDecorator.kflidOccurrenceCount;  						}  					}  					break;  				case WfiAnalysisTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWaExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWaOccurrences;  						}  					}  					break;  				case WfiGlossTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWgExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWgOccurrences;  						}  					}  					break;  				case LexSenseTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "Occurrences":  								return ConcDecorator.kflidSenseOccurrences;  						}  					}  					break;  				case LangProjectTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "ConcOccurrences":  								return ConcDecorator.kflidConcOccurrences;  						}  					}  					break;  				case ConcDecorator.kclidFakeOccurrence:  					switch (bstrFieldName)  					{  						case "Reference":  							return ConcDecorator.kflidReference;  						case "BeginOffset":  							return ConcDecorator.kflidBeginOffset;  						case "EndOffset":  							return ConcDecorator.kflidEndOffset;  						case "TextObject":  							return ConcDecorator.kflidTextObject;  						case "Paragraph":  							return ConcDecorator.kflidParagraph;  						case "Segment":  							return ConcDecorator.kflidSegment;  						case "Analysis":  							return ConcDecorator.kflidAnalysis;  						case "TextTitle":  							return ConcDecorator.kflidTextTitle;  						case "TextGenres":  							return ConcDecorator.kflidTextGenres;  						case "TextIsTranslation":  							return ConcDecorator.kflidTextIsTranslation;  						case "TextSource":  							return ConcDecorator.kflidTextSource;  						case "TextComment":  							return ConcDecorator.kflidTextComment;  					}  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWfExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWfOccurrences;  							case "ConcOccurrences":  								return ConcDecorator.kflidConcOccurrences;  							case "OccurrenceCount":  								return ConcDecorator.kflidOccurrenceCount;  						}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWaExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWaOccurrences;  						}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "ExactOccurrences":  								return ConcDecorator.kflidWgExactOccurrences;  							case "Occurrences":  								return ConcDecorator.kflidWgOccurrences;  						}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "Occurrences":  								return ConcDecorator.kflidSenseOccurrences;  						}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "ConcOccurrences":  								return ConcDecorator.kflidConcOccurrences;  						}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  					{  						case "Reference":  							return ConcDecorator.kflidReference;  						case "BeginOffset":  							return ConcDecorator.kflidBeginOffset;  						case "EndOffset":  							return ConcDecorator.kflidEndOffset;  						case "TextObject":  							return ConcDecorator.kflidTextObject;  						case "Paragraph":  							return ConcDecorator.kflidParagraph;  						case "Segment":  							return ConcDecorator.kflidSegment;  						case "Analysis":  							return ConcDecorator.kflidAnalysis;  						case "TextTitle":  							return ConcDecorator.kflidTextTitle;  						case "TextGenres":  							return ConcDecorator.kflidTextGenres;  						case "TextIsTranslation":  							return ConcDecorator.kflidTextIsTranslation;  						case "TextSource":  							return ConcDecorator.kflidTextSource;  						case "TextComment":  							return ConcDecorator.kflidTextComment;  					}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId,The following switch statement is missing a default case: switch (bstrClassName)  			{  				case "FakeOccurrence":  				switch (bstrFieldName)  				{  					case "Reference":  						return ConcDecorator.kflidReference;  					case "BeginOffset":  						return ConcDecorator.kflidBeginOffset;  					case "EndOffset":  						return ConcDecorator.kflidEndOffset;  					case "TextObject":  						return ConcDecorator.kflidTextObject;  					case "Paragraph":  						return ConcDecorator.kflidParagraph;  					case "Segment":  						return ConcDecorator.kflidSegment;  					case "TextTitle":  						return ConcDecorator.kflidTextTitle;  					case "TextGenres":  						return ConcDecorator.kflidTextGenres;  					case "TextIsTranslation":  						return ConcDecorator.kflidTextIsTranslation;  					case "TextSource":  						return ConcDecorator.kflidTextSource;  					case "TextComment":  						return ConcDecorator.kflidTextComment;  				}  					break;  				case "WfiWordform":  					return GetFieldId2(WfiWordformTags.kClassId' bstrFieldName' fIncludeBaseClasses);  				case "LexSense":  					return GetFieldId2(LexSenseTags.kClassId' bstrFieldName' fIncludeBaseClasses);  				case "LangProject":  					return GetFieldId2(LangProjectTags.kClassId' bstrFieldName' fIncludeBaseClasses);  				case "WfiAnalysis":  					return GetFieldId2(WfiAnalysisTags.kClassId' bstrFieldName' fIncludeBaseClasses);  				case "WfiGloss":  					return GetFieldId2(WfiGlossTags.kClassId' bstrFieldName' fIncludeBaseClasses);  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldId,The following switch statement is missing a default case: switch (bstrFieldName)  				{  					case "Reference":  						return ConcDecorator.kflidReference;  					case "BeginOffset":  						return ConcDecorator.kflidBeginOffset;  					case "EndOffset":  						return ConcDecorator.kflidEndOffset;  					case "TextObject":  						return ConcDecorator.kflidTextObject;  					case "Paragraph":  						return ConcDecorator.kflidParagraph;  					case "Segment":  						return ConcDecorator.kflidSegment;  					case "TextTitle":  						return ConcDecorator.kflidTextTitle;  					case "TextGenres":  						return ConcDecorator.kflidTextGenres;  					case "TextIsTranslation":  						return ConcDecorator.kflidTextIsTranslation;  					case "TextSource":  						return ConcDecorator.kflidTextSource;  					case "TextComment":  						return ConcDecorator.kflidTextComment;  				}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetOwnClsName,The following switch statement is missing a default case: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences: // Fall through  				case ConcDecorator.kflidWfOccurrences: return "WfiWordform";  				case ConcDecorator.kflidWaExactOccurrences: // Fall through  				case ConcDecorator.kflidWaOccurrences: return "WfiAnalysis";  				case ConcDecorator.kflidWgExactOccurrences: // Fall through  				case ConcDecorator.kflidWgOccurrences: return "WfiGloss";  				case ConcDecorator.kflidSenseOccurrences: return "LexSense";  				case ConcDecorator.kflidConcOccurrences: return "LangProject";  				case ConcDecorator.kflidTextSource: return "FakeOccurrence";  				case ConcDecorator.kflidTextTitle: return "FakeOccurrence";  				case ConcDecorator.kflidTextComment: return "FakeOccurrence";  				//case ConcDecorator.kflidOccurrenceCount: return "WfiWordform";  				//case ConcDecorator.kflidReference: return "FakeOccurrence";  				//case ConcDecorator.kflidBeginOffset: return "FakeOccurrence";  				//case ConcDecorator.kflidEndOffset: return "FakeOccurrence";  				// And several other FakeOccurrence properties.  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetDstClsId,The following switch statement is missing a default case: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences: // Fall through.  				case ConcDecorator.kflidWfOccurrences:  					return 0;  				case ConcDecorator.kflidTextObject:  					return CmObjectTags.kClassId;  				case ConcDecorator.kflidParagraph:  					return StTxtParaTags.kClassId;  				case ConcDecorator.kflidOccurrenceCount:  					return 0;  				case ConcDecorator.kflidReference:  					return 0; // 'Reference' of an occurrence.  				case ConcDecorator.kflidBeginOffset:  					return 0; // 'BeginOffset' of an occurrence.  				case ConcDecorator.kflidEndOffset:  					return 0; // 'EndOffset' of an occurrence.  				case ConcDecorator.kflidSenseOccurrences:  					return 0; // top-level property for occurrences of a sense.  				case ConcDecorator.kflidSegment:  					return 030; // segment from occurrence.  				case ConcDecorator.kflidConcOccurrences:  					return 0; // occurrences in Concordance view' supposedly of LangProject.  				case ConcDecorator.kflidAnalysis:  					return 032; // from fake concordance object to Analysis.  				case ConcDecorator.kflidWaExactOccurrences: // Fall through.  				case ConcDecorator.kflidWaOccurrences:  					return 0; // occurrences of a WfiAnalysis  				case ConcDecorator.kflidWgExactOccurrences: // Fall through.  				case ConcDecorator.kflidWgOccurrences:  					return 0; // occurrences of a WfiGloss.  				case ConcDecorator.kflidTextTitle:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextGenres:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextIsTranslation:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextSource:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kflidTextComment:  					return 0; // of a FakeOccurrence  				case ConcDecorator.kclidFakeOccurrence:  					return 0;  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldName,The following switch statement is missing a default case: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences: return "ExactOccurrences";  				case ConcDecorator.kflidWaExactOccurrences: return "ExactOccurrences";  				case ConcDecorator.kflidWgExactOccurrences: return "ExactOccurrences";  				case ConcDecorator.kflidWfOccurrences: return "Occurrences";  				case ConcDecorator.kflidWaOccurrences: return "Occurrences";  				case ConcDecorator.kflidWgOccurrences: return "Occurrences";  				case ConcDecorator.kflidSenseOccurrences: return "Occurrences";  				case ConcDecorator.kflidConcOccurrences: return "ConcOccurrences";  				//case ConcDecorator.kflidOccurrenceCount: return "OccurrenceCount";  				//case ConcDecorator.kflidReference: return "Reference";  				//case ConcDecorator.kflidBeginOffset: return "BeginOffset";  				//case ConcDecorator.kflidEndOffset: return "EndOffset";  				// and several other FakeObject properties  			}
Missing Default,SIL.FieldWorks.XWorks,ConcMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ConcDecorator.cs,GetFieldType,The following switch statement is missing a default case: switch (flid)  			{  				case ConcDecorator.kflidWfExactOccurrences:  				case ConcDecorator.kflidWfOccurrences:  				case ConcDecorator.kflidWaExactOccurrences:  				case ConcDecorator.kflidWaOccurrences:  				case ConcDecorator.kflidWgExactOccurrences:  				case ConcDecorator.kflidWgOccurrences:  				case ConcDecorator.kflidConcOccurrences:  				case ConcDecorator.kflidSenseOccurrences:  					return (int)CellarPropertyType.ReferenceSequence;  				case ConcDecorator.kflidOccurrenceCount:  					return (int)CellarPropertyType.Integer;  				case ConcDecorator.kflidReference:  					return (int)CellarPropertyType.String;  				case ConcDecorator.kflidBeginOffset:  					return (int)CellarPropertyType.Integer;  				case ConcDecorator.kflidEndOffset:  					return (int)CellarPropertyType.Integer;  				case ConcDecorator.kflidTextTitle:  					return (int)CellarPropertyType.MultiString;  				case ConcDecorator.kflidTextGenres:  					return (int)CellarPropertyType.ReferenceSequence;  				case ConcDecorator.kflidTextIsTranslation:  					return (int)CellarPropertyType.Boolean;  				case ConcDecorator.kflidTextSource:  					return (int)CellarPropertyType.MultiString;  				case ConcDecorator.kflidTextComment:  					return (int)CellarPropertyType.MultiString;  			}
Missing Default,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,GetEntriesToPublish,The following switch statement is missing a default case: switch (dictionaryType)  			{  				case "Dictionary":  					return VecProp(Cache.LangProject.LexDbOA.Hvo' virtualFlid);  				case "Reversal Index":  				{  					var reversalIndexGuid = ReversalIndexEntryUi.GetObjectGuidIfValid(propertyTable' "ReversalIndexGuid");  					if (reversalIndexGuid != Guid.Empty)  					{  						var currentReversalIndex = Cache.ServiceLocator.GetObject(reversalIndexGuid) as IReversalIndex;  						if (currentReversalIndex != null)  						{  							return GetSortedAndFilteredReversalEntries(currentReversalIndex.Hvo' virtualFlid);  						}  					}  					break;  				}  			}
Missing Default,SIL.FieldWorks.XWorks,DictionaryPublicationDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryPublicationDecorator.cs,IsPublishableLexRef,The following switch statement is missing a default case: switch(((ILexRefType)lexRef.Owner).MappingType)  			{  				case (int)LexRefTypeTags.MappingTypes.kmtEntryTree:  				case (int)LexRefTypeTags.MappingTypes.kmtSenseTree:  				case (int)LexRefTypeTags.MappingTypes.kmtEntryOrSenseTree:  					return !m_excludedItems.Contains(lexRef.TargetsRS[0].Hvo);  			}
Missing Default,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,DoExport,The following switch statement is missing a default case: switch (ft.m_ft)  						{  							case FxtTypes.kftFxt:  								m_dumper = new XDumper(m_cache);  								m_dumper.UpdateProgress += OnDumperUpdateProgress;  								m_dumper.SetProgressMessage += OnDumperSetProgressMessage;  								progressDlg.Minimum = 0;  								progressDlg.Maximum = m_dumper.GetProgressMaximum();  								progressDlg.AllowCancel = true;  								progressDlg.Restartable = true;    								progressDlg.RunTask(true' ExportFxt' outPath' fxtPath' fLiftOutput);  								break;  							case FxtTypes.kftConfigured:  							case FxtTypes.kftReversal:  							progressDlg.Minimum = 0;  							progressDlg.Maximum = 1; // max will be set by the task' since only it knows how many entries it will export  							progressDlg.AllowCancel = true;  							progressDlg.RunTask(true' ExportConfiguredXhtml' outPath);  							break;  							case FxtTypes.kftClassifiedDict:  								progressDlg.Minimum = 0;  								progressDlg.Maximum = m_seqView.ObjectCount;  								progressDlg.AllowCancel = true;    								IVwStylesheet vss = m_seqView.RootBox == null ? null : m_seqView.RootBox.Stylesheet;  								progressDlg.RunTask(true' ExportConfiguredDocView'  									outPath' fxtPath' ft' vss);  								break;  							case FxtTypes.kftTranslatedLists:  								progressDlg.Minimum = 0;  								progressDlg.Maximum = m_translatedLists.Count;  								progressDlg.AllowCancel = true;    								progressDlg.RunTask(true' ExportTranslatedLists' outPath);  								break;  							case FxtTypes.kftSemanticDomains:  								// Potentially' we could count semantic domains and try to make the export update for each.  								// In practice this only takes a second or two on a typical modern computer  								// an the main export routine is borrowed from kftTranslatedLists and set up to count each  								// list as one step. For now' claiming this export just has one step seems good enough.  								progressDlg.Minimum = 0;  								progressDlg.Maximum = 1;  								progressDlg.AllowCancel = true;    								progressDlg.RunTask(true' ExportSemanticDomains' outPath' ft' fxtPath' m_allQuestions);  								break;  							case FxtTypes.kftLift:  								progressDlg.Minimum = 0;  								progressDlg.Maximum = 1000;  								progressDlg.AllowCancel = true;  								progressDlg.Restartable = true;  								progressDlg.RunTask(true' ExportLift' outPath' ft.m_filtered);  								break;  							case FxtTypes.kftGrammarSketch:  								progressDlg.Minimum = 0;  								progressDlg.Maximum = 1000;  								progressDlg.AllowCancel = true;  								progressDlg.Restartable = true;  								progressDlg.RunTask(true' ExportGrammarSketch' outPath' ft.m_sDataType' ft.m_sXsltFiles);  								break;  						}
Missing Default,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportConfiguredXhtml,The following switch statement is missing a default case: switch (m_rgFxtTypes[FxtIndex((string)m_exportItems[0].Tag)].m_ft)  			{  				case FxtTypes.kftConfigured:  					new DictionaryExportService(m_propertyTable' m_mediator).ExportDictionaryContent(xhtmlPath' progress: progress);  					break;  				case FxtTypes.kftReversal:  					new DictionaryExportService(m_propertyTable' m_mediator).ExportReversalContent(xhtmlPath' progress: progress);  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,ExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ProcessPathwayExport,The following switch statement is missing a default case: switch (result)  			{  				// No = Skip export of data from Flex but still prepare exported output (ODT' PDF or whatever)  				case DialogResult.No:  					break;    				case DialogResult.Yes:  					if (!DoFlexExports(ExpCss' mainFullName' revFullXhtml))  					{  						this.Close();  						return;  					}  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,TranslatedListsExporter,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\ExportDialog.cs,ExportTranslatedItem,The following switch statement is missing a default case: switch (item.ClassID)  				{  					case CmLocationTags.kClassId:  						ExportLocationFields(w' item as ICmLocation);  						break;  					case CmPersonTags.kClassId:  						ExportPersonFields(w' item as ICmPerson);  						break;  					case CmSemanticDomainTags.kClassId:  						ExportSemanticDomainFields(w' item as ICmSemanticDomain);  						break;  					case LexEntryTypeTags.kClassId:  						ExportLexEntryTypeFields(w' item as ILexEntryType);  						break;  					case LexEntryInflTypeTags.kClassId:  						ExportLexEntryInflTypeFields(w' item as ILexEntryInflType);  						break;  					case LexRefTypeTags.kClassId:  						ExportLexRefTypeFields(w' item as ILexRefType);  						break;  					case PartOfSpeechTags.kClassId:  						ExportPartOfSpeechFields(w' item as IPartOfSpeech);  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,VecProp,The following switch statement is missing a default case: switch (tag)  			{  				case kflidInterestingTexts:  					SetRootHvo(hvo);  					return GetInterestingTexts();  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,get_VecItem,The following switch statement is missing a default case: switch (tag)  			{  				case kflidInterestingTexts:  					// Could set m_rootHvo = hvo here' but nothing should call this without first checking the size.  					return GetInterestingTexts()[index];  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsDecorator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,get_VecSize,The following switch statement is missing a default case: switch (tag)  			{  				case kflidInterestingTexts:  					SetRootHvo(hvo);  					return GetInterestingTexts().Length;  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (luClid)  			{  				case LangProjectTags.kClassId:  					{  						switch (bstrFieldName)  						{  							case "InterestingTexts":  								return InterestingTextsDecorator.kflidInterestingTexts;  						}  					}  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetFieldId2,The following switch statement is missing a default case: switch (bstrFieldName)  						{  							case "InterestingTexts":  								return InterestingTextsDecorator.kflidInterestingTexts;  						}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetFieldId,The following switch statement is missing a default case: switch (bstrClassName)  			{  				case "LangProject":  					return GetFieldId2(LangProjectTags.kClassId' bstrFieldName' fIncludeBaseClasses);  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetOwnClsName,The following switch statement is missing a default case: switch (flid)  			{  				case InterestingTextsDecorator.kflidInterestingTexts: return "LangProject";  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetDstClsId,The following switch statement is missing a default case: switch (flid)  			{  				case InterestingTextsDecorator.kflidInterestingTexts:  					return StTextTags.kClassId;  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetFieldName,The following switch statement is missing a default case: switch (flid)  			{  				case InterestingTextsDecorator.kflidInterestingTexts: return "InterestingTexts";  			}
Missing Default,SIL.FieldWorks.XWorks,InterestingTextsMdc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\InterestingTextsDecorator.cs,GetFieldType,The following switch statement is missing a default case: switch (flid)  			{  				case InterestingTextsDecorator.kflidInterestingTexts:  					return (int)CellarPropertyType.ReferenceSequence;  			}
Missing Default,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,DoExport,The following switch statement is missing a default case: switch (ft.m_ft)  						{  							case FxtTypes.kftFxt:  								progressDlg.RunTask(true' ExportNotebook' outPath' fxtPath' ft);  								break;  							case FxtTypes.kftConfigured:  								progressDlg.Minimum = 0;  								progressDlg.Maximum = m_seqView.ObjectCount;  								progressDlg.AllowCancel = true;    								IVwStylesheet vss = m_seqView.RootBox == null ? null : m_seqView.RootBox.Stylesheet;  								progressDlg.RunTask(true' ExportConfiguredDocView'  									outPath' fxtPath' ft' vss);  								break;  						}
Missing Default,SIL.FieldWorks.XWorks,NotebookExportDialog,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\NotebookExportDialog.cs,ExportCustomFields,The following switch statement is missing a default case: switch (cpt)  				{  					case CellarPropertyType.Boolean:  						break;  					case CellarPropertyType.Integer:  						break;  					case CellarPropertyType.Numeric:  						break;  					case CellarPropertyType.Float:  						break;  					case CellarPropertyType.Time:  						break;  					case CellarPropertyType.Guid:  						break;  					case CellarPropertyType.Image:  					case CellarPropertyType.Binary:  						break;  					case CellarPropertyType.GenDate:  						break;  					case CellarPropertyType.String:  						tss = sda.get_StringProp(record.Hvo' flid);  						if (tss != null && tss.Text != null)  							ExportString(writer' tss' fieldName);  						fHandled = true;  						break;  					case CellarPropertyType.MultiString:  					case CellarPropertyType.MultiUnicode:  						ITsMultiString tms = sda.get_MultiStringProp(record.Hvo' flid);  						int cch = 0;  						for (int i = 0; i < tms.StringCount; ++i)  						{  							int ws;  							tss = tms.GetStringFromIndex(i' out ws);  							cch += tss.Length;  							if (cch > 0)  								break;  						}  						if (cch > 0)  						{  							writer.WriteLine("<Field name=\"{0}\" type=\"MultiString\">"' fieldName);  							for (int i = 0; i < tms.StringCount; ++i)  							{  								int ws;  								tss = tms.GetStringFromIndex(i' out ws);  								if (tss != null && tss.Length > 0)  								{  									if (cpt == CellarPropertyType.MultiString)  									{  										writer.WriteLine(TsStringUtils.GetXmlRep(tss'  											m_cache.WritingSystemFactory' ws' true));  									}  									else  									{  										writer.WriteLine("<AUni ws=\"{0}\">{1}</AUni>"'  											m_cache.WritingSystemFactory.GetStrFromWs(ws)'  											XmlUtils.MakeSafeXml(tss.Text));  									}  								}  							}  							writer.WriteLine("</Field>");  						}  						fHandled = true;  						break;  					case CellarPropertyType.Unicode:  						break;  					case CellarPropertyType.ReferenceAtomic:  					case CellarPropertyType.ReferenceCollection:  					case CellarPropertyType.ReferenceSequence:  						{  							int destClid = m_mdc.GetDstClsId(flid);  							List<int> rghvoDest = new List<int>();  							if (cpt == CellarPropertyType.ReferenceAtomic)  							{  								int hvo = sda.get_ObjectProp(record.Hvo' flid);  								if (hvo != 0)  								{  									if (destClid == CmPossibilityTags.kClassId)  									{  										ICmPossibility poss = PossibilityRepository.GetObject(hvo);  										ExportAtomicReference(writer' poss' fieldName' "CmPossibility");  										fHandled = true;  									}  									else  									{  										rghvoDest.Add(hvo);  									}  								}  								else  								{  									fHandled = true;  								}  							}  							else  							{  								int[] hvos = sda.VecProp(record.Hvo' flid);  								if (hvos.Length > 0)  								{  									if (destClid == CmPossibilityTags.kClassId)  									{  										List<ICmPossibility> collection = new List<ICmPossibility>();  										foreach (int hvo in hvos)  											collection.Add(PossibilityRepository.GetObject(hvo));  										ExportReferenceList(writer' collection' fieldName' "CmPossibility"' cpt);  										fHandled = true;  									}  									else  									{  										rghvoDest.AddRange(hvos);  									}  								}  								else  								{  									fHandled = true;  								}  							}  							if (rghvoDest.Count > 0)  							{  							}  						}  						break;  					case CellarPropertyType.OwningAtomic:  					case CellarPropertyType.OwningCollection:  					case CellarPropertyType.OwningSequence:  						{  							int destClid = m_mdc.GetDstClsId(flid);  							List<int> rghvoDest = new List<int>();  							if (cpt == CellarPropertyType.OwningAtomic)  							{  								int hvo = sda.get_ObjectProp(record.Hvo' flid);  								if (hvo != 0)  								{  									if (destClid == StTextTags.kClassId)  									{  										IStText text = StTextRepository.GetObject(hvo);  										ExportStText(writer' text' fieldName);  										fHandled = true;  									}  									else  									{  										rghvoDest.Add(hvo);  									}  								}  								else  								{  									fHandled = true;  								}  							}  							else  							{  							}  						}  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,RecordBrowseActiveView,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\RecordBrowseView.cs,ChangeAnyDisabledFlags,The following switch statement is missing a default case: switch (obj.ClassID)  				{  					case PhRegularRuleTags.kClassId: // fall through  					case PhMetathesisRuleTags.kClassId:  						var segmentRule = obj as IPhSegmentRule;  						segmentRule.Disabled = !segmentRule.Disabled;  						break;  					case MoEndoCompoundTags.kClassId: // fall through  					case MoExoCompoundTags.kClassId:  						var compoundRule = obj as IMoCompoundRule;  						compoundRule.Disabled = !compoundRule.Disabled;  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnListItemsSelectedIndexChanged,The following switch statement is missing a default case: switch (m_listType)  			{  				case ListViewContent.WritingSystems:  					m_btnMoveItemUp.Enabled = GetIndexToMoveWsUp(sic) > 0;  					m_btnMoveItemDown.Enabled = GetIndexToMoveWsDown(sic) < m_lvItems.Items.Count - 1;  					break;  				case ListViewContent.RelationTypes:  				case ListViewContent.ComplexFormTypes:  				case ListViewContent.VariantTypes:  				case ListViewContent.MinorEntryTypes:  					m_btnMoveItemUp.Enabled = GetIndexToMoveTypeUp(sic) > 0;  					m_btnMoveItemDown.Enabled = GetIndexToMoveTypeDown(sic) < m_lvItems.Items.Count - 1;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnMoveItemUpClick,The following switch statement is missing a default case: switch (m_listType)  			{  				case ListViewContent.WritingSystems:  					idx = GetIndexToMoveWsUp(sic);  					MoveListItem(idx' Math.Max(idx - 1' 0));  					break;  				case ListViewContent.RelationTypes:  					idx = GetIndexToMoveTypeUp(sic);  					MoveListItem(idx' Math.Max(idx - 1' 0));  					MoveRelationTypeListItem(idx' Math.Max(idx - 1' 0));  					break;  				case ListViewContent.ComplexFormTypes:  				case ListViewContent.VariantTypes:  				case ListViewContent.MinorEntryTypes:  					idx = GetIndexToMoveTypeUp(sic);  					MoveListItem(idx' Math.Max(idx - 1' 0));  					MoveEntryTypeListItem(idx' Math.Max(idx - 1' 0));  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnMoveItemDownClick,The following switch statement is missing a default case: switch (m_listType)  			{  				case ListViewContent.WritingSystems:  					idx = GetIndexToMoveWsDown(sic);  					MoveListItem(idx' Math.Min(idx + 1' m_lvItems.Items.Count - 1));  					break;  				case ListViewContent.RelationTypes:  					idx = GetIndexToMoveTypeDown(sic);  					MoveListItem(idx' Math.Min(idx + 1' m_lvItems.Items.Count - 1));  					MoveRelationTypeListItem(idx' Math.Min(idx + 1' m_lvItems.Items.Count - 1));  					break;  				case ListViewContent.ComplexFormTypes:  				case ListViewContent.VariantTypes:  				case ListViewContent.MinorEntryTypes:  					idx = GetIndexToMoveTypeDown(sic);  					MoveListItem(idx' Math.Min(idx + 1' m_lvItems.Items.Count - 1));  					MoveEntryTypeListItem(idx' Math.Min(idx + 1' m_lvItems.Items.Count - 1));  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnListItemsItemCheck,The following switch statement is missing a default case: switch (m_listType)  			{  				case ListViewContent.WritingSystems:  					OnWritingSystemsItemCheck(e);  					break;  				case ListViewContent.RelationTypes:  				case ListViewContent.ComplexFormTypes:  				case ListViewContent.VariantTypes:  				case ListViewContent.MinorEntryTypes:  					OnItemTypeItemCheck(e);  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,OnItemTypeItemCheck,The following switch statement is missing a default case: switch (m_listType)  				{  					case ListViewContent.RelationTypes:  						m_current.RelTypeList[e.Index].Enabled = (e.NewValue == CheckState.Checked);  						break;  					case ListViewContent.ComplexFormTypes:  					case ListViewContent.VariantTypes:  					case ListViewContent.MinorEntryTypes:  						m_current.EntryTypeList[e.Index].Enabled = (e.NewValue == CheckState.Checked);  						break;  				}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,GenerateNumStyleFromCheckBoxes,The following switch statement is missing a default case: switch (m_cfgSenses.BoldSenseNumber)  			{  				case CheckState.Checked:  					sbNumStyle.Append("bold");  					break;  				case CheckState.Unchecked:  					sbNumStyle.Append("-bold");  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XmlDocConfigureDlg,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XmlDocConfigureDlg.cs,GenerateNumStyleFromCheckBoxes,The following switch statement is missing a default case: switch (m_cfgSenses.ItalicSenseNumber)  			{  				case CheckState.Checked:  					if (sbNumStyle.Length > 0)  						sbNumStyle.Append(" ");  					sbNumStyle.Append("italic");  					break;  				case CheckState.Unchecked:  					if (sbNumStyle.Length > 0)  						sbNumStyle.Append(" ");  					sbNumStyle.Append("-italic");  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,OnDisplayAddCustomField,The following switch statement is missing a default case: switch (areaChoice)  			{  				case "lexicon":  					inFriendlyTerritory = toolChoice == "lexiconEdit" || toolChoice == "bulkEditEntriesOrSenses" ||  										  toolChoice == "lexiconBrowse";  					break;  				case "notebook":  					inFriendlyTerritory = toolChoice == "notebookEdit" || toolChoice == "notebookBrowse";  					break;  				case "textsWords":  					inFriendlyTerritory = toolChoice == "interlinearEdit" || toolChoice == "gloss";  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,OnAddCustomField,The following switch statement is missing a default case: switch (areaChoice)  			{  				case "lexicon":  					locationType = AddCustomFieldDlg.LocationType.Lexicon;  					break;  				case "notebook":  					locationType = AddCustomFieldDlg.LocationType.Notebook;  					break;  				case "textsWords":  					locationType = AddCustomFieldDlg.LocationType.Interlinear;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,OnDisplayConfigureList,The following switch statement is missing a default case: switch (areaChoice)  			{  				case "lists":  					inFriendlyTerritory = true;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,OnDisplayAddCustomList,The following switch statement is missing a default case: switch (areaChoice)  			{  				case "lists":  					inFriendlyTerritory = true;  					break;  			}
Missing Default,SIL.FieldWorks.XWorks,XWorksViewBase,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\XWorksViewBase.cs,OnDisplayDeleteCustomList,The following switch statement is missing a default case: switch (areaChoice)  			{  				case "lists":  					// Is currently selected list a Custom list?  					if (Clerk == null || Clerk.OwningObject == null || !(Clerk.OwningObject is ICmPossibilityList))  						break; // handled' but not a valid selection  					var possList = Clerk.OwningObject as ICmPossibilityList;  					if (possList.Owner == null)  						inFriendlyTerritory = true; // a Custom list  					break;  			}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,AddSubsubNodeIfNeeded,The following switch statement is missing a default case: switch (subNode.FieldDescription)  			{  				case "SensesOS":  					// On the odd chance Subsense has no SenseOptions' construct some.  					subNode.DictionaryNodeOptions = subNode.DictionaryNodeOptions ?? new DictionaryNodeSenseOptions();  					// Add in the new subsubsenses node  					subNode.Children.Add(new ConfigurableDictionaryNode  					{  						Label = "Subsubsenses"'  						IsEnabled = true'  						Style = "Dictionary-Sense"'  						FieldDescription = "SensesOS"'  						CSSClassNameOverride = "subsenses"'  						ReferenceItem = "MainEntrySubsenses"'  						DictionaryNodeOptions = subNode.DictionaryNodeOptions.DeepClone()  					});  					break;  				case "SubentriesOS": // SubentriesOS uniquely identifies Reversal Index subentries  					// Add in the new reversal subsubentries node  					subNode.Children.Add(new ConfigurableDictionaryNode  					{  						Label = "Reversal Subsubentries"'  						IsEnabled = true'  						Style = "Reversal-Subentry"'  						FieldDescription = "SubentriesOS"'  						CSSClassNameOverride = "subentries"'  						ReferenceItem = "AllReversalSubentries"  					});  					break;  			}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,SetReferenceItem,The following switch statement is missing a default case: switch (configNode.FieldDescription)  			{  				case "Subentries":  					configNode.ReferenceItem = "MainEntrySubentries";  					if (configNode.DictionaryNodeOptions == null)  					{  						configNode.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions  						{  							ListId = DictionaryNodeListOptions.ListIds.Complex  						};  					}  					break;  				case "SensesOS":  					if (configNode.Parent.FieldDescription == "SensesOS") // update only subsenses  						configNode.ReferenceItem = "MainEntrySubsenses";  					break;  				case "SubentriesOS": // uniquely identifies Reversal Index Subentries  					configNode.ReferenceItem = "AllReversalSubentries";  					break;  			}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following switch statement is missing a default case: switch (version)  			{  				case 2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == "OwningEntry" && n.SubField == "MLHeadWord")  							n.SubField = newHeadword;  					});  					break;  				case 3:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.Label == "Gloss (or Summary Definition)")  							n.FieldDescription = "GlossOrSummary";  						if (n.Parent == null)  							return;  						if (n.Parent.FieldDescription == "ExamplesOS" && n.FieldDescription == "Example")  							n.Label = "Example Sentence";  						else if (n.Parent.FieldDescription == "ReferringSenses")  						{  							if (n.FieldDescription == "Owner" && n.SubField == "Bibliography")  								n.Label = "Bibliography (Entry)";  							else if (n.FieldDescription == "Bibliography")  								n.Label = "Bibliography (Sense)";  						}  					});  					break;  				case 4:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}  					});  					break;  				case VersionAlpha2:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (n.FieldDescription == null)  						{  							logger.WriteLine(string.Format("Warning: '{0}' reached the Alpha2 migration with a null FieldDescription."' DCM.BuildPathStringFromNode(n)));  							return;  						}  						if (n.FieldDescription == "VisibleVariantEntryRefs" && n.Label == "Variant Of")  							n.Label = "Variant of";  						else if (n.FieldDescription.Contains("EntryType"))  						{  							var parentFd = n.Parent.FieldDescription;  							if (n.FieldDescription == ConfiguredXHTMLGenerator.LookupComplexEntryType ||  								isReversal && (n.FieldDescription == "VariantEntryTypesRS" || n.FieldDescription == "ComplexEntryTypesRS"))  							{  								if (parentFd == "ComplexFormEntryRefs")  								{  									// set type children to RevAbbr/RevName  									SetEntryTypeChildrenBackward(n);  								}  								else  								{  									// set type children to Abbr/Name  									SetEntryTypeChildrenForward(n);  								}  							}  							else if (parentFd.EndsWith("BackRefs") || parentFd == "ComplexFormsNotSubentries")  							{  								// set type children to Abbr/Name  								SetEntryTypeChildrenForward(n);  							}  							else  							{  								// set type children to RevAbbr/RevName  								SetEntryTypeChildrenBackward(n);  							}  						}  						else if ((n.Label == "Headword" && n.Parent.FieldDescription == "ReferringSenses") ||  							(n.Label == "Form" && n.Parent.Label.StartsWith("Subentry Under")))  						{  							n.Label = "Referenced Headword";  						}  						else if (n.Label == "Subsenses" && n.Parent.FieldDescription == "SensesOS")  						{  							var senseNode = (DictionaryNodeSenseOptions)n.DictionaryNodeOptions;  							if (senseNode != null)  							{  								senseNode.ParentSenseNumberingStyle = "%.";  								senseNode.NumberingStyle = "%d";  								n.DictionaryNodeOptions = senseNode;  							}  						}  						else if (n.Label == "Allomorphs" && n.FieldDescription == "Owner")  						{  							n.FieldDescription = "Entry";  						}  						if (n.Label == "Referenced Headword")  						{  							n.FieldDescription = newHeadword;  							if (isReversal && n.DictionaryNodeOptions == null)  								n.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions  								{  									WsType = DictionaryNodeWritingSystemOptions.WritingSystemType.Vernacular'  									Options = new List<DictionaryNodeListOptions.DictionaryNodeOption>  									{  										new DictionaryNodeListOptions.DictionaryNodeOption { Id = "vernacular"' IsEnabled = true }  									}  								};  						}  					});  					break;  				case 6:  					DCM.PerformActionOnNodes(nodes' n =>  					{  						if (isReversal && n.Label == "Pronunciation" && n.Parent.Label == "Pronunciations")  						{  							var parent = n.Parent;  							parent.Before = "[";  							parent.Between = " ";  							parent.After = "] ";  							n.Before = "";  							n.Between = "";  							n.After = " ";  						}  						UpdatePicturesChildren(n);  					});  					break;  			}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,FirstAlphaMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\FirstAlphaMigrator.cs,HandleNodewiseChanges,The following switch statement is missing a default case: switch (n.FieldDescription)  						{  							case "TranslationsOC":  								n.CSSClassNameOverride = "translationcontents";  								break;  							case "ExamplesOS":  								n.CSSClassNameOverride = "examplescontents";  								n.StyleType = ConfigurableDictionaryNode.StyleTypes.Character;  								n.DictionaryNodeOptions = new DictionaryNodeListAndParaOptions(); // allow to be shown in paragraph  								break;  						}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,HandleChildNodeRenaming,The following switch statement is missing a default case: switch (child.Label)  			{  				case "Components":  					if (child.Parent.Label == "Component References")  						return "Referenced Entries";  					break;  				case "Abbreviation":  					// Don't rename Components -> Complex Form Type -> Abbreviation'  					// but do rename Subentries -> CFT -> Abbreviations to Reverse Abbreviation  					if (child.Parent.Label == "Complex Form Type" &&  						child.Parent.Parent.Label == "Subentries")  						return "Reverse Abbreviation";  					break;  				case "Features":  					if (child.Parent.Label == "Grammatical Info.")  						return "Inflection Features";  					break;  				case "Form":  					if (child.Parent.Label == "Reversal Entry")  						return "Reversal Form";  					if (child.Parent.Label == "Subentry Under Reference")  						return "Referenced Headword";  					break;  				case "Category":  					if (child.Parent.Label == "Reversal Entry")  						return "Reversal Category";  					break;  				case "Type":  					if (child.Parent.Label == "Variants (of Entry)")  						return "Variant Type";  					break;  				case "Homograph Number":  					return "Secondary Homograph Number";  				//case "Headword": now handled in FirstAlphaMigrator  			}
Missing Default,SIL.FieldWorks.XWorks.DictionaryConfigurationMigrators,PreHistoricMigrator,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\DictionaryConfigurationMigrators\PreHistoricMigrator.cs,SetupCustomField,The following switch statement is missing a default case: switch (type)  					{  						case (int)CellarPropertyType.ReferenceCollection:  						case (int)CellarPropertyType.ReferenceSequence:  							if (listId != Guid.Empty)  								node.DictionaryNodeOptions = new DictionaryNodeListOptions();  							break;  						case (int)CellarPropertyType.OwningCollection:  						case (int)CellarPropertyType.OwningSequence:  							break;  						case (int)CellarPropertyType.MultiUnicode:  						case (int)CellarPropertyType.MultiString:  							node.DictionaryNodeOptions = new DictionaryNodeWritingSystemOptions();  							break;  						case (int)CellarPropertyType.ReferenceAtomic:  							if (listId != Guid.Empty)  								node.DictionaryNodeOptions = new DictionaryNodeListOptions();  							break;  						case (int)CellarPropertyType.OwningAtomic:  							break;  						case (int)CellarPropertyType.GenDate:  						case (int)CellarPropertyType.Time:  							break;  						case (int)CellarPropertyType.String:  							break;  					}
Missing Default,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,GetStyleType,The following switch statement is missing a default case: switch (style.RealStyle.Type)  			{  				case StyleType.kstCharacter:  					return "character";  				case StyleType.kstParagraph:  					return "paragraph";  			}
Missing Default,SIL.FieldWorks.XWorks.LexText,FlexStylesXmlAccessor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\xWorks\FlexStylesXmlAccessor.cs,CollectParagraphProps,The following switch statement is missing a default case: switch (alignment)  				{  					case FwTextAlign.ktalCenter:  						alignValue = "center";  						break;  					case FwTextAlign.ktalLeft:  						alignValue = "left";  						break;  					case FwTextAlign.ktalRight:  						alignValue = "right";  						break;  					case FwTextAlign.ktalJustify:  						alignValue = "full";  						break;  				}
