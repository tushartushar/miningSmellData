Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,Conversion,Cyclomatic complexity of the method is 19
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessElement,Cyclomatic complexity of the method is 13
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,GetElementOwner,Cyclomatic complexity of the method is 8
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteElement,Cyclomatic complexity of the method is 10
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessEndElement,Cyclomatic complexity of the method is 15
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,Cyclomatic complexity of the method is 12
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,BuildCustomField,Cyclomatic complexity of the method is 20
Complex Method,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteCustomHeaders,Cyclomatic complexity of the method is 9
Long Parameter List,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,GetValuesFromUserView,The method has 5 parameters. Parameters: saveFlid' saveLabel' savePoss' saveHelpString' saveWsSel
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,Conversion,The length of the statement  "				throw new Exception("*** ERROR: The input and output filenames must be different. Input: " + m_FileName + " Output: "+ m_OutFileName + "."); " is 140.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessElement,The length of the statement  "					if (stackElements.Count > 0 && currentRT.elementList.TryGetValue(int.Parse(GetElementNumber(stackElements.Peek()))' out elemDEntry) != true) " is 140.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessElement,The length of the statement  "			else if (stackClasses.Count > 0 && holdNode.Length >= 6 && holdNode.Substring(0'6) == "Custom")		// write a custom data element " is 127.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteElement,The length of the statement  "					elemDEntry[elemDEntry.Count - 1] = elemDEntry[elemDEntry.Count - 1].Substring(0' elemDEntry[elemDEntry.Count - 1].Length - 1) + " " + inFile.Name + "=\"" + inFile.Value + "\"" + (attributes == "" ? "" : " ") + attributes + @"/>"; " is 229.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteElement,The length of the statement  "					elemDEntry[elemDEntry.Count - 1] = "<" + nodeClass + " " + inFile.Name + "=\"" + inFile.Value + "\"" + (attributes == "" ? "" : " ") + attributes + @"/>"; " is 154.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessEndElement,The length of the statement  "					throw new Exception("This is an ending element for " + elemHold + " but the element list for class " + nodeValue.ToString() + " doesn't exist"); " is 144.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The length of the statement  "					if (userViewFlag == true && initFile.Name.Length > 4 && initFile.Name.Substring(0'4) == "Flid" && initFile.NodeType == XmlNodeType.Element) " is 139.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The length of the statement  "					if (userViewFlag == true && initFile.Name.Length > 5 && initFile.Name.Substring(0' 5) == "Label" && initFile.NodeType == XmlNodeType.Element) " is 141.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The length of the statement  "					if (userViewFlag == true && initFile.Name.Length > 8 && initFile.Name.Substring(0' 8) == "PossList" && initFile.NodeType == XmlNodeType.Element) " is 144.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The length of the statement  "					if (userViewFlag == true && initFile.Name.Length > 10 && initFile.Name.Substring(0' 10) == "WsSelector" && initFile.NodeType == XmlNodeType.Element) " is 148.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The length of the statement  "					if (userViewFlag == true && initFile.Name.Length > 10 && initFile.Name.Substring(0' 10) == "HelpString" && initFile.NodeType == XmlNodeType.Element) " is 148.
Long Statement,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteRtElement,The length of the statement  "				BaseClassNum = int.Parse(group.hierarchy[i].ToString().Length == 4 ? group.hierarchy[i].ToString().Substring(1'3) : group.hierarchy[i].ToString().Substring(0)); " is 160.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ParseAttributes,The conditional expression  "inFile.Name != "val" &&  						inFile.Name != "id"  && !(holdNode == "Link" && inFile.Name == "target")"  is complex.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The conditional expression  "userViewFlag == true && initFile.Name.Length > 4 && initFile.Name.Substring(0'4) == "Flid" && initFile.NodeType == XmlNodeType.Element"  is complex.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The conditional expression  "userViewFlag == true && initFile.Name.Length > 5 && initFile.Name.Substring(0' 5) == "Label" && initFile.NodeType == XmlNodeType.Element"  is complex.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The conditional expression  "userViewFlag == true && initFile.Name.Length > 8 && initFile.Name.Substring(0' 8) == "PossList" && initFile.NodeType == XmlNodeType.Element"  is complex.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The conditional expression  "userViewFlag == true && initFile.Name.Length > 10 && initFile.Name.Substring(0' 10) == "WsSelector" && initFile.NodeType == XmlNodeType.Element"  is complex.
Complex Conditional,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,ProcessCustomFields,The conditional expression  "userViewFlag == true && initFile.Name.Length > 10 && initFile.Name.Substring(0' 10) == "HelpString" && initFile.NodeType == XmlNodeType.Element"  is complex.
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,Conversion,The following statement contains a magic number: string[] vLines = new string[5]  			{  				"This database is generated from the Converter utility"'  				"The conversion is based on the version 7 Data model"'  				"It takes in 2 parameters"'  				"    Parameter 1 The database (in XML) to be converted"'  				"    Parameter 2 The output file"  			};
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,CreateRtElement,The following statement contains a magic number: stackNum = (GetElementNumber(stackElements.Peek())).PadLeft(3' '0');
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,CreateRtElement,The following statement contains a magic number: currentRT.ownFlid = int.Parse((stackNum + (fieldNum.ToString().PadLeft(3' '0'))).TrimStart('0'));
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,CreateRtElement,The following statement contains a magic number: currentRT.hierarchy.Add(int.Parse(hClass.ModNum + classNum.ToString().PadLeft(3' '0')));
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteRtElement,The following statement contains a magic number: BaseModNum = int.Parse(group.hierarchy[i].ToString().Length < 4 ? "0" : group.hierarchy[i].ToString().Substring(0'1));
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteRtElement,The following statement contains a magic number: BaseClassNum = int.Parse(group.hierarchy[i].ToString().Length == 4 ? group.hierarchy[i].ToString().Substring(1'3) : group.hierarchy[i].ToString().Substring(0));
Magic Number,ConvertLib,Convert,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Lib\src\Converter\Convertlib\Convert.cs,WriteRtElement,The following statement contains a magic number: BaseClassNum = int.Parse(group.hierarchy[i].ToString().Length == 4 ? group.hierarchy[i].ToString().Substring(1'3) : group.hierarchy[i].ToString().Substring(0));
