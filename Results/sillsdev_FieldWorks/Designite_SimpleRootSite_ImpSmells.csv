Implementation smell,Namespace,Class,File,Method,Description
Long Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,CollectTypedInput,The method has 115 lines of code.
Long Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,RemoveRedundantHardFormatting,The method has 196 lines of code.
Long Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,MakeSelectionVisible,The method has 245 lines of code.
Long Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,GetExternalLinkSel,The method has 114 lines of code.
Long Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,ModifyOverlay,The method has 109 lines of code.
Complex Method,SIL.FieldWorks.Common.RootSites,RenderEngineFactory,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\RenderEngineFactory.cs,get_Renderer,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,OnKeyDown,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,CollectTypedInput,Cyclomatic complexity of the method is 20
Complex Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,HandleKeyDown,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,RemoveCharFormatting,Cyclomatic complexity of the method is 13
Complex Method,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,RemoveRedundantHardFormatting,Cyclomatic complexity of the method is 23
Complex Method,SIL.FieldWorks.Common.RootSites,SelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionHelper.cs,GetWsOfSelection,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,Dispose,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,MakeSelectionVisible,Cyclomatic complexity of the method is 34
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnKillFocus,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnMouseDown,Cyclomatic complexity of the method is 10
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,UpdateScrollRange,Cyclomatic complexity of the method is 9
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,GetExternalLinkSel,Cyclomatic complexity of the method is 14
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,ModifyOverlay,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,IsSelectionVisible,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,IbusRootSiteEventHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\IbusRootSiteEventHandler.cs,Reset,Cyclomatic complexity of the method is 8
Complex Method,SIL.FieldWorks.Common.RootSites,IbusRootSiteEventHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\IbusRootSiteEventHandler.cs,OnUpdatePreeditText,Cyclomatic complexity of the method is 9
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetParagraphProps,The method has 7 parameters. Parameters: vwsel' hvoText' flidParaOwner' vqvps' ihvoFirst' ihvoLast' vqttp
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetAllParagraphProps,The method has 10 parameters. Parameters: vwsel' hvoText' tagText' vttp' vvps' ihvoFirst' ihvoLast' vttpHard' vvpsSoft' fRet
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,IsParagraphProps,The method has 6 parameters. Parameters: vwsel' hvoText' tagText' vqvps' ihvoAnchor' ihvoEnd
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetParagraphLevelInfoForSelection,The method has 5 parameters. Parameters: vwsel' fEnd' hvoText' tagText' ihvo
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,NarrowRangeOfTsTxtProps,The method has 9 parameters. Parameters: hvoText' tagText' vttp' vvpsSoft' fParagraphStyle' ihvoFirst' ihvoLast' ihvoFirstMod' ihvoLastMod
Long Parameter List,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,RemoveRedundantHardFormatting,The method has 5 parameters. Parameters: vpsSoft' ttpHard' fParaStyle' hvoPara' ttpRet
Long Parameter List,SIL.FieldWorks.Common.RootSites,OrientationManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\OrientationManager.cs,DrawTheRoot,The method has 7 parameters. Parameters: vdrb' rootb' hdc' drawRect' backColor' drawSel' clipRect
Long Parameter List,SIL.FieldWorks.Common.RootSites,VerticalOrientationManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\OrientationManager.cs,DrawTheRoot,The method has 7 parameters. Parameters: vdrb' rootb' hdc' drawRect' backColor' drawSel' clipRect
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,PrintRootSite,The method has 5 parameters. Parameters: sda' hvo' vc' frags' styleSheet
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,RequestSelectionAtEndOfUow,The method has 10 parameters. Parameters: _rootb' ihvoRoot' cvlsi' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,AdjustScrollRange,The method has 5 parameters. Parameters: prootb' dxdSize' dxdPosition' dydSize' dydPosition
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,InvalidateRect,The method has 5 parameters. Parameters: root' xdLeft' ydTop' xdWidth' ydHeight
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,OnInsertDiffParas,The method has 6 parameters. Parameters: prootb' ttpDest' cPara' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,OnInsertDiffPara,The method has 5 parameters. Parameters: prootb' ttpDest' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites,SelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionHelper.cs,InsertLevel,The method has 5 parameters. Parameters: iLev' tag' ihvo' ws' type
Long Parameter List,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,RequestSelectionAtEndOfUow,The method has 10 parameters. Parameters: rootb' ihvoRoot' cvlsi' rgvsli' tagTextProp' cpropPrevious' ich' wsAlt' fAssocPrev' selProps
Long Parameter List,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,AdjustScrollRange,The method has 5 parameters. Parameters: prootb' dxdSize' dxdPosition' dydSize' dydPosition
Long Parameter List,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,InvalidateRect,The method has 5 parameters. Parameters: root' xsLeft' ysTop' xsWidth' ysHeight
Long Parameter List,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnInsertDiffParas,The method has 6 parameters. Parameters: prootb' ttpDest' cPara' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnInsertDiffPara,The method has 5 parameters. Parameters: prootb' ttpDest' ttpSrc' tssParas' tssTrailing
Long Parameter List,SIL.FieldWorks.Common.RootSites,VwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\VwBaseVc.cs,DisplayPicture,The method has 5 parameters. Parameters: vwenv' hvo' tag' val' frag
Long Parameter List,SIL.FieldWorks.Common.RootSites,VwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\VwBaseVc.cs,LoadDataFor,The method has 7 parameters. Parameters: vwenv' rghvo' chvo' hvoParent' tag' frag' ihvoMin
Long Parameter List,SIL.FieldWorks.Common.RootSites,VwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\VwBaseVc.cs,UpdateProp,The method has 5 parameters. Parameters: vwsel' hvo' tag' frag' tssVal
Long Parameter List,SIL.FieldWorks.Common.RootSites,ViewInputManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\ViewInputManager.cs,OnMouseEvent,The method has 5 parameters. Parameters: xd' yd' rcSrc' rcDst' me
Long Identifier,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,,The length of the parameter m_fSuppressNextWritingSystemHvoChanged is 38.
Long Identifier,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,,The length of the parameter m_fSuppressNextBestStyleNameChanged is 35.
Long Identifier,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,,The length of the parameter m_haveCachedDrawForDisabledView is 31.
Long Identifier,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,,The length of the parameter m_fMakeRootWhenHandleIsCreated is 30.
Long Statement,SIL.FieldWorks.Common.RootSites,ActiveViewHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\ActiveViewHelper.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,DataUpdateMonitor,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\DataUpdateMonitor.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,IsIgnoredKey,The length of the statement  "			// Ignore control characters (most can only be generated using control key' see above; but Escape otherwise gets through...) " is 124.
Long Statement,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,LostFocus,The length of the statement  "			//Debug.WriteLine(string.Format("EditingHelper.LostFocus:\n\t\t\tlost: {3} ({4})' Name={5}\n\t\t\tnew: {0} ({1})' Name={2}"' " is 124.
Long Statement,SIL.FieldWorks.Common.RootSites,SelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionHelper.cs,MakeRangeSelection,The length of the statement  "			// Don't make a selection if the property indicates not to: see comment about -2 in InterlinDocForAnalysis.HandleSelectionChange " is 128.
Long Statement,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CheckDisposed,The length of the statement  "				throw new ObjectDisposedException(ToString()' "This object is being used after it has been disposed: this is an Error."); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,MakeSelectionVisible,The length of the statement  "							if (rcIdeal.Top < ydTop + extraSpacing || rcIdeal.Height > ydBottom - ydTop - extraSpacing * 2 || rcIdeal.Top > ydBottom) " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSetFocus,The length of the statement  "				//Debug.WriteLine(string.Format("SimpleRootSite.OnSetFocus:\n\t\t\tlost {0} ({1})' Name={2}\n\t\t\tnew {3} ({4})' Name={5}"' " is 124.
Long Statement,SIL.FieldWorks.Common.RootSites,SuspendDrawing,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,Dispose,The length of the statement  "			Debug.WriteLineIf(!disposing' "****************** Missing Dispose() call for " + GetType().Name + " ******************"); " is 121.
Long Statement,SIL.FieldWorks.Common.RootSites,SuspendDrawing,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CheckDisposed,The length of the statement  "				throw new ObjectDisposedException("SuspendDrawing"' "This object is being used after it has been disposed: this is an Error."); " is 127.
Long Statement,SIL.FieldWorks.Common.RootSites,HoldGraphics,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\HoldGraphics.cs,CheckDisposed,The length of the statement  "				throw new ObjectDisposedException("HoldGraphics"' "This object is being used after it has been disposed: this is an Error."); " is 125.
Long Statement,SIL.FieldWorks.Common.RootSites,VwBaseVc,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\VwBaseVc.cs,DoHotLinkAction,The length of the statement  "				// We also need to deal with url's like the following ( http:// silfw:// http:\ silfw:\ which are considered Not rooted). " is 121.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,Dispose,The conditional expression  "!fDisposing || IsDisposed || m_savedSelection == null || m_rootSite.RootBox.Height <= 0"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,CollectTypedInput,The conditional expression  "char.IsLowSurrogate(buffer[i]) ||  						char.IsHighSurrogate(buffer[i]) && (i == buffer.Length || !char.IsLowSurrogate(buffer[i + 1]))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,HandleKeyDown,The conditional expression  "MiscUtils.IsUnix && (e.KeyCode == Keys.Right || e.KeyCode == Keys.Left ||  				  e.KeyCode == Keys.F7 || e.KeyCode == Keys.F8) && ss == VwShiftStatus.kfssNone"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetCursor,The conditional expression  "fInObject && (objDataType == FwObjDataTypes.kodtNameGuidHot  				|| objDataType == FwObjDataTypes.kodtExternalPathName  				|| objDataType == FwObjDataTypes.kodtOwnNameGuidHot  				|| objDataType == FwObjDataTypes.kodtPictEvenHot  				|| objDataType == FwObjDataTypes.kodtPictOddHot)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,SetWritingSystemPropertyFromSelection,The conditional expression  "rs != null && rs.Mediator != null && rs.PropTable != null && selection != null"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,BestStyleNameChanged,The conditional expression  "(styleName == String.Empty && charStyleName != String.Empty) ||  				(paraStyleName != styleName && charStyleName != styleName)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,DeleteSelection,The conditional expression  "m_control == null || m_callbacks == null || m_callbacks.EditedRootBox == null ||  				!m_callbacks.GotCacheOrWs"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,IsSelectionInOneEditableProp,The conditional expression  "hvoObjE != hvoObjA || tagE != tagA || ihvoE != ihvoA || cPropPreviousA != cPropPreviousE"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,PasteClipboard,The conditional expression  "!CanPaste() || Callbacks == null || Callbacks.EditedRootBox == null ||  				!Callbacks.GotCacheOrWs  || CurrentSelection == null"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,CanCut,The conditional expression  "Callbacks != null && Callbacks.GotCacheOrWs && Callbacks.EditedRootBox != null && m_fEditable"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,CanPaste,The conditional expression  "m_callbacks != null && m_callbacks.EditedRootBox != null && m_fEditable &&  				CurrentSelection != null && m_control != null && m_control.Visible"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,SelectAll,The conditional expression  "m_callbacks == null || m_callbacks.EditedRootBox == null ||  				!m_callbacks.GotCacheOrWs || m_control == null"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,SelectionRectangle,The conditional expression  "(AutoScroll && VScroll && rcIdeal.Height > ClientHeight) ||  					(DoAutoHScroll && rcIdeal.Width > ClientRectangle.Width)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnVisibleChanged,The conditional expression  "Visible && m_fRootboxMade && m_rootb != null && m_fRefreshPending"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CheckForRecursivePaint,The conditional expression  "m_fInPaint || m_fInLayout || m_rootb != null && m_rootb.IsPropChangedInProgress"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnLayout,The conditional expression  "(!DesignMode || AllowPaintingInDesigner) && m_fRootboxMade && m_fAllowLayout &&  				IsHandleCreated && !m_fInLayout"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnMouseDown,The conditional expression  "pt.X >= rcPrimary.left && pt.X < rcPrimary.right  							&& pt.Y >= rcPrimary.top && pt.Y < rcPrimary.bottom"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,The conditional expression  "m_fInPaint || m_fInLayout || m_rootb == null || (Size == m_sizeLast && m_dxdLayoutWidth >= 0)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,The conditional expression  "ScrollToSelectionOnSizeChanged &&  				!SizeChangedSuppression &&  				!m_fRefreshPending &&  				IsHandleCreated"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,Draw,The conditional expression  "m_rootb != null && m_dxdLayoutWidth > 0 &&  				(!DesignMode || AllowPaintingInDesigner)"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,GetNonFocusedSelectionState,The conditional expression  "(m_fIsTextBox || windowGainingFocus == null || windowGainingFocus is SimpleRootSite ||  				ParentForm == null || !ParentForm.Contains(windowGainingFocus)) &&  				!ShowRangeSelAfterLostFocus"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,IbusRootSiteEventHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\IbusRootSiteEventHandler.cs,CreateTsStringUsingSelectionProps,The conditional expression  "type == (int)FwTextPropType.ktptUnderline && value == (int)FwUnderlineType.kuntSingle ||  						type == (int)FwTextPropType.ktptUnderColor && value == colorGray"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,IbusRootSiteEventHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\IbusRootSiteEventHandler.cs,SetupForTypingEventHandler,The conditional expression  "AssociatedSimpleRootSite.ReadOnlyView ||  				AssociatedSimpleRootSite.RootBox == null ||  				AssociatedSimpleRootSite.RootBox.Selection == null ||  				(checkIfFocused && (!AssociatedSimpleRootSite.Focused ||  					(AssociatedSimpleRootSite.TopLevelControl != null && !AssociatedSimpleRootSite.TopLevelControl.Enabled)))"  is complex.
Complex Conditional,SIL.FieldWorks.Common.RootSites,IbusRootSiteEventHandler,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\IbusRootSiteEventHandler.cs,UpdateSelectionForReplacingPreeditText,The conditional expression  "(m_ActionHandler == null || !m_ActionHandler.get_TasksSinceMark(true))  				&& m_InitialSelection != null && m_EndOfPreedit != null"  is complex.
Virtual Method Call from Constructor,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,SimpleRootSite,The constructor "SimpleRootSite" calls a virtual method "CreateGraphicsManager".
Virtual Method Call from Constructor,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,SimpleRootSite,The constructor "SimpleRootSite" calls a virtual method "CreateOrientationManager".
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,SelectionRestorer,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,RestoreSelectionWhenReadOnly,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,SetCursor,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionHelper.cs,UpdateScrollLocation,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,EnsureDefaultSelection,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnLoad,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnLayout,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnMouseDown,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnRightMouseUp,The method has an empty catch block.
Empty Catch Block,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,The method has an empty catch block.
Magic Number,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,SelectionRestorer,The following statement contains a magic number: IVwSelection sel = rootSite.RootBox.MakeSelAt(5' 5' rcSrc' rcDst' false);
Magic Number,SIL.FieldWorks.Common.RootSites,SelectionRestorer,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionRestorer.cs,SelectionRestorer,The following statement contains a magic number: IVwSelection sel = rootSite.RootBox.MakeSelAt(5' 5' rcSrc' rcDst' false);
Magic Number,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,HandleKeyDown,The following statement contains a magic number: const int IPWidth = 2;
Magic Number,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,HandleKeyDown,The following statement contains a magic number: const int LineHeightFudgeFactor = 3;
Magic Number,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetFontForNormalStyle,The following statement contains a magic number: return new Font(bldr.ToString()' (float)(dympHeight / 1000.0));
Magic Number,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetParagraphLevelInfoForSelection,The following statement contains a magic number: clev < 2
Magic Number,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,RemoveRedundantHardFormatting,The following statement contains a magic number: switch ((FwTextPropType)tpt)  				{  				case FwTextPropType.ktptLineHeight:  					nValSoft = vpsSoft.get_IntProperty(tpt);  					nRelHeight = vpsSoft.get_IntProperty((int)VwStyleProperty.kspRelLineHeight);  					if (nRelHeight != 0)  					{  						nVarSoft = (int)FwTextPropVar.ktpvRelative;  						nValSoft = nRelHeight;  					}  						// By default' we have no min spacing; interpret this as single-space.  					else if (nValSoft == 0)  					{  						nVarSoft = (int)FwTextPropVar.ktpvRelative;  						nValSoft = (int)FwTextPropConstants.kdenTextPropRel;  					}  						// Otherwise interpret as absolute. Use the value we already.  					else  						nVarSoft = (int)FwTextPropVar.ktpvMilliPoint;  					break;  				case FwTextPropType.ktptBold:  					// For an inverting property' a value of invert is never redundant.  					if (nValHard == (int)FwTextToggleVal.kttvInvert)  						continue;  					nWeight = vpsSoft.get_IntProperty(tpt);  					nValSoft = (nWeight > 550) ? (int)FwTextToggleVal.kttvInvert :  						(int)FwTextToggleVal.kttvOff;  					nVarSoft = (int)FwTextPropVar.ktpvEnum;  					break;  				case FwTextPropType.ktptItalic:  					// For an inverting property' a value of invert is never redundant.  					if (nValHard == (int)FwTextToggleVal.kttvInvert)  						continue;  					nValSoft = vpsSoft.get_IntProperty(tpt);  					nVarSoft = (int)FwTextPropVar.ktpvEnum;  					break;  				case FwTextPropType.ktptUnderline:  				case FwTextPropType.ktptSuperscript:  				case FwTextPropType.ktptRightToLeft:  				case FwTextPropType.ktptKeepWithNext:  				case FwTextPropType.ktptKeepTogether:  				case FwTextPropType.ktptWidowOrphanControl:  				case FwTextPropType.ktptAlign:  				case FwTextPropType.ktptBulNumScheme:  					nValSoft = vpsSoft.get_IntProperty(tpt);  					nVarSoft = (int)FwTextPropVar.ktpvEnum;  					break;  				case FwTextPropType.ktptFontSize:  				case FwTextPropType.ktptOffset:  				case FwTextPropType.ktptLeadingIndent:		// == ktptMarginLeading  				case FwTextPropType.ktptTrailingIndent:	// == ktptMarginTrailing  				case FwTextPropType.ktptFirstIndent:  				case FwTextPropType.ktptSpaceBefore:		// == ktptMswMarginTop  				case FwTextPropType.ktptSpaceAfter:		// == ktptMarginBottom  				case FwTextPropType.ktptBorderTop:  				case FwTextPropType.ktptBorderBottom:  				case FwTextPropType.ktptBorderLeading:  				case FwTextPropType.ktptBorderTrailing:  				case FwTextPropType.ktptMarginTop:  				case FwTextPropType.ktptPadTop:  				case FwTextPropType.ktptPadBottom:  				case FwTextPropType.ktptPadLeading:  				case FwTextPropType.ktptPadTrailing:  					nValSoft = vpsSoft.get_IntProperty(tpt);  					nVarSoft = (int)FwTextPropVar.ktpvMilliPoint;  					break;  				case FwTextPropType.ktptForeColor:  				case FwTextPropType.ktptBackColor:  				case FwTextPropType.ktptUnderColor:  				case FwTextPropType.ktptBorderColor:  				case FwTextPropType.ktptBulNumStartAt:  					nValSoft = vpsSoft.get_IntProperty(tpt);  					nVarSoft = (int)FwTextPropVar.ktpvDefault;  					break;  				default:  					// Ignore.  					continue;  				}
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,Init,The following statement contains a magic number: dpix = 72;
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,Init,The following statement contains a magic number: m_vwPrintContext.SetPagePrintInfo(1' 1' 65535' 1' false);
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,PixelsFrom100ths,The following statement contains a magic number: return val * dpi / 100;
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,SetMargins,The following statement contains a magic number: dpiX = 72;
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,SetMargins,The following statement contains a magic number: dpiY = 72;
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,SetMargins,The following statement contains a magic number: m_vwPrintContext.SetMargins(  				PixelsFrom100ths(margins.Left - relative.Left' dpiX)'  				PixelsFrom100ths(relative.Right - margins.Right' dpiX)'  				PixelsFrom100ths((margins.Top - relative.Top) / 2' dpiY)'		// heading; get from smarter page setup?  				PixelsFrom100ths(margins.Top - relative.Top' dpiY)'				// top  				PixelsFrom100ths(relative.Bottom - margins.Bottom' dpiY)'		// bottom  				PixelsFrom100ths((relative.Bottom - margins.Bottom) / 2' dpiY));
Magic Number,SIL.FieldWorks.Common.RootSites,PrintRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\PrintRootSite.cs,SetMargins,The following statement contains a magic number: m_vwPrintContext.SetMargins(  				PixelsFrom100ths(margins.Left - relative.Left' dpiX)'  				PixelsFrom100ths(relative.Right - margins.Right' dpiX)'  				PixelsFrom100ths((margins.Top - relative.Top) / 2' dpiY)'		// heading; get from smarter page setup?  				PixelsFrom100ths(margins.Top - relative.Top' dpiY)'				// top  				PixelsFrom100ths(relative.Bottom - margins.Bottom' dpiY)'		// bottom  				PixelsFrom100ths((relative.Bottom - margins.Bottom) / 2' dpiY));
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,GetAvailWidth,The following statement contains a magic number: return m_orientationManager.GetAvailWidth() - HorizMargin * 2;
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,MakeSelectionVisible,The following statement contains a magic number: fWantOneLineSpace && ClientHeight < LineHeight * 3
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnHandleCreated,The following statement contains a magic number: m_Timer.Interval = 500;
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,ProcessCmdKey,The following statement contains a magic number: pt = new Point((rcPrimary.right + rcPrimary.left)/2'  							(rcPrimary.top + rcPrimary.bottom)/2);
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,ProcessCmdKey,The following statement contains a magic number: pt = new Point((rcPrimary.right + rcPrimary.left)/2'  							(rcPrimary.top + rcPrimary.bottom)/2);
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,The following statement contains a magic number: selToScroll = m_rootb.MakeSelAt(5' 5' rcSrc' rcDst' false);
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OnSizeChanged,The following statement contains a magic number: selToScroll = m_rootb.MakeSelAt(5' 5' rcSrc' rcDst' false);
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CallMouseMoveDrag,The following statement contains a magic number: const int LOSPEED = 10;
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CallMouseMoveDrag,The following statement contains a magic number: const int HISPEED = 30;
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,CallMouseMoveDrag,The following statement contains a magic number: const int SLOW_BUFFER_ZONE = 30;
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,IsSelectionVisible,The following statement contains a magic number: int ydRight = ydLeft + ClientRectangle.Width - (HorizMargin * 2);
Magic Number,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OriginalWndProc,The following statement contains a magic number: switch (msg.Msg)  			{  				case 61: // WM_GETOBJECT  					if (!Platform.IsMono)  					{  						// Disable use of UIAutomationProvider.dll on Linux  						// FWR-2874' FWR-3045: This code was commented out to prevent a crash  						// that can happen when using the Windows 7 On-Screen Keyboard.  						//if (msg.LParam.ToInt32() == AutomationInteropProvider.RootObjectId)  						//{  						//    msg.Result = AutomationInteropProvider.ReturnRawElementProvider(  						//            this.Handle' msg.WParam' msg.LParam'  						//            UIAutomationServerProviderFactory());  						//    return;  						//}    						object obj = AccessibleRootObject;  						//IAccessible acc = (IAccessible)obj;  						if (obj == null)  						{  							// If for some reason the root site isn't sufficiently initialized  							// to have a root box' the best we can do is the default IAccessible.  							//MessageBox.Show("Null root in IAccessible");  							base.WndProc(ref msg);  						}  						else  						{  							Guid guidAcc = Marshal.GenerateGuidForType(typeof(IAccessible));  							msg.Result = LresultFromObject(ref guidAcc' msg.WParam' obj);  						}    						return;  					}  					break;  				case 0x286:	// WM_IME_CHAR  					{  						// We must handle this directly so that duplicate WM_CHAR messages don't get  						// posted' resulting in duplicated input.  (I suspect this may be a bug in the  						// .NET framework. - SMc)  						OnKeyPress(new KeyPressEventArgs((char)msg.WParam));  						return;  					}  				case (int)Win32.WinMsgs.WM_SETFOCUS:  					OnSetFocus(msg);    					if (Platform.IsMono)  					{  						// In Linux+Mono' if you .Focus() a SimpleRootSite' checking .Focused reports false unless  						// we comment out this case for intercepting WM_SETFOCUS' or call base.WndProc() to  						// presumably let Mono handle WM_SETFOCUS as well by successfully setting focus on the  						// base Control.  						// Affects six unit tests in FwCoreDlgsTests FwFindReplaceDlgTests: eg ApplyStyle_ToEmptyTextBox.  						//  						// Intercepting WM_SETFOCUS in Windows relates to focus switching with respect to Keyman.    						base.WndProc(ref msg);  					}  					return;  				case (int)Win32.WinMsgs.WM_KILLFOCUS:  					base.WndProc(ref msg);  					OnKillFocus(Control.FromHandle(msg.WParam)'  						SIL.FieldWorks.Common.FwUtils.FwUtils.IsChildWindowOfForm(ParentForm' msg.WParam));  					return;  			}
Missing Default,SIL.FieldWorks.Common.RootSites,EditingHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\EditingHelper.cs,GetTsStringFromClipboard,The following switch statement is missing a default case: switch (pasteStatus)  			{  				case PasteStatus.PreserveWs:  					break;  				case PasteStatus.UseDestWs:  					Debug.Assert(destWs > 0);  					return wrapper.GetTsStringUsingWs(destWs' writingSystemFactory);  				case PasteStatus.CancelPaste:  					return null;  			}
Missing Default,SIL.FieldWorks.Common.RootSites,VerticalOrientationManager,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\OrientationManager.cs,ConvertKeyValue,The following switch statement is missing a default case: switch(keyValue)  			{  				case (int)Keys.Left:  					return (int)Keys.Down;  				case (int) Keys.Right:  					return (int)Keys.Up;  				case (int) Keys.Up:  					return (int)Keys.Left;  				case (int) Keys.Down:  					return (int)Keys.Right;  			}
Missing Default,SIL.FieldWorks.Common.RootSites,SelectionHelper,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SelectionHelper.cs,ContraryLimit,The following switch statement is missing a default case: switch(limit)  			{  				case SelLimitType.Anchor:  					return SelLimitType.End;  				case SelLimitType.End:  					return SelLimitType.Anchor;  				case SelLimitType.Top:  					return SelLimitType.Bottom;  				case SelLimitType.Bottom:  					return SelLimitType.Top;  			}
Missing Default,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,IsInputKey,The following switch statement is missing a default case: switch (keyData & Keys.KeyCode)  			{  					case Keys.Return:  						return m_acceptsReturn;    					case Keys.Escape:  						return false;    					case Keys.Tab:  						return m_acceptsTab && (keyData & Keys.Control) == Keys.None;  				}
Missing Default,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,OriginalWndProc,The following switch statement is missing a default case: switch (msg.Msg)  			{  				case 61: // WM_GETOBJECT  					if (!Platform.IsMono)  					{  						// Disable use of UIAutomationProvider.dll on Linux  						// FWR-2874' FWR-3045: This code was commented out to prevent a crash  						// that can happen when using the Windows 7 On-Screen Keyboard.  						//if (msg.LParam.ToInt32() == AutomationInteropProvider.RootObjectId)  						//{  						//    msg.Result = AutomationInteropProvider.ReturnRawElementProvider(  						//            this.Handle' msg.WParam' msg.LParam'  						//            UIAutomationServerProviderFactory());  						//    return;  						//}    						object obj = AccessibleRootObject;  						//IAccessible acc = (IAccessible)obj;  						if (obj == null)  						{  							// If for some reason the root site isn't sufficiently initialized  							// to have a root box' the best we can do is the default IAccessible.  							//MessageBox.Show("Null root in IAccessible");  							base.WndProc(ref msg);  						}  						else  						{  							Guid guidAcc = Marshal.GenerateGuidForType(typeof(IAccessible));  							msg.Result = LresultFromObject(ref guidAcc' msg.WParam' obj);  						}    						return;  					}  					break;  				case 0x286:	// WM_IME_CHAR  					{  						// We must handle this directly so that duplicate WM_CHAR messages don't get  						// posted' resulting in duplicated input.  (I suspect this may be a bug in the  						// .NET framework. - SMc)  						OnKeyPress(new KeyPressEventArgs((char)msg.WParam));  						return;  					}  				case (int)Win32.WinMsgs.WM_SETFOCUS:  					OnSetFocus(msg);    					if (Platform.IsMono)  					{  						// In Linux+Mono' if you .Focus() a SimpleRootSite' checking .Focused reports false unless  						// we comment out this case for intercepting WM_SETFOCUS' or call base.WndProc() to  						// presumably let Mono handle WM_SETFOCUS as well by successfully setting focus on the  						// base Control.  						// Affects six unit tests in FwCoreDlgsTests FwFindReplaceDlgTests: eg ApplyStyle_ToEmptyTextBox.  						//  						// Intercepting WM_SETFOCUS in Windows relates to focus switching with respect to Keyman.    						base.WndProc(ref msg);  					}  					return;  				case (int)Win32.WinMsgs.WM_KILLFOCUS:  					base.WndProc(ref msg);  					OnKillFocus(Control.FromHandle(msg.WParam)'  						SIL.FieldWorks.Common.FwUtils.FwUtils.IsChildWindowOfForm(ParentForm' msg.WParam));  					return;  			}
Missing Default,SIL.FieldWorks.Common.RootSites,SimpleRootSite,D:\research\architectureSmells\repos1\sillsdev_FieldWorks\Src\Common\SimpleRootSite\SimpleRootSite.cs,PreFilterMessage,The following switch statement is missing a default case: switch (m.Msg)  			{  				case (int)Win32.WinMsgs.WM_KEYUP:  				case (int)Win32.WinMsgs.WM_LBUTTONUP:  				case (int)Win32.WinMsgs.WM_KEYDOWN:  					// If user-initiated messages come (or our spurious one' which we check  					// for below)' remove this filter.  					Application.RemoveMessageFilter(this);  					m_messageFilterInstalled = false;    					// Now check for the spurious CTRL-UP message  					if (m.Msg == (int)Win32.WinMsgs.WM_KEYUP &&  						m.WParam.ToInt32() == (int)Win32.VirtualKeycodes.VK_CONTROL)  					{  						return true; // discard this message  					}  					break;  			}
