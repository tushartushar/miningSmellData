Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRoot,The method has 6 parameters. Parameters: prootb' hdc' rcpDraw' bkclr' fDrawSel' pvrs
Long Parameter List,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootAt,The method has 10 parameters. Parameters: prootb' hdc' rcpDraw' bkclr' fDrawSel' pvg' rcSrc' rcDst' ysTop' dysHeight
Long Parameter List,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The method has 7 parameters. Parameters: rootb' hdc' rcpDraw' bkclr' fDrawSel' vrs' nHow
Long Statement,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The length of the statement  "				rgptTransform[0] = new Point(rcpDraw.right' rcpDraw.top); // upper left of actual drawing maps to top right of rotated drawing " is 126.
Long Statement,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The length of the statement  "				rgptTransform[1] = new Point(rcpDraw.right' rcpDraw.bottom); // upper right of actual drawing maps to bottom right of rotated drawing. " is 134.
Long Statement,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The length of the statement  "				rgptTransform[2] = new Point(rcpDraw.left' rcpDraw.top); // bottom left of actual drawing maps to top left of rotated drawing. " is 126.
Long Statement,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The length of the statement  "				screen.DrawImage((Image)memoryBuffer.Bitmap' rgptTransform' new Rectangle(0' 0' rcp.Width' rcp.Height)' GraphicsUnit.Pixel); " is 124.
Magic Number,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The following statement contains a magic number: using (Graphics screen = Graphics.FromHdc(hdc))  			using (var memoryBuffer = new MemoryBuffer(rcp.Width' rcp.Height))  			{  				memoryBuffer.Graphics.FillRectangle(new SolidBrush(ColorUtil.ConvertBGRtoColor(bkclr))' rcFill);  				qvg32.Initialize(memoryBuffer.Graphics.GetHdc());    				IVwGraphics qvgDummy = null;  				try  				{  					Rect rcDst' rcSrc;  					vrs.GetGraphics(rootb' out qvgDummy' out rcSrc' out rcDst);  					Rectangle temp = rcDst;  					temp.Offset(-rcp.Left' -rcp.Top);  					rcDst = temp;    					qvg32.XUnitsPerInch = qvgDummy.XUnitsPerInch;  					qvg32.YUnitsPerInch = qvgDummy.YUnitsPerInch;    					rootb.DrawRoot(qvg32' rcSrc' rcDst' fDrawSel);  					vrs.ReleaseGraphics(rootb' qvgDummy);  					qvgDummy = null;  				}  				catch (Exception)  				{  					if (qvgDummy != null)  						vrs.ReleaseGraphics(rootb' qvgDummy);  					qvg32.ReleaseDC();  					throw;  				}    				Point[] rgptTransform = new Point[3];  				rgptTransform[0] = new Point(rcpDraw.right' rcpDraw.top); // upper left of actual drawing maps to top right of rotated drawing    				rgptTransform[1] = new Point(rcpDraw.right' rcpDraw.bottom); // upper right of actual drawing maps to bottom right of rotated drawing.  				rgptTransform[2] = new Point(rcpDraw.left' rcpDraw.top); // bottom left of actual drawing maps to top left of rotated drawing.    				screen.DrawImage((Image)memoryBuffer.Bitmap' rgptTransform' new Rectangle(0' 0' rcp.Width' rcp.Height)' GraphicsUnit.Pixel);    				qvg32.ReleaseDC();  			}
Magic Number,SIL.FieldWorks.Views,VwDrawRootBuffered,C:\repos\sillsdev_FieldWorks\Src\ManagedVwDrawRootBuffered\VwDrawRootBuffered.cs,DrawTheRootRotated,The following statement contains a magic number: using (Graphics screen = Graphics.FromHdc(hdc))  			using (var memoryBuffer = new MemoryBuffer(rcp.Width' rcp.Height))  			{  				memoryBuffer.Graphics.FillRectangle(new SolidBrush(ColorUtil.ConvertBGRtoColor(bkclr))' rcFill);  				qvg32.Initialize(memoryBuffer.Graphics.GetHdc());    				IVwGraphics qvgDummy = null;  				try  				{  					Rect rcDst' rcSrc;  					vrs.GetGraphics(rootb' out qvgDummy' out rcSrc' out rcDst);  					Rectangle temp = rcDst;  					temp.Offset(-rcp.Left' -rcp.Top);  					rcDst = temp;    					qvg32.XUnitsPerInch = qvgDummy.XUnitsPerInch;  					qvg32.YUnitsPerInch = qvgDummy.YUnitsPerInch;    					rootb.DrawRoot(qvg32' rcSrc' rcDst' fDrawSel);  					vrs.ReleaseGraphics(rootb' qvgDummy);  					qvgDummy = null;  				}  				catch (Exception)  				{  					if (qvgDummy != null)  						vrs.ReleaseGraphics(rootb' qvgDummy);  					qvg32.ReleaseDC();  					throw;  				}    				Point[] rgptTransform = new Point[3];  				rgptTransform[0] = new Point(rcpDraw.right' rcpDraw.top); // upper left of actual drawing maps to top right of rotated drawing    				rgptTransform[1] = new Point(rcpDraw.right' rcpDraw.bottom); // upper right of actual drawing maps to bottom right of rotated drawing.  				rgptTransform[2] = new Point(rcpDraw.left' rcpDraw.top); // bottom left of actual drawing maps to top left of rotated drawing.    				screen.DrawImage((Image)memoryBuffer.Bitmap' rgptTransform' new Rectangle(0' 0' rcp.Width' rcp.Height)' GraphicsUnit.Pixel);    				qvg32.ReleaseDC();  			}
