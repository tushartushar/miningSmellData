Implementation smell,Namespace,Class,File,Method,Description
Long Method,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The method has 223 lines of code.
Long Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,BrowserCtxMenuClickHandler,The method has 149 lines of code.
Long Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,HandleHTMLEvent,The method has 122 lines of code.
Long Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,AddNewBrowser,The method has 111 lines of code.
Long Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The method has 214 lines of code.
Complex Method,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,LoadFonts,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,LoadFonts,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,CustomSplitter_SplitterMoved,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnClick,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,Cyclomatic complexity of the method is 50
Complex Method,DemoApp,frmAutomation,C:\repos\prog76_csexwb2\DemoApp\frmAutomation.cs,toolStrip1_ItemClicked,Cyclomatic complexity of the method is 10
Complex Method,DemoApp,frmDocInfo,C:\repos\prog76_csexwb2\DemoApp\frmDocInfo.cs,LoadDocumentInfo,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,frmDOM,C:\repos\prog76_csexwb2\DemoApp\frmDOM.cs,parseNodes,Cyclomatic complexity of the method is 14
Complex Method,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,toolStrip1_ItemClicked,Cyclomatic complexity of the method is 9
Complex Method,DemoApp,frmHTMLDialogHandler,C:\repos\prog76_csexwb2\DemoApp\frmHTMLDialogHandler.cs,m_timer_Tick,Cyclomatic complexity of the method is 9
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsMain_ItemClicked,Cyclomatic complexity of the method is 11
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsFile_ItemClicked,Cyclomatic complexity of the method is 19
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsBtnOpenEdit_DropDownItemClicked,Cyclomatic complexity of the method is 10
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,BrowserCtxMenuClickHandler,Cyclomatic complexity of the method is 38
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,cEXWB1_WBKeyDown,Cyclomatic complexity of the method is 12
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tabControl1_SelectedIndexChanged,Cyclomatic complexity of the method is 10
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,ctxMnuRichTextBoxMenuItem1_Click,Cyclomatic complexity of the method is 15
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,Selector_SelectionChanged,Cyclomatic complexity of the method is 15
Complex Method,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,HandleHTMLEvent,Cyclomatic complexity of the method is 16
Complex Method,DemoApp,frmHTMLEditor2,C:\repos\prog76_csexwb2\DemoApp\frmHTMLEditor2.cs,m_designer_HTMLEditDesigner_PreHandleEvent,Cyclomatic complexity of the method is 14
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,RemoveBrowser,Cyclomatic complexity of the method is 14
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SwitchTabs,Cyclomatic complexity of the method is 10
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,UpdateSecureLockIcon,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,BrowserCtxMenuClickHandler,Cyclomatic complexity of the method is 11
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,GoSearchToolStripButtonClickHandler,Cyclomatic complexity of the method is 13
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,Cyclomatic complexity of the method is 44
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,Cyclomatic complexity of the method is 42
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetZoomLevel,Cyclomatic complexity of the method is 25
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,Cyclomatic complexity of the method is 11
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_HTMLEvent,Cyclomatic complexity of the method is 10
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NewWindow3,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBContextMenu,Cyclomatic complexity of the method is 12
Complex Method,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBKeyDown,Cyclomatic complexity of the method is 14
Complex Method,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,LoadColorBoxs,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnMouseUp,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,PreProcessMessage,Cyclomatic complexity of the method is 8
Complex Method,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,Cyclomatic complexity of the method is 12
Long Parameter List,DemoApp,AllForms,C:\repos\prog76_csexwb2\DemoApp\AllForms.cs,ShowStaticSaveDialog,The method has 6 parameters.
Long Parameter List,DemoApp,AllForms,C:\repos\prog76_csexwb2\DemoApp\AllForms.cs,ShowStaticOpenDialog,The method has 5 parameters.
Long Parameter List,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPoints,The method has 6 parameters.
Long Parameter List,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPointsA,The method has 6 parameters.
Long Parameter List,DemoApp,frmDynamicConfirm,C:\repos\prog76_csexwb2\DemoApp\frmDynamicConfirm.cs,DisplayConfirm,The method has 7 parameters.
Long Parameter List,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,AddDownloadItem,The method has 7 parameters.
Long Parameter List,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The method has 5 parameters.
Long Parameter List,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,m_frmFind_FindInPageEvent,The method has 6 parameters.
Long Parameter List,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,m_frmFind_FindInPageEvent,The method has 6 parameters.
Long Parameter List,DemoApp,frmTableCellProp,C:\repos\prog76_csexwb2\DemoApp\frmTableCellProp.cs,SetupValues,The method has 7 parameters.
Long Statement,DemoApp,AllForms,C:\repos\prog76_csexwb2\DemoApp\AllForms.cs,AskForConfirmation,The length of the statement  "	DialogResult result = MessageBox.Show (Win' Msg' CONFIRMATIONREQUESTED' MessageBoxButtons.YesNo' MessageBoxIcon.Question); " is 122.
Long Statement,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The length of the statement  "			Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2)); " is 158.
Long Statement,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The length of the statement  "			Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2)); " is 152.
Long Statement,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The length of the statement  "			Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2)); " is 158.
Long Statement,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The length of the statement  "			Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2)); " is 152.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "		m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2); " is 156.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical); " is 186.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom); " is 149.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width); " is 135.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width); " is 138.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim); " is 120.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight); " is 172.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight); " is 179.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight); " is 176.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight); " is 183.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight); " is 176.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight); " is 179.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "		m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT); " is 177.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "		m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height); " is 120.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical); " is 186.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom); " is 149.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1); " is 136.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "				e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1); " is 143.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y); " is 161.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom); " is 168.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom); " is 166.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom); " is 173.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom); " is 166.
Long Statement,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The length of the statement  "			SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom); " is 168.
Long Statement,DemoApp,frmAutomation,C:\repos\prog76_csexwb2\DemoApp\frmAutomation.cs,frmAutomation_Shown,The length of the statement  "	string source = "<html><head><title>Automation Demo</title>" + "<script type=\"text/javascript\">" + "function myfunction(txt)" + "{ alert(\"Hello' button was clicked\") }" + "</script></head><body bgcolor=\"#ffffcc\">" + "<h3> Web automation example </h3>" + "<form>" + "Text box:  <input type=\"text\" name=\"TextBox1\" value=\"\" /><br /><br />" + "Text Area:  <textarea name=\"TextArea1\" rows=\"5\" cols=\"20\">Hello there</textarea><br /><br />" + "<input type=\"button\" name=\"Button1\" onclick=\"myfunction('Hello')\" value=\"Call function\" /><br /><br />" + "<input type=\"radio\" name=\"Radio1\"  />Radio choice 1<br />" + "<input type=\"radio\" name=\"Radio2\"  />Radio choice 2<br />" + "<input type=\"radio\" name=\"Radio3\"  />Radio choice 3<br />" + "<input type=\"checkbox\" name=\"Check1\"  />Check 1<br />" + "<br />" + "<select size=\"5\" name=\"List\" multiple>" + "<option value=\"First\">First choice</option>" + "<option value=\"Second\">Second choice</option>" + "<option value=\"Third\">Third choice</option>" + "</select>" + "<br />" + "<br />" + "<select size=\"5\" name=\"List1\" multiple>" + "<option value=\"First1\">First1 choice</option>" + "<option value=\"Second1\">Second1 choice</option>" + "<option value=\"Third1\">Third1 choice</option>" + "</select><br />" + "</form>" + "<p><a href=\"http://www.google.com\" name=\"Link1\">This text</a> is a link to another Web site.</p>" + "</body></html>"; " is 1435.
Long Statement,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,ClearAllCookies,The length of the statement  "	System.Collections.ArrayList results = WinApis.FindUrlCacheEntries (AllForms.SetupCookieCachePattern (FromSite' AllForms.COOKIE)); " is 130.
Long Statement,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,ClearAllCookies,The length of the statement  "		if ((!string.IsNullOrEmpty (entry.lpszSourceUrlName)) && (entry.lpszSourceUrlName.Trim ().Length > 0) && (!string.IsNullOrEmpty (entry.lpszLocalFileName)) && (entry.lpszLocalFileName.Trim ().Length > 0)) { " is 205.
Long Statement,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,ClearAllCache,The length of the statement  "	System.Collections.ArrayList results = WinApis.FindUrlCacheEntries (AllForms.SetupCookieCachePattern (FromSite' AllForms.VISITED)); " is 131.
Long Statement,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The length of the statement  "			MessageBox.Show (this' "Finished downloading\r\n" + delitem.SubItems [0].Text + "\r\nTO:\r\n" + delitem.SubItems [1].Text); " is 123.
Long Statement,DemoApp,frmHTMLDialogHandler,C:\repos\prog76_csexwb2\DemoApp\frmHTMLDialogHandler.cs,frmHTMLDialogHandler_FormClosing,The length of the statement  "		m_csexwbCOMLib.SetupWindowsHook (CSEXWBDLMANLib.WINDOWSHOOK_TYPES.WHT_CBT' (int)this.Handle.ToInt32 ()' m_CBT.IsHooked' ref m_CBT.UniqueMsgID); " is 143.
Long Statement,DemoApp,frmHTMLDialogHandler,C:\repos\prog76_csexwb2\DemoApp\frmHTMLDialogHandler.cs,m_timer_Tick,The length of the statement  "		if ((m_Ctls [m_Counter] != null) && (m_Ctls [m_Counter].ToString ().Equals ("Internet Explorer_Server"' StringComparison.CurrentCultureIgnoreCase))) { " is 150.
Long Statement,DemoApp,frmHTMLDialogHandler,C:\repos\prog76_csexwb2\DemoApp\frmHTMLDialogHandler.cs,StartHandling,The length of the statement  "	m_csexwbCOMLib.SetupWindowsHook (CSEXWBDLMANLib.WINDOWSHOOK_TYPES.WHT_CBT' (int)this.Handle.ToInt32 ()' m_CBT.IsHooked' ref m_CBT.UniqueMsgID); " is 143.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,m_frmFind_FindInPageEvent,The length of the statement  "			MessageBox.Show (this' "Found " + found.ToString () + " matches."' "Finf in Page"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 133.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,m_frmFind_FindInPageEvent,The length of the statement  "				MessageBox.Show (this' "No more matches found for " + FindPhrase' "Find in Page"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 132.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Shown,The length of the statement  "		//string html = "<HTML><HEAD><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\"></Head><title>New Page</title><Body><P>&nbsp;</P><Body></HTML>"; " is 171.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsFile_ItemClicked,The length of the statement  "				htmledit.AppendTable (m_frmTable.m_Cols' m_frmTable.m_Rows' m_frmTable.m_BorderSize' m_frmTable.m_Alignment' m_frmTable.m_CellPadding' m_frmTable.m_CellSpacing' m_frmTable.m_WidthPercent' m_frmTable.m_WidthPixels' m_frmTable.m_BackColor' m_frmTable.m_BorderColor' m_frmTable.m_LightBorderColor' m_frmTable.m_DarkBorderColor); " is 325.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsBtnOpenEdit_DropDownItemClicked,The length of the statement  "		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments)' true) == DialogResult.OK) { " is 176.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,tsBtnOpenEdit_DropDownItemClicked,The length of the statement  "			if ((!string.IsNullOrEmpty (ssource)) && (ssource.StartsWith ("<HTML>"' StringComparison.CurrentCultureIgnoreCase)) && (ssource.EndsWith ("</HTML>"' StringComparison.CurrentCultureIgnoreCase))) " is 193.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,cEXWB1_HTMLEditHostSnapRect,The length of the statement  "	AllForms.m_frmLog.AppendToLog ("Element tagName=" + e.Element.tagName + "\r\nElement Coordinates=> Left=" + e.ElemRect.Left.ToString () + " Right=" + e.ElemRect.Right.ToString () + " Top=" + e.ElemRect.Top.ToString () + " Bottom=" + e.ElemRect.Bottom.ToString ()); " is 264.
Long Statement,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,HandleHTMLEvent,The length of the statement  "					System.Runtime.InteropServices.ComTypes.IDataObject idataobj = obj as System.Runtime.InteropServices.ComTypes.IDataObject; " is 122.
Long Statement,DemoApp,frmHTMLParser,C:\repos\prog76_csexwb2\DemoApp\frmHTMLParser.cs,cparser_HtmlParsingDoneEvent,The length of the statement  "	this.richTextBox1.Text = "HtmlParsingDoneEvent\r\nURL: " + e.MSHTMDocument.url + "\r\n" + e.MSHTMDocument.body.outerHTML; " is 121.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.WBDocHostShowUIShowMessage += new csExWB.DocHostShowUIShowMessageEventHandler (this.cEXWB1_WBDocHostShowUIShowMessage); " is 131.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.ProtocolHandlerOnResponse += new csExWB.ProtocolHandlerOnResponseEventHandler (this.cEXWB1_ProtocolHandlerOnResponse); " is 130.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.FileDownloadExProgress += new csExWB.FileDownloadExProgressEventHandler (this.cEXWB1_FileDownloadExProgress); " is 121.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.FileDownloadExAuthenticate += new csExWB.FileDownloadExAuthenticateEventHandler (this.cEXWB1_FileDownloadExAuthenticate); " is 133.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.ProtocolHandlerOnBeginTransaction += new csExWB.ProtocolHandlerOnBeginTransactionEventHandler (this.cEXWB1_ProtocolHandlerOnBeginTransaction); " is 154.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		this.cEXWB1.ProtocolHandlerOnResponse += new csExWB.ProtocolHandlerOnResponseEventHandler (this.cEXWB1_ProtocolHandlerOnResponse); " is 130.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The length of the statement  "		cEXWB1.FileDownloadDirectory = Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments) + System.IO.Path.DirectorySeparatorChar.ToString (); " is 149.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,AddNewBrowser,The length of the statement  "		pWB.WBDocHostShowUIShowMessage += new csExWB.DocHostShowUIShowMessageEventHandler (this.cEXWB1_WBDocHostShowUIShowMessage); " is 123.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,AddNewBrowser,The length of the statement  "		pWB.FileDownloadExAuthenticate += new csExWB.FileDownloadExAuthenticateEventHandler (cEXWB1_FileDownloadExAuthenticate); " is 120.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,AddNewBrowser,The length of the statement  "		pWB.ProtocolHandlerOnBeginTransaction += new csExWB.ProtocolHandlerOnBeginTransactionEventHandler (cEXWB1_ProtocolHandlerOnBeginTransaction); " is 141.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,BrowserCtxMenuClickHandler,The length of the statement  "                    /imgres?imgurl=http://www.rixane.com/shots/flight-over-sea-800-1.jpg&imgrefurl=http://www.rixane.com/flight-over-sea/flight-over-sea.html&h=600&w=800&sz=69&hl=en&start=1&tbnid=arcdwYQaOgXKaM:&tbnh=107&tbnw=143&prev=/images%3Fq%3Dsea%26svnum%3D10%26hl%3Den%26lr%3D%26safe%3Doff%26sa%3DG" is 285.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,BrowserCtxMenuClickHandler,The length of the statement  "                    ?imgurl=http://www.rixane.com/shots/flight-over-sea-800-1.jpg&imgrefurl=http://www.rixane.com/flight-over-sea/flight-over-sea.html&h=600&w=800&sz=69&hl=en&start=1&tbnid=arcdwYQaOgXKaM:&tbnh=107&tbnw=143&prev=/images%3Fq%3Dsea%26svnum%3D10%26hl%3Den%26lr%3D%26safe%3Doff%26sa%3DG" is 278.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,BrowserCtxMenuClickHandler,The length of the statement  "                    http://images.google.ca/imgres?imgurl=http://www.rixane.com/shots/flight-over-sea-800-1.jpg&imgrefurl=http://www.rixane.com/flight-over-sea/flight-over-sea.html&h=600&w=800&sz=69&hl=en&start=1&tbnid=arcdwYQaOgXKaM:&tbnh=107&tbnw=143&prev=/images%3Fq%3Dsea%26svnum%3D10%26hl%3Den%26lr%3D%26safe%3Doff%26sa%3DG" is 308.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "		AllForms.m_frmLog.AppendToLog ("Travel Log Entries (History for current browser) - Count = " + m_CurWB.GetTravelLogCount ().ToString () + "\r\n"); " is 146.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "				AllForms.m_frmLog.AppendToLog ("Current Title==>" + m_CurWB.GetTitle (true) + " <>Current Url==>" + m_CurWB.LocationUrl); " is 121.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "			MessageBox.Show (this' "Deleted " + iCount.ToString () + " Cooikes."' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 135.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "			MessageBox.Show (this' "Deleted " + iCount.ToString () + " Cooikes from\r\n" + m_CurWB.LocationUrl' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 165.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "			MessageBox.Show (this' "Deleted " + iCount.ToString () + " Cache Entries."' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 141.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The length of the statement  "			MessageBox.Show (this' "Deleted " + iCount.ToString () + " Cache Entries from\r\n" + m_CurWB.LocationUrl' "Information"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 171.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,m_frmFind_FindInPageEvent,The length of the statement  "			MessageBox.Show (this' "Found " + found.ToString () + " matches."' "Finf in Page"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 133.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,m_frmFind_FindInPageEvent,The length of the statement  "				MessageBox.Show (this' "No more matches found for " + FindPhrase' "Find in Page"' MessageBoxButtons.OK' MessageBoxIcon.Information); " is 132.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The length of the statement  "				if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) { " is 211.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_HTMLEvent,The length of the statement  "				if ((e.m_pEvtObj != null) && (e.m_pEvtObj.SrcElement != null) && (!string.IsNullOrEmpty (e.m_pEvtObj.SrcElement.tagName))) { " is 124.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NavigateError,The length of the statement  "	if ((e.statuscode == WinInetErrors.HTTP_STATUS_OK) || (e.statuscode == WinInetErrors.HTTP_STATUS_CONTINUE) || (e.statuscode == WinInetErrors.HTTP_STATUS_REDIRECT) || (e.statuscode == WinInetErrors.HTTP_STATUS_REQUEST_TIMEOUT) || (e.statuscode == WinInetErrors.HTTP_STATUS_ACCEPTED)) { " is 284.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NavigateError,The length of the statement  "		AllForms.m_frmLog.AppendToLog (m_CurWB.Name + "_NavigateError\r\nURL\r\n" + HttpUtility.UrlDecode (e.url) + "\r\nStatus Code\r\n" + e.statuscode.ToString ()); " is 158.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NavigateError,The length of the statement  "		AllForms.m_frmLog.AppendToLog ("cEXWBxx_NavigateError\r\nURL\r\n" + HttpUtility.UrlDecode (e.url) + "\r\nStatus Code\r\n" + e.statuscode.ToString ()); " is 150.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NewWindow2,The length of the statement  "		string result = AllForms.m_frmDynamicConfirm.DisplayConfirm (this' "A new window2 has been requested by " + m_CurWB.Name' "Popup Window"' "Cancel popup"' "Open in popup"' "Open in new tab"' string.Empty); " is 204.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NewWindow3,The length of the statement  "		string result = AllForms.m_frmDynamicConfirm.DisplayConfirm (this' "A new window3 has been requested by:\r\n" + e.url + "\r\nType:" + str' "Popup Window"' "Cancel popup"' "Open in popup"' "Open in new tab"' string.Empty); " is 221.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBEvaluteNewWindow,The length of the statement  "		if (MessageBox.Show ("A new EvaluteNewWindow has been requested by:\r\n" + e.url + "\r\nType:" + str + "\r\nCancel it?"' "Popup Window"' MessageBoxButtons.YesNo).Equals (DialogResult.Yes)) { " is 190.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBSecurityProblem,The length of the statement  "	if ((e.problem == WinInetErrors.HTTP_REDIRECT_NEEDS_CONFIRMATION) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTPS_HTTP_SUBMIT_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_MIXED_SECURITY)) { " is 341.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_ProtocolHandlerOnResponse,The length of the statement  "		m_frmRequestResponseHeaders.AppendToLog ("ProtocolHandlerOnResponse_" + pWB.Name + "\r\nURL >> " + e.m_URL + "\r\nResponseHeader >>\r\n" + e.m_ResponseHeaders); " is 160.
Long Statement,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_ProtocolHandlerOnBeginTransaction,The length of the statement  "		m_frmRequestResponseHeaders.AppendToLog ("ProtocolHandlerOnBeginTransaction_" + pWB.Name + "\r\nURL >> " + e.m_URL + "\r\nRequestHeaders >>\r\n" + e.m_RequestHeaders); " is 167.
Long Statement,DemoApp,frmFind,C:\repos\prog76_csexwb2\DemoApp\frmFind.cs,btnFind_Click,The length of the statement  "		FindInPageEvent (txtFind.Text' chkMatchWholeWord.Checked' chkMatchCase.Checked' ((radioBtnDownward.Checked) ? true : false)' chkSearchAndHighlightMatches.Checked' comboColors.Text); " is 181.
Long Statement,DemoApp,frmFind,C:\repos\prog76_csexwb2\DemoApp\frmFind.cs,txtFind_KeyUp,The length of the statement  "			FindInPageEvent (txtFind.Text' chkMatchWholeWord.Checked' chkMatchCase.Checked' ((radioBtnDownward.Checked) ? true : false)' chkSearchAndHighlightMatches.Checked' comboColors.Text); " is 181.
Long Statement,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,SetupAsSandBox,The length of the statement  "	this.cEXWB1.WBDOCDOWNLOADCTLFLAG = (int)(DOCDOWNLOADCTLFLAG.NO_SCRIPTS | DOCDOWNLOADCTLFLAG.NO_JAVA | DOCDOWNLOADCTLFLAG.NOFRAMES | DOCDOWNLOADCTLFLAG.NO_DLACTIVEXCTLS | DOCDOWNLOADCTLFLAG.NO_RUNACTIVEXCTLS | DOCDOWNLOADCTLFLAG.PRAGMA_NO_CACHE | DOCDOWNLOADCTLFLAG.SILENT | DOCDOWNLOADCTLFLAG.NO_BEHAVIORS | DOCDOWNLOADCTLFLAG.NO_CLIENTPULL); " is 342.
Long Statement,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetHeight,The length of the statement  "	if ((!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.height < 0)) " is 140.
Long Statement,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetWidth,The length of the statement  "	if ((!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.width < 0)) " is 139.
Long Statement,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetLeft,The length of the statement  "	if ((!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.left < 0)) " is 138.
Long Statement,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetTop,The length of the statement  "	if ((!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.top < 0)) " is 137.
Long Statement,DemoApp,frmTable,C:\repos\prog76_csexwb2\DemoApp\frmTable.cs,FillinGlobals,The length of the statement  "	m_LightBorderColor = (comboLightBorder.SelectedColor == Color.Empty) ? string.Empty : comboLightBorder.SelectedColor.Name; " is 122.
Long Statement,DemoApp,frmTableCellProp,C:\repos\prog76_csexwb2\DemoApp\frmTableCellProp.cs,FillValues,The length of the statement  "	m_BackColor = (backgoundcolorcomboBox.SelectedColor == Color.Empty) ? string.Empty : backgoundcolorcomboBox.SelectedColor.Name; " is 127.
Long Statement,DemoApp,frmTableCellProp,C:\repos\prog76_csexwb2\DemoApp\frmTableCellProp.cs,FillValues,The length of the statement  "	m_BorderColor = (bordercolorcomboBox.SelectedColor == Color.Empty) ? string.Empty : bordercolorcomboBox.SelectedColor.Name; " is 123.
Long Statement,DemoApp,frmTableCellProp,C:\repos\prog76_csexwb2\DemoApp\frmTableCellProp.cs,FillValues,The length of the statement  "	m_LightBorderColor = (borderlightcolorcomboBox.SelectedColor == Color.Empty) ? string.Empty : borderlightcolorcomboBox.SelectedColor.Name; " is 138.
Long Statement,DemoApp,frmTableCellProp,C:\repos\prog76_csexwb2\DemoApp\frmTableCellProp.cs,FillValues,The length of the statement  "	m_DarkBorderColor = (borderdarkcolorcomboBox.SelectedColor == Color.Empty) ? string.Empty : borderdarkcolorcomboBox.SelectedColor.Name; " is 135.
Long Statement,DemoApp,frmWindowExternal,C:\repos\prog76_csexwb2\DemoApp\frmWindowExternal.cs,frmWindowExternal_Shown,The length of the statement  "	string source = "<html><head><title>Demo - How to communicate with client using window.external</title>" + "<script language=\"javascript\" type=\"text/javascript\">" + "function Button1_onclick() {window.external.SaySomething ();}" + "function Button2_onclick() {window.external.AMessageFromHome = \"A message from HTML page.\";}" + "function Button3_onclick() {alert (window.external.AMessageFromHome);}" + "</script>" + "</head><body><p>" + "<input id=\"Button1\" type=\"button\" value=\"Invoke SaySomething method from WinExternal class.\" onclick=\"return Button1_onclick()\">" + "</P><p><br>" + "<input id=\"Button3\" type=\"button\" value=\"Display value of AMessageFromHome property of WinExternal class.\" onclick=\"return Button3_onclick()\">" + "</P><p><br>" + "<input id=\"Button2\" type=\"button\" value=\"Change AMessageFromHome property in WinExternal class!\" onclick=\"return Button2_onclick()\"><br>" + "</P></body></html>"; " is 942.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "		m_paintrect = new Rectangle (e.ClipRectangle.X + box.BoxRectangle.X' e.ClipRectangle.Y + box.BoxRectangle.Y' m_ColorBoxDimensions' m_ColorBoxDimensions); " is 153.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "			m_paintstring = box.BoxColor.Name + " (" + box.BoxColor.R.ToString () + "' " + box.BoxColor.G.ToString () + "' " + box.BoxColor.B.ToString () + ")"; " is 148.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "		m_paintstring = m_SelectedBox.BoxColor.Name + " (" + m_SelectedBox.BoxColor.R.ToString () + "' " + m_SelectedBox.BoxColor.G.ToString () + "' " + m_SelectedBox.BoxColor.B.ToString () + ")"; " is 188.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "	m_recttext = new Rectangle (e.ClipRectangle.X + m_Spacing' e.ClipRectangle.Y + (this.Height - ((m_ColorBoxDimensions + m_Spacing) * 2))' e.ClipRectangle.Width - (m_Spacing * 2)' m_ColorBoxDimensions); " is 200.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "	m_rectdefaultcolor = new Rectangle (m_recttext.X' m_recttext.Y + m_recttext.Height + m_Spacing' m_recttext.Width' m_ColorBoxDimensions); " is 136.
Long Statement,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The length of the statement  "	e.Graphics.DrawString (DEFAULT_TEXT_COLOR' this.Font' Brushes.Black' new PointF ((float)m_rectdefaultcolor.X' (float)m_rectdefaultcolor.Y)); " is 140.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,PreProcessMessage,The length of the statement  "			Point location = this.PointToScreen (new Point (this.ClientRectangle.Left' this.ClientRectangle.Top + this.ClientRectangle.Height)); " is 132.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnMouseUp,The length of the statement  "		Point location = this.PointToScreen (new Point (this.ClientRectangle.Left' this.ClientRectangle.Top + this.ClientRectangle.Height)); " is 132.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The length of the statement  "	m_textrect = new Rectangle (this.ClientRectangle.X + m_Padding' this.ClientRectangle.Y + m_Padding' this.ClientRectangle.Width - ((m_Padding * 2) + m_DropdownDimensions)' this.ClientRectangle.Height - (m_Padding * 2)); " is 218.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The length of the statement  "	gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (m_textrect' Color.FromArgb (opacity' m_GradientStartColor)' Color.FromArgb (opacity / 3' m_GradientEndColor)' System.Drawing.Drawing2D.LinearGradientMode.Vertical); " is 226.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The length of the statement  "	m_dropdownrect = new Rectangle (m_textrect.X + m_textrect.Width' m_textrect.Y' m_DropdownDimensions' m_DropdownDimensions); " is 123.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The length of the statement  "			System.Windows.Forms.ControlPaint.DrawComboButton (e.Graphics' m_dropdownrect' ButtonState.Flat | ButtonState.Inactive); " is 120.
Long Statement,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The length of the statement  "	TextRenderer.DrawText (e.Graphics' m_strText' this.Font' m_textrect' m_tempforecolor' TextFormatFlags.Left | TextFormatFlags.EndEllipsis); " is 138.
Long Statement,DemoApp,HtmlRichTextBox,C:\repos\prog76_csexwb2\DemoApp\HtmlRichTextBox.cs,SetupHighLighting,The length of the statement  "	keywordsRegexp = new System.Text.RegularExpressions.Regex (keywords' System.Text.RegularExpressions.RegexOptions.Compiled | System.Text.RegularExpressions.RegexOptions.Multiline); " is 179.
Complex Conditional,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,ClearAllCookies,The conditional expression  "(!string.IsNullOrEmpty (entry.lpszSourceUrlName)) && (entry.lpszSourceUrlName.Trim ().Length > 0) && (!string.IsNullOrEmpty (entry.lpszLocalFileName)) && (entry.lpszLocalFileName.Trim ().Length > 0)"  is complex.
Complex Conditional,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_NavigateError,The conditional expression  "(e.statuscode == WinInetErrors.HTTP_STATUS_OK) || (e.statuscode == WinInetErrors.HTTP_STATUS_CONTINUE) || (e.statuscode == WinInetErrors.HTTP_STATUS_REDIRECT) || (e.statuscode == WinInetErrors.HTTP_STATUS_REQUEST_TIMEOUT) || (e.statuscode == WinInetErrors.HTTP_STATUS_ACCEPTED)"  is complex.
Complex Conditional,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBSecurityProblem,The conditional expression  "(e.problem == WinInetErrors.HTTP_REDIRECT_NEEDS_CONFIRMATION) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTPS_HTTP_SUBMIT_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR) || (e.problem == WinInetErrors.ERROR_INTERNET_MIXED_SECURITY)"  is complex.
Complex Conditional,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetHeight,The conditional expression  "(!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.height < 0)"  is complex.
Complex Conditional,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetWidth,The conditional expression  "(!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.width < 0)"  is complex.
Complex Conditional,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetLeft,The conditional expression  "(!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.left < 0)"  is complex.
Complex Conditional,DemoApp,frmPopup,C:\repos\prog76_csexwb2\DemoApp\frmPopup.cs,cEXWB1_WindowSetTop,The conditional expression  "(!this.Visible) || (this.WindowState == FormWindowState.Maximized) || (this.WindowState == FormWindowState.Minimized) || (e.top < 0)"  is complex.
Empty Catch Block,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,FindBrowser,The method has an empty catch block.
Empty Catch Block,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,FindTab,The method has an empty catch block.
Empty Catch Block,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_ProgressChange,The method has an empty catch block.
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  	brect = new SolidBrush ((Color)this.Items [e.Index]);  	e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  	string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  	e.Graphics.DrawString (stext' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  	brect = new SolidBrush ((Color)this.Items [e.Index]);  	e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  	string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  	e.Graphics.DrawString (stext' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: if (m_DisplayType == CustomComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == CustomComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  	ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  	if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  		m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  	}  	else {  		brect = new SolidBrush (Color.Blue);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  	}  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  	e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,CustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,OnDrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  	ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  	if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  		m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  	}  	else {  		brect = new SolidBrush (Color.Blue);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  	}  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  	e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Font) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		string stext = (e.Index == 0) ? "Default" : ((Font)this.Items [e.Index]).Name;  		// Draw the item.  		e.Graphics.DrawString (stext' ((Font)this.Items [e.Index])' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_HTML_Color) {  	try {  		int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  		brect = new SolidBrush ((Color)this.Items [e.Index]);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  		string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  		e.Graphics.DrawString (stext' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  	brect = new SolidBrush ((Color)this.Items [e.Index]);  	e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  	string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  	e.Graphics.DrawString (stext' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ColorBoxHeight) / 2;  	brect = new SolidBrush ((Color)this.Items [e.Index]);  	e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ColorBoxWidth' m_ColorBoxHeight);  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ColorBoxWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ColorBoxWidth - 1' e.Bounds.Height - (boxH * 2));  	string stext = (e.Index == 0) ? "Default" : ((Color)this.Items [e.Index]).Name;  	e.Graphics.DrawString (stext' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: if (m_DisplayType == ToolStripComboBoxType.Type_Image) {  	try {  		int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  		ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  		if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  			m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  		}  		else {  			brect = new SolidBrush (Color.Blue);  			e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  		}  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  	}  	finally {  		if (brect != null)  			brect.Dispose ();  		brect = null;  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  else if (m_DisplayType == ToolStripComboBoxType.Type_Text) {  	try {  		// Create a new background brush.  		b = new SolidBrush (e.ForeColor);  		// Draw the item.  		e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' e.Bounds);  	}  	finally {  		if (b != null)  			b.Dispose ();  		b = null;  	}  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  	ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  	if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  		m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  	}  	else {  		brect = new SolidBrush (Color.Blue);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  	}  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  	e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,ToolStripCustomComboBox,C:\repos\prog76_csexwb2\DemoApp\CustomComboBox.cs,ComboBox_DrawItem,The following statement contains a magic number: try {  	int boxH = (e.Bounds.Height - m_ImageHeight) / 2;  	ComboBoxIconItem item = (ComboBoxIconItem)this.Items [e.Index];  	if ((m_ImageList != null) && (item != null) && (item.ImageIndex > -1)) {  		m_ImageList.Draw (e.Graphics' e.Bounds.Left + 1' e.Bounds.Top + boxH' item.ImageIndex);  	}  	else {  		brect = new SolidBrush (Color.Blue);  		e.Graphics.FillRectangle (brect' e.Bounds.Left' e.Bounds.Top + boxH' m_ImageWidth' m_ImageHeight);  	}  	// Create a new background brush.  	b = new SolidBrush (e.ForeColor);  	// Draw the item.  	Rectangle rect = new Rectangle (e.Bounds.Left + m_ImageWidth + 1' e.Bounds.Top + boxH' e.Bounds.Width - m_ImageWidth - 1' e.Bounds.Height - (boxH * 2));  	e.Graphics.DrawString (this.Items [e.Index].ToString ()' e.Font' b' rect);  }  finally {  	if (brect != null)  		brect.Dispose ();  	brect = null;  	if (b != null)  		b.Dispose ();  	b = null;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,CustomSplitter,The following statement contains a magic number: this.SplitterWidth = 7;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,CustomSplitter,The following statement contains a magic number: m_Timer.Interval = 100;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPoints,The following statement contains a magic number: m_ptTemp [2].X = X2;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPoints,The following statement contains a magic number: m_ptTemp [2].Y = Y2;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPointsA,The following statement contains a magic number: m_ptTempA [2].X = X2;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,SetupArrowPointsA,The following statement contains a magic number: m_ptTempA [2].Y = Y2;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (this.Orientation == Orientation.Vertical) {  	m_DotsDrawingH = this.Height / HEIGHT_RATIO;  	//Get the Drawing dots' left and right arrow rectangles  	//Divide Height by 4  	//Draw pattern in two parts' centered  	//Draw arrows on the beginning and end of the pattern  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH - m_ArrowHeight' m_RectDrawing.Width' m_ArrowHeight);  	m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		//m_RectDrawing.Offset  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Width / 2;  				e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Top;  		int boxdim = m_RectDrawing.Width / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	//Arrows  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing right  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel2State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.Right' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing left  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.Right' m_RectLeftArrow.Y' m_RectLeftArrow.X' m_RectLeftArrow.Y + m_HalfArrowHeight' m_RectLeftArrow.Right' m_RectLeftArrow.Y + m_ArrowHeight);  		//pointing Left  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y + m_HalfArrowHeight' m_RectRightArrow.X' m_RectRightArrow.Y + m_ArrowHeight);  		//pointing Right  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  else//Horizontal   {  	m_DotsDrawingH = this.Width / HEIGHT_RATIO;  	m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  	m_RectLeftArrow = new Rectangle (m_RectDrawing.X - m_ArrowHeight' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	m_RectRightArrow = new Rectangle (m_RectDrawing.Right' m_RectDrawing.Y' m_ArrowHeight' m_RectDrawing.Height);  	if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  		m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  		e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  	}  	if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  		System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  		m_iTempVariable = this.m_RectDrawing.Top;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  			m_iTempVariable += 3;  			if (m_iTempVariable > this.m_RectDrawing.Bottom)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  		m_iTempVariable = 0;  		while (true) {  			e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  			m_iTempVariable += 3;  			if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  		m_iTempVariable = this.m_RectDrawing.Left;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  			if (m_IsHot) {  				Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  				int iTemp = this.m_RectDrawing.Height / 2;  				e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  			}  			m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  			if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  				break;  		}  	}  	else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  		m_iTempVariable = this.m_RectDrawing.Left;  		int boxdim = m_RectDrawing.Height / 2;  		while (true) {  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  			if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  				break;  			e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  			m_iTempVariable += boxdim * 3;  			if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  				break;  		}  	}  	//No arrows  	if (this.IsSplitterFixed) {  		//e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.Default;  		return;  	}  	if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Y' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Bottom' m_RectLeftArrow.Right' m_RectLeftArrow.Y);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else if (this.m_Panel1State == SplitterPanelState.Retracted) {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Bottom' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  	else {  		SetupArrowPoints (m_RectLeftArrow.X' m_RectLeftArrow.Bottom' m_RectLeftArrow.X + m_HalfArrowHeight' m_RectLeftArrow.Y' m_RectLeftArrow.Right' m_RectLeftArrow.Bottom);  		//pointing up  		e.Graphics.FillPolygon (blueBrush' m_ptTemp);  		SetupArrowPointsA (m_RectRightArrow.X' m_RectRightArrow.Y' m_RectRightArrow.Right' m_RectRightArrow.Y' m_RectRightArrow.X + m_HalfArrowHeight' m_RectRightArrow.Bottom);  		//pointing down  		e.Graphics.FillPolygon (blueBrush' m_ptTempA);  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_RectDrawing = new Rectangle (e.ClipRectangle.X + DRAWING_PADDING_LEFT' m_DotsDrawingH' e.ClipRectangle.Width - DRAWING_PADDING_RIGHT' m_DotsDrawingH * 2);  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_RectRightArrow = new Rectangle (m_RectDrawing.X' m_DotsDrawingH * 3' m_RectDrawing.Width' m_ArrowHeight);  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  	m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  	e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  	m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  	e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  	m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  	e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  	m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  	e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Gradient) {  	m_gradientBrush = new System.Drawing.Drawing2D.LinearGradientBrush (this.ClientRectangle' m_GradientBeginColor' m_GradientEndColor' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  	e.Graphics.FillRectangle (m_gradientBrush' this.ClientRectangle);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  	m_iTempVariable += 3;  	if (m_iTempVariable > this.m_RectDrawing.Bottom)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += 3;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  	m_iTempVariable += 3;  	if (m_iTempVariable > m_RectDrawing.Right)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += 3;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width - 1' this.m_RectDrawing.Width);  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	//m_RectDrawing.Offset  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Width / 2;  			e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' this.m_RectDrawing.Width' this.m_RectDrawing.Width);  	if (m_IsHot) {  		Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  		int iTemp = this.m_RectDrawing.Width / 2;  		e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  	}  	m_iTempVariable += this.m_RectDrawing.Width + DRAWING_PADDING_RIGHT;  	if (m_iTempVariable > this.m_RectDrawing.Bottom - DRAWING_PADDING_RIGHT)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_IsHot) {  	Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  	int iTemp = this.m_RectDrawing.Width / 2;  	e.Graphics.FillRectangle (lightbr' this.m_RectDrawing.Left' m_iTempVariable' iTemp' iTemp);  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Top;  	int boxdim = m_RectDrawing.Width / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left' m_iTempVariable' boxdim' boxdim);  	if (m_iTempVariable + boxdim > this.m_RectDrawing.Bottom)  		break;  	e.Graphics.FillRectangle (m_RectangleBrush' this.m_RectDrawing.Left + boxdim' m_iTempVariable + boxdim' boxdim' boxdim);  	m_iTempVariable += boxdim * 3;  	if (m_iTempVariable > this.m_RectDrawing.Bottom - boxdim)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += boxdim * 3;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_RectDrawing = new Rectangle (e.ClipRectangle.X + m_DotsDrawingH' e.ClipRectangle.Y + DRAWING_PADDING_LEFT' m_DotsDrawingH * 2' e.ClipRectangle.Height - DRAWING_PADDING_RIGHT);  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Mesh_Dots) {  	System.Windows.Forms.ControlPaint.DrawGrid (e.Graphics' m_RectDrawing' m_PixelsBetweenDots' m_DotsColor);  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Horizontal_Lines) {  	m_iTempVariable = this.m_RectDrawing.Top;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  		m_iTempVariable += 3;  		if (m_iTempVariable > this.m_RectDrawing.Bottom)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left' m_iTempVariable' m_RectDrawing.Right' m_iTempVariable);  	m_iTempVariable += 3;  	if (m_iTempVariable > this.m_RectDrawing.Bottom)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += 3;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Vertical_Lines) {  	m_iTempVariable = 0;  	while (true) {  		e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  		m_iTempVariable += 3;  		if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.DrawLine (m_LinePen' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Top' m_RectDrawing.Left + m_iTempVariable' m_RectDrawing.Bottom);  	m_iTempVariable += 3;  	if (m_RectDrawing.Left + m_iTempVariable > m_RectDrawing.Right)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += 3;  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Empty_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.DrawRectangle (m_LinePen' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Filled_Boxs) {  	m_iTempVariable = this.m_RectDrawing.Left;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  		if (m_IsHot) {  			Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  			int iTemp = this.m_RectDrawing.Height / 2;  			e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  		}  		m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  		if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  			break;  	}  }  else if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' this.m_RectDrawing.Height' this.m_RectDrawing.Height - 1);  	if (m_IsHot) {  		Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  		int iTemp = this.m_RectDrawing.Height / 2;  		e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  	}  	m_iTempVariable += this.m_RectDrawing.Height + DRAWING_PADDING_RIGHT;  	if (m_iTempVariable > this.m_RectDrawing.Right - DRAWING_PADDING_RIGHT)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_IsHot) {  	Brush lightbr = new SolidBrush (ProfessionalColors.SeparatorLight);  	int iTemp = this.m_RectDrawing.Height / 2;  	e.Graphics.FillRectangle (lightbr' m_iTempVariable' this.m_RectDrawing.Top' iTemp' iTemp);  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: if (m_SplitterVisualStyle == SplitterVisualStyle.Double_Jagged_Dots) {  	m_iTempVariable = this.m_RectDrawing.Left;  	int boxdim = m_RectDrawing.Height / 2;  	while (true) {  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  		if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  			break;  		e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  		m_iTempVariable += boxdim * 3;  		if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  			break;  	}  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: while (true) {  	e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable' this.m_RectDrawing.Top' boxdim' boxdim);  	if (m_iTempVariable + boxdim > this.m_RectDrawing.Right)  		break;  	e.Graphics.FillRectangle (m_RectangleBrush' m_iTempVariable + boxdim' this.m_RectDrawing.Top + boxdim' boxdim' boxdim);  	m_iTempVariable += boxdim * 3;  	if (m_iTempVariable > this.m_RectDrawing.Right - boxdim)  		break;  }  
Magic Number,DemoApp,CustomSplitter,C:\repos\prog76_csexwb2\DemoApp\CustomSplitter.cs,OnPaint,The following statement contains a magic number: m_iTempVariable += boxdim * 3;  
Magic Number,DemoApp,frmAuthenticate,C:\repos\prog76_csexwb2\DemoApp\frmAuthenticate.cs,frmAuthenticate_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (14);  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,LoadListViewItems,The following statement contains a magic number: foreach (INTERNET_CACHE_ENTRY_INFO entry in results) {  	if ((!string.IsNullOrEmpty (entry.lpszSourceUrlName)) && (entry.lpszSourceUrlName.Trim ().Length > 0)) {  		ListViewItem item = new ListViewItem ();  		lsvCacheCookie.Items.Add (item);  		item.SubItems [0].Text = entry.lpszSourceUrlName;  		if ((!string.IsNullOrEmpty (entry.lpszLocalFileName)) && (entry.lpszLocalFileName.Trim ().Length > 0))  			item.SubItems.Add (entry.lpszLocalFileName);  		else  			item.SubItems.Add (string.Empty);  		item.SubItems.Add (WinApis.ToStringFromFileTime (entry.LastModifiedTime));  		item.SubItems.Add (WinApis.ToStringFromFileTime (entry.LastAccessTime));  		item.SubItems.Add (WinApis.ToStringFromFileTime (entry.ExpireTime));  		try {  			size = (((Int64)entry.dwSizeHigh) << 32) + entry.dwSizeLow;  		}  		catch (Exception) {  			size = 0;  		}  		finally {  			item.SubItems.Add (size.ToString ());  		}  	}  	index++;  }  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,LoadListViewItems,The following statement contains a magic number: if ((!string.IsNullOrEmpty (entry.lpszSourceUrlName)) && (entry.lpszSourceUrlName.Trim ().Length > 0)) {  	ListViewItem item = new ListViewItem ();  	lsvCacheCookie.Items.Add (item);  	item.SubItems [0].Text = entry.lpszSourceUrlName;  	if ((!string.IsNullOrEmpty (entry.lpszLocalFileName)) && (entry.lpszLocalFileName.Trim ().Length > 0))  		item.SubItems.Add (entry.lpszLocalFileName);  	else  		item.SubItems.Add (string.Empty);  	item.SubItems.Add (WinApis.ToStringFromFileTime (entry.LastModifiedTime));  	item.SubItems.Add (WinApis.ToStringFromFileTime (entry.LastAccessTime));  	item.SubItems.Add (WinApis.ToStringFromFileTime (entry.ExpireTime));  	try {  		size = (((Int64)entry.dwSizeHigh) << 32) + entry.dwSizeLow;  	}  	catch (Exception) {  		size = 0;  	}  	finally {  		item.SubItems.Add (size.ToString ());  	}  }  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,LoadListViewItems,The following statement contains a magic number: try {  	size = (((Int64)entry.dwSizeHigh) << 32) + entry.dwSizeLow;  }  catch (Exception) {  	size = 0;  }  finally {  	item.SubItems.Add (size.ToString ());  }  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,LoadListViewItems,The following statement contains a magic number: size = (((Int64)entry.dwSizeHigh) << 32) + entry.dwSizeLow;  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,frmCacheCookie_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (5);  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,frmCacheCookie_Load,The following statement contains a magic number: toolStripButtonDelSelected.Image = AllForms.m_imgListMain.Images [29];  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,frmCacheCookie_Load,The following statement contains a magic number: toolStripButtonDelChecked.Image = AllForms.m_imgListMain.Images [39];  
Magic Number,DemoApp,frmCacheCookie,C:\repos\prog76_csexwb2\DemoApp\frmCacheCookie.cs,frmCacheCookie_Load,The following statement contains a magic number: toolStripButtonDelAll.Image = AllForms.m_imgListMain.Images [40];  
Magic Number,DemoApp,frmDocInfo,C:\repos\prog76_csexwb2\DemoApp\frmDocInfo.cs,frmDocInfo_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (34);  
Magic Number,DemoApp,frmDOM,C:\repos\prog76_csexwb2\DemoApp\frmDOM.cs,frmDOM_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (34);  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,frmFileDownload,The following statement contains a magic number: this.AddDownloadItem ("csexwb1"' "filename.zip"' "http://www.google.com"' 1' "http://www.google.com"' "C:\\"' 4000);  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		if (progress > 0) {  			if ((id.FileSize > 0) && (id.FileSize > progress)) {  				item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  				item.SubItems [3].Text = progress.ToString ();  			}  			else {  				//last progress will contain actual file size  				item.SubItems [3].Text = progress.ToString ();  			}  		}  		return;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		if (progress > 0) {  			if ((id.FileSize > 0) && (id.FileSize > progress)) {  				item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  				item.SubItems [3].Text = progress.ToString ();  			}  			else {  				//last progress will contain actual file size  				item.SubItems [3].Text = progress.ToString ();  			}  		}  		return;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		if (progress > 0) {  			if ((id.FileSize > 0) && (id.FileSize > progress)) {  				item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  				item.SubItems [3].Text = progress.ToString ();  			}  			else {  				//last progress will contain actual file size  				item.SubItems [3].Text = progress.ToString ();  			}  		}  		return;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		if (progress > 0) {  			if ((id.FileSize > 0) && (id.FileSize > progress)) {  				item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  				item.SubItems [3].Text = progress.ToString ();  			}  			else {  				//last progress will contain actual file size  				item.SubItems [3].Text = progress.ToString ();  			}  		}  		return;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	if (progress > 0) {  		if ((id.FileSize > 0) && (id.FileSize > progress)) {  			item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  			item.SubItems [3].Text = progress.ToString ();  		}  		else {  			//last progress will contain actual file size  			item.SubItems [3].Text = progress.ToString ();  		}  	}  	return;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	if (progress > 0) {  		if ((id.FileSize > 0) && (id.FileSize > progress)) {  			item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  			item.SubItems [3].Text = progress.ToString ();  		}  		else {  			//last progress will contain actual file size  			item.SubItems [3].Text = progress.ToString ();  		}  	}  	return;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	if (progress > 0) {  		if ((id.FileSize > 0) && (id.FileSize > progress)) {  			item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  			item.SubItems [3].Text = progress.ToString ();  		}  		else {  			//last progress will contain actual file size  			item.SubItems [3].Text = progress.ToString ();  		}  	}  	return;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	if (progress > 0) {  		if ((id.FileSize > 0) && (id.FileSize > progress)) {  			item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  			item.SubItems [3].Text = progress.ToString ();  		}  		else {  			//last progress will contain actual file size  			item.SubItems [3].Text = progress.ToString ();  		}  	}  	return;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if (progress > 0) {  	if ((id.FileSize > 0) && (id.FileSize > progress)) {  		item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  		item.SubItems [3].Text = progress.ToString ();  	}  	else {  		//last progress will contain actual file size  		item.SubItems [3].Text = progress.ToString ();  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if (progress > 0) {  	if ((id.FileSize > 0) && (id.FileSize > progress)) {  		item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  		item.SubItems [3].Text = progress.ToString ();  	}  	else {  		//last progress will contain actual file size  		item.SubItems [3].Text = progress.ToString ();  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if (progress > 0) {  	if ((id.FileSize > 0) && (id.FileSize > progress)) {  		item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  		item.SubItems [3].Text = progress.ToString ();  	}  	else {  		//last progress will contain actual file size  		item.SubItems [3].Text = progress.ToString ();  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if (progress > 0) {  	if ((id.FileSize > 0) && (id.FileSize > progress)) {  		item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  		item.SubItems [3].Text = progress.ToString ();  	}  	else {  		//last progress will contain actual file size  		item.SubItems [3].Text = progress.ToString ();  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.FileSize > 0) && (id.FileSize > progress)) {  	item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  	item.SubItems [3].Text = progress.ToString ();  }  else {  	//last progress will contain actual file size  	item.SubItems [3].Text = progress.ToString ();  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.FileSize > 0) && (id.FileSize > progress)) {  	item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  	item.SubItems [3].Text = progress.ToString ();  }  else {  	//last progress will contain actual file size  	item.SubItems [3].Text = progress.ToString ();  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.FileSize > 0) && (id.FileSize > progress)) {  	item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  	item.SubItems [3].Text = progress.ToString ();  }  else {  	//last progress will contain actual file size  	item.SubItems [3].Text = progress.ToString ();  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: if ((id.FileSize > 0) && (id.FileSize > progress)) {  	item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  	item.SubItems [3].Text = progress.ToString ();  }  else {  	//last progress will contain actual file size  	item.SubItems [3].Text = progress.ToString ();  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: item.SubItems [4].Text = ((progress * 100) / id.FileSize).ToString () + "%";  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: item.SubItems [3].Text = progress.ToString ();  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,UpdateDownloadItem,The following statement contains a magic number: item.SubItems [3].Text = progress.ToString ();  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		id.DlDone = true;  		delitem = item;  		if (id.FileSize > 0)  			item.SubItems [3].Text = id.FileSize.ToString ();  		item.SubItems [4].Text = "%100";  		break;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: foreach (ListViewItem item in lvDownloads.Items) {  	id = (DLIDS)item.Tag;  	if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  		id.DlDone = true;  		delitem = item;  		if (id.FileSize > 0)  			item.SubItems [3].Text = id.FileSize.ToString ();  		item.SubItems [4].Text = "%100";  		break;  	}  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	id.DlDone = true;  	delitem = item;  	if (id.FileSize > 0)  		item.SubItems [3].Text = id.FileSize.ToString ();  	item.SubItems [4].Text = "%100";  	break;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: if ((id.DlUid == uDlId) && (id.URL == url) && (id.BrowserName == browsername)) {  	id.DlDone = true;  	delitem = item;  	if (id.FileSize > 0)  		item.SubItems [3].Text = id.FileSize.ToString ();  	item.SubItems [4].Text = "%100";  	break;  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: if (id.FileSize > 0)  	item.SubItems [3].Text = id.FileSize.ToString ();  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: item.SubItems [3].Text = id.FileSize.ToString ();  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: item.SubItems [4].Text = "%100";  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: if (delitem != null) {  	delitem.SubItems [2].Text = Msg;  	if (Msg == "completed")  		delitem.BackColor = Color.LightGreen;  	else  		delitem.BackColor = Color.LightPink;  	//lvDownloads.Items.Remove(delitem);  	UpdateThisText (false);  	if (NotifyEndDownload)  		MessageBox.Show (this' "Finished downloading\r\n" + delitem.SubItems [0].Text + "\r\nTO:\r\n" + delitem.SubItems [1].Text);  }  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,DeleteDownloadItem,The following statement contains a magic number: delitem.SubItems [2].Text = Msg;  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,frmFileDownload_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (45);  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,frmFileDownload_Load,The following statement contains a magic number: m_pb.Value = 50;  
Magic Number,DemoApp,frmFileDownload,C:\repos\prog76_csexwb2\DemoApp\frmFileDownload.cs,frmFileDownload_Load,The following statement contains a magic number: m_pb.Bounds = lvDownloads.Items [0].SubItems [4].Bounds;  
Magic Number,DemoApp,frmHTMLDialogHandler,C:\repos\prog76_csexwb2\DemoApp\frmHTMLDialogHandler.cs,frmHTMLDialogHandler,The following statement contains a magic number: m_timer.Interval = 150;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H1")  	index = 5;  //24pt  else if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H1")  	index = 5;  //24pt  else if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H1")  	index = 5;  //24pt  else if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H1")  	index = 5;  //24pt  else if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: index = 5;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H2")  	index = 4;  //18pt  else if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: index = 4;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H3")  	index = 3;  //14pt  else if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: index = 3;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: if (sTag == "H4")  	index = 2;  //12pt  else if (sTag == "H5")  	index = 1;  //10pt  else if (sTag == "H6")  	index = 0;  //8pt  else  	return;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,AdjustForHeading,The following statement contains a magic number: index = 2;  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: try {  	//Setup icons...  	tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  	tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  	tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  	tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  	tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  	tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  	tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  	tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  	tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  	tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  	tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  	tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  	tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  	tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  	tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  	tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  	tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  	tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  	tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  	tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  	tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  	tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  	tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  	tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  	tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  	tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  	this.Icon = AllForms.BitmapToIcon (11);  	//Setup HTML tags  	System.Collections.Specialized.StringCollection htmltags = DemoApp.Properties.Settings.Default.HtmlTags;  	foreach (string obj in htmltags) {  		treeHTMLTags.Nodes.Add (obj.ToString ());  	}  	//Setup richtextbox highlighting' a bit slow  	htmlRichTextBox1.SetupHighLighting (htmltags);  	htmlRichTextBox1.SuppressHightlighting = false;  	//Setup html events  	cEXWB1.HTMLEditHostSnapRect += new csExWB.HTMLEditHostSnapRectEventHandler (cEXWB1_HTMLEditHostSnapRect);  	cEXWB1.RegisterAsBrowser = true;  	//using default webbrowser dragdrop  	int[] dispids =  {  		(int)HTMLEventDispIds.ID_ONKEYUP'  		(int)HTMLEventDispIds.ID_ONCLICK'  		(int)HTMLEventDispIds.ID_ONCONTEXTMENU'  		(int)HTMLEventDispIds.ID_ONDRAG'  		(int)HTMLEventDispIds.ID_ONDRAGSTART'  		//(int)HTMLEventDispIds.ID_ONDRAGENTER'  		//(int)HTMLEventDispIds.ID_ONDRAGOVER'  		//(int)HTMLEventDispIds.ID_ONDROP'  		//(int)HTMLEventDispIds.ID_ONDRAGLEAVE'  		(int)HTMLEventDispIds.ID_ONDRAGEND  	};  	m_elemEvents.InitHTMLEvents (this' dispids' Iid_Clsids.DIID_HTMLElementEvents2);  	//Initialize webbrowser events  	cEXWB1.NavToBlank ();  	//Enter design mode  	this.cEXWB1.SetDesignMode ("on");  	//Using our Find dlg  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//To handle file drops' does not have eny effect on browsers  	//dragdrop functionality.  	this.AllowDrop = true;  	this.DragEnter += new DragEventHandler (frmHTMLeditor_DragEnter);  	//this.DragDrop += new DragEventHandler(frmHTMLeditor_DragDrop);  	this.DragLeave += new EventHandler (frmHTMLeditor_DragLeave);  	//this.DragOver += new DragEventHandler(frmHTMLeditor_DragOver);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("frmHTMLeditor_Load\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnBold.Image = AllForms.m_imgListMain.Images [51];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnItalic.Image = AllForms.m_imgListMain.Images [52];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnUnderline.Image = AllForms.m_imgListMain.Images [53];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnLeftAlign.Image = AllForms.m_imgListMain.Images [56];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnCenterAlign.Image = AllForms.m_imgListMain.Images [54];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnRightAlign.Image = AllForms.m_imgListMain.Images [57];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnFullAlign.Image = AllForms.m_imgListMain.Images [55];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnNumberList.Image = AllForms.m_imgListMain.Images [49];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnBulletList.Image = AllForms.m_imgListMain.Images [50];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnNew.Image = AllForms.m_imgListMain.Images [19];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnOpenEdit.Image = AllForms.m_imgListMain.Images [43];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnSave.Image = AllForms.m_imgListMain.Images [21];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnPrint.Image = AllForms.m_imgListMain.Images [8];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnCut.Image = AllForms.m_imgListMain.Images [23];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnCopy.Image = AllForms.m_imgListMain.Images [24];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnPaste.Image = AllForms.m_imgListMain.Images [25];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnSelectAll.Image = AllForms.m_imgListMain.Images [28];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnUndo.Image = AllForms.m_imgListMain.Images [26];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnRedo.Image = AllForms.m_imgListMain.Images [27];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnTable.Image = AllForms.m_imgListMain.Images [47];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnPicture.Image = AllForms.m_imgListMain.Images [46];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnLink.Image = AllForms.m_imgListMain.Images [48];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnBR.Image = AllForms.m_imgListMain.Images [61];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnHorizontalLine.Image = AllForms.m_imgListMain.Images [63];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnIndent.Image = AllForms.m_imgListMain.Images [64];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnOutdent.Image = AllForms.m_imgListMain.Images [65];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: tsBtnRemoveFormat.Image = AllForms.m_imgListMain.Images [15];  
Magic Number,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,frmHTMLeditor_Load,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (11);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The following statement contains a magic number: try {  	mainToolStripMenuItem.Visible = false;  	SetupImages ();  	//Restricted  	//this.cEXWB1.WBDOCDOWNLOADCTLFLAG = (int)(DOCDOWNLOADCTLFLAG.NO_DLACTIVEXCTLS |  	//DOCDOWNLOADCTLFLAG.NO_FRAMEDOWNLOAD | DOCDOWNLOADCTLFLAG.NO_JAVA |  	//DOCDOWNLOADCTLFLAG.NO_RUNACTIVEXCTLS | DOCDOWNLOADCTLFLAG.NO_SCRIPTS |  	//DOCDOWNLOADCTLFLAG.NOFRAMES | DOCDOWNLOADCTLFLAG.PRAGMA_NO_CACHE |  	//DOCDOWNLOADCTLFLAG.NO_BEHAVIORS | DOCDOWNLOADCTLFLAG.NO_CLIENTPULL |  	//DOCDOWNLOADCTLFLAG.SILENT);  	//    //To activate autocomplete  	//    this.cEXWB1.WBDOCHOSTUIFLAG = (int)(DOCHOSTUIFLAG.NO3DBORDER |  	//DOCHOSTUIFLAG.FLAT_SCROLLBAR | DOCHOSTUIFLAG.THEME |  	//DOCHOSTUIFLAG.ENABLE_FORMS_AUTOCOMPLETE);  	this.cEXWB1.DownloadComplete += new csExWB.DownloadCompleteEventHandler (this.cEXWB1_DownloadComplete);  	this.cEXWB1.DocumentComplete += new csExWB.DocumentCompleteEventHandler (this.cEXWB1_DocumentComplete);  	this.cEXWB1.TitleChange += new csExWB.TitleChangeEventHandler (this.cEXWB1_TitleChange);  	this.cEXWB1.NewWindow2 += new csExWB.NewWindow2EventHandler (this.cEXWB1_NewWindow2);  	this.cEXWB1.ScriptError += new csExWB.ScriptErrorEventHandler (this.cEXWB1_ScriptError);  	this.cEXWB1.WBKeyDown += new csExWB.WBKeyDownEventHandler (this.cEXWB1_WBKeyDown);  	this.cEXWB1.WindowClosing += new csExWB.WindowClosingEventHandler (this.cEXWB1_WindowClosing);  	this.cEXWB1.DocumentCompleteEX += new csExWB.DocumentCompleteExEventHandler (this.cEXWB1_DocumentCompleteEX);  	this.cEXWB1.NewWindow3 += new csExWB.NewWindow3EventHandler (this.cEXWB1_NewWindow3);  	this.cEXWB1.WBSecurityProblem += new csExWB.SecurityProblemEventHandler (this.cEXWB1_WBSecurityProblem);  	this.cEXWB1.WBKeyUp += new csExWB.WBKeyUpEventHandler (this.cEXWB1_WBKeyUp);  	this.cEXWB1.WBContextMenu += new csExWB.ContextMenuEventHandler (this.cEXWB1_WBContextMenu);  	this.cEXWB1.FileDownload += new csExWB.FileDownloadEventHandler (this.cEXWB1_FileDownload);  	this.cEXWB1.StatusTextChange += new csExWB.StatusTextChangeEventHandler (this.cEXWB1_StatusTextChange);  	this.cEXWB1.WBDragDrop += new csExWB.WBDropEventHandler (this.cEXWB1_WBDragDrop);  	this.cEXWB1.WBDocHostShowUIShowMessage += new csExWB.DocHostShowUIShowMessageEventHandler (this.cEXWB1_WBDocHostShowUIShowMessage);  	this.cEXWB1.ProtocolHandlerOnResponse += new csExWB.ProtocolHandlerOnResponseEventHandler (this.cEXWB1_ProtocolHandlerOnResponse);  	this.cEXWB1.SetSecureLockIcon += new csExWB.SetSecureLockIconEventHandler (this.cEXWB1_SetSecureLockIcon);  	this.cEXWB1.DownloadBegin += new csExWB.DownloadBeginEventHandler (this.cEXWB1_DownloadBegin);  	this.cEXWB1.NavigateComplete2 += new csExWB.NavigateComplete2EventHandler (this.cEXWB1_NavigateComplete2);  	this.cEXWB1.WBEvaluteNewWindow += new csExWB.EvaluateNewWindowEventHandler (this.cEXWB1_WBEvaluteNewWindow);  	this.cEXWB1.WBAuthenticate += new csExWB.AuthenticateEventHandler (this.cEXWB1_WBAuthenticate);  	this.cEXWB1.RefreshEnd += new csExWB.RefreshEndEventHandler (this.cEXWB1_RefreshEnd);  	this.cEXWB1.NavigateError += new csExWB.NavigateErrorEventHandler (this.cEXWB1_NavigateError);  	this.cEXWB1.BeforeNavigate2 += new csExWB.BeforeNavigate2EventHandler (this.cEXWB1_BeforeNavigate2);  	this.cEXWB1.RefreshBegin += new csExWB.RefreshBeginEventHandler (this.cEXWB1_RefreshBegin);  	this.cEXWB1.HTMLEvent += new csExWB.HTMLEventHandler (this.cEXWB1_HTMLEvent);  	this.cEXWB1.CommandStateChange += new csExWB.CommandStateChangeEventHandler (this.cEXWB1_CommandStateChange);  	this.cEXWB1.ProgressChange += new csExWB.ProgressChangeEventHandler (this.cEXWB1_ProgressChange);  	this.cEXWB1.FileDownloadExStart += new csExWB.FileDownloadExEventHandler (this.cEXWB1_FileDownloadExStart);  	this.cEXWB1.FileDownloadExEnd += new csExWB.FileDownloadExEndEventHandler (this.cEXWB1_FileDownloadExEnd);  	this.cEXWB1.FileDownloadExProgress += new csExWB.FileDownloadExProgressEventHandler (this.cEXWB1_FileDownloadExProgress);  	this.cEXWB1.FileDownloadExError += new csExWB.FileDownloadExErrorEventHandler (this.cEXWB1_FileDownloadExError);  	this.cEXWB1.FileDownloadExAuthenticate += new csExWB.FileDownloadExAuthenticateEventHandler (this.cEXWB1_FileDownloadExAuthenticate);  	this.cEXWB1.ProtocolHandlerOnBeginTransaction += new csExWB.ProtocolHandlerOnBeginTransactionEventHandler (this.cEXWB1_ProtocolHandlerOnBeginTransaction);  	this.cEXWB1.ProtocolHandlerOnResponse += new csExWB.ProtocolHandlerOnResponseEventHandler (this.cEXWB1_ProtocolHandlerOnResponse);  	cEXWB1.RegisterAsBrowser = true;  	cEXWB1.FileDownloadDirectory = Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments) + System.IO.Path.DirectorySeparatorChar.ToString ();  	//Add first tab  	string sname = cEXWB1.Name;  	m_tsBtnFirstTab = new ToolStripButton ();  	m_tsBtnFirstTab.ImageScaling = ToolStripItemImageScaling.None;  	m_tsBtnFirstTab.ImageAlign = ContentAlignment.MiddleCenter;  	m_tsBtnFirstTab.TextAlign = ContentAlignment.TopLeft;  	m_tsBtnFirstTab.TextImageRelation = TextImageRelation.TextAboveImage;  	m_tsBtnFirstTab.Name = sname;  	m_tsBtnFirstTab.Text = m_Blank;  	m_tsBtnFirstTab.Image = m_BlankImage;  	m_tsBtnFirstTab.ToolTipText = m_AboutBlank;  	m_tsBtnFirstTab.Checked = true;  	m_tsBtnFirstTab.MouseUp += new MouseEventHandler (this.tsWBTabs_ToolStripButtonCtxMenuHandler);  	tsWBTabs.Items.Add ((ToolStripItem)m_tsBtnFirstTab);  	//Take note of current WB and first toolstripbutton index  	m_CurWB = cEXWB1;  	m_iCurTab = tsWBTabs.Items.Count - 1;  	//Add menu  	ToolStripMenuItem menu = new ToolStripMenuItem (m_Blank' m_imgUnLock);  	menu.Name = sname;  	menu.Checked = true;  	ctxMnuOpenWBs.Items.Add ((ToolStripItem)menu);  	m_iCurMenu = ctxMnuOpenWBs.Items.Count - 1;  	m_frmFind.Icon = AllForms.BitmapToIcon (30);  	//form find callback  	m_frmFind.FindInPageEvent += new FindInPage (m_frmFind_FindInPageEvent);  	//Start watching favorites folder  	fswFavorites.Path = Environment.GetFolderPath (Environment.SpecialFolder.Favorites);  	//Load favorites  	LoadFavoriteMenuItems ();  	//Fill up the screen  	this.WindowState = FormWindowState.Maximized;  }  catch (Exception ee) {  	MessageBox.Show ("frmMain_Load Failed\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,frmMain_Load,The following statement contains a magic number: m_frmFind.Icon = AllForms.BitmapToIcon (30);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: try {  	//string[] str = this.GetType().Assembly.GetManifestResourceNames();  	//foreach (string s in str)  	//{  	//    System.Diagnostics.Debug.Print(s);  	//}  	//DemoApp.Properties.Resources.resources  	//DemoApp.frmPopup.resources  	//DemoApp.frmMain.resources  	//DemoApp.Resources.IeToolbar.bmp  	//....  	System.IO.Stream file2 = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.blank.gif");  	m_BlankImage = Image.FromStream (file2);  	System.IO.Stream file = this.GetType ().Assembly.GetManifestResourceStream ("DemoApp.Resources.IeToolbar.bmp");  	Image img = Image.FromStream (file);  	AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  	AllForms.m_imgListMain.Images.AddStrip (img);  	tsBtnBack.Image = AllForms.m_imgListMain.Images [0];  	tsBtnForward.Image = AllForms.m_imgListMain.Images [1];  	tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  	tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  	tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  	tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  	tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  	tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  	tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  	tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  	tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  	tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  	m_imgLock = AllForms.m_imgListMain.Images [13];  	m_imgUnLock = AllForms.m_imgListMain.Images [32];  	//normall ie  	tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  	tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  	tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  	tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  	tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  	tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  	tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  	tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  	tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  	tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  	tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  	tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  	tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  	tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  	tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  	tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  	tsDate.Image = AllForms.m_imgListMain.Images [36];  	tsDate.Text = DateTime.Today.ToString ("D");  	tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  	this.Icon = AllForms.BitmapToIcon (41);  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("\r\nError=" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: AllForms.m_imgListMain.TransparentColor = Color.FromArgb (192' 192' 192);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnStop.Image = AllForms.m_imgListMain.Images [2];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnRefresh.Image = AllForms.m_imgListMain.Images [4];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsSplitBtnSearch.Image = AllForms.m_imgListMain.Images [30];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnGo.Image = AllForms.m_imgListMain.Images [10];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsChkBtnGo.Image = AllForms.m_imgListMain.Images [18];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnOpenWBs.Image = AllForms.m_imgListMain.Images [12];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnAddWB.Image = AllForms.m_imgListMain.Images [16];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsChkBtnAddWB.Image = AllForms.m_imgListMain.Images [18];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnRemoveWB.Image = AllForms.m_imgListMain.Images [39];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsBtnRemoveAllWBs.Image = AllForms.m_imgListMain.Images [40];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: m_imgLock = AllForms.m_imgListMain.Images [13];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: m_imgUnLock = AllForms.m_imgListMain.Images [32];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsLinksLblText.Image = AllForms.m_imgListMain.Images [20];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuNew.Image = AllForms.m_imgListMain.Images [19];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuOpen.Image = AllForms.m_imgListMain.Images [43];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuSave.Image = AllForms.m_imgListMain.Images [21];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuSaveDocument.Image = AllForms.m_imgListMain.Images [44];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuSaveDocumentImage.Image = AllForms.m_imgListMain.Images [45];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsEditMnuCut.Image = AllForms.m_imgListMain.Images [23];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsEditMnuCopy.Image = AllForms.m_imgListMain.Images [24];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsEditMnuPaste.Image = AllForms.m_imgListMain.Images [25];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsEditMnuSelectAll.Image = AllForms.m_imgListMain.Images [28];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsEditMnuFindInPage.Image = AllForms.m_imgListMain.Images [30];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuPrintPreview.Image = AllForms.m_imgListMain.Images [7];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuPrint.Image = AllForms.m_imgListMain.Images [8];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsFileMnuExit.Image = AllForms.m_imgListMain.Images [37];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsHelpMnuHelpAbout.Image = AllForms.m_imgListMain.Images [33];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsHelpMnuHelpContents.Image = AllForms.m_imgListMain.Images [9];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsDate.Image = AllForms.m_imgListMain.Images [36];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: tsOpticalZoom.Image = AllForms.m_imgListMain.Images [30];  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetupImages,The following statement contains a magic number: this.Icon = AllForms.BitmapToIcon (41);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuTravelLogEntries) {  	//m_CurWB.RemoveTravelLogEntry(0);  	//m_CurWB.AddTravelLogEntry("http://www.yahoo.com"' "Yahoo");  	AllForms.m_frmLog.AppendToLog ("Travel Log Entries (History for current browser) - Count = " + m_CurWB.GetTravelLogCount ().ToString () + "\r\n");  	List<TravelLogStruct> items = m_CurWB.GetTraveLogEntries ();  	foreach (TravelLogStruct item in items) {  		//Current page will have it's url and title as zero length string  		if ((!string.IsNullOrEmpty (item.Title)) && (!string.IsNullOrEmpty (item.URL)))  			AllForms.m_frmLog.AppendToLog ("Title==>" + item.Title + " <>Url==>" + item.URL);  		else  			AllForms.m_frmLog.AppendToLog ("Current Title==>" + m_CurWB.GetTitle (true) + " <>Current Url==>" + m_CurWB.LocationUrl);  	}  	if (!AllForms.m_frmLog.Visible)  		AllForms.m_frmLog.Show (this);  	return;  }  else if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuTravelLogEntries) {  	//m_CurWB.RemoveTravelLogEntry(0);  	//m_CurWB.AddTravelLogEntry("http://www.yahoo.com"' "Yahoo");  	AllForms.m_frmLog.AppendToLog ("Travel Log Entries (History for current browser) - Count = " + m_CurWB.GetTravelLogCount ().ToString () + "\r\n");  	List<TravelLogStruct> items = m_CurWB.GetTraveLogEntries ();  	foreach (TravelLogStruct item in items) {  		//Current page will have it's url and title as zero length string  		if ((!string.IsNullOrEmpty (item.Title)) && (!string.IsNullOrEmpty (item.URL)))  			AllForms.m_frmLog.AppendToLog ("Title==>" + item.Title + " <>Url==>" + item.URL);  		else  			AllForms.m_frmLog.AppendToLog ("Current Title==>" + m_CurWB.GetTitle (true) + " <>Current Url==>" + m_CurWB.LocationUrl);  	}  	if (!AllForms.m_frmLog.Visible)  		AllForms.m_frmLog.Show (this);  	return;  }  else if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuTravelLogEntries) {  	//m_CurWB.RemoveTravelLogEntry(0);  	//m_CurWB.AddTravelLogEntry("http://www.yahoo.com"' "Yahoo");  	AllForms.m_frmLog.AppendToLog ("Travel Log Entries (History for current browser) - Count = " + m_CurWB.GetTravelLogCount ().ToString () + "\r\n");  	List<TravelLogStruct> items = m_CurWB.GetTraveLogEntries ();  	foreach (TravelLogStruct item in items) {  		//Current page will have it's url and title as zero length string  		if ((!string.IsNullOrEmpty (item.Title)) && (!string.IsNullOrEmpty (item.URL)))  			AllForms.m_frmLog.AppendToLog ("Title==>" + item.Title + " <>Url==>" + item.URL);  		else  			AllForms.m_frmLog.AppendToLog ("Current Title==>" + m_CurWB.GetTitle (true) + " <>Current Url==>" + m_CurWB.LocationUrl);  	}  	if (!AllForms.m_frmLog.Visible)  		AllForms.m_frmLog.Show (this);  	return;  }  else if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuTravelLogEntries) {  	//m_CurWB.RemoveTravelLogEntry(0);  	//m_CurWB.AddTravelLogEntry("http://www.yahoo.com"' "Yahoo");  	AllForms.m_frmLog.AppendToLog ("Travel Log Entries (History for current browser) - Count = " + m_CurWB.GetTravelLogCount ().ToString () + "\r\n");  	List<TravelLogStruct> items = m_CurWB.GetTraveLogEntries ();  	foreach (TravelLogStruct item in items) {  		//Current page will have it's url and title as zero length string  		if ((!string.IsNullOrEmpty (item.Title)) && (!string.IsNullOrEmpty (item.URL)))  			AllForms.m_frmLog.AppendToLog ("Title==>" + item.Title + " <>Url==>" + item.URL);  		else  			AllForms.m_frmLog.AppendToLog ("Current Title==>" + m_CurWB.GetTitle (true) + " <>Current Url==>" + m_CurWB.LocationUrl);  	}  	if (!AllForms.m_frmLog.Visible)  		AllForms.m_frmLog.Show (this);  	return;  }  else if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentDOM) {  	try {  		this.Cursor = Cursors.WaitCursor;  		//load and display DOM' passing Document object  		m_frmDOM.LoadDOM (m_CurWB.WebbrowserObject.Document);  		if (!m_frmDOM.Visible)  			m_frmDOM.Show (this);  		else  			m_frmDOM.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentDOM\r\n" + eee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuDocumentInfo) {  	try {  		this.Cursor = Cursors.WaitCursor;  		m_frmDocInfo.LoadDocumentInfo (this.m_CurWB);  		if (!m_frmDocInfo.Visible)  			m_frmDocInfo.Show (this);  		else  			m_frmDocInfo.BringToFront ();  		this.Cursor = Cursors.Default;  	}  	catch (Exception eeee) {  		this.Cursor = Cursors.Default;  		AllForms.m_frmLog.AppendToLog ("tsToolsMnuDocumentInfo\r\n" + eeee.ToString ());  	}  	return;  }  else if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuSimpleHTMLEditor) {  	if (!m_frmHTMLEditor.Visible)  		m_frmHTMLEditor.Show (this);  	return;  }  else if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnurequestResponseHeaders) {  	if (tsToolsMnurequestResponseHeaders.Checked) {  		//Activate all browsers  		foreach (Control ctl in this.toolStripContainer1.ContentPanel.Controls) {  			if (ctl is csExWB.cEXWB) {  				csExWB.cEXWB wb = ctl as csExWB.cEXWB;  				wb.StartHTTPAPP ();  				wb.StartHTTPSAPP ();  			}  		}  		if (!m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Show (this);  	}  	else {  		//Only one call is enough to deactivate all  		cEXWB1.StopHTTPAPP ();  		cEXWB1.StopHTTPSAPP ();  		if (m_frmRequestResponseHeaders.Visible)  			m_frmRequestResponseHeaders.Hide ();  	}  	return;  }  else if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnufileDownloads) {  	if (!m_frmFileDownload.Visible)  		m_frmFileDownload.Show (this);  	return;  }  else if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnuHTMLDialogs) {  	if (tsToolsMnuHTMLDialogs.Checked)//Allow  	 {  		tsToolsMnuHTMLDialogs.Text = "Allow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (true);  	}  	else {  		tsToolsMnuHTMLDialogs.Text = "Disllow HTML Dialogs";  		cEXWB1.SetAllowHTMLDialogs (false);  	}  	return;  }  else if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (sender == tsToolsMnudisplayHTMLPopup) {  	IHTMLDocument2 doc2 = m_CurWB.WebbrowserObject.Document as IHTMLDocument2;  	IHTMLWindow4 win4 = null;  	if (doc2 == null)  		return;  	win4 = doc2.parentWindow as IHTMLWindow4;  	if (win4 == null)  		return;  	IHTMLPopup popup = win4.createPopup (null) as IHTMLPopup;  	if (popup != null) {  		IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  		if ((popdoc != null) && (popdoc.body != null)) {  			popdoc.body.style.backgroundColor = "lightyellow";  			popdoc.body.style.border = "solid black 1px";  			popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  		}  		popup.show (10' 10' 400' 25' doc2.body);  	}  	return;  }  else if (sender == tsToolsMnuWindowExternal) {  	if (!m_frmWindowExternal.Visible)  		m_frmWindowExternal.Show (this);  	return;  }  else if (sender == tsToolsMnuAutomation) {  	m_frmAutomation = new frmAutomation ();  	m_frmAutomation.Show (this);  	return;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (popup != null) {  	IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  	if ((popdoc != null) && (popdoc.body != null)) {  		popdoc.body.style.backgroundColor = "lightyellow";  		popdoc.body.style.border = "solid black 1px";  		popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  	}  	popup.show (10' 10' 400' 25' doc2.body);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (popup != null) {  	IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  	if ((popdoc != null) && (popdoc.body != null)) {  		popdoc.body.style.backgroundColor = "lightyellow";  		popdoc.body.style.border = "solid black 1px";  		popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  	}  	popup.show (10' 10' 400' 25' doc2.body);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (popup != null) {  	IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  	if ((popdoc != null) && (popdoc.body != null)) {  		popdoc.body.style.backgroundColor = "lightyellow";  		popdoc.body.style.border = "solid black 1px";  		popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  	}  	popup.show (10' 10' 400' 25' doc2.body);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: if (popup != null) {  	IHTMLDocument2 popdoc = popup.document as IHTMLDocument2;  	if ((popdoc != null) && (popdoc.body != null)) {  		popdoc.body.style.backgroundColor = "lightyellow";  		popdoc.body.style.border = "solid black 1px";  		popdoc.body.innerHTML = "<p align=\"center\">Displaying some <B>HTML</B> as a tooltip! X = 10' Y = 10</p>";  	}  	popup.show (10' 10' 400' 25' doc2.body);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: popup.show (10' 10' 400' 25' doc2.body);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: popup.show (10' 10' 400' 25' doc2.body);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: popup.show (10' 10' 400' 25' doc2.body);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripToolsMenuClickHandler,The following statement contains a magic number: popup.show (10' 10' 400' 25' doc2.body);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: try {  	if (sender == this.tsFileMnuBackgroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  	}  	else if (sender == tsFileMnuBackgroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  	}  	else if (sender == tsFileMnuForegroundBlankPage) {  		AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	}  	else if (sender == tsFileMnuForegroundFromAddress) {  		AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  	}  	else if (sender == tsFileMnuPrint) {  		m_CurWB.Print ();  	}  	else if (sender == tsFileMnuPrintPreview) {  		m_CurWB.PrintPreview ();  	}  	else if (sender == tsFileMnuSaveDocument) {  		m_CurWB.SaveAs ();  	}  	else if (sender == tsFileMnuSaveDocumentImage) {  		////gif format produces some of the smallest sizes  		if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  			System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  			string ext = ".bmp";  			switch (AllForms.m_dlgSave.FilterIndex) {  			case 1:  				break;  			case 2:  				format = System.Drawing.Imaging.ImageFormat.Gif;  				ext = ".gif";  				break;  			case 3:  				format = System.Drawing.Imaging.ImageFormat.Jpeg;  				ext = ".jpeg";  				break;  			case 4:  				format = System.Drawing.Imaging.ImageFormat.Png;  				ext = ".png";  				break;  			case 5:  				format = System.Drawing.Imaging.ImageFormat.Wmf;  				ext = ".wmf";  				break;  			case 6:  				format = System.Drawing.Imaging.ImageFormat.Tiff;  				ext = ".tiff";  				break;  			case 7:  				format = System.Drawing.Imaging.ImageFormat.Emf;  				ext = ".emf";  				break;  			default:  				break;  			}  			if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  				AllForms.m_dlgSave.FileName += ext;  			m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  		}  	}  	else if (sender == tsFileMnuOpen) {  		if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  			m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  	}  	else if (sender == tsFileMnuExit) {  		Application.Exit ();  	}  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("File Menu\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == this.tsFileMnuBackgroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' false);  }  else if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuBackgroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' false);  }  else if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundBlankPage) {  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  }  else if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuForegroundFromAddress) {  	AddNewBrowser (m_Blank' m_AboutBlank' comboURL.Text' true);  }  else if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrint) {  	m_CurWB.Print ();  }  else if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuPrintPreview) {  	m_CurWB.PrintPreview ();  }  else if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocument) {  	m_CurWB.SaveAs ();  }  else if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (sender == tsFileMnuSaveDocumentImage) {  	////gif format produces some of the smallest sizes  	if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  		System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  		string ext = ".bmp";  		switch (AllForms.m_dlgSave.FilterIndex) {  		case 1:  			break;  		case 2:  			format = System.Drawing.Imaging.ImageFormat.Gif;  			ext = ".gif";  			break;  		case 3:  			format = System.Drawing.Imaging.ImageFormat.Jpeg;  			ext = ".jpeg";  			break;  		case 4:  			format = System.Drawing.Imaging.ImageFormat.Png;  			ext = ".png";  			break;  		case 5:  			format = System.Drawing.Imaging.ImageFormat.Wmf;  			ext = ".wmf";  			break;  		case 6:  			format = System.Drawing.Imaging.ImageFormat.Tiff;  			ext = ".tiff";  			break;  		case 7:  			format = System.Drawing.Imaging.ImageFormat.Emf;  			ext = ".emf";  			break;  		default:  			break;  		}  		if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  			AllForms.m_dlgSave.FileName += ext;  		m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  	}  }  else if (sender == tsFileMnuOpen) {  	if (AllForms.ShowStaticOpenDialog (this' AllForms.DLG_HTMLS_FILTER' string.Empty' "C:"' true) == DialogResult.OK)  		m_CurWB.Navigate (AllForms.m_dlgOpen.FileName);  }  else if (sender == tsFileMnuExit) {  	Application.Exit ();  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: if (AllForms.ShowStaticSaveDialogForImage (this) == DialogResult.OK) {  	System.Drawing.Imaging.ImageFormat format = System.Drawing.Imaging.ImageFormat.Bmp;  	string ext = ".bmp";  	switch (AllForms.m_dlgSave.FilterIndex) {  	case 1:  		break;  	case 2:  		format = System.Drawing.Imaging.ImageFormat.Gif;  		ext = ".gif";  		break;  	case 3:  		format = System.Drawing.Imaging.ImageFormat.Jpeg;  		ext = ".jpeg";  		break;  	case 4:  		format = System.Drawing.Imaging.ImageFormat.Png;  		ext = ".png";  		break;  	case 5:  		format = System.Drawing.Imaging.ImageFormat.Wmf;  		ext = ".wmf";  		break;  	case 6:  		format = System.Drawing.Imaging.ImageFormat.Tiff;  		ext = ".tiff";  		break;  	case 7:  		format = System.Drawing.Imaging.ImageFormat.Emf;  		ext = ".emf";  		break;  	default:  		break;  	}  	if (string.IsNullOrEmpty (Path.GetExtension (AllForms.m_dlgSave.FileName)))  		AllForms.m_dlgSave.FileName += ext;  	m_CurWB.SaveBrowserImage (AllForms.m_dlgSave.FileName' System.Drawing.Imaging.PixelFormat.Format24bppRgb' format);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,ToolStripFileMenuClickHandler,The following statement contains a magic number: switch (AllForms.m_dlgSave.FilterIndex) {  case 1:  	break;  case 2:  	format = System.Drawing.Imaging.ImageFormat.Gif;  	ext = ".gif";  	break;  case 3:  	format = System.Drawing.Imaging.ImageFormat.Jpeg;  	ext = ".jpeg";  	break;  case 4:  	format = System.Drawing.Imaging.ImageFormat.Png;  	ext = ".png";  	break;  case 5:  	format = System.Drawing.Imaging.ImageFormat.Wmf;  	ext = ".wmf";  	break;  case 6:  	format = System.Drawing.Imaging.ImageFormat.Tiff;  	ext = ".tiff";  	break;  case 7:  	format = System.Drawing.Imaging.ImageFormat.Emf;  	ext = ".emf";  	break;  default:  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The following statement contains a magic number: try {  	//Reload favorites  	if (tsFavoritesMnu.DropDownItems.Count > 3) {  		//Remove from back to front except the original items  		for (int i = tsFavoritesMnu.DropDownItems.Count - 1; i > 2; i--) {  			if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) {  				tsFavoritesMnu.DropDownItems.Remove (tsFavoritesMnu.DropDownItems [i]);  			}  		}  		for (int i = tsLinks.Items.Count - 1; i > 0; i--) {  			tsLinks.Items.Remove (tsLinks.Items [i]);  		}  	}  	//Load favorites  	LoadFavoriteMenuItems ();  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("tsFavoritesMnu_DropDownOpening\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The following statement contains a magic number: try {  	//Reload favorites  	if (tsFavoritesMnu.DropDownItems.Count > 3) {  		//Remove from back to front except the original items  		for (int i = tsFavoritesMnu.DropDownItems.Count - 1; i > 2; i--) {  			if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) {  				tsFavoritesMnu.DropDownItems.Remove (tsFavoritesMnu.DropDownItems [i]);  			}  		}  		for (int i = tsLinks.Items.Count - 1; i > 0; i--) {  			tsLinks.Items.Remove (tsLinks.Items [i]);  		}  	}  	//Load favorites  	LoadFavoriteMenuItems ();  }  catch (Exception ee) {  	AllForms.m_frmLog.AppendToLog ("tsFavoritesMnu_DropDownOpening\r\n" + ee.ToString ());  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The following statement contains a magic number: if (tsFavoritesMnu.DropDownItems.Count > 3) {  	//Remove from back to front except the original items  	for (int i = tsFavoritesMnu.DropDownItems.Count - 1; i > 2; i--) {  		if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) {  			tsFavoritesMnu.DropDownItems.Remove (tsFavoritesMnu.DropDownItems [i]);  		}  	}  	for (int i = tsLinks.Items.Count - 1; i > 0; i--) {  		tsLinks.Items.Remove (tsLinks.Items [i]);  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The following statement contains a magic number: if (tsFavoritesMnu.DropDownItems.Count > 3) {  	//Remove from back to front except the original items  	for (int i = tsFavoritesMnu.DropDownItems.Count - 1; i > 2; i--) {  		if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) {  			tsFavoritesMnu.DropDownItems.Remove (tsFavoritesMnu.DropDownItems [i]);  		}  	}  	for (int i = tsLinks.Items.Count - 1; i > 0; i--) {  		tsLinks.Items.Remove (tsLinks.Items [i]);  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsFavoritesMnu_DropDownOpening,The following statement contains a magic number: for (int i = tsFavoritesMnu.DropDownItems.Count - 1; i > 2; i--) {  	if ((tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuAddToFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuOrganizeFavorites) && (tsFavoritesMnu.DropDownItems [i] != tsFavoritesMnuSeparator)) {  		tsFavoritesMnu.DropDownItems.Remove (tsFavoritesMnu.DropDownItems [i]);  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetZoomLevel,The following statement contains a magic number: switch (iLevel) {  case 0:  	tsViewMnuTextSizeLargest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Largest;  	break;  case 1:  	tsViewMnuTextSizeLarger.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Larger;  	break;  case 2:  	tsViewMnuTextSizeMedium.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Medium;  	break;  case 3:  	tsViewMnuTextSizeSmaller.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smaller;  	break;  case 4:  	tsViewMnuTextSizeSmallest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smallest;  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetZoomLevel,The following statement contains a magic number: switch (iLevel) {  case 0:  	tsViewMnuTextSizeLargest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Largest;  	break;  case 1:  	tsViewMnuTextSizeLarger.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Larger;  	break;  case 2:  	tsViewMnuTextSizeMedium.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Medium;  	break;  case 3:  	tsViewMnuTextSizeSmaller.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smaller;  	break;  case 4:  	tsViewMnuTextSizeSmallest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smallest;  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetZoomLevel,The following statement contains a magic number: switch (iLevel) {  case 0:  	tsViewMnuTextSizeLargest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Largest;  	break;  case 1:  	tsViewMnuTextSizeLarger.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Larger;  	break;  case 2:  	tsViewMnuTextSizeMedium.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Medium;  	break;  case 3:  	tsViewMnuTextSizeSmaller.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smaller;  	break;  case 4:  	tsViewMnuTextSizeSmallest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smallest;  	break;  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLargest)  	SetZoomLevel (0);  else if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLargest)  	SetZoomLevel (0);  else if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLargest)  	SetZoomLevel (0);  else if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeLarger)  	SetZoomLevel (1);  else if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeMedium)  	SetZoomLevel (2);  else if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: SetZoomLevel (2);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeSmaller)  	SetZoomLevel (3);  else if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: SetZoomLevel (3);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: if (sender == tsViewMnuTextSizeSmallest)  	SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,tsMnuTextSizeClickHandler,The following statement contains a magic number: SetZoomLevel (4);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	//if (e.istoplevel)  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete_TOPLEVEL");  	//else  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete");  	csExWB.cEXWB pWB = (csExWB.cEXWB)sender;  	if (e.istoplevel) {  		ToolStripButton btn = FindTab (pWB.Name);  		ToolStripMenuItem menu = FindWBMenu (pWB.Name);  		btn.Text = pWB.GetTitle (true);  		if (btn.Text.Length == 0) {  			btn.Text = m_Blank;  		}  		else if (btn.Text.Length > m_MaxTextLen)  			btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  		menu.Text = btn.Text;  		btn.ToolTipText = HttpUtility.UrlDecode (e.url);  		try {  			if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee1) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  		}  		finally {  		}  		if (sender == m_CurWB) {  			this.comboURL.Text = btn.ToolTipText;  			pWB.SetFocus ();  		}  	}  	else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset  	 {  		try {  			ToolStripButton btn = FindTab (pWB.Name);  			if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee2) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  		}  		finally {  		}  	}  }  catch (Exception ee) {  	if (m_CurWB != null)  		AllForms.m_frmLog.AppendToLog (m_CurWB.Name + "_DocumentComplete\r\n" + ee.ToString ());  	else  		AllForms.m_frmLog.AppendToLog ("cEXWBxx_DocumentComplete\r\n" + ee.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	//if (e.istoplevel)  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete_TOPLEVEL");  	//else  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete");  	csExWB.cEXWB pWB = (csExWB.cEXWB)sender;  	if (e.istoplevel) {  		ToolStripButton btn = FindTab (pWB.Name);  		ToolStripMenuItem menu = FindWBMenu (pWB.Name);  		btn.Text = pWB.GetTitle (true);  		if (btn.Text.Length == 0) {  			btn.Text = m_Blank;  		}  		else if (btn.Text.Length > m_MaxTextLen)  			btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  		menu.Text = btn.Text;  		btn.ToolTipText = HttpUtility.UrlDecode (e.url);  		try {  			if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee1) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  		}  		finally {  		}  		if (sender == m_CurWB) {  			this.comboURL.Text = btn.ToolTipText;  			pWB.SetFocus ();  		}  	}  	else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset  	 {  		try {  			ToolStripButton btn = FindTab (pWB.Name);  			if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee2) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  		}  		finally {  		}  	}  }  catch (Exception ee) {  	if (m_CurWB != null)  		AllForms.m_frmLog.AppendToLog (m_CurWB.Name + "_DocumentComplete\r\n" + ee.ToString ());  	else  		AllForms.m_frmLog.AppendToLog ("cEXWBxx_DocumentComplete\r\n" + ee.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	//if (e.istoplevel)  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete_TOPLEVEL");  	//else  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete");  	csExWB.cEXWB pWB = (csExWB.cEXWB)sender;  	if (e.istoplevel) {  		ToolStripButton btn = FindTab (pWB.Name);  		ToolStripMenuItem menu = FindWBMenu (pWB.Name);  		btn.Text = pWB.GetTitle (true);  		if (btn.Text.Length == 0) {  			btn.Text = m_Blank;  		}  		else if (btn.Text.Length > m_MaxTextLen)  			btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  		menu.Text = btn.Text;  		btn.ToolTipText = HttpUtility.UrlDecode (e.url);  		try {  			if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee1) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  		}  		finally {  		}  		if (sender == m_CurWB) {  			this.comboURL.Text = btn.ToolTipText;  			pWB.SetFocus ();  		}  	}  	else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset  	 {  		try {  			ToolStripButton btn = FindTab (pWB.Name);  			if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee2) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  		}  		finally {  		}  	}  }  catch (Exception ee) {  	if (m_CurWB != null)  		AllForms.m_frmLog.AppendToLog (m_CurWB.Name + "_DocumentComplete\r\n" + ee.ToString ());  	else  		AllForms.m_frmLog.AppendToLog ("cEXWBxx_DocumentComplete\r\n" + ee.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	//if (e.istoplevel)  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete_TOPLEVEL");  	//else  	//    AllForms.m_frmLog.AppendToLog("cEXWB1_DocumentComplete");  	csExWB.cEXWB pWB = (csExWB.cEXWB)sender;  	if (e.istoplevel) {  		ToolStripButton btn = FindTab (pWB.Name);  		ToolStripMenuItem menu = FindWBMenu (pWB.Name);  		btn.Text = pWB.GetTitle (true);  		if (btn.Text.Length == 0) {  			btn.Text = m_Blank;  		}  		else if (btn.Text.Length > m_MaxTextLen)  			btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  		menu.Text = btn.Text;  		btn.ToolTipText = HttpUtility.UrlDecode (e.url);  		try {  			if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee1) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  		}  		finally {  		}  		if (sender == m_CurWB) {  			this.comboURL.Text = btn.ToolTipText;  			pWB.SetFocus ();  		}  	}  	else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset  	 {  		try {  			ToolStripButton btn = FindTab (pWB.Name);  			if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  				btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  			}  		}  		catch (Exception ee2) {  			AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  		}  		finally {  		}  	}  }  catch (Exception ee) {  	if (m_CurWB != null)  		AllForms.m_frmLog.AppendToLog (m_CurWB.Name + "_DocumentComplete\r\n" + ee.ToString ());  	else  		AllForms.m_frmLog.AppendToLog ("cEXWBxx_DocumentComplete\r\n" + ee.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (e.istoplevel) {  	ToolStripButton btn = FindTab (pWB.Name);  	ToolStripMenuItem menu = FindWBMenu (pWB.Name);  	btn.Text = pWB.GetTitle (true);  	if (btn.Text.Length == 0) {  		btn.Text = m_Blank;  	}  	else if (btn.Text.Length > m_MaxTextLen)  		btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  	menu.Text = btn.Text;  	btn.ToolTipText = HttpUtility.UrlDecode (e.url);  	try {  		if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee1) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  	}  	finally {  	}  	if (sender == m_CurWB) {  		this.comboURL.Text = btn.ToolTipText;  		pWB.SetFocus ();  	}  }  else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (e.istoplevel) {  	ToolStripButton btn = FindTab (pWB.Name);  	ToolStripMenuItem menu = FindWBMenu (pWB.Name);  	btn.Text = pWB.GetTitle (true);  	if (btn.Text.Length == 0) {  		btn.Text = m_Blank;  	}  	else if (btn.Text.Length > m_MaxTextLen)  		btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  	menu.Text = btn.Text;  	btn.ToolTipText = HttpUtility.UrlDecode (e.url);  	try {  		if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee1) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  	}  	finally {  	}  	if (sender == m_CurWB) {  		this.comboURL.Text = btn.ToolTipText;  		pWB.SetFocus ();  	}  }  else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (e.istoplevel) {  	ToolStripButton btn = FindTab (pWB.Name);  	ToolStripMenuItem menu = FindWBMenu (pWB.Name);  	btn.Text = pWB.GetTitle (true);  	if (btn.Text.Length == 0) {  		btn.Text = m_Blank;  	}  	else if (btn.Text.Length > m_MaxTextLen)  		btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  	menu.Text = btn.Text;  	btn.ToolTipText = HttpUtility.UrlDecode (e.url);  	try {  		if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee1) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  	}  	finally {  	}  	if (sender == m_CurWB) {  		this.comboURL.Text = btn.ToolTipText;  		pWB.SetFocus ();  	}  }  else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (e.istoplevel) {  	ToolStripButton btn = FindTab (pWB.Name);  	ToolStripMenuItem menu = FindWBMenu (pWB.Name);  	btn.Text = pWB.GetTitle (true);  	if (btn.Text.Length == 0) {  		btn.Text = m_Blank;  	}  	else if (btn.Text.Length > m_MaxTextLen)  		btn.Text = btn.Text.Substring (0' m_MaxTextLen) + "...";  	menu.Text = btn.Text;  	btn.ToolTipText = HttpUtility.UrlDecode (e.url);  	try {  		if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee1) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  	}  	finally {  	}  	if (sender == m_CurWB) {  		this.comboURL.Text = btn.ToolTipText;  		pWB.SetFocus ();  	}  }  else if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  		btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  	}  }  catch (Exception ee1) {  	AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  		btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  	}  }  catch (Exception ee1) {  	AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee1.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  	btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if ((this.WindowState != FormWindowState.Minimized) && (e.url != m_AboutBlank)) {  	btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if (pWB.MainDocumentFullyLoaded)// a frame naviagtion within a frameset   {  	try {  		ToolStripButton btn = FindTab (pWB.Name);  		if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  			btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  		}  	}  	catch (Exception ee2) {  		AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  	}  	finally {  	}  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	ToolStripButton btn = FindTab (pWB.Name);  	if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  		btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  	}  }  catch (Exception ee2) {  	AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: try {  	ToolStripButton btn = FindTab (pWB.Name);  	if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  		btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  	}  }  catch (Exception ee2) {  	AllForms.m_frmLog.AppendToLog (pWB.Name + "_DocumentComplete_UpdateThumb\r\n" + ee2.ToString ());  }  finally {  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  	btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: if ((this.WindowState != FormWindowState.Minimized) && (btn != null)) {  	btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_DocumentComplete,The following statement contains a magic number: btn.Image = pWB.DrawThumb (80' 80' System.Drawing.Imaging.PixelFormat.Format24bppRgb);  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBDocHostShowUIShowMessage,The following statement contains a magic number: if (e.type == 48) {  	e.result = (int)MessageBox.Show (e.text' "DemoApp");  }  // confirm dialog  else if (e.type == 33) {  	e.result = (int)MessageBox.Show (e.text' "DemoApp"' MessageBoxButtons.OKCancel);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBDocHostShowUIShowMessage,The following statement contains a magic number: if (e.type == 48) {  	e.result = (int)MessageBox.Show (e.text' "DemoApp");  }  // confirm dialog  else if (e.type == 33) {  	e.result = (int)MessageBox.Show (e.text' "DemoApp"' MessageBoxButtons.OKCancel);  }  
Magic Number,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBDocHostShowUIShowMessage,The following statement contains a magic number: if (e.type == 33) {  	e.result = (int)MessageBox.Show (e.text' "DemoApp"' MessageBoxButtons.OKCancel);  }  
Magic Number,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,LoadColorBoxs,The following statement contains a magic number: this.Height = y + (movewpos * 2);  
Magic Number,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,SetupHighlightPen,The following statement contains a magic number: m_highlightpen = new Pen (foreColor' 2);  
Magic Number,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The following statement contains a magic number: m_recttext = new Rectangle (e.ClipRectangle.X + m_Spacing' e.ClipRectangle.Y + (this.Height - ((m_ColorBoxDimensions + m_Spacing) * 2))' e.ClipRectangle.Width - (m_Spacing * 2)' m_ColorBoxDimensions);  
Magic Number,DemoApp,HtmlColorSelector,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelector.cs,OnPaint,The following statement contains a magic number: m_recttext = new Rectangle (e.ClipRectangle.X + m_Spacing' e.ClipRectangle.Y + (this.Height - ((m_ColorBoxDimensions + m_Spacing) * 2))' e.ClipRectangle.Width - (m_Spacing * 2)' m_ColorBoxDimensions);  
Magic Number,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,HtmlColorSelectorComboBox,The following statement contains a magic number: this.Size = new Size (140' MAXIMUM_HEIGHT);  
Magic Number,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The following statement contains a magic number: m_textrect = new Rectangle (this.ClientRectangle.X + m_Padding' this.ClientRectangle.Y + m_Padding' this.ClientRectangle.Width - ((m_Padding * 2) + m_DropdownDimensions)' this.ClientRectangle.Height - (m_Padding * 2));  
Magic Number,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The following statement contains a magic number: m_textrect = new Rectangle (this.ClientRectangle.X + m_Padding' this.ClientRectangle.Y + m_Padding' this.ClientRectangle.Width - ((m_Padding * 2) + m_DropdownDimensions)' this.ClientRectangle.Height - (m_Padding * 2));  
Magic Number,DemoApp,HtmlColorSelectorComboBox,C:\repos\prog76_csexwb2\DemoApp\HtmlColorSelectorComboBox.cs,OnPaint,The following statement contains a magic number: gradBrush = new System.Drawing.Drawing2D.LinearGradientBrush (m_textrect' Color.FromArgb (opacity' m_GradientStartColor)' Color.FromArgb (opacity / 3' m_GradientEndColor)' System.Drawing.Drawing2D.LinearGradientMode.Vertical);  
Missing Default,DemoApp,frmHTMLeditor,C:\repos\prog76_csexwb2\DemoApp\frmHTMLeditor.cs,cEXWB1_WBKeyDown,The following switch statement is missing a default case: switch (e.keycode) {  case Keys.F:  	m_frmFind.Show (this);  	e.handled = true;  	break;  case Keys.N:  	e.handled = true;  	break;  case Keys.O:  	e.handled = true;  	break;  }  
Missing Default,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,SetZoomLevel,The following switch statement is missing a default case: switch (iLevel) {  case 0:  	tsViewMnuTextSizeLargest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Largest;  	break;  case 1:  	tsViewMnuTextSizeLarger.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Larger;  	break;  case 2:  	tsViewMnuTextSizeMedium.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Medium;  	break;  case 3:  	tsViewMnuTextSizeSmaller.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smaller;  	break;  case 4:  	tsViewMnuTextSizeSmallest.Checked = true;  	if (m_CurWB != null)  		m_CurWB.TextSize = TextSizeWB.Smallest;  	break;  }  
Missing Default,DemoApp,frmMain,C:\repos\prog76_csexwb2\DemoApp\frmMain.cs,cEXWB1_WBKeyDown,The following switch statement is missing a default case: switch (e.keycode) {  case Keys.F:  	m_frmFind.Show (this);  	e.handled = true;  	break;  case Keys.N:  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	e.handled = true;  	break;  case Keys.O:  	AddNewBrowser (m_Blank' m_AboutBlank' string.Empty' true);  	e.handled = true;  	break;  }  
