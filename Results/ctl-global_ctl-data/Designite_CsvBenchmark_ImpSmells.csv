Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,CompareRaw,Cyclomatic complexity of the method is 8
Long Parameter List,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,CompareRaw,The method has 5 parameters.
Long Statement,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Compare,The length of the statement  "	string[][] ctlRecords = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false))).AsEnumerable ().Select (x => x.Select (y => y.Value).ToArray ()).ToArray (); " is 175.
Long Statement,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,CompareRaw,The length of the statement  "				if (!eLeft.Current.Select (x => (x ?? string.Empty).Trim ()).SequenceEqual (eRight.Current.Select (x => (x ?? string.Empty).Trim ()))) { " is 136.
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: Benchmark ("Ctl.Data (hand-POCO)"' () =>  {  	int count = 0;  	var csv = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false)));  	csv.Read ();  	// skip header.  	while (csv.Read ()) {  		var row = csv.CurrentRow;  		string popStr = row [4].Value;  		int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  		Record r = new Record {  			Country = row [0].Value'  			City = row [1].Value'  			AccentCity = row [2].Value'  			Region = row [3].Value'  			Population = popInt'  			Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  			Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  		};  		++count;  	}  	return count;  });  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: Benchmark ("Ctl.Data (hand-POCO)"' () =>  {  	int count = 0;  	var csv = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false)));  	csv.Read ();  	// skip header.  	while (csv.Read ()) {  		var row = csv.CurrentRow;  		string popStr = row [4].Value;  		int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  		Record r = new Record {  			Country = row [0].Value'  			City = row [1].Value'  			AccentCity = row [2].Value'  			Region = row [3].Value'  			Population = popInt'  			Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  			Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  		};  		++count;  	}  	return count;  });  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: Benchmark ("Ctl.Data (hand-POCO)"' () =>  {  	int count = 0;  	var csv = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false)));  	csv.Read ();  	// skip header.  	while (csv.Read ()) {  		var row = csv.CurrentRow;  		string popStr = row [4].Value;  		int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  		Record r = new Record {  			Country = row [0].Value'  			City = row [1].Value'  			AccentCity = row [2].Value'  			Region = row [3].Value'  			Population = popInt'  			Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  			Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  		};  		++count;  	}  	return count;  });  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: Benchmark ("Ctl.Data (hand-POCO)"' () =>  {  	int count = 0;  	var csv = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false)));  	csv.Read ();  	// skip header.  	while (csv.Read ()) {  		var row = csv.CurrentRow;  		string popStr = row [4].Value;  		int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  		Record r = new Record {  			Country = row [0].Value'  			City = row [1].Value'  			AccentCity = row [2].Value'  			Region = row [3].Value'  			Population = popInt'  			Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  			Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  		};  		++count;  	}  	return count;  });  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: Benchmark ("Ctl.Data (hand-POCO)"' () =>  {  	int count = 0;  	var csv = new Ctl.Data.CsvReader (new StreamReader (new MemoryStream (data' false)));  	csv.Read ();  	// skip header.  	while (csv.Read ()) {  		var row = csv.CurrentRow;  		string popStr = row [4].Value;  		int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  		Record r = new Record {  			Country = row [0].Value'  			City = row [1].Value'  			AccentCity = row [2].Value'  			Region = row [3].Value'  			Population = popInt'  			Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  			Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  		};  		++count;  	}  	return count;  });  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (csv.Read ()) {  	var row = csv.CurrentRow;  	string popStr = row [4].Value;  	int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  	Record r = new Record {  		Country = row [0].Value'  		City = row [1].Value'  		AccentCity = row [2].Value'  		Region = row [3].Value'  		Population = popInt'  		Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  		Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  	};  	++count;  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (csv.Read ()) {  	var row = csv.CurrentRow;  	string popStr = row [4].Value;  	int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  	Record r = new Record {  		Country = row [0].Value'  		City = row [1].Value'  		AccentCity = row [2].Value'  		Region = row [3].Value'  		Population = popInt'  		Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  		Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  	};  	++count;  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (csv.Read ()) {  	var row = csv.CurrentRow;  	string popStr = row [4].Value;  	int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  	Record r = new Record {  		Country = row [0].Value'  		City = row [1].Value'  		AccentCity = row [2].Value'  		Region = row [3].Value'  		Population = popInt'  		Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  		Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  	};  	++count;  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (csv.Read ()) {  	var row = csv.CurrentRow;  	string popStr = row [4].Value;  	int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  	Record r = new Record {  		Country = row [0].Value'  		City = row [1].Value'  		AccentCity = row [2].Value'  		Region = row [3].Value'  		Population = popInt'  		Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  		Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  	};  	++count;  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (csv.Read ()) {  	var row = csv.CurrentRow;  	string popStr = row [4].Value;  	int? popInt = !string.IsNullOrEmpty (popStr) ? int.Parse (popStr' CultureInfo.InvariantCulture) : (int?)null;  	Record r = new Record {  		Country = row [0].Value'  		City = row [1].Value'  		AccentCity = row [2].Value'  		Region = row [3].Value'  		Population = popInt'  		Latitude = double.Parse (row [5].Value' CultureInfo.InvariantCulture)'  		Longitude = double.Parse (row [6].Value' CultureInfo.InvariantCulture)  	};  	++count;  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (true) {  	sw.Restart ();  	for (int i = 0; i < runCount; ++i) {  		func ();  	}  	long curTicks = sw.ElapsedTicks;  	if (curTicks < bestTicks) {  		bestTicks = curTicks;  		goodLoops = 0;  		Console.Write ("+");  	}  	else if (++goodLoops == 5) {  		break;  	}  	else {  		Console.Write (".");  	}  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: if (curTicks < bestTicks) {  	bestTicks = curTicks;  	goodLoops = 0;  	Console.Write ("+");  }  else if (++goodLoops == 5) {  	break;  }  else {  	Console.Write (".");  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: if (++goodLoops == 5) {  	break;  }  else {  	Console.Write (".");  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: while (true) {  	sw.Restart ();  	for (int i = 0; i < runCount; ++i) {  		await func ().ConfigureAwait (false);  	}  	long curTicks = sw.ElapsedTicks;  	if (curTicks < bestTicks) {  		bestTicks = curTicks;  		goodLoops = 0;  		Console.Write ("+");  	}  	else if (++goodLoops == 5) {  		break;  	}  	else {  		Console.Write (".");  	}  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: if (curTicks < bestTicks) {  	bestTicks = curTicks;  	goodLoops = 0;  	Console.Write ("+");  }  else if (++goodLoops == 5) {  	break;  }  else {  	Console.Write (".");  }  
Magic Number,CsvBenchmark,Program,C:\repos\ctl-global_ctl-data\CsvBenchmark\Program.cs,Benchmark,The following statement contains a magic number: if (++goodLoops == 5) {  	break;  }  else {  	Console.Write (".");  }  
