Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Chronic.Tests,DateTimeTestingExtensions,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Utils\DateTimeTestingExtensions.cs,AssertIsEqual,The method has 5 parameters. Parameters: actual' year' month' day' time
Long Statement,Chronic.Tests.Handlers,RepeatPatternTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\RepeatPatternTests.cs,infinite_repeat_pattern_matches_multiple_pattern_occurrence,The length of the statement  "            var isMatch = RepeatPatternMatchesPhrase("3 years 7 weeks 9 days 13 hours 34 minutes 12 seconds ago"' RepeatPattern.Inifinite); " is 127.
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("may 28 at 5:32:19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now,The following statement contains a magic number: Parse(" 7 days from now")                  .AssertEquals(Time.New(2006' 8' 23' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now,The following statement contains a magic number: Parse(" 7 days from now")                  .AssertEquals(Time.New(2006' 8' 23' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now,The following statement contains a magic number: Parse(" 7 days from now")                  .AssertEquals(Time.New(2006' 8' 23' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now,The following statement contains a magic number: Parse(" 7 days from now")                  .AssertEquals(Time.New(2006' 8' 23' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now_at_midnight,The following statement contains a magic number: Parse(" 7 days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now_at_midnight,The following statement contains a magic number: Parse(" 7 days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_7_days_from_now_at_midnight,The following statement contains a magic number: Parse(" 7 days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,seven_days_from_now_at_midnight,The following statement contains a magic number: Parse(" seven days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,seven_days_from_now_at_midnight,The following statement contains a magic number: Parse(" seven days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,seven_days_from_now_at_midnight,The following statement contains a magic number: Parse(" seven days from now at midnight")                  .AssertEquals(Time.New(2006' 8' 24));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_2_weeks_ago,The following statement contains a magic number: Parse("2 weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_2_weeks_ago,The following statement contains a magic number: Parse("2 weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_2_weeks_ago,The following statement contains a magic number: Parse("2 weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,_2_weeks_ago,The following statement contains a magic number: Parse("2 weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,two_weeks_ago,The following statement contains a magic number: Parse("two weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,two_weeks_ago,The following statement contains a magic number: Parse("two weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,two_weeks_ago,The following statement contains a magic number: Parse("two weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CustomParsingTest,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,two_weeks_ago,The following statement contains a magic number: Parse("two weeks ago")                  .AssertEquals(Time.New(2006' 8' 02' 14));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 34' 13);
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,CanExtractTimeSpanFromSpan,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\CustomParsingTest.cs,may_28_at_5_32_19pm,The following statement contains a magic number: Parse("7 days and two hours ago"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 8' 09' 12' 34' 13));
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,NumerizerTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\NumerizerTests.cs,non_ordinal_numbers_are_parsed_correctly,The following statement contains a magic number: new object[']                  {                      {"one"' 1}'                      {"five"' 5}'                      {"ten"' 10}'                      {"eleven"' 11}'                      {"twelve"' 12}'                      {"thirteen"' 13}'                      {"fourteen"' 14}'                      {"fifteen"' 15}'                      {"sixteen"' 16}'                      {"seventeen"' 17}'                      {"eighteen"' 18}'                      {"nineteen"' 19}'                      {"twenty"' 20}'                      {"twenty seven"' 27}'                      {"thirty-one"' 31}'                      {"thirty-seven"' 37}'                      {"thirty seven"' 37}'                      {"fifty nine"' 59}'                      {"forty two"' 42}'                      {"fourty two"' 42}'                      // { "a hundred"' 100 }'                     {"one hundred"' 100}'                      {"one hundred and fifty"' 150}'                      // { "one fifty"' 150 }'                     {"two-hundred"' 200}'                      {"5 hundred"' 500}'                      {"nine hundred and ninety nine"' 999}'                      {"one thousand"' 1000}'                      {"twelve hundred"' 1200}'                      {"one thousand two hundred"' 1200}'                      {"seventeen thousand"' 17000}'                      {"twentyone-thousand-four-hundred-and-seventy-three"' 21473}                      '                      {"seventy four thousand and two"' 74002}'                      {"ninety nine thousand nine hundred ninety nine"' 99999}'                      {"100 thousand"' 100000}'                      {"two hundred fifty thousand"' 250000}'                      {"one million"' 1000000}'                      {                          "one million two hundred fifty thousand and seven"'                          1250007                      }'                      {"one billion"' 1000000000}'                      {"one billion and one"' 1000000001}                  }.ForEach<string' int>((phrase' expectedResult) =>                      {                          var numerizedString = Numerize(expectedResult' phrase);                          var number = ConvertToNumber(expectedResult' numerizedString' phrase);                          Assert.Equal(expectedResult' number);                                          });
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0)'                  Time.New(2006' 8' 17' 0));
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: Assert.Equal(60 * 60 * 24' span.Width);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: Assert.Equal(60 * 60 * 24' span.Width);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,Width_returns_correct_value,The following statement contains a magic number: Assert.Equal(60 * 60 * 24' span.Width);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 1)'                  Time.New(2006' 8' 17' 0' 0' 2))                  .Add(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: Assert.Equal(2' span.Start.Value.Second);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,addition_to_span_updates_start_and_end,The following statement contains a magic number: Assert.Equal(3' span.End.Value.Second);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: var span = new Span(                  Time.New(2006' 8' 16' 0' 0' 3)'                  Time.New(2006' 8' 17' 0' 0' 4))                  .Subtract(1);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: Assert.Equal(2' span.Start.Value.Second);
Magic Number,Chronic.Tests,SpanTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\SpanTests.cs,subtraction_to_span_updates_start_and_end,The following statement contains a magic number: Assert.Equal(3' span.End.Value.Second);
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_empty_for_empty_string,The following statement contains a magic number: Assert.Equal(""' "".LastCharacters(10));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_empty_for_empty_string,The following statement contains a magic number: Assert.Equal(""' "".LastCharacters(100));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_only_has_a_single_character,The following statement contains a magic number: Assert.Equal("a"' "a".LastCharacters(10));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_only_has_a_single_character,The following statement contains a magic number: Assert.Equal("a"' "a".LastCharacters(100));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_shorter_than_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("a"' "a".LastCharacters(2));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_shorter_than_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("abcd"' "abcd".LastCharacters(5));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_shorter_than_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("abcd"' "abcd".LastCharacters(6));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_shorter_than_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("abcd"' "abcd".LastCharacters(10));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_equal_to_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("abcd"' "abcd".LastCharacters(4));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_input_when_it_is_equal_to_requested_number_of_trailing_characters,The following statement contains a magic number: Assert.Equal("abcd "' "abcd ".LastCharacters(5));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_requested_number_of_trailing_characters_when_input_is_longer_than_requested_number,The following statement contains a magic number: Assert.Equal("cd"' "abcd".LastCharacters(2));
Magic Number,Chronic.Tests,LastCharactersTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\LastCharactersTests.cs,returns_requested_number_of_trailing_characters_when_input_is_longer_than_requested_number,The following statement contains a magic number: Assert.Equal("fghij"' "abcd efghij".LastCharacters(5));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month,The following statement contains a magic number: Parse("last day of next month")                  .AssertStartsAt(Time.New(2006' 9' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month,The following statement contains a magic number: Parse("last day of next month")                  .AssertStartsAt(Time.New(2006' 9' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month,The following statement contains a magic number: Parse("last day of next month")                  .AssertStartsAt(Time.New(2006' 9' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_leap_year,The following statement contains a magic number: When                  .ItIs("1996-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1996' 2' 29));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_leap_year,The following statement contains a magic number: When                  .ItIs("1996-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1996' 2' 29));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_leap_year,The following statement contains a magic number: When                  .ItIs("1996-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1996' 2' 29));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_non_leap_year,The following statement contains a magic number: When                  .ItIs("1997-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1997' 2' 28));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_non_leap_year,The following statement contains a magic number: When                  .ItIs("1997-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1997' 2' 28));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_month_when_next_month_is_February_in_non_leap_year,The following statement contains a magic number: When                  .ItIs("1997-01-20")                  .Parsing("last day of next month")                  .ReturnsSpan()                  .StartingAt(Time.New(1997' 2' 28));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-01 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-01 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-01 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-30 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-30 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-30 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_middle_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-15 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_middle_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-15 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month_when_it_is_middle_of_month,The following statement contains a magic number: When                  .ItIs("2014-06-15 23:35:00")                  .Parsing("last day of this month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month,The following statement contains a magic number: Parse("last day of this month")                  .AssertStartsAt(Time.New(2006' 8' 31));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month,The following statement contains a magic number: Parse("last day of this month")                  .AssertStartsAt(Time.New(2006' 8' 31));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_month,The following statement contains a magic number: Parse("last day of this month")                  .AssertStartsAt(Time.New(2006' 8' 31));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-01 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      FirstDayOfWeek = DayOfWeek.Sunday'                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-01 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      FirstDayOfWeek = DayOfWeek.Sunday'                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_first_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-01 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      FirstDayOfWeek = DayOfWeek.Sunday'                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-31 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-31 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_last_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-31 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_middle_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-15 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_middle_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-15 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_last_month_when_it_is_middle_day_of_month,The following statement contains a magic number: When                  .ItIs("2014-07-15 23:35:00")                  .Parsing("last day of last month")                  .WithOptions(new                  {                      Context = pointer                  })                  .ReturnsSpan()                  .StartingAt(Time.New(2014' 06' 30));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 27));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 27));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 27));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 26));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 26));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_next_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of next week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 26));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 19));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 19));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 19));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 20));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 20));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,last_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("last day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 20));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 14));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 14));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Monday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Monday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 14));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 13));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 13));
Magic Number,Chronic.Tests.Handlers,GRGRHandler_correctly_parses,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\GRGRHandler_correctly_parses.cs,first_day_of_this_week_when_week_starts_on_Sunday,The following statement contains a magic number: When                  .ItIs("2006-08-16 14:00:00")                  .Parsing("first day of this week")                  .WithOptions(new { FirstDayOfWeek = DayOfWeek.Sunday })                  .ReturnsSpan()                  .StartingAt(Time.New(2006' 8' 13));
Magic Number,Chronic.Tests.Handlers,RepeatPatternTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\RepeatPatternTests.cs,single_repeat_pattern_matches_multiple_pattern_occurrence_and_advances_to_next_token_after_match,The following statement contains a magic number: Assert.Equal(2' nextTokenIndex);
Magic Number,Chronic.Tests.Handlers,RepeatPatternTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\RepeatPatternTests.cs,two_time_repeat_pattern_matches_multiple_pattern_occurrence_and_advances_to_next_token_after_match,The following statement contains a magic number: var isMatch = RepeatPatternMatchesPhrase(                  "3 years 7 weeks 9 days 13 hours 34 minutes 12 seconds ago"'                  2'                  out nextTokenIndex);
Magic Number,Chronic.Tests.Handlers,RepeatPatternTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Handlers\RepeatPatternTests.cs,two_time_repeat_pattern_matches_multiple_pattern_occurrence_and_advances_to_next_token_after_match,The following statement contains a magic number: Assert.Equal(4' nextTokenIndex);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_punctuation,The following statement contains a magic number: Parse("3 years' 2 months' 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_punctuation,The following statement contains a magic number: Parse("3 years' 2 months' 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_punctuation,The following statement contains a magic number: Parse("3 years' 2 months' 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_punctuation,The following statement contains a magic number: Parse("3 years' 2 months' 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_no_conjunctions_and_punctuation,The following statement contains a magic number: Parse("3 years 2 months 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_no_conjunctions_and_punctuation,The following statement contains a magic number: Parse("3 years 2 months 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_no_conjunctions_and_punctuation,The following statement contains a magic number: Parse("3 years 2 months 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_2_months_3_days_ago_with_no_conjunctions_and_punctuation,The following statement contains a magic number: Parse("3 years 2 months 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days ago")                 .AssertEquals(Time.New(2003' 6' 13' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_1_week_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 1 week ago")                 .AssertEquals(Time.New(2003' 6' 9' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_1_week_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 1 week ago")                 .AssertEquals(Time.New(2003' 6' 9' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_1_week_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 1 week ago")                 .AssertEquals(Time.New(2003' 6' 9' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_1_week_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 1 week ago")                 .AssertEquals(Time.New(2003' 6' 9' 14));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunction,The following statement contains a magic number: Parse("3 years and 2 months and 3 days and 9 hours and 10 minutes and 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: _now = Time.New(2006' 8' 16' 14' 30' 20);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_3_years_and_2_months_and_3_days_and_9_hours_and_10_minutes_and_3_seconds_ago_with_conjunctions_mixed_with_commas_and_spaces,The following statement contains a magic number: Parse("3 years and 2 months' 3 days ' 9 hours 10 minutes 3 seconds ago")                 .AssertEquals(Time.New(2003' 6' 13' 05' 20' 17));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from,The following statement contains a magic number: _now = Time.New(2012' 01' 01' 00' 00' 00);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from,The following statement contains a magic number: Parse("7 weeks and 6 days from")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from,The following statement contains a magic number: Parse("7 weeks and 6 days from")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from,The following statement contains a magic number: Parse("7 weeks and 6 days from")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_today,The following statement contains a magic number: _now = Time.New(2012' 01' 01' 00' 00' 00);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_today,The following statement contains a magic number: Parse("7 weeks and 6 days from today")                 .AssertEquals(Time.New(2012' 02' 25' 12' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_today,The following statement contains a magic number: Parse("7 weeks and 6 days from today")                 .AssertEquals(Time.New(2012' 02' 25' 12' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_today,The following statement contains a magic number: Parse("7 weeks and 6 days from today")                 .AssertEquals(Time.New(2012' 02' 25' 12' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_today,The following statement contains a magic number: Parse("7 weeks and 6 days from today")                 .AssertEquals(Time.New(2012' 02' 25' 12' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_now,The following statement contains a magic number: _now = Time.New(2012' 01' 01' 00' 00' 00);
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_now,The following statement contains a magic number: Parse("7 weeks and 6 days from now")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_now,The following statement contains a magic number: Parse("7 weeks and 6 days from now")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,MultipleScalarRepeaterConjuctionsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\MultipleScalarRepeaterConjuctionsParsingTests.cs,_7_weeks_and_6_days_from_now,The following statement contains a magic number: Parse("7 weeks and 6 days from now")                 .AssertEquals(Time.New(2012' 02' 25' 00' 00' 00));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3")                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3")                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3")                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3")                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 3"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 8' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20"' new { Context = Pointer.Type.Future })                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20"' new { Context = Pointer.Type.Future })                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20"' new { Context = Pointer.Type.Future })                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("aug 20"' new { Context = Pointer.Type.Future })                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 27")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 27")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 27")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 27")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd,The following statement contains a magic number: Parse("may 28 at 5:32.19pm"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 28' 17' 32' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm on may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm on may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm on may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm on may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5pm may 28")                  .AssertEquals(Time.New(2007' 5' 28' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5 on may 28"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 28' 05));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5 on may 28"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 28' 05));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5 on may 28"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 28' 05));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_on,The following statement contains a magic number: Parse("5 on may 28"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 28' 05));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th")                  .AssertEquals(Time.New(2007' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th 5:00 pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th 5:00 pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th 5:00 pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th 5:00 pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5pm"' new { Context = Pointer.Type.Past })                      .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od,The following statement contains a magic number: Parse("may 27th at 5"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("22nd February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("22nd February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("22nd February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("22nd February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("31st of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("31st of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("31st of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("31st of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("31st of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("11th december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("11th december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("11th december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn,The following statement contains a magic number: Parse("11th december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_rmn_od,The following statement contains a magic number: Parse("2009 May 22nd")                  .AssertEquals(Time.New(2009' 05' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_rmn_od,The following statement contains a magic number: Parse("2009 May 22nd")                  .AssertEquals(Time.New(2009' 05' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_rmn_od,The following statement contains a magic number: Parse("2009 May 22nd")                  .AssertEquals(Time.New(2009' 05' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_rmn_od,The following statement contains a magic number: Parse("2009 May 22nd")                  .AssertEquals(Time.New(2009' 05' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("22 February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("22 February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("22 February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("22 February")                  .AssertEquals(Time.New(2007' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("31 of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("31 of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("31 of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("31 of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("31 of may at 6:30pm")                  .AssertEquals(Time.New(2007' 5' 31' 18' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("11 december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("11 december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("11 december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn,The following statement contains a magic number: Parse("11 december 8am")                  .AssertEquals(Time.New(2006' 12' 11' 8));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("05:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("05:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("05:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("05:00 pm may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5pm on may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5pm on may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5pm on may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5pm on may 27th"' new { Context = Pointer.Type.Past })                  .AssertEquals(Time.New(2006' 5' 27' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5 on may 27th"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5 on may 27th"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5 on may 27th"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_on,The following statement contains a magic number: Parse("5 on may 27th"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2007' 5' 27' 5));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 97")                  .AssertEquals(Time.New(1997' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 97")                  .AssertEquals(Time.New(1997' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 97")                  .AssertEquals(Time.New(1997' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 97")                  .AssertEquals(Time.New(1997' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 33"' new { AmbiguousYearFutureBias = 10 })                  .AssertEquals(Time.New(2033' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 33"' new { AmbiguousYearFutureBias = 10 })                  .AssertEquals(Time.New(2033' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 33"' new { AmbiguousYearFutureBias = 10 })                  .AssertEquals(Time.New(2033' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 33"' new { AmbiguousYearFutureBias = 10 })                  .AssertEquals(Time.New(2033' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 33"' new { AmbiguousYearFutureBias = 10 })                  .AssertEquals(Time.New(2033' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 32")                  .AssertEquals(Time.New(2032' 5' 16' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 32")                  .AssertEquals(Time.New(2032' 5' 16' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 32")                  .AssertEquals(Time.New(2032' 5' 16' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sy,The following statement contains a magic number: Parse("may 32")                  .AssertEquals(Time.New(2032' 5' 16' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("November 18' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("November 18' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("November 18' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("November 18' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("Jan 1'2010")                  .AssertEquals(Time.New(2010' 1' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("Jan 1'2010")                  .AssertEquals(Time.New(2010' 1' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("February 14' 2004")                  .AssertEquals(Time.New(2004' 2' 14' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("February 14' 2004")                  .AssertEquals(Time.New(2004' 2' 14' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("February 14' 2004")                  .AssertEquals(Time.New(2004' 2' 14' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("February 14' 2004")                  .AssertEquals(Time.New(2004' 2' 14' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 midnight")                  .AssertEquals(Time.New(2010' 1' 4' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 midnight")                  .AssertEquals(Time.New(2010' 1' 4' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 at midnight")                  .AssertEquals(Time.New(2010' 1' 4' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 at midnight")                  .AssertEquals(Time.New(2010' 1' 4' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 at 4"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2010' 1' 3' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 at 4"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2010' 1' 3' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("jan 3 2010 at 4"' new { AmbiguousTimeRange = 0 })                  .AssertEquals(Time.New(2010' 1' 3' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27' 1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27' 1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27' 1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27' 1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 4:30")                  .AssertEquals(Time.New(1979' 5' 27' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 4:30")                  .AssertEquals(Time.New(1979' 5' 27' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 4:30")                  .AssertEquals(Time.New(1979' 5' 27' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 4:30")                  .AssertEquals(Time.New(1979' 5' 27' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 4:30")                  .AssertEquals(Time.New(1979' 5' 27' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 5' 27' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 5' 27' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 5' 27' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 5' 27' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 5' 27' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 32")                  .AssertEquals(Time.New(2032' 5' 27' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 32")                  .AssertEquals(Time.New(2032' 5' 27' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 32")                  .AssertEquals(Time.New(2032' 5' 27' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_sd_sy,The following statement contains a magic number: Parse("may 27 32")                  .AssertEquals(Time.New(2032' 5' 27' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("may 1st 01")                  .AssertEquals(Time.New(2001' 5' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("may 1st 01")                  .AssertEquals(Time.New(2001' 5' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("may 1st 01")                  .AssertEquals(Time.New(2001' 5' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th' 2010")                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at midnight")                  .AssertEquals(Time.New(2010' 11' 19' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4")                  .AssertEquals(Time.New(2010' 11' 18' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4")                  .AssertEquals(Time.New(2010' 11' 18' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4")                  .AssertEquals(Time.New(2010' 11' 18' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4")                  .AssertEquals(Time.New(2010' 11' 18' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(2010' 11' 18' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(2010' 11' 18' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(2010' 11' 18' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("November 18th 2010 at 4"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(2010' 11' 18' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th' 1979")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th' 1979")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th' 1979")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th' 1979")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79")                  .AssertEquals(Time.New(1979' 3' 30' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 4:30")                  .AssertEquals(Time.New(1979' 3' 30' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 4:30")                  .AssertEquals(Time.New(1979' 3' 30' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 4:30")                  .AssertEquals(Time.New(1979' 3' 30' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 4:30")                  .AssertEquals(Time.New(1979' 3' 30' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 4:30")                  .AssertEquals(Time.New(1979' 3' 30' 16' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 3' 30' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 3' 30' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 3' 30' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 3' 30' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,rmn_od_sy,The following statement contains a magic number: Parse("March 30th 79 at 4:30"' new { AmbiguousTimeRange = 0 }).                  AssertEquals(Time.New(1979' 3' 30' 4' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("22nd February 2012")                  .AssertEquals(Time.New(2012' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("22nd February 2012")                  .AssertEquals(Time.New(2012' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("22nd February 2012")                  .AssertEquals(Time.New(2012' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("22nd February 2012")                  .AssertEquals(Time.New(2012' 2' 22' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("11th december 79")                  .AssertEquals(Time.New(1979' 12' 11' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("11th december 79")                  .AssertEquals(Time.New(1979' 12' 11' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("11th december 79")                  .AssertEquals(Time.New(1979' 12' 11' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,od_rmn_sy,The following statement contains a magic number: Parse("11th december 79")                  .AssertEquals(Time.New(1979' 12' 11' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010")                  .AssertEquals(Time.New(2010' 1' 3' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010 4pm")                  .AssertEquals(Time.New(2010' 1' 3' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010 4pm")                  .AssertEquals(Time.New(2010' 1' 3' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("3 jan 2010 4pm")                  .AssertEquals(Time.New(2010' 1' 3' 16));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("27 Oct 2006 7:30pm")                  .AssertEquals(Time.New(2006' 10' 27' 19' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("27 Oct 2006 7:30pm")                  .AssertEquals(Time.New(2006' 10' 27' 19' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("27 Oct 2006 7:30pm")                  .AssertEquals(Time.New(2006' 10' 27' 19' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("27 Oct 2006 7:30pm")                  .AssertEquals(Time.New(2006' 10' 27' 19' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_rmn_sy,The following statement contains a magic number: Parse("27 Oct 2006 7:30pm")                  .AssertEquals(Time.New(2006' 10' 27' 19' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979 4am")                  .AssertEquals(Time.New(1979' 5' 27' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979 4am")                  .AssertEquals(Time.New(1979' 5' 27' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979 4am")                  .AssertEquals(Time.New(1979' 5' 27' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("5/27/1979 4am")                  .AssertEquals(Time.New(1979' 5' 27' 4));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11")                  .AssertEquals(Time.New(2011' 7' 12' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11")                  .AssertEquals(Time.New(2011' 7' 12' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11")                  .AssertEquals(Time.New(2011' 7' 12' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11")                  .AssertEquals(Time.New(2011' 7' 12' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11"' new { EndianPrecedence = EndianPrecedence.Little }).                  AssertEquals(Time.New(2011' 12' 7' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11"' new { EndianPrecedence = EndianPrecedence.Little }).                  AssertEquals(Time.New(2011' 12' 7' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11"' new { EndianPrecedence = EndianPrecedence.Little }).                  AssertEquals(Time.New(2011' 12' 7' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("7/12/11"' new { EndianPrecedence = EndianPrecedence.Little }).                  AssertEquals(Time.New(2011' 12' 7' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sd_sy,The following statement contains a magic number: Parse("9/19/2011 6:05:57 PM")                  .AssertEquals(Time.New(2011' 9' 19' 18' 05' 57));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979")                  .AssertEquals(Time.New(1979' 5' 27' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979 @ 0700")                  .AssertEquals(Time.New(1979' 5' 27' 7));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979 @ 0700")                  .AssertEquals(Time.New(1979' 5' 27' 7));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979 @ 0700")                  .AssertEquals(Time.New(1979' 5' 27' 7));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sd_sm_sy,The following statement contains a magic number: Parse("27/5/1979 @ 0700")                  .AssertEquals(Time.New(1979' 5' 27' 7));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2000-1-1")                  .AssertEquals(Time.New(2000' 1' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2000-1-1")                  .AssertEquals(Time.New(2000' 1' 1' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20")                  .AssertEquals(Time.New(2006' 8' 20' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 7pm")                  .AssertEquals(Time.New(2006' 8' 20' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 7pm")                  .AssertEquals(Time.New(2006' 8' 20' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 7pm")                  .AssertEquals(Time.New(2006' 8' 20' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 7pm")                  .AssertEquals(Time.New(2006' 8' 20' 19));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:00")                  .AssertEquals(Time.New(2006' 8' 20' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:00")                  .AssertEquals(Time.New(2006' 8' 20' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:00")                  .AssertEquals(Time.New(2006' 8' 20' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:00")                  .AssertEquals(Time.New(2006' 8' 20' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 03:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 3' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30:30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("2006-08-20 15:30.30")                  .AssertEquals(Time.New(2006' 8' 20' 15' 30' 30));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("1902-08-20")                  .AssertEquals(Time.New(1902' 8' 20' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("1902-08-20")                  .AssertEquals(Time.New(1902' 8' 20' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("1902-08-20")                  .AssertEquals(Time.New(1902' 8' 20' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sy_sm_sd,The following statement contains a magic number: Parse("1902-08-20")                  .AssertEquals(Time.New(1902' 8' 20' 12' 0' 0));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("05/06")                  .AssertEquals(Time.New(2006' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("05/06")                  .AssertEquals(Time.New(2006' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("05/06")                  .AssertEquals(Time.New(2006' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("05/06")                  .AssertEquals(Time.New(2006' 5' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("12/06")                  .AssertEquals(Time.New(2006' 12' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("12/06")                  .AssertEquals(Time.New(2006' 12' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("12/06")                  .AssertEquals(Time.New(2006' 12' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,sm_sy,The following statement contains a magic number: Parse("12/06")                  .AssertEquals(Time.New(2006' 12' 16' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_s_r,The following statement contains a magic number: Parse("3rd wednesday in november").                  AssertEquals(Time.New(2006' 11' 15' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_s_r,The following statement contains a magic number: Parse("3rd wednesday in november").                  AssertEquals(Time.New(2006' 11' 15' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_s_r,The following statement contains a magic number: Parse("3rd wednesday in november").                  AssertEquals(Time.New(2006' 11' 15' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_s_r,The following statement contains a magic number: Parse("3rd wednesday in november").                  AssertEquals(Time.New(2006' 11' 15' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd month next year")                  .AssertStartsAt(Time.New(2007' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd month next year")                  .AssertStartsAt(Time.New(2007' 3));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd month next year")                  .AssertStartsAt(Time.New(2007' 3' 1));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd month next year")                  .AssertStartsAt(Time.New(2007' 3' 1));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this september")                  .AssertEquals(Time.New(2006' 9' 21' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this september")                  .AssertEquals(Time.New(2006' 9' 21' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this september")                  .AssertEquals(Time.New(2006' 9' 21' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this september")                  .AssertEquals(Time.New(2006' 9' 21' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: var now = new DateTime(2010' 2' 1);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: var now = new DateTime(2010' 2' 1);
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this november"' new Options { Clock = () => now })                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this november"' new Options { Clock = () => now })                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this november"' new Options { Clock = () => now })                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("3rd thursday this november"' new Options { Clock = () => now })                  .AssertEquals(Time.New(2010' 11' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("4th day last week")                  .AssertEquals(Time.New(2006' 8' 9' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("4th day last week")                  .AssertEquals(Time.New(2006' 8' 9' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("4th day last week")                  .AssertEquals(Time.New(2006' 8' 9' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,o_r_g_r,The following statement contains a magic number: Parse("4th day last week")                  .AssertEquals(Time.New(2006' 8' 9' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago")                  .AssertEquals(Time.New(2003' 8' 16' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago")                  .AssertEquals(Time.New(2003' 8' 16' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago")                  .AssertEquals(Time.New(2003' 8' 16' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago")                  .AssertEquals(Time.New(2003' 8' 16' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago tomorrow")                  .AssertEquals(Time.New(2003' 8' 17' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago tomorrow")                  .AssertEquals(Time.New(2003' 8' 17' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago tomorrow")                  .AssertEquals(Time.New(2003' 8' 17' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago tomorrow")                  .AssertEquals(Time.New(2003' 8' 17' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 months ago saturday at 5:00 pm")                  .AssertEquals(Time.New(2006' 5' 19' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 months ago saturday at 5:00 pm")                  .AssertEquals(Time.New(2006' 5' 19' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 months ago saturday at 5:00 pm")                  .AssertEquals(Time.New(2006' 5' 19' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 months ago saturday at 5:00 pm")                  .AssertEquals(Time.New(2006' 5' 19' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("2 days from this second")                  .AssertEquals(Time.New(2006' 8' 18' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("2 days from this second")                  .AssertEquals(Time.New(2006' 8' 18' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("2 days from this second")                  .AssertEquals(Time.New(2006' 8' 18' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("2 days from this second")                  .AssertEquals(Time.New(2006' 8' 18' 14));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("7 hours before tomorrow at midnight")                  .AssertEquals(Time.New(2006' 8' 17' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("7 hours before tomorrow at midnight")                  .AssertEquals(Time.New(2006' 8' 17' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("7 hours before tomorrow at midnight")                  .AssertEquals(Time.New(2006' 8' 17' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("7 hours before tomorrow at midnight")                  .AssertEquals(Time.New(2006' 8' 17' 17));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago this friday")                  .AssertEquals(Time.New(2003' 8' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago this friday")                  .AssertEquals(Time.New(2003' 8' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago this friday")                  .AssertEquals(Time.New(2003' 8' 18' 12));
Magic Number,Chronic.Tests.Parsing,KnownPatternsParsingTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\KnownPatternsParsingTests.cs,s_r_p_a,The following statement contains a magic number: Parse("3 years ago this friday")                  .AssertEquals(Time.New(2003' 8' 18' 12));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,days_are_parsed_correctly,The following statement contains a magic number: Parse("7 days ago").AssertStartsAt(                  Time.New(2011' 10' 11' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,days_are_parsed_correctly,The following statement contains a magic number: Parse("7 days ago").AssertStartsAt(                  Time.New(2011' 10' 11' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,days_are_parsed_correctly,The following statement contains a magic number: Parse("7 days ago").AssertStartsAt(                  Time.New(2011' 10' 11' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,weeks_are_parsed_correctly,The following statement contains a magic number: Parse("3 weeks ago").AssertStartsAt(                  Time.New(2011' 09' 27' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,weeks_are_parsed_correctly,The following statement contains a magic number: Parse("3 weeks ago").AssertStartsAt(                  Time.New(2011' 09' 27' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,weeks_are_parsed_correctly,The following statement contains a magic number: Parse("3 weeks ago").AssertStartsAt(                  Time.New(2011' 09' 27' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,months_are_parsed_correctly,The following statement contains a magic number: Parse("7 months ago").AssertStartsAt(                  Time.New(2011' 03' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,months_are_parsed_correctly,The following statement contains a magic number: Parse("7 months ago").AssertStartsAt(                  Time.New(2011' 03' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,months_are_parsed_correctly,The following statement contains a magic number: Parse("7 months ago").AssertStartsAt(                  Time.New(2011' 03' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,years_are_parsed_correctly,The following statement contains a magic number: Parse("7 years ago").AssertStartsAt(                  Time.New(2004' 10' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,years_are_parsed_correctly,The following statement contains a magic number: Parse("7 years ago").AssertStartsAt(                  Time.New(2004' 10' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,ComplexExpressionsTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\ComplexExpressionsTests.cs,years_are_parsed_correctly,The following statement contains a magic number: Parse("7 years ago").AssertStartsAt(                  Time.New(2004' 10' 18' TimeOfDay));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,Now,The following statement contains a magic number: return new DateTime(2011' 10' 18' 15' 34' 44);
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,monday_is_parsed_correctly,The following statement contains a magic number: Parse("monday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 24));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,monday_is_parsed_correctly,The following statement contains a magic number: Parse("monday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 24));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,monday_is_parsed_correctly,The following statement contains a magic number: Parse("monday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 24));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,tuesday_is_parsed_correctly,The following statement contains a magic number: Parse("tuesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 25));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,tuesday_is_parsed_correctly,The following statement contains a magic number: Parse("tuesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 25));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,tuesday_is_parsed_correctly,The following statement contains a magic number: Parse("tuesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 25));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,wednesday_is_parsed_correctly,The following statement contains a magic number: Parse("wednesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 19));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,wednesday_is_parsed_correctly,The following statement contains a magic number: Parse("wednesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 19));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,wednesday_is_parsed_correctly,The following statement contains a magic number: Parse("wednesday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 19));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,thursday_is_parsed_correctly,The following statement contains a magic number: Parse("thursday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 20));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,thursday_is_parsed_correctly,The following statement contains a magic number: Parse("thursday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 20));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,thursday_is_parsed_correctly,The following statement contains a magic number: Parse("thursday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 20));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,friday_is_parsed_correctly,The following statement contains a magic number: Parse("friday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 21));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,friday_is_parsed_correctly,The following statement contains a magic number: Parse("friday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 21));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,friday_is_parsed_correctly,The following statement contains a magic number: Parse("friday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 21));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,saturday_is_parsed_correctly,The following statement contains a magic number: Parse("saturday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 22));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,saturday_is_parsed_correctly,The following statement contains a magic number: Parse("saturday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 22));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,saturday_is_parsed_correctly,The following statement contains a magic number: Parse("saturday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 22));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,sunday_is_parsed_correctly,The following statement contains a magic number: Parse("sunday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 23));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,sunday_is_parsed_correctly,The following statement contains a magic number: Parse("sunday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 23));
Magic Number,Chronic.Tests.Parsing,DaysOfWeekTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\DaysOfWeekTests.cs,sunday_is_parsed_correctly,The following statement contains a magic number: Parse("sunday").Start                  .AssertDatePartIsEqual(new DateTime(2011' 10' 23));
Magic Number,Chronic.Tests.Parsing,NowTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\NowTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,NowTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\NowTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,NowTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\NowTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,NowTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\NowTests.cs,Now,The following statement contains a magic number: return Time.New(2006' 8' 16' 14' 0' 0);
Magic Number,Chronic.Tests.Parsing,NowTests,C:\research\architectureSmells\repos\robertwilczynski_nChronic\src\Chronic.Tests\Parsing\NowTests.cs,repeated_parsing_yields_different_values,The following statement contains a magic number: Thread.Sleep(100);
