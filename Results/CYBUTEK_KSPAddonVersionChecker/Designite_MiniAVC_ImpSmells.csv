Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MiniAVC,AddonInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonInfo.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseByToken,Cyclomatic complexity of the method is 8
Complex Method,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseString,Cyclomatic complexity of the method is 13
Complex Method,MiniAVC,Serializer,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,SerializeString,Cyclomatic complexity of the method is 10
Complex Method,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,CompareTo,Cyclomatic complexity of the method is 11
Long Statement,MiniAVC,AddonLibrary,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonLibrary.cs,ProcessAddonPopulation,The length of the statement  "                foreach (var rootPath in AssemblyLoader.loadedAssemblies.Where(a => a.name == "MiniAVC").Select(a => Path.GetDirectoryName(a.path))) " is 132.
Long Statement,MiniAVC,AddonLibrary,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonLibrary.cs,ProcessAddonPopulation,The length of the statement  "                    threadAddons.AddRange(Directory.GetFiles(rootPath' "*.version"' SearchOption.AllDirectories).Select(p => new Addon(p' settings)).ToList()); " is 139.
Long Statement,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,DrawDownloadButton,The length of the statement  "            toolTipGui.Text = GUILayoutUtility.GetLastRect().Contains(Event.current.mousePosition) ? Addon.RemoteInfo.Download : String.Empty; " is 130.
Long Statement,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,DrawNotCompatible,The length of the statement  "            GUILayout.Label($"Unsupported by KSP v{VersioningBase.GetVersionString()}' please use v{Addon.LocalInfo.KspVersion}."' titleStyle' GUILayout.Width(400.0f)); " is 156.
Long Statement,MiniAVC,Logger,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Logger.cs,Flush,The length of the statement  "                        file.WriteLine(message.Length > 0 ? message.Length > 1 ? "[" + message[0] + "]: " + message[1] : message[0] : string.Empty); " is 124.
Long Statement,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,Update,The length of the statement  "            this.position.y = Screen.height - Input.mousePosition.y + (this.position.x < Input.mousePosition.x + 20.0f ? 20.0f : 0); " is 120.
Long Statement,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,ToString,The length of the statement  "            return this.Patch > 0 ? String.Format("{0}.{1}.{2}"' this.Major' this.Minor' this.Patch) : String.Format("{0}.{1}"' this.Major' this.Minor).Replace("-1"' "*"); " is 159.
Complex Conditional,MiniAVC,Serializer,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,SerializeOther,The conditional expression  "value is int                           || value is uint                           || value is long                           || value is sbyte                           || value is byte                           || value is short                           || value is ushort                           || value is ulong"  is complex.
Complex Conditional,MiniAVC,Starter,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Starter.cs,CreateIssueGui,The conditional expression  "!addon.HasError && (addon.IsUpdateAvailable || !addon.IsCompatible) && !addon.IsIgnored"  is complex.
Magic Number,MiniAVC,Addon,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Addon.cs,FetchRemoteInfo,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MiniAVC,GitHubInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonInfo.cs,FetchRemoteData,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,CentreWindow,The following statement contains a magic number: position.center = new Vector2(Screen.width * 0.5f' Screen.height * 0.5f);
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,CentreWindow,The following statement contains a magic number: position.center = new Vector2(Screen.width * 0.5f' Screen.height * 0.5f);
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,DrawNotCompatible,The following statement contains a magic number: GUILayout.Label($"Unsupported by KSP v{VersioningBase.GetVersionString()}' please use v{Addon.LocalInfo.KspVersion}."' titleStyle' GUILayout.Width(400.0f));
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,DrawUpdateAvailable,The following statement contains a magic number: GUILayout.Label("Installed: " + Addon.LocalInfo.Version' labelStyle' GUILayout.Width(150.0f));
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,DrawUpdateAvailable,The following statement contains a magic number: GUILayout.Label("Available: " + Addon.RemoteInfo.Version' labelStyle' GUILayout.Width(150.0f));
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,InitialiseStyles,The following statement contains a magic number: titleStyle = new GUIStyle(HighLogic.Skin.label)              {                  normal =                  {                      textColor = Color.white                  }'                  fontSize = 13'                  fontStyle = FontStyle.Bold'                  alignment = TextAnchor.MiddleCenter'                  stretchWidth = true              };
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,InitialiseStyles,The following statement contains a magic number: labelStyle = new GUIStyle(HighLogic.Skin.label)              {                  fontSize = 13'                  alignment = TextAnchor.MiddleCenter'                  stretchWidth = true              };
Magic Number,MiniAVC,IssueGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\IssueGui.cs,Window,The following statement contains a magic number: GUILayout.Button("IGNORE THIS UPDATE"' buttonStyle' GUILayout.Width(175f))
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,CentreWindow,The following statement contains a magic number: this.position.center = new Vector2(Screen.width * 0.5f' Screen.height * 0.5f);
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,CentreWindow,The following statement contains a magic number: this.position.center = new Vector2(Screen.width * 0.5f' Screen.height * 0.5f);
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,DrawAddonList,The following statement contains a magic number: GUILayout.Label("Allow these add-ons to check for updates?"' this.titleStyle' GUILayout.Width(300.0f));
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,DrawButtonYes,The following statement contains a magic number: !GUILayout.Button("YES"' this.buttonStyle' GUILayout.Width(200.0f))
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,InitialiseStyles,The following statement contains a magic number: this.titleStyle = new GUIStyle(HighLogic.Skin.label)              {                  normal =                  {                      textColor = Color.white                  }'                  fontSize = 13'                  fontStyle = FontStyle.Bold'                  alignment = TextAnchor.MiddleCenter'                  stretchWidth = true              };
Magic Number,MiniAVC,FirstRunGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\FirstRunGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle(HighLogic.Skin.label)              {                  fontSize = 13'                  alignment = TextAnchor.MiddleCenter'                  stretchWidth = true              };
Magic Number,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseString,The following statement contains a magic number: switch (c)                      {                          case '"':                              parsing = false;                              break;                          case '\\':                              if (this.json.Peek() == -1)                              {                                  parsing = false;                                  break;                              }                                c = this.NextChar;                              switch (c)                              {                                  case '"':                                  case '\\':                                  case '/':                                      s.Append(c);                                      break;                                  case 'b':                                      s.Append('\b');                                      break;                                  case 'f':                                      s.Append('\f');                                      break;                                  case 'n':                                      s.Append('\n');                                      break;                                  case 'r':                                      s.Append('\r');                                      break;                                  case 't':                                      s.Append('\t');                                      break;                                  case 'u':                                      var hex = new char[4];                                        for (var i = 0; i < 4; i++)                                      {                                          hex[i] = this.NextChar;                                      }                                        s.Append((char)Convert.ToInt32(new string(hex)' 16));                                      break;                              }                              break;                          default:                              s.Append(c);                              break;                      }
Magic Number,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseString,The following statement contains a magic number: switch (c)                      {                          case '"':                              parsing = false;                              break;                          case '\\':                              if (this.json.Peek() == -1)                              {                                  parsing = false;                                  break;                              }                                c = this.NextChar;                              switch (c)                              {                                  case '"':                                  case '\\':                                  case '/':                                      s.Append(c);                                      break;                                  case 'b':                                      s.Append('\b');                                      break;                                  case 'f':                                      s.Append('\f');                                      break;                                  case 'n':                                      s.Append('\n');                                      break;                                  case 'r':                                      s.Append('\r');                                      break;                                  case 't':                                      s.Append('\t');                                      break;                                  case 'u':                                      var hex = new char[4];                                        for (var i = 0; i < 4; i++)                                      {                                          hex[i] = this.NextChar;                                      }                                        s.Append((char)Convert.ToInt32(new string(hex)' 16));                                      break;                              }                              break;                          default:                              s.Append(c);                              break;                      }
Magic Number,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseString,The following statement contains a magic number: switch (c)                      {                          case '"':                              parsing = false;                              break;                          case '\\':                              if (this.json.Peek() == -1)                              {                                  parsing = false;                                  break;                              }                                c = this.NextChar;                              switch (c)                              {                                  case '"':                                  case '\\':                                  case '/':                                      s.Append(c);                                      break;                                  case 'b':                                      s.Append('\b');                                      break;                                  case 'f':                                      s.Append('\f');                                      break;                                  case 'n':                                      s.Append('\n');                                      break;                                  case 'r':                                      s.Append('\r');                                      break;                                  case 't':                                      s.Append('\t');                                      break;                                  case 'u':                                      var hex = new char[4];                                        for (var i = 0; i < 4; i++)                                      {                                          hex[i] = this.NextChar;                                      }                                        s.Append((char)Convert.ToInt32(new string(hex)' 16));                                      break;                              }                              break;                          default:                              s.Append(c);                              break;                      }
Magic Number,MiniAVC,Serializer,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,SerializeString,The following statement contains a magic number: switch (c)                      {                          case '"':                              this.builder.Append("\\\"");                              break;                          case '\\':                              this.builder.Append("\\\\");                              break;                          case '\b':                              this.builder.Append("\\b");                              break;                          case '\f':                              this.builder.Append("\\f");                              break;                          case '\n':                              this.builder.Append("\\n");                              break;                          case '\r':                              this.builder.Append("\\r");                              break;                          case '\t':                              this.builder.Append("\\t");                              break;                          default:                              var codepoint = Convert.ToInt32(c);                              if ((codepoint >= 32) && (codepoint <= 126))                              {                                  this.builder.Append(c);                              }                              else                              {                                  this.builder.Append("\\u");                                  this.builder.Append(codepoint.ToString("x4"));                              }                              break;                      }
Magic Number,MiniAVC,Serializer,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,SerializeString,The following statement contains a magic number: switch (c)                      {                          case '"':                              this.builder.Append("\\\"");                              break;                          case '\\':                              this.builder.Append("\\\\");                              break;                          case '\b':                              this.builder.Append("\\b");                              break;                          case '\f':                              this.builder.Append("\\f");                              break;                          case '\n':                              this.builder.Append("\\n");                              break;                          case '\r':                              this.builder.Append("\\r");                              break;                          case '\t':                              this.builder.Append("\\t");                              break;                          default:                              var codepoint = Convert.ToInt32(c);                              if ((codepoint >= 32) && (codepoint <= 126))                              {                                  this.builder.Append(c);                              }                              else                              {                                  this.builder.Append("\\u");                                  this.builder.Append(codepoint.ToString("x4"));                              }                              break;                      }
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,Update,The following statement contains a magic number: this.position.x = Mathf.Clamp(Input.mousePosition.x + 20.0f' 0' Screen.width - this.position.width);
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,Update,The following statement contains a magic number: this.position.y = Screen.height - Input.mousePosition.y + (this.position.x < Input.mousePosition.x + 20.0f ? 20.0f : 0);
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,Update,The following statement contains a magic number: this.position.y = Screen.height - Input.mousePosition.y + (this.position.x < Input.mousePosition.x + 20.0f ? 20.0f : 0);
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle              {                  padding = new RectOffset(4' 4' 2' 2)'                  normal =                  {                      textColor = Color.black'                      background = GetBackgroundTexture()                  }'                  fontSize = 11              };
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle              {                  padding = new RectOffset(4' 4' 2' 2)'                  normal =                  {                      textColor = Color.black'                      background = GetBackgroundTexture()                  }'                  fontSize = 11              };
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle              {                  padding = new RectOffset(4' 4' 2' 2)'                  normal =                  {                      textColor = Color.black'                      background = GetBackgroundTexture()                  }'                  fontSize = 11              };
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle              {                  padding = new RectOffset(4' 4' 2' 2)'                  normal =                  {                      textColor = Color.black'                      background = GetBackgroundTexture()                  }'                  fontSize = 11              };
Magic Number,MiniAVC,ToolTipGui,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\ToolTipGui.cs,InitialiseStyles,The following statement contains a magic number: this.labelStyle = new GUIStyle              {                  padding = new RectOffset(4' 4' 2' 2)'                  normal =                  {                      textColor = Color.black'                      background = GetBackgroundTexture()                  }'                  fontSize = 11              };
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,VersionInfo,The following statement contains a magic number: switch (sections.Length)              {                  case 1:                      this.SetVersion(Int64.Parse(sections[0]));                      return;                    case 2:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1]));                      return;                    case 3:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2]));                      return;                    case 4:                      this.SetVersion(Int64.Parse(sections[0])' Int64.Parse(sections[1])' Int64.Parse(sections[2])' Int64.Parse(sections[3]));                      return;                    default:                      this.SetVersion();                      return;              }
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Minor.GetHashCode();
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Patch.GetHashCode();
Magic Number,MiniAVC,VersionInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\VersionInfo.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ this.Build.GetHashCode();
Missing Default,MiniAVC,AddonInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonInfo.cs,ParseVersion,The following switch statement is missing a default case: switch (key.ToUpper())                  {                      case "MAJOR":                          version.Major = (long)data[key];                          break;                        case "MINOR":                          version.Minor = (long)data[key];                          break;                        case "PATCH":                          version.Patch = (long)data[key];                          break;                        case "BUILD":                          version.Build = (long)data[key];                          break;                  }
Missing Default,MiniAVC,AddonInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonInfo.cs,Parse,The following switch statement is missing a default case: switch (key.ToUpper())                  {                      case "NAME":                          Name = (string)data[key];                          break;                        case "URL":                          Url = FormatCompatibleUrl((string)data[key]);                          break;                        case "DOWNLOAD":                          Download = (string)data[key];                          break;                        case "GITHUB":                          GitHub = new GitHubInfo(data[key]' this);                          break;                        case "VERSION":                          Version = GetVersion(data[key]);                          break;                        case "KSP_VERSION":                          kspVersion = GetVersion(data[key]);                          break;                        case "KSP_VERSION_MIN":                          kspVersionMin = GetVersion(data[key]);                          break;                        case "KSP_VERSION_MAX":                          kspVersionMax = GetVersion(data[key]);                          break;                  }
Missing Default,MiniAVC,GitHubInfo,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\AddonInfo.cs,ParseJson,The following switch statement is missing a default case: switch (key)                      {                          case "USERNAME":                              Username = (string)data[key];                              break;                            case "REPOSITORY":                              Repository = (string)data[key];                              break;                            case "ALLOW_PRE_RELEASE":                              AllowPreRelease = (bool)data[key];                              break;                      }
Missing Default,MiniAVC,Parser,D:\research\architectureSmells\repos\CYBUTEK_KSPAddonVersionChecker\MiniAVC\Json.cs,ParseString,The following switch statement is missing a default case: switch (c)                              {                                  case '"':                                  case '\\':                                  case '/':                                      s.Append(c);                                      break;                                  case 'b':                                      s.Append('\b');                                      break;                                  case 'f':                                      s.Append('\f');                                      break;                                  case 'n':                                      s.Append('\n');                                      break;                                  case 'r':                                      s.Append('\r');                                      break;                                  case 't':                                      s.Append('\t');                                      break;                                  case 'u':                                      var hex = new char[4];                                        for (var i = 0; i < 4; i++)                                      {                                          hex[i] = this.NextChar;                                      }                                        s.Append((char)Convert.ToInt32(new string(hex)' 16));                                      break;                              }
