Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_KeyDown,Cyclomatic complexity of the method is 8
Complex Method,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,Cyclomatic complexity of the method is 8
Long Statement,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,CenterControlsOnPanel,The length of the statement  "	//            cs.Width = ((cs.Height) * cs.Controls.Count) + 5;   // Need to adjust this for cases where the user changes the margin settings " is 141.
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: for (int i = Controls.Count - 1; i >= 0; i--) {  	Control c = Controls [i];  	int cx = 0;  	int csx = 0;  	if (Orientation == Orientation.Horizontal) {  		cx = c.Size.Height + c.Margin.Vertical;  		csx = this.ClientSize.Height;  	}  	else {  		cx = c.Size.Width + c.Margin.Horizontal;  		csx = this.ClientSize.Width;  	}  	if (cx != csx) {  		int size = csx - cx;  		bool CanSize = false;  		if (Orientation == Orientation.Horizontal) {  			CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  		}  		else {  			CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  		}  		if (CanSize) {  			if (size > 0) {  				if (size < GetSmallestMargin (c.Margin)) {  					c.Size += new Size (size * 2' size * 2);  				}  			}  			else {  				c.Size -= new Size (size * -1 * 2' size * -1 * 2);  			}  		}  		else {  			ResizeControl (c' size - 1);  		}  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: for (int i = Controls.Count - 1; i >= 0; i--) {  	Control c = Controls [i];  	int cx = 0;  	int csx = 0;  	if (Orientation == Orientation.Horizontal) {  		cx = c.Size.Height + c.Margin.Vertical;  		csx = this.ClientSize.Height;  	}  	else {  		cx = c.Size.Width + c.Margin.Horizontal;  		csx = this.ClientSize.Width;  	}  	if (cx != csx) {  		int size = csx - cx;  		bool CanSize = false;  		if (Orientation == Orientation.Horizontal) {  			CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  		}  		else {  			CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  		}  		if (CanSize) {  			if (size > 0) {  				if (size < GetSmallestMargin (c.Margin)) {  					c.Size += new Size (size * 2' size * 2);  				}  			}  			else {  				c.Size -= new Size (size * -1 * 2' size * -1 * 2);  			}  		}  		else {  			ResizeControl (c' size - 1);  		}  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: for (int i = Controls.Count - 1; i >= 0; i--) {  	Control c = Controls [i];  	int cx = 0;  	int csx = 0;  	if (Orientation == Orientation.Horizontal) {  		cx = c.Size.Height + c.Margin.Vertical;  		csx = this.ClientSize.Height;  	}  	else {  		cx = c.Size.Width + c.Margin.Horizontal;  		csx = this.ClientSize.Width;  	}  	if (cx != csx) {  		int size = csx - cx;  		bool CanSize = false;  		if (Orientation == Orientation.Horizontal) {  			CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  		}  		else {  			CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  		}  		if (CanSize) {  			if (size > 0) {  				if (size < GetSmallestMargin (c.Margin)) {  					c.Size += new Size (size * 2' size * 2);  				}  			}  			else {  				c.Size -= new Size (size * -1 * 2' size * -1 * 2);  			}  		}  		else {  			ResizeControl (c' size - 1);  		}  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: for (int i = Controls.Count - 1; i >= 0; i--) {  	Control c = Controls [i];  	int cx = 0;  	int csx = 0;  	if (Orientation == Orientation.Horizontal) {  		cx = c.Size.Height + c.Margin.Vertical;  		csx = this.ClientSize.Height;  	}  	else {  		cx = c.Size.Width + c.Margin.Horizontal;  		csx = this.ClientSize.Width;  	}  	if (cx != csx) {  		int size = csx - cx;  		bool CanSize = false;  		if (Orientation == Orientation.Horizontal) {  			CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  		}  		else {  			CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  		}  		if (CanSize) {  			if (size > 0) {  				if (size < GetSmallestMargin (c.Margin)) {  					c.Size += new Size (size * 2' size * 2);  				}  			}  			else {  				c.Size -= new Size (size * -1 * 2' size * -1 * 2);  			}  		}  		else {  			ResizeControl (c' size - 1);  		}  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (cx != csx) {  	int size = csx - cx;  	bool CanSize = false;  	if (Orientation == Orientation.Horizontal) {  		CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  	}  	else {  		CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  	}  	if (CanSize) {  		if (size > 0) {  			if (size < GetSmallestMargin (c.Margin)) {  				c.Size += new Size (size * 2' size * 2);  			}  		}  		else {  			c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		}  	}  	else {  		ResizeControl (c' size - 1);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (cx != csx) {  	int size = csx - cx;  	bool CanSize = false;  	if (Orientation == Orientation.Horizontal) {  		CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  	}  	else {  		CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  	}  	if (CanSize) {  		if (size > 0) {  			if (size < GetSmallestMargin (c.Margin)) {  				c.Size += new Size (size * 2' size * 2);  			}  		}  		else {  			c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		}  	}  	else {  		ResizeControl (c' size - 1);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (cx != csx) {  	int size = csx - cx;  	bool CanSize = false;  	if (Orientation == Orientation.Horizontal) {  		CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  	}  	else {  		CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  	}  	if (CanSize) {  		if (size > 0) {  			if (size < GetSmallestMargin (c.Margin)) {  				c.Size += new Size (size * 2' size * 2);  			}  		}  		else {  			c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		}  	}  	else {  		ResizeControl (c' size - 1);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (cx != csx) {  	int size = csx - cx;  	bool CanSize = false;  	if (Orientation == Orientation.Horizontal) {  		CanSize = c.Size.Height + c.Margin.Vertical + size <= this.ClientSize.Height;  	}  	else {  		CanSize = c.Size.Width + c.Margin.Horizontal + size <= this.ClientSize.Width;  	}  	if (CanSize) {  		if (size > 0) {  			if (size < GetSmallestMargin (c.Margin)) {  				c.Size += new Size (size * 2' size * 2);  			}  		}  		else {  			c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		}  	}  	else {  		ResizeControl (c' size - 1);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size < GetSmallestMargin (c.Margin)) {  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size < GetSmallestMargin (c.Margin)) {  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size < GetSmallestMargin (c.Margin)) {  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size < GetSmallestMargin (c.Margin)) {  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size > 0) {  	if (size < GetSmallestMargin (c.Margin)) {  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size > 0) {  	if (size < GetSmallestMargin (c.Margin)) {  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size > 0) {  	if (size < GetSmallestMargin (c.Margin)) {  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size > 0) {  	if (size < GetSmallestMargin (c.Margin)) {  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size < GetSmallestMargin (c.Margin)) {  	c.Size += new Size (size * 2' size * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: if (size < GetSmallestMargin (c.Margin)) {  	c.Size += new Size (size * 2' size * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: c.Size += new Size (size * 2' size * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: c.Size += new Size (size * 2' size * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: c.Size -= new Size (size * -1 * 2' size * -1 * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_SizeChanged,The following statement contains a magic number: c.Size -= new Size (size * -1 * 2' size * -1 * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,AddControlsOnPanel,The following statement contains a magic number: if (cnt >= 3) {  	if (cs.Controls [cnt - 1].Right > cs.Width & cs.Controls [cnt - 2].Right <= cs.Width) {  		ControlSlider_SizeChanged (this' null);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,AddControlsOnPanel,The following statement contains a magic number: if (cnt >= 3) {  	if (cs.Controls [cnt - 1].Right > cs.Width & cs.Controls [cnt - 2].Right <= cs.Width) {  		ControlSlider_SizeChanged (this' null);  	}  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,AddControlsOnPanel,The following statement contains a magic number: if (cs.Controls [cnt - 1].Right > cs.Width & cs.Controls [cnt - 2].Right <= cs.Width) {  	ControlSlider_SizeChanged (this' null);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ChangeIndex,The following statement contains a magic number: if (this.SelectedIndex != index & 0 <= index & index < this.Controls.Count) {  	int w = SelectedItemEnlargedDifference;  	if (AnimateSlideSelection) {  		for (int i = 0; i <= w; i++) {  			ResizeControl (this.Controls [this.SelectedIndex]' -1);  			ResizeControl (this.Controls [index]' 1);  			System.Threading.Thread.Sleep (8);  			this.Invalidate ();  		}  	}  	else {  		ResizeControl (this.Controls [this.SelectedIndex]' w * -1);  		ResizeControl (this.Controls [index]' w);  	}  	//this.Controls[index].Select();  	_SelectedIndex = index;  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ChangeIndex,The following statement contains a magic number: if (AnimateSlideSelection) {  	for (int i = 0; i <= w; i++) {  		ResizeControl (this.Controls [this.SelectedIndex]' -1);  		ResizeControl (this.Controls [index]' 1);  		System.Threading.Thread.Sleep (8);  		this.Invalidate ();  	}  }  else {  	ResizeControl (this.Controls [this.SelectedIndex]' w * -1);  	ResizeControl (this.Controls [index]' w);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ChangeIndex,The following statement contains a magic number: for (int i = 0; i <= w; i++) {  	ResizeControl (this.Controls [this.SelectedIndex]' -1);  	ResizeControl (this.Controls [index]' 1);  	System.Threading.Thread.Sleep (8);  	this.Invalidate ();  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ChangeIndex,The following statement contains a magic number: System.Threading.Thread.Sleep (8);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size <= GetSmallestMargin (c.Margin)) {  			c.Margin -= new Padding (size);  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		c.Margin += new Padding (size * -1);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size <= GetSmallestMargin (c.Margin)) {  			c.Margin -= new Padding (size);  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		c.Margin += new Padding (size * -1);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size <= GetSmallestMargin (c.Margin)) {  			c.Margin -= new Padding (size);  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		c.Margin += new Padding (size * -1);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (CanSize) {  	if (size > 0) {  		if (size <= GetSmallestMargin (c.Margin)) {  			c.Margin -= new Padding (size);  			c.Size += new Size (size * 2' size * 2);  		}  	}  	else {  		c.Size -= new Size (size * -1 * 2' size * -1 * 2);  		c.Margin += new Padding (size * -1);  	}  }  else {  	ResizeControl (c' size - 1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size > 0) {  	if (size <= GetSmallestMargin (c.Margin)) {  		c.Margin -= new Padding (size);  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	c.Margin += new Padding (size * -1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size > 0) {  	if (size <= GetSmallestMargin (c.Margin)) {  		c.Margin -= new Padding (size);  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	c.Margin += new Padding (size * -1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size > 0) {  	if (size <= GetSmallestMargin (c.Margin)) {  		c.Margin -= new Padding (size);  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	c.Margin += new Padding (size * -1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size > 0) {  	if (size <= GetSmallestMargin (c.Margin)) {  		c.Margin -= new Padding (size);  		c.Size += new Size (size * 2' size * 2);  	}  }  else {  	c.Size -= new Size (size * -1 * 2' size * -1 * 2);  	c.Margin += new Padding (size * -1);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size <= GetSmallestMargin (c.Margin)) {  	c.Margin -= new Padding (size);  	c.Size += new Size (size * 2' size * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: if (size <= GetSmallestMargin (c.Margin)) {  	c.Margin -= new Padding (size);  	c.Size += new Size (size * 2' size * 2);  }  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: c.Size += new Size (size * 2' size * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: c.Size += new Size (size * 2' size * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: c.Size -= new Size (size * -1 * 2' size * -1 * 2);  
Magic Number,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ResizeControl,The following statement contains a magic number: c.Size -= new Size (size * -1 * 2' size * -1 * 2);  
Missing Default,CustomControls,ControlSlider,C:\repos\lytedev_LyricShow\CustomControls\Slider.cs,ControlSlider_KeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Left:  case Keys.Up:  	//this.Select(true' false);  	ChangeIndex (this.SelectedIndex - 1);  	break;  case Keys.Right:  case Keys.Down:  	//this.Select(true' false);  	ChangeIndex (this.SelectedIndex + 1);  	break;  }  
