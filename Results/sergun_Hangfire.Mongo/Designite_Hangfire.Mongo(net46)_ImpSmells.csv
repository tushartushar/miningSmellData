Implementation smell,Namespace,Class,File,Method,Description
Long Method,Hangfire.Mongo.Migration,MongoSchemaExtensions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoSchemaExtensions.cs,CollectionNames,The method has 115 lines of code.
Complex Method,Hangfire.Mongo.Migration,MongoSchemaExtensions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoSchemaExtensions.cs,CollectionNames,Cyclomatic complexity of the method is 10
Complex Method,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,Cyclomatic complexity of the method is 20
Long Parameter List,Hangfire.Mongo,IJobQueueSemaphore,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\JobQueueSemaphore.cs,WaitAny,The method has 5 parameters. Parameters: queues' cancellationToken' timeout' queue' timedOut
Long Parameter List,Hangfire.Mongo,JobQueueSemaphore,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\JobQueueSemaphore.cs,WaitAny,The method has 5 parameters. Parameters: queues' cancellationToken' timeout' queue' timedOut
Long Parameter List,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,MongoDistributedLock,The method has 5 parameters. Parameters: resource' timeout' dbContext' storageOptions' mutex
Long Parameter List,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,MongoDistributedLock,The method has 6 parameters. Parameters: resource' timeout' locks' notifications' storageOptions' mutex
Long Statement,Hangfire.Mongo,JobQueueSemaphore,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\JobQueueSemaphore.cs,WaitAny,The length of the statement  "            // https://docs.microsoft.com/en-us/dotnet/api/system.threading.semaphoreslim.availablewaithandle?view=netframework-4.7.2 " is 121.
Long Statement,Hangfire.Mongo,MongoConnection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoConnection.cs,AcquireDistributedLock,The length of the statement  "            return new MongoDistributedLock($"Hangfire:{resource}"' timeout' _dbContext' _storageOptions' DistributedLockMutex.Instance); " is 125.
Long Statement,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,GetFetchedJobIds,The length of the statement  "                    var job = _dbContext.JobGraph.OfType<JobDto>().Find(Builders<JobDto>.Filter.Eq(_ => _.Id' jobQueueJobId)).FirstOrDefault(); " is 123.
Long Statement,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,GetEnqueuedAndFetchedCount,The length of the statement  "            int enqueuedCount = (int)_dbContext.JobGraph.OfType<JobQueueDto>().Count(Builders<JobQueueDto>.Filter.Eq(_ => _.Queue' queue) & " is 127.
Long Statement,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,GetEnqueuedAndFetchedCount,The length of the statement  "            int fetchedCount = (int)_dbContext.JobGraph.OfType<JobQueueDto>().Count(Builders<JobQueueDto>.Filter.Eq(_ => _.Queue' queue) & " is 126.
Long Statement,Hangfire.Mongo,MongoNotificationObserver,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoNotificationObserver.cs,Execute,The length of the statement  "                                   "   - https://github.com/sergeyzwezdin/Hangfire.Mongo/blob/master/src/Hangfire.Mongo/Migration/Steps/Version17/00_AddNotificationsCollection.cs"; " is 145.
Long Statement,Hangfire.Mongo,MongoStorage,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorage.cs,ToString,The length of the statement  "            return $"Connection string: {CreateObscuredConnectionString()}' database name: {_databaseName}' prefix: {_storageOptions.Prefix}"; " is 130.
Long Statement,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,Acquire,The length of the statement  "                    var update = Builders<DistributedLockDto>.Update.SetOnInsert(_ => _.ExpireAt' DateTime.UtcNow.Add(_storageOptions.DistributedLockLifetime)); " is 140.
Long Statement,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,StartHeartBeat,The length of the statement  "                        var update = Builders<DistributedLockDto>.Update.Set(_ => _.ExpireAt' DateTime.UtcNow.Add(_storageOptions.DistributedLockLifetime)); " is 132.
Long Statement,Hangfire.Mongo.Migration,MigrationLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MigrationLock.cs,AcquireMigrationAccess,The length of the statement  "                    throw new InvalidOperationException($"Could not complete migration. Never acquired lock within allowed time: {_timeout}\r\n" + " is 126.
Long Statement,Hangfire.Mongo.Migration,MigrationLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MigrationLock.cs,AcquireMigrationAccess,The length of the statement  "                                                        $"If migration has been interrupted you need to manually delete '{_migrationLock.CollectionNamespace.CollectionName}' and start again."); " is 137.
Long Statement,Hangfire.Mongo.Migration,MongoMigrationManager,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoMigrationManager.cs,Migrate,The length of the statement  "                    $"{Environment.NewLine}{assemblyName.Name} version: {assemblyName.Version}' uses a schema prior to the current database." + " is 123.
Long Statement,Hangfire.Mongo.Migration,MongoMigrationManager,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoMigrationManager.cs,Migrate,The length of the statement  "                    $"{Environment.NewLine}Backwards migration is not supported. Please resolve this manually (e.g. by dropping the database)." + " is 125.
Long Statement,Hangfire.Mongo.Migration,MongoMigrationRunner,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoMigrationRunner.cs,Execute,The length of the statement  "                throw new InvalidOperationException($@"The {nameof(fromSchema)} ({fromSchema}) cannot be larger than {nameof(toSchema)} ({toSchema})"); " is 135.
Long Statement,Hangfire.Mongo.Migration,MongoMigrationRunner,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MongoMigrationRunner.cs,Execute,The length of the statement  "                    $"Instance with clientId: {_storageOptions.ClientId} is executed migration from {fromSchema} -> {toSchema} in {migrationSw.ElapsedMilliseconds}ms"); " is 148.
Long Statement,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,Backup,The length of the statement  "                    throw new ArgumentOutOfRangeException($@"Unknown backup strategy: {_storageOptions.MigrationOptions.BackupStrategy}"' $@"{nameof(MongoMigrationOptions)}.{nameof(MongoMigrationOptions.BackupStrategy)}"); " is 202.
Long Statement,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The length of the statement  "                throw new InvalidOperationException("Hangfire.Mongo is not able to backup collections in MongoDB running a version prior to 2.6"); " is 130.
Long Statement,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyNone,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyNone.cs,Execute,The length of the statement  "                $"{Environment.NewLine}{assemblyName.Name} version: {assemblyName.Version}' introduces a new schema version that requires migration." + " is 135.
Long Statement,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyNone,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyNone.cs,Execute,The length of the statement  "                $"{Environment.NewLine}You can choose a migration strategy by setting the {nameof(MongoStorageOptions)}.{nameof(MongoStorageOptions.MigrationOptions)} property." + " is 163.
Empty Catch Block,Hangfire.Mongo,MongoNotificationObserver,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoNotificationObserver.cs,Execute,The method has an empty catch block.
Magic Number,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,Queues,The following statement contains a magic number: var enqueuedJobIds = GetEnqueuedJobIds(queue' 0' 5);
Magic Number,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,GetTimelineStats,The following statement contains a magic number: var startDate = endDate.AddDays(-7);
Magic Number,Hangfire.Mongo,MongoMonitoringApi,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoMonitoringApi.cs,GetHourlyTimelineStats,The following statement contains a magic number: i < 24
Magic Number,Hangfire.Mongo,MongoNotificationObserver,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoNotificationObserver.cs,Execute,The following statement contains a magic number: var lastId = ObjectId.GenerateNewId(new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Hangfire.Mongo,MongoStorageOptions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorageOptions.cs,MongoStorageOptions,The following statement contains a magic number: QueuePollInterval = TimeSpan.FromSeconds(15);
Magic Number,Hangfire.Mongo,MongoStorageOptions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorageOptions.cs,MongoStorageOptions,The following statement contains a magic number: InvisibilityTimeout = TimeSpan.FromMinutes(30);
Magic Number,Hangfire.Mongo,MongoStorageOptions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorageOptions.cs,MongoStorageOptions,The following statement contains a magic number: DistributedLockLifetime = TimeSpan.FromSeconds(30);
Magic Number,Hangfire.Mongo,MongoStorageOptions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorageOptions.cs,MongoStorageOptions,The following statement contains a magic number: CountersAggregateInterval = TimeSpan.FromMinutes(5);
Magic Number,Hangfire.Mongo,MongoStorageOptions,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoStorageOptions.cs,MongoStorageOptions,The following statement contains a magic number: ConnectionCheckTimeout = TimeSpan.FromSeconds(5);
Magic Number,Hangfire.Mongo,MongoVersionHelper,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoVersionHelper.cs,GetVersion,The following statement contains a magic number: var build = int.Parse(new string(versionSplit[2].TakeWhile(Char.IsDigit).ToArray()));
Magic Number,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,CalculateTimeout,The following statement contains a magic number: return TimeSpan.FromMilliseconds((timeout.TotalMilliseconds / 1000) + 5);
Magic Number,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,CalculateTimeout,The following statement contains a magic number: return TimeSpan.FromMilliseconds((timeout.TotalMilliseconds / 1000) + 5);
Magic Number,Hangfire.Mongo.DistributedLock,MongoDistributedLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\DistributedLock\MongoDistributedLock.cs,StartHeartBeat,The following statement contains a magic number: TimeSpan timerInterval = TimeSpan.FromMilliseconds(_storageOptions.DistributedLockLifetime.TotalMilliseconds / 5);
Magic Number,Hangfire.Mongo.Migration,MigrationLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MigrationLock.cs,Wait,The following statement contains a magic number: var milliSecondsTimeout = new Random().Next(10' 50);
Magic Number,Hangfire.Mongo.Migration,MigrationLock,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\MigrationLock.cs,Wait,The following statement contains a magic number: var milliSecondsTimeout = new Random().Next(10' 50);
Magic Number,Hangfire.Mongo.Migration.Steps.Version09,CreateSignalCollection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Steps\Version09\00_CreateSignalCollection.cs,Execute,The following statement contains a magic number: var createOptions = new CreateCollectionOptions              {                  Capped = true'                  MaxSize = 1000000'                  MaxDocuments = 1000              };
Magic Number,Hangfire.Mongo.Migration.Steps.Version09,CreateSignalCollection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Steps\Version09\00_CreateSignalCollection.cs,Execute,The following statement contains a magic number: var createOptions = new CreateCollectionOptions              {                  Capped = true'                  MaxSize = 1000000'                  MaxDocuments = 1000              };
Magic Number,Hangfire.Mongo.Migration.Steps.Version17,AddNotificationsCollection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Steps\Version17\00_AddNotificationsCollection.cs,Execute,The following statement contains a magic number: database.CreateCollection(storageOptions.Prefix + ".notifications"' new CreateCollectionOptions              {                  Capped = true'                  MaxSize = 1048576*16' // 16 MB'                  MaxDocuments = 100000              });
Magic Number,Hangfire.Mongo.Migration.Steps.Version17,AddNotificationsCollection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Steps\Version17\00_AddNotificationsCollection.cs,Execute,The following statement contains a magic number: database.CreateCollection(storageOptions.Prefix + ".notifications"' new CreateCollectionOptions              {                  Capped = true'                  MaxSize = 1048576*16' // 16 MB'                  MaxDocuments = 100000              });
Magic Number,Hangfire.Mongo.Migration.Steps.Version17,AddNotificationsCollection,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Steps\Version17\00_AddNotificationsCollection.cs,Execute,The following statement contains a magic number: database.CreateCollection(storageOptions.Prefix + ".notifications"' new CreateCollectionOptions              {                  Capped = true'                  MaxSize = 1048576*16' // 16 MB'                  MaxDocuments = 100000              });
Magic Number,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The following statement contains a magic number: version < new Version(2' 6)
Magic Number,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The following statement contains a magic number: version < new Version(2' 6)
Magic Number,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The following statement contains a magic number: version >= new Version(3' 2)
Magic Number,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The following statement contains a magic number: version >= new Version(3' 2)
Missing Default,Hangfire.Mongo,MongoNotificationObserver,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\MongoNotificationObserver.cs,Execute,The following switch statement is missing a default case: switch (notification.Type)                              {                                  case NotificationType.JobEnqueued:                                      _jobQueueSemaphore.Release(notification.Value);                                      break;                                  case NotificationType.LockReleased:                                      _distributedLockMutex.Release(notification.Value);                                      break;                              }
Missing Default,Hangfire.Mongo.Migration.Strategies,MongoMigrationStrategyBase,D:\research\architectureSmells\repos1\sergun_Hangfire.Mongo\src\Hangfire.Mongo\Migration\Strategies\MongoMigrationStrategyBase.cs,BackupCollection,The following switch statement is missing a default case: switch (key)                          {                              case "v": newOptions.Version = index[key].AsInt32; break;                              case "name": newOptions.Name = index[key].AsString; break;                              case "unique": newOptions.Unique = index[key].AsBoolean; break;                              case "sparse": newOptions.Sparse = index[key].AsBoolean; break;                              case "expireAfterSeconds": newOptions.ExpireAfter = TimeSpan.FromSeconds(index[key].AsInt64); break;                              case "background": newOptions.Background = index[key].AsBoolean; break;                              case "textIndexVersion": newOptions.TextIndexVersion = index[key].AsInt32; break;                              case "default_language": newOptions.DefaultLanguage = index[key].AsString; break;                              case "language_override": newOptions.LanguageOverride = index[key].AsString; break;                              case "weights": newOptions.Weights = index[key].AsBsonDocument; break;                              case "min": newOptions.Min = index[key].AsDouble; break;                              case "max": newOptions.Max = index[key].AsDouble; break;                              case "bits": newOptions.Bits = index[key].AsInt32; break;                              case "2dsphereIndexVersion": newOptions.SphereIndexVersion = index[key].AsInt32; break;                              case "bucketSize": newOptions.BucketSize = index[key].AsDouble; break;                          }
