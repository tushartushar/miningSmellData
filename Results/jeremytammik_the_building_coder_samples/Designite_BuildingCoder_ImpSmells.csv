Implementation smell,Namespace,Class,File,Method,Description
Long Method,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The method has 106 lines of code.
Long Method,BuildingCoder,CmdColumnRound,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdColumnRound.cs,Execute,The method has 107 lines of code.
Long Method,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,The method has 235 lines of code.
Long Method,BuildingCoder,CmdDuctResize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuctResize.cs,DuctResize,The method has 108 lines of code.
Long Method,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The method has 106 lines of code.
Long Method,BuildingCoder,CmdExteriorWalls,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExteriorWalls.cs,GetOutermostWalls,The method has 115 lines of code.
Long Method,BuildingCoder,MepElementShapeV1,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,The method has 138 lines of code.
Long Method,BuildingCoder,MepElementShapeVersion2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,The method has 124 lines of code.
Long Method,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,The method has 150 lines of code.
Long Method,BuildingCoder,CmdMirrorListAdded,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMirror.cs,Execute,The method has 116 lines of code.
Long Method,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The method has 145 lines of code.
Long Method,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The method has 135 lines of code.
Long Method,BuildingCoder,CmdProjectParameterGuids,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdProjectParameterGuids.cs,Execute,The method has 205 lines of code.
Long Method,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The method has 409 lines of code.
Long Method,BuildingCoder,NestedFamilyFunctions,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedFamilies.cs,GetFilteredNestedFamilyInstances,The method has 111 lines of code.
Long Method,BuildingCoder,CmdNestedInstanceGeo,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedInstanceGeo.cs,Execute,The method has 102 lines of code.
Long Method,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute,The method has 106 lines of code.
Long Method,BuildingCoder,AssetPropertyPropertyDescriptor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetTypeAndValue,The method has 132 lines of code.
Long Method,BuildingCoder,CmdNewLineLoad,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLineLoad.cs,Execute,The method has 100 lines of code.
Long Method,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,FindTopMostReference,The method has 128 lines of code.
Long Method,BuildingCoder,CmdSheetSize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetSize.cs,Execute,The method has 102 lines of code.
Long Method,BuildingCoder,CmdSheetToModel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,QTO_2_PlaceHoldersFromDWFMarkups,The method has 109 lines of code.
Long Method,BuildingCoder,CmdMiroTest2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,Execute,The method has 109 lines of code.
Long Method,BuildingCoder,CmdSlabBoundaryArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundaryArea.cs,GetPlanarFaceOuterLoops,The method has 111 lines of code.
Long Method,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The method has 134 lines of code.
Long Method,BuildingCoder,CmdWallOpeningProfiles,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpeningProfiles.cs,Execute,The method has 113 lines of code.
Long Method,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,The method has 103 lines of code.
Long Method,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute3,The method has 101 lines of code.
Long Method,BuildingCoder,CmdWallTopFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallTopFaces.cs,Execute,The method has 164 lines of code.
Long Method,BuildingCoder,CmdCropToRoom,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCropToRoom.cs,Execute,The method has 108 lines of code.
Long Method,BuildingCoder,CmdCopyWallType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCopyWallType.cs,Execute,The method has 128 lines of code.
Complex Method,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,IsElementHiddenInView,Cyclomatic complexity of the method is 12
Complex Method,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,Cyclomatic complexity of the method is 11
Complex Method,BuildingCoder,CmdColumnRound,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdColumnRound.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetInstanceEdgeFromSymbolRef,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetSpecialFamilyReference,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,Cyclomatic complexity of the method is 11
Complex Method,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdDuctResize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuctResize.cs,DuctResize,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,CmdFamilyParamValue,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFamilyParamValue.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdFlowMismatch,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFlowMismatch.cs,FindMismatch,Cyclomatic complexity of the method is 12
Complex Method,BuildingCoder,CmdGetDimensionPoints,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetDimensionPoints.cs,GetDimensionStartPointFirstAttempt,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdIntersectJunctionBox,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdIntersectJunctionBox.cs,TestIntersect,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,FindIntersection,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdIntersectJunctionBox.cs,FindIntersection,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdLandXml,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLandXml.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdListMarks,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdListMarks.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,MepElementShapeV1,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,Cyclomatic complexity of the method is 16
Complex Method,BuildingCoder,MepElementShapeVersion2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,Cyclomatic complexity of the method is 27
Complex Method,BuildingCoder,MepElementShapeVersion2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,ExtractSystemFromConnectors,Cyclomatic complexity of the method is 10
Complex Method,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,Cyclomatic complexity of the method is 17
Complex Method,BuildingCoder,CmdProcessVisibleDwg,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdProcessVisibleDwg.cs,ProcessVisible,Cyclomatic complexity of the method is 11
Complex Method,BuildingCoder,CmdProjectParameterGuids,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdProjectParameterGuids.cs,AddProjectParameterBinding,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdProjectParameterGuids,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdProjectParameterGuids.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,BuildingCoder,NestedFamilyFunctions,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedFamilies.cs,GetFilteredNestedFamilyInstances,Cyclomatic complexity of the method is 11
Complex Method,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdGetMaterials,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetMaterials,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdGetMaterials,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetElementMaterialInfo,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,AssetPropertyPropertyDescriptor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetTypeAndValue,Cyclomatic complexity of the method is 20
Complex Method,BuildingCoder,CmdNewDuctSystem,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewDuctSystem.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,AnalyseDuct,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdRemoveDwfLinks,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRemoveDwfLinks.cs,RemoveDwfLinkUsingDelete,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch1,Cyclomatic complexity of the method is 10
Complex Method,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,Cyclomatic complexity of the method is 12
Complex Method,BuildingCoder,CmdSheetToModel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,QTO_2_PlaceHoldersFromDWFMarkups,Cyclomatic complexity of the method is 10
Complex Method,BuildingCoder,CmdMiroTest2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdSlabBoundaryArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundaryArea.cs,GetPlanarFaceOuterLoops,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,CmdTransformedCoords,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdTransformedCoords.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,BuildingCoder,CmdWallOpeningProfiles,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpeningProfiles.cs,GetWallOpeningPlanarFaces,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdWallOpeningProfiles,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpeningProfiles.cs,Execute,Cyclomatic complexity of the method is 11
Complex Method,BuildingCoder,CmdSlabBoundary,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundary.cs,GetBoundary,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,GetProfile,Cyclomatic complexity of the method is 9
Complex Method,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute3,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdWallTopFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallTopFaces.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,BuildingCoder,CmdCropToRoom,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCropToRoom.cs,SectionBox,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,CmdCropToRoom,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCropToRoom.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,CmdCopyWallType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCopyWallType.cs,Execute,Cyclomatic complexity of the method is 14
Complex Method,BuildingCoder,JtSelectorMulti<T>,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtSelectorMulti.cs,JtSelectorMulti,Cyclomatic complexity of the method is 8
Complex Method,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,Cyclomatic complexity of the method is 25
Long Parameter List,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateDimensionElement,The method has 5 parameters. Parameters: view' p1' r1' p2' r2
Long Parameter List,BuildingCoder,ElementData,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElements.cs,ElementData,The method has 7 parameters. Parameters: path' elementName' id' x' y' z' uniqueId
Long Parameter List,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateArc2dFromRadiusStartAndEndPoint,The method has 5 parameters. Parameters: ps' pe' radius' largeSagitta' clockwise
Long Parameter List,BuildingCoder,CompatibilityMethods,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,Create2,The method has 5 parameters. Parameters: definitions' doc' nome' tipo' visibilidade
Long Parameter List,BuildingCoder,CompatibilityMethods,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateWall2,The method has 8 parameters. Parameters: doc' curve' wallTypeId' levelId' height' offset' flip' structural
Long Identifier,BuildingCoder,CmdCategorySupportsTypeParameter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCategorySupportsTypeParameter.cs,,The length of the parameter _bicAllowsBoundParametersAsType is 31.
Long Identifier,BuildingCoder,CmdCategorySupportsTypeParameter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCategorySupportsTypeParameter.cs,,The length of the parameter _bicAllowsBoundParametersAsInstance is 35.
Long Identifier,BuildingCoder,CmdCategorySupportsTypeParameter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCategorySupportsTypeParameter.cs,,The length of the parameter _bicSupportsInstanceParameters is 30.
Long Identifier,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,GetBeamsIntersectingTwoColumns,The length of the parameter intersectingStructuralFramingElements is 37.
Long Identifier,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,,The length of the parameter _conceptual_mass_template_path is 30.
Long Identifier,BuildingCoder,RenderAppearanceDescriptor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetAssetProperties,The length of the parameter assetPropertyPropertyDescriptor is 31.
Long Identifier,BuildingCoder,CmdPlaceFamilyInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlaceFamilyInstance.cs,,The length of the parameter _place_one_single_instance_then_abort is 37.
Long Identifier,BuildingCoder,JtParamValuesForCats,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtParamValuesForCats.cs,GetParamValuesForCats,The length of the parameter map_cat_to_uid_to_param_values is 30.
Long Identifier,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,,The length of the parameter _map_parameter_type_to_unit_type is 32.
Long Identifier,BuildingCoder,SpellingErrorCorrector,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,,The length of the parameter _external_definition_creation_options_type is 42.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane bottom = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 0 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) ); // bottom. XY plane' Z = 0' normal pointing inside the cube. " is 169.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane top = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 100 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) ); // top. XY plane' Z = 100' normal pointing outside the cube. " is 168.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane front = Plane.CreateByOriginAndBasis( new XYZ( 100' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) ); // front side. ZY plane' X = 0' normal pointing inside the cube. " is 174.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane back = Plane.CreateByOriginAndBasis( new XYZ( 0' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) ); // back side. ZY plane' X = 0' normal pointing outside the cube. " is 171.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane left = Plane.CreateByOriginAndBasis( new XYZ( 50' 0' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) ); // left side. ZX plane' Y = 0' normal pointing inside the cube " is 169.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      Plane right = Plane.CreateByOriginAndBasis( new XYZ( 50' 100' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) ); // right side. ZX plane' Y = 100' normal pointing outside the cube " is 176.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      BRepBuilderEdgeGeometry edgeBottomFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 100' 0 ) ); " is 121.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      BRepBuilderEdgeGeometry edgeBottomRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 0' 100' 0 ) ); " is 121.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) ); " is 122.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) ); " is 122.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The length of the statement  "      BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) ); " is 124.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      Plane top1 = Plane.CreateByNormalAndOrigin( new XYZ( 0' 0' 1 )' new XYZ( 0' 0' 100 ) );  // normal points outside the cylinder " is 126.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      Plane bottom1 = Plane.CreateByNormalAndOrigin( new XYZ( 0' 0' 1 )' new XYZ( 0' 0' 0 ) ); // normal points inside the cylinder " is 125.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 0 )' new XYZ( 90' 0' 0 )' new XYZ( 50' 40' 0 ) ) ); " is 153.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 90' 0' 0 )' new XYZ( 10' 0' 0 )' new XYZ( 50' -40' 0 ) ) ); " is 153.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) ); " is 156.
Long Statement,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The length of the statement  "      BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) ); " is 156.
Long Statement,BuildingCoder,CmdCategorySupportsTypeParameter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCategorySupportsTypeParameter.cs,f,The length of the statement  "        if( BuiltInCategory.OST_MechanicalEquipment.Equals( (BuiltInCategory) BIC_AllowsBoundParametersAsType.OST_MechanicalEquipment ) ) " is 129.
Long Statement,BuildingCoder,ParamFilterTest,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Execute,The length of the statement  "      //Parameter parameter = wall.get_Parameter( "Unconnected Height" ); // 2014' causes warning CS0618: 'Autodesk.Revit.DB.Element.get_Parameter(string)' is obsolete: 'This property is obsolete in Revit 2015' as more than one parameter can have the same name on a given element. Use Element.Parameters to obtain a complete list of parameters on this Element' or Element.GetParameters(String) to get a list of all parameters by name' or Element.LookupParameter(String) to return the first available parameter with the given name.' " is 525.
Long Statement,BuildingCoder,ParamFilterTest,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Execute,The length of the statement  "      Parameter parameter = wall.get_Parameter( BuiltInParameter.WALL_USER_HEIGHT_PARAM ); // 2015' avoids warning' in language indepependent and more effective to look up " is 165.
Long Statement,BuildingCoder,CmdCoordsOfViewOnSheet,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCoordsOfViewOnSheet.cs,Execute,The length of the statement  "      //foreach( View v in currentSheet.Views ) // 2014 warning	'Autodesk.Revit.DB.ViewSheet.Views' is obsolete.  Use GetAllPlacedViews() instead. " is 140.
Long Statement,BuildingCoder,CmdDisallowJoin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDisallowJoin.cs,Execute,The length of the statement  "        // wall.Location = lc; // Property or indexer 'Autodesk.Revit.Element.Location' cannot be assigned to -- it is read only " is 120.
Long Statement,BuildingCoder,CmdLibraryPaths,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLibraryPaths.cs,Execute,The length of the statement  "      //string value = @"C:\Documents and Settings\All Users\Application Data\Autodesk\RAC 2010\Imperial Library\Detail Components"; // 2010 " is 134.
Long Statement,BuildingCoder,MepElementShapeV1,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,The length of the statement  "              else if( size.Split( '/' ).Length == 3 ) // but if in imperial units size is in fractional inches format it has to be replaced by another regular expression " is 156.
Long Statement,BuildingCoder,BrokenCommand,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDeleteUnusedRefPlanes.cs,Execute,The length of the statement  "          var filt3 = new ElementParameterFilter( new FilterElementIdRule( new ParameterValueProvider( new ElementId( BuiltInParameter.HOST_ID_PARAM ) )' new FilterNumericEquals()' id ) ); " is 178.
Long Statement,BuildingCoder,CmdGetMaterials,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,ShowMaterialInfo,The length of the statement  "                                       // "Carpet (1)";// "Prism - Glass - Textured";// "Parking Stripe"; // "Prism 1";// "Brick' Common" ;// "Acoustic Ceiling Tile 24 x 48";  // "Aluminum" " is 150.
Long Statement,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateArc2dFromRadiusStartAndEndPoint,The length of the statement  "      // https://forums.autodesk.com/t5/revit-api-forum/create-a-curve-when-only-the-start-point-end-point-amp-radius-is/m-p/7830079 " is 126.
Long Statement,BuildingCoder,JtPlaneExtensionMethods,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ProjectOnto,The length of the statement  "      //XYZ q = p + d * plane.Normal; // wrong according to Ruslan Hanza and Alexander Pekshev in their comments http://thebuildingcoder.typepad.com/blog/2014/09/planes-projections-and-picking-points.html#comment-3765750464 " is 217.
Complex Conditional,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,IsElementHiddenInView,The conditional expression  "elBox.Min.X > viewBox.Max.X            || elBox.Max.X < viewBox.Min.X            || elBox.Min.Y > viewBox.Max.Y            || elBox.Max.Y < viewBox.Min.Y"  is complex.
Complex Conditional,BuildingCoder,MepElementShapeVersion2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,The conditional expression  "PartType.Tee == partType                || PartType.Cross == partType                || PartType.Pants == partType                || PartType.Wye == partType"  is complex.
Complex Conditional,BuildingCoder,CmdNewSprinkler,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSprinkler.cs,GetLargestHorizontalFace,The conditional expression  "Util.IsVertical( normal )                  && ( bottomFace ? 0.0 > normal.Z : 0.0 < normal.Z )                  && ( null == largest_face || largest_face.Area < pf.Area )"  is complex.
Complex Conditional,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,The conditional expression  "beforeId != null               && afterId != null               && ml.HasTangentJoin( 0' beforeId )               && ml.HasTangentJoin( 1' afterId )"  is complex.
Empty Catch Block,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdInstallLocation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdInstallLocation.cs,Execute,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdListSharedParams,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdListSharedParams.cs,SharedParamGuid,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdDeleteUnusedRefPlanes_2014,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDeleteUnusedRefPlanes.cs,Execute,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdPickPoint3d,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPickPoint3d.cs,PickFaceSetWorkPlaneAndPickPoint,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdCreateSharedParams,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSharedParams.cs,SetInstanceParamVaryBetweenGroupsBehaviour,The method has an empty catch block.
Empty Catch Block,BuildingCoder,CmdSlabBoundaryArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundaryArea.cs,GetPlanarFaceOuterLoops,The method has an empty catch block.
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane bottom = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 0 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane bottom = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 0 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane top = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 100 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane top = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 100 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane top = Plane.CreateByOriginAndBasis( new XYZ( 50' 50' 100 )' new XYZ( 1' 0' 0 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane front = Plane.CreateByOriginAndBasis( new XYZ( 100' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane front = Plane.CreateByOriginAndBasis( new XYZ( 100' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane front = Plane.CreateByOriginAndBasis( new XYZ( 100' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane back = Plane.CreateByOriginAndBasis( new XYZ( 0' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane back = Plane.CreateByOriginAndBasis( new XYZ( 0' 50' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 0' 1' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane left = Plane.CreateByOriginAndBasis( new XYZ( 50' 0' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane left = Plane.CreateByOriginAndBasis( new XYZ( 50' 0' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane right = Plane.CreateByOriginAndBasis( new XYZ( 50' 100' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane right = Plane.CreateByOriginAndBasis( new XYZ( 50' 100' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: Plane right = Plane.CreateByOriginAndBasis( new XYZ( 50' 100' 50 )' new XYZ( 0' 0' 1 )' new XYZ( 1' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 0' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 0' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 0' 100' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 0 )' new XYZ( 0' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBottomLeft = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 0' 0 )' new XYZ( 100' 0' 0 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 100 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 100 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 100 )' new XYZ( 0' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 100 )' new XYZ( 0' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 100 )' new XYZ( 0' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopLeft = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 0' 100 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopLeft = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 0' 100 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeTopLeft = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 0' 100 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeFrontRight = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 100' 0 )' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeRightBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 0 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeRightBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 0 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeRightBack = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 100' 0 )' new XYZ( 0' 100' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeBackLeft = BRepBuilderEdgeGeometry.Create( new XYZ( 0' 0' 0 )' new XYZ( 0' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeLeftFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeLeftFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepSolid,The following statement contains a magic number: BRepBuilderEdgeGeometry edgeLeftFront = BRepBuilderEdgeGeometry.Create( new XYZ( 100' 0' 0 )' new XYZ( 100' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: Frame basis = new Frame( new XYZ( 50' 0' 0 )' new XYZ( 0' 1' 0 )' new XYZ( -1' 0' 0 )' new XYZ( 0' 0' 1 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: CylindricalSurface cylSurf = CylindricalSurface.Create( basis' 40 );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: Plane top1 = Plane.CreateByNormalAndOrigin( new XYZ( 0' 0' 1 )' new XYZ( 0' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 0 )' new XYZ( 90' 0' 0 )' new XYZ( 50' 40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 0 )' new XYZ( 90' 0' 0 )' new XYZ( 50' 40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 0 )' new XYZ( 90' 0' 0 )' new XYZ( 50' 40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 0 )' new XYZ( 90' 0' 0 )' new XYZ( 50' 40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 90' 0' 0 )' new XYZ( 10' 0' 0 )' new XYZ( 50' -40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 90' 0' 0 )' new XYZ( 10' 0' 0 )' new XYZ( 50' -40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 90' 0' 0 )' new XYZ( 10' 0' 0 )' new XYZ( 50' -40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeBottom = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 90' 0' 0 )' new XYZ( 10' 0' 0 )' new XYZ( 50' -40' 0 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry frontEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' 40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry backEdgeTop = BRepBuilderEdgeGeometry.Create( Arc.Create( new XYZ( 10' 0' 100 )' new XYZ( 90' 0' 100 )' new XYZ( 50' -40' 100 ) ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeFront = BRepBuilderEdgeGeometry.Create( new XYZ( 90' 0' 0 )' new XYZ( 90' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeFront = BRepBuilderEdgeGeometry.Create( new XYZ( 90' 0' 0 )' new XYZ( 90' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeFront = BRepBuilderEdgeGeometry.Create( new XYZ( 90' 0' 0 )' new XYZ( 90' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeBack = BRepBuilderEdgeGeometry.Create( new XYZ( 10' 0' 0 )' new XYZ( 10' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeBack = BRepBuilderEdgeGeometry.Create( new XYZ( 10' 0' 0 )' new XYZ( 10' 0' 100 ) );
Magic Number,BuildingCoder,CmdBrepBuilder,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdBrepBuilder.cs,CreateBrepVoid,The following statement contains a magic number: BRepBuilderEdgeGeometry linearEdgeBack = BRepBuilderEdgeGeometry.Create( new XYZ( 10' 0' 0 )' new XYZ( 10' 0' 100 ) );
Magic Number,BuildingCoder,ParamFilterTest,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Execute,The following statement contains a magic number: FilterRule fRule          = new FilterDoubleRule( pvp' fnrv' 20' 1E-6 );
Magic Number,BuildingCoder,ParamFilterTest,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Execute,The following statement contains a magic number: FilterRule fRule          = new FilterDoubleRule( pvp' fnrv' 20' 1E-6 );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f3,The following statement contains a magic number: List<ElementFilter> a          = new List<ElementFilter>( 3 );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f2,The following statement contains a magic number: Outline myOutLn = new Outline(          XYZ.Zero' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f2,The following statement contains a magic number: Outline myOutLn = new Outline(          XYZ.Zero' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f2,The following statement contains a magic number: Outline myOutLn = new Outline(          XYZ.Zero' new XYZ( 100' 100' 100 ) );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f4,The following statement contains a magic number: ElementId ruleValId = new ElementId( 99 );
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,f4,The following statement contains a magic number: double ruleValDb = 10;
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,RunBenchmark,The following statement contains a magic number: int maxLevel = 1000;
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,RunBenchmark,The following statement contains a magic number: int nRuns = 1000;
Magic Number,BuildingCoder,CmdCollectorPerformance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,RunBenchmark,The following statement contains a magic number: nRuns = 1000;
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: return mark2.Length < 4 ? 0 : -1;
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: mark1.Length < 4
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: mark2.Length < 4
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: string m12 = mark1[ 2 ].Remove( 0' 1 );
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: string m22 = mark2[ 2 ].Remove( 0' 1 );
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: Math.Round( d1 - d2' 4 ) != 0
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: double.TryParse( mark1[ 3 ]' out d1 );
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: double.TryParse( mark2[ 3 ]' out d2 );
Magic Number,BuildingCoder,ColumnMarkComparer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCollectorPerformance.cs,Compare,The following statement contains a magic number: Math.Round( d1 - d2' 4 ) != 0
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateGableWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateGableWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          XYZ.Zero'          new XYZ( 20' 0' 0 )'          new XYZ( 20' 0' 15 )'          new XYZ( 10' 0' 30 )'          new XYZ( 0' 0' 15 )        };
Magic Number,BuildingCoder,CmdCreateLineStyle,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateLineStyle.cs,CreateLineStyle,The following statement contains a magic number: newLineStyleCat.SetLineWeight( 8'            GraphicsStyleType.Projection );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: XYZ endPoint = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: XYZ endPoint = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: XYZ end1 = new XYZ( 10' 0' 0 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: XYZ pointOnCurve = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: XYZ pointOnCurve = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: gs.GraphicsStyleCategory.LineColor            = new Color( 250' 10' 10 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: gs.GraphicsStyleCategory.LineColor            = new Color( 250' 10' 10 );
Magic Number,BuildingCoder,CmdDetailCurves,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDetailCurves.cs,Execute,The following statement contains a magic number: gs.GraphicsStyleCategory.LineColor            = new Color( 250' 10' 10 );
Magic Number,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetInstanceEdgeFromSymbolRef,The following statement contains a magic number: string stableRefInst = tokenList[3] + ":"          + tokenList[4] + ":" + tokenList[5];
Magic Number,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetInstanceEdgeFromSymbolRef,The following statement contains a magic number: string stableRefInst = tokenList[3] + ":"          + tokenList[4] + ":" + tokenList[5];
Magic Number,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetInstanceEdgeFromSymbolRef,The following statement contains a magic number: string stableRefInst = tokenList[3] + ":"          + tokenList[4] + ":" + tokenList[5];
Magic Number,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetSpecialFamilyReference,The following statement contains a magic number: String customStableRef = refTokens[0] + ":"                + refTokens[1] + ":" + refTokens[2] + ":"                + refTokens[3] + ":" + idx.ToString();
Magic Number,BuildingCoder,ScottWilsonVoodooMagic,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,GetSpecialFamilyReference,The following statement contains a magic number: String customStableRef = refTokens[0] + ":"                + refTokens[1] + ":" + refTokens[2] + ":"                + refTokens[3] + ":" + idx.ToString();
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,Execute,The following statement contains a magic number: WriteDimensionReferences( 161908 );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,Execute,The following statement contains a magic number: WriteElementGeometry( 161900 );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: const double xReferenceLocation = 30;
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: Line vLine = Line.CreateBound( new XYZ( xReferenceLocation' 0' 0 )' new XYZ( xReferenceLocation' 20' 0 ) );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: const double yReferenceLocation = -10;
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: Line hLine = Line.CreateBound( new XYZ( 0' yReferenceLocation' 0 )' new XYZ( 20' yReferenceLocation' 0 ) );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: XYZ dimensionLineStart = new XYZ( lineStartPoint.X + 5' lineStartPoint.Y' 0 );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: XYZ dimensionLineEnd = new XYZ( dimensionLineStart.X' dimensionLineStart.Y + 10' 0 );
Magic Number,BuildingCoder,Command,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,WriteElementGeometry,The following statement contains a magic number: Math.Abs( direction.Y ) < 0.0001
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point3 = new XYZ( 417.8' 80.228' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point3 = new XYZ( 417.8' 80.228' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point3 = new XYZ( 417.8' 80.228' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point4 = new XYZ( 417.8' 80.811' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point4 = new XYZ( 417.8' 80.811' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ point4 = new XYZ( 417.8' 80.811' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint1 = new XYZ( 417.8' 80.118' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint1 = new XYZ( 417.8' 80.118' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint1 = new XYZ( 417.8' 80.118' 46.8 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint2 = new XYZ( 417.8' 80.118' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint2 = new XYZ( 417.8' 80.118' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,CreateVerticalDimensioning,The following statement contains a magic number: XYZ dimPoint2 = new XYZ( 417.8' 80.118' 46.3 );
Magic Number,BuildingCoder,CmdDimensionInstanceOrigin,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionInstanceOrigin.cs,DimensionBetweenDetaiLines,The following statement contains a magic number: double d = 20;
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,The following statement contains a magic number: Wall[] walls = new Wall[2];
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,The following statement contains a magic number: List<int> ids = new List<int>( 2 );
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[2];
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,Execute,The following statement contains a magic number: Line[] lines = new Line[2];
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,TestGetCeilingReferenceAbove,The following statement contains a magic number: View3D view = doc.GetElement( new ElementId( 147335 ) ) as View3D;
Magic Number,BuildingCoder,CmdDimensionWallsFindRefs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsFindRefs.cs,TestGetCeilingReferenceAbove,The following statement contains a magic number: Space space = doc.GetElement( new ElementId( 151759 ) ) as Space;
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: XYZ pt1 = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: XYZ pt1 = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: XYZ pt2 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: XYZ pt2 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt1 = new XYZ( 10' 5' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt1 = new XYZ( 10' 5' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt2 = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt2 = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt1 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt1 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt2 = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateLinearDimension,The following statement contains a magic number: pt2 = new XYZ( 10' 10' 0 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,The following statement contains a magic number: List<Wall> walls = new List<Wall>( 2 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,The following statement contains a magic number: 2 != walls.Count
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,The following statement contains a magic number: List<Line> lines = new List<Line>( 2 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,The following statement contains a magic number: List<XYZ> midpoints = new List<XYZ>( 2 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,Execute,The following statement contains a magic number: List<Face> faces = new List<Face>( 2 );
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateDimensions,The following statement contains a magic number: edges.Count < 2
Magic Number,BuildingCoder,CmdDimensionWallsIterateFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateDimensions,The following statement contains a magic number: var shift = UnitUtils.ConvertToInternalUnits(           5 * view.Scale' DisplayUnitType.DUT_MILLIMETERS )           * edgesDirection;
Magic Number,BuildingCoder,CreateFillledRegionDimensionsCommand,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateDimensions,The following statement contains a magic number: edges.Count < 2
Magic Number,BuildingCoder,CreateFillledRegionDimensionsCommand,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDimensionWallsIterateFaces.cs,CreateDimensions,The following statement contains a magic number: var shift = UnitUtils.ConvertToInternalUnits(             -10 * view.Scale' DisplayUnitType.DUT_MILLIMETERS )             * edgesDirection;
Magic Number,BuildingCoder,CmdDuctResize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuctResize.cs,GetDuctShape,The following statement contains a magic number: Debug.Assert( 2 <= cons.Size'           "expected at least two connectors on a duct" );
Magic Number,BuildingCoder,CmdDuctResize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuctResize.cs,GetConnectorDim,The following statement contains a magic number: return ConnectorProfileType.Round == shape          ? 2 * c.Radius          : c.Height;
Magic Number,BuildingCoder,CmdDuctResize,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuctResize.cs,DuctResize,The following statement contains a magic number: nDCs < 3
Magic Number,BuildingCoder,CmdDuplicateElements,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDuplicateElements.cs,Execute,The following statement contains a magic number: XYZ newPoint = new XYZ( p.X' p.Y + 10' p.Z );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 2 == (int) DisplayUnitType.DUT_MILLIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 3 == (int) DisplayUnitType.DUT_DECIMAL_FEET' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 4 == (int) DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 5 == (int) DisplayUnitType.DUT_FRACTIONAL_INCHES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 6 == (int) DisplayUnitType.DUT_DECIMAL_INCHES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 7 == (int) DisplayUnitType.DUT_ACRES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 8 == (int) DisplayUnitType.DUT_HECTARES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 9 == (int) DisplayUnitType.DUT_METERS_CENTIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 10 == (int) DisplayUnitType.DUT_CUBIC_YARDS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 11 == (int) DisplayUnitType.DUT_SQUARE_FEET' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 12 == (int) DisplayUnitType.DUT_SQUARE_METERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 13 == (int) DisplayUnitType.DUT_CUBIC_FEET' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 14 == (int) DisplayUnitType.DUT_CUBIC_METERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 15 == (int) DisplayUnitType.DUT_DECIMAL_DEGREES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 16 == (int) DisplayUnitType.DUT_DEGREES_AND_MINUTES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 17 == (int) DisplayUnitType.DUT_GENERAL' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 18 == (int) DisplayUnitType.DUT_FIXED' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 19 == (int) DisplayUnitType.DUT_PERCENTAGE' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 20 == (int) DisplayUnitType.DUT_SQUARE_INCHES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 21 == (int) DisplayUnitType.DUT_SQUARE_CENTIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 22 == (int) DisplayUnitType.DUT_SQUARE_MILLIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 23 == (int) DisplayUnitType.DUT_CUBIC_INCHES' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 24 == (int) DisplayUnitType.DUT_CUBIC_CENTIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 25 == (int) DisplayUnitType.DUT_CUBIC_MILLIMETERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: Debug.Assert( 26 == (int) DisplayUnitType.DUT_LITERS' _s );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: List<string> uts = new List<string>(            map_dut_to_ut[i]              .Select<UnitType' string>(                u => u.ToString().Substring( 3 ) ) );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: unit_types = 4 > m            ? string.Join( "' "' uts )            : string.Format( "{0}' {1} and {2} more"'              uts[0]' uts[1]' m - 2 );
Magic Number,BuildingCoder,CmdDutAbbreviation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdDutAbbreviation.cs,Execute,The following statement contains a magic number: unit_types = 4 > m            ? string.Join( "' "' uts )            : string.Format( "{0}' {1} and {2} more"'              uts[0]' uts[1]' m - 2 );
Magic Number,BuildingCoder,CmdEllipticalArc,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEllipticalArc.cs,CreateEllipse,The following statement contains a magic number: double radX = 30;
Magic Number,BuildingCoder,CmdEllipticalArc,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEllipticalArc.cs,CreateEllipse,The following statement contains a magic number: double radY = 50;
Magic Number,BuildingCoder,CmdEllipticalArc,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEllipticalArc.cs,CreateEllipse,The following statement contains a magic number: double param1 = 2 * Math.PI;
Magic Number,BuildingCoder,CmdEllipticalArc,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEllipticalArc.cs,CreateEllipse,The following statement contains a magic number: double targetAngle = Math.PI / 3.0;
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,SetWhiteRenderBackground,The following statement contains a magic number: cbs.Color = new Color( 255' 0' 0 );
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The following statement contains a magic number: Color white = new Color( 255' 255' 255 );
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The following statement contains a magic number: Color white = new Color( 255' 255' 255 );
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The following statement contains a magic number: Color white = new Color( 255' 255' 255 );
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage,The following statement contains a magic number: graphicDisplayOptions.Set( 6 );
Magic Number,BuildingCoder,CmdExportImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportImage.cs,ExportToImage3,The following statement contains a magic number: img.PixelSize = 32;
Magic Number,BuildingCoder,CmdExportSolidToSat,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExportSolidToSat.cs,Execute,The following statement contains a magic number: 2 != floors.Count
Magic Number,BuildingCoder,CmdExteriorWalls,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExteriorWalls.cs,GetOutermostWalls,The following statement contains a magic number: double offset = Util.MmToFoot( 1000 );
Magic Number,BuildingCoder,CmdExteriorWalls,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExteriorWalls.cs,GetOutermostWalls,The following statement contains a magic number: int j = i < 3 ? i + 1 : 0;
Magic Number,BuildingCoder,CmdExteriorWalls,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExteriorWalls.cs,GetOutermostWalls,The following statement contains a magic number: i < 4
Magic Number,BuildingCoder,CmdExteriorWalls,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdExteriorWalls.cs,GetOutermostWalls,The following statement contains a magic number: double d = Util.MmToFoot( 600 );
Magic Number,BuildingCoder,CreateWallsAutomaticallyCommand,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateDoor,The following statement contains a magic number: var position = locationCurve.Curve.Evaluate(          0.5' true );
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ[] pts = new XYZ[] {          new XYZ( -10' -10' 0 )'          new XYZ( +10' -10' 0 )'          new XYZ( +10' +10' 0 )'          new XYZ( -10' +10' 0 ) };
Magic Number,BuildingCoder,CmdFaceWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFaceWall.cs,CreateMassExtrusion,The following statement contains a magic number: XYZ direction = new XYZ( /*-6*/ 0' 0' 20 );
Magic Number,BuildingCoder,CmdFailureGatherer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFailureGatherer.cs,Execute,The following statement contains a magic number: i < 2
Magic Number,BuildingCoder,CmdFailureGatherer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFailureGatherer.cs,Execute,The following statement contains a magic number: specEqu.Count >= 2
Magic Number,BuildingCoder,CmdFailureGatherer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFailureGatherer.cs,Execute,The following statement contains a magic number: Line line = Line.CreateBound( XYZ.Zero' 10 * XYZ.BasisX );
Magic Number,BuildingCoder,CmdFamilyParamValue,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFamilyParamValue.cs,SetFamilyParameterValueFails,The following statement contains a magic number: mgr.Set( familyParam' 2 );
Magic Number,BuildingCoder,CmdFamilyParamValue,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFamilyParamValue.cs,SetFamilyParameterValueWorks,The following statement contains a magic number: mgr.Set( familyParam' 2 );
Magic Number,BuildingCoder,CmdGetDimensionPoints,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetDimensionPoints.cs,GetDimensionPoints,The following statement contains a magic number: XYZ v = 0.5 * (double) dim.Value * direction;
Magic Number,BuildingCoder,CmdGetDimensionPoints,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetDimensionPoints.cs,DrawMarker,The following statement contains a magic number: size *= 0.5;
Magic Number,BuildingCoder,CmdGetDimensionPoints,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetDimensionPoints.cs,Execute,The following statement contains a magic number: double size = 0.3;
Magic Number,BuildingCoder,CmdGetDimensionPoints,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetDimensionPoints.cs,GetGridRef,The following statement contains a magic number: ElementId idGrid = new ElementId( 397028 );
Magic Number,BuildingCoder,CmdImportsInFamilies,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdImportsInFamilies.cs,ListImportsAndSearchForMore,The following statement contains a magic number: string indent          = new string( ' '' 2 * recursionLevel );
Magic Number,BuildingCoder,CmdIntersectJunctionBox,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdIntersectJunctionBox.cs,TestIntersect,The following statement contains a magic number: 2 == n
Magic Number,BuildingCoder,FindIntersection,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdIntersectJunctionBox.cs,FindIntersection,The following statement contains a magic number: List<Element> listOfCloserConduit            = filteredCloserConduits              .OfClass( typeof( Conduit ) )              .ToList()              .Where( x                => ( ( x as Conduit ).Location as LocationCurve ).Curve                  .GetEndPoint( 0 ).DistanceTo( jboxPoint ) < 30                || ( ( x as Conduit ).Location as LocationCurve ).Curve                  .GetEndPoint( 1 ).DistanceTo( jboxPoint ) < 30 )              .ToList();
Magic Number,BuildingCoder,FindIntersection,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdIntersectJunctionBox.cs,FindIntersection,The following statement contains a magic number: List<Element> listOfCloserConduit            = filteredCloserConduits              .OfClass( typeof( Conduit ) )              .ToList()              .Where( x                => ( ( x as Conduit ).Location as LocationCurve ).Curve                  .GetEndPoint( 0 ).DistanceTo( jboxPoint ) < 30                || ( ( x as Conduit ).Location as LocationCurve ).Curve                  .GetEndPoint( 1 ).DistanceTo( jboxPoint ) < 30 )              .ToList();
Magic Number,BuildingCoder,CmdLandXml,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLandXml.cs,Execute,The following statement contains a magic number: switch( j )              {                case 1:                  x = Double.Parse( coord );                  break;                case 2:                  y = Double.Parse( coord );                  break;                case 3:                  z = Double.Parse( coord );                  break;                default:                  break;              }
Magic Number,BuildingCoder,CmdLandXml,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLandXml.cs,Execute,The following statement contains a magic number: switch( j )              {                case 1:                  x = Double.Parse( coord );                  break;                case 2:                  y = Double.Parse( coord );                  break;                case 3:                  z = Double.Parse( coord );                  break;                default:                  break;              }
Magic Number,BuildingCoder,CmdLinkedFileElements,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElements.cs,AddFaceBasedFamilyToLinks,The following statement contains a magic number: ElementId alignedLinkId = new ElementId( 125929 );
Magic Number,BuildingCoder,CmdLinkedFileElements,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElements.cs,AddFaceBasedFamilyToLinks,The following statement contains a magic number: ElementId symbolId = new ElementId( 126580 );
Magic Number,BuildingCoder,CmdLinkedFileElements,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElements.cs,TagAllLinkedWalls,The following statement contains a magic number: XYZ xyz = new XYZ( -20' 20' 0 );
Magic Number,BuildingCoder,CmdLinkedFileElements,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElements.cs,TagAllLinkedWalls,The following statement contains a magic number: XYZ xyz = new XYZ( -20' 20' 0 );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size( 729' 161 );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size( 729' 161 );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 13F );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 13F );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 729' 161 );
Magic Number,BuildingCoder,CmdLinkedFileElementsForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinkedFileElementsForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 729' 161 );
Magic Number,BuildingCoder,CmdLinq,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdLinq.cs,Execute,The following statement contains a magic number: int i = 42;
Magic Number,BuildingCoder,CmdListAllRooms,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdListAllRooms.cs,GetConvexHullOfRoomBoundary,The following statement contains a magic number: pts = new List<XYZ>(            pts.Distinct<XYZ>( new CmdWallTopFaces              .XyzEqualityComparer( 1.0e-4 ) ) );
Magic Number,BuildingCoder,CmdListMarks,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdListMarks.cs,NumberStructuralFraming,The following statement contains a magic number: int mark_number = 3;
Magic Number,BuildingCoder,CmdListPipeSizes,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdListPipeSizes.cs,FootToMmString,The following statement contains a magic number: return Util.FootToMm( a )          .ToString( "0.##" )          .PadLeft( 8 );
Magic Number,BuildingCoder,MepElementShapeV1,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMepElementShape.cs,GetElementShape,The following statement contains a magic number: size.Split( 'x' ).Length == 2
Magic Number,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,The following statement contains a magic number: 2 > n
Magic Number,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,The following statement contains a magic number: 2 == curves.Count
Magic Number,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,The following statement contains a magic number: 2 != curves.Count
Magic Number,BuildingCoder,CmdMidCurve,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdMidCurve.cs,Execute,The following statement contains a magic number: 2 < n
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,IsPipeParallel,The following statement contains a magic number: return Math.Sin( c1.Direction.AngleTo(          c2.Direction ) ) < 0.01;
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The following statement contains a magic number: n < 2 || 4 < n
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The following statement contains a magic number: n < 2 || 4 < n
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The following statement contains a magic number: pt = ( q1 + p2 ) * 0.5;
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The following statement contains a magic number: q1.DistanceTo( p2 ) < 0.1
Magic Number,BuildingCoder,CmdNewCrossFitting,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewCrossFitting.cs,Execute,The following statement contains a magic number: pipes.Count() == 2
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,f,The following statement contains a magic number: footprintRoof.set_SlopeAngle( modelCurve' 0.5 );
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ( x' 1' 0 )'             new XYZ( x' 1' 1 )'             new XYZ( x' 2' 1 )'             new XYZ( x' 2' 2 )'             new XYZ( x' 3' 2 )'             new XYZ( x' 3' 3 )'             new XYZ( x' 4' 3 )'             new XYZ( x' 4' 4 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: pts = new XYZ[] {            new XYZ( x' 1' 0 )'            new XYZ( x' 1' 1 )'            new XYZ( x' 2' 1 )'            new XYZ( x' 2' 0 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: pts = new XYZ[] {            new XYZ( x' 1' 0 )'            new XYZ( x' 1' 1 )'            new XYZ( x' 2' 1 )'            new XYZ( x' 2' 0 ) };
Magic Number,BuildingCoder,CmdNewExtrusionRoof,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewExtrusionRoof.cs,Execute,The following statement contains a magic number: ExtrusionRoof er            = doc.Create.NewExtrusionRoof(              ca' rp' lvl' fs' 0' 3 );
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: float text_type_height_mm = 6;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: float mm_per_inch = 25.4f;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: float points_per_inch = 96;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: em_size += 2.5f;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: double newWidth = w_inch / 12;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute,The following statement contains a magic number: int color = Util.ToColorParameterValue(             255' 0' 0 );
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: float fontHeightInch = (float) textHeight * 12.0f;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: float fontDpi = 96.0f;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: float pointSize = (float) ( textHeight * 12.0 * fontDpi );
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: string textString = textType.Name                + " (" + fontName + " "                + ( textHeight * 304.8 ).ToString( "0.##" ) + "mm' "                + textStyle.ToString() + "' "                + ( textWidthScale * 100.0 ).ToString( "0.##" )                + "%): The quick brown fox jumps over the lazy dog.";
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: string textString = textType.Name                + " (" + fontName + " "                + ( textHeight * 304.8 ).ToString( "0.##" ) + "mm' "                + textStyle.ToString() + "' "                + ( textWidthScale * 100.0 ).ToString( "0.##" )                + "%): The quick brown fox jumps over the lazy dog.";
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: Debug.WriteLine( ( stringWidthIn * 25.4 * viewScale ).ToString( "F3" )                + " mm at 1:" + viewScale.ToString() );
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: double stringWidthFt = stringWidthIn / 12.0;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: double lineWidth = ( ( stringWidthFt * textWidthScale )                + ( textBorder * 2.0 ) ) * viewScale;
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: pLoc += view.UpDirection.Multiply(              ( textHeight + ( 5.0 / 304.8 ) )                * viewScale ).Negate();
Magic Number,BuildingCoder,CmdNewTextNote,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewTextNote.cs,Execute_2,The following statement contains a magic number: pLoc += view.UpDirection.Multiply(              ( textHeight + ( 5.0 / 304.8 ) )                * viewScale ).Negate();
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,GetWallThickness,The following statement contains a magic number: return 0.5 * ( douter - dinner );
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: XYZ pm = 0.5 * ( p0 + p1 );
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: double angle = 45 * Math.PI / 180.0;
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: double angle = 45 * Math.PI / 180.0;
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: double angle2 = 0.5 * Math.PI - angle;
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: double halfLength = 0.5 * length;
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,Execute,The following statement contains a magic number: double remainingPipeLength          = 0.5 * ( distanceAlong - length );
Magic Number,BuildingCoder,CmdRollingOffset,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRollingOffset.cs,f,The following statement contains a magic number: var endPoint = new XYZ( 100' 0' 0 );
Magic Number,BuildingCoder,CmdRoomNeighbours,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRoomNeighbours.cs,GetRoomNeighbourAt,The following statement contains a magic number: Transform derivatives = bs.GetCurve()          .ComputeDerivatives(  0.5' true );
Magic Number,BuildingCoder,CmdRoomNeighbours,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRoomNeighbours.cs,GetRoomNeighbourAt,The following statement contains a magic number: Debug.Assert(           midPoint.IsAlmostEqualTo(            bs.GetCurve().Evaluate( 0.5' true ) )'          "expected same result from Evaluate and derivatives" );
Magic Number,BuildingCoder,NestedFamilyFunctions,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedFamilies.cs,GetFamilyParameter,The following statement contains a magic number: Debug.Assert( 2 > nestedFamilyInstance.GetParameters( parameterName ).Count'          "ascertain that there are not more than one parameter of the given name" );
Magic Number,BuildingCoder,NestedFamilyFunctions,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedFamilies.cs,GetFamilyParameter,The following statement contains a magic number: Debug.Assert( 2 > nestedFamilyInstance.Symbol.GetParameters( parameterName ).Count'            "ascertain that there are not more than one parameter of the given name" );
Magic Number,BuildingCoder,CmdNestedInstanceGeo,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedInstanceGeo.cs,GetVertices,The following statement contains a magic number: Debug.Assert( 8 == keys.Count'          "expected eight vertices for a rectangular column" );
Magic Number,BuildingCoder,CmdNestedInstanceGeo,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNestedInstanceGeo.cs,GetVertices,The following statement contains a magic number: Debug.Assert( 3 == a[p]'            "expected every vertex of solid to appear in exactly three faces" );
Magic Number,BuildingCoder,CmdNewBeamTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBeamTypeInstance.cs,Execute,The following statement contains a magic number: s.LookupParameter( "b" ).Set( Util.MmToFoot( 500 ) );
Magic Number,BuildingCoder,CmdNewBeamTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBeamTypeInstance.cs,Execute,The following statement contains a magic number: s.LookupParameter( "h" ).Set( Util.MmToFoot( 1000 ) );
Magic Number,BuildingCoder,CmdNewBeamTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBeamTypeInstance.cs,Execute,The following statement contains a magic number: XYZ q = creApp.NewXYZ( 30' 20' 20 );
Magic Number,BuildingCoder,CmdNewBeamTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBeamTypeInstance.cs,Execute,The following statement contains a magic number: XYZ q = creApp.NewXYZ( 30' 20' 20 );
Magic Number,BuildingCoder,CmdNewBeamTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBeamTypeInstance.cs,Execute,The following statement contains a magic number: XYZ q = creApp.NewXYZ( 30' 20' 20 );
Magic Number,BuildingCoder,CmdNewBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBlend.cs,CreateBlend,The following statement contains a magic number: double endAngle = 2 * Math.PI;
Magic Number,BuildingCoder,CmdNewBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBlend.cs,CreateBlend,The following statement contains a magic number: double radius = 0.7579;
Magic Number,BuildingCoder,CmdNewBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewBlend.cs,CreateBlend,The following statement contains a magic number: XYZ center2 = new XYZ( 0' 0' 1.27 );
Magic Number,BuildingCoder,CmdNewColumnTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewColumnTypeInstance.cs,Execute,The following statement contains a magic number: s.LookupParameter( "Width" ).Set( Util.MmToFoot( 500 ) );
Magic Number,BuildingCoder,CmdNewColumnTypeInstance,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewColumnTypeInstance.cs,Execute,The following statement contains a magic number: s.LookupParameter( "Depth" ).Set( Util.MmToFoot( 1000 ) );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: int n = 4;
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[1] = new XYZ( 10.0' 0.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[2] = new XYZ( 10.0' 10.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[2] = new XYZ( 10.0' 10.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[2] = new XYZ( 10.0' 10.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[3] = new XYZ( 0.0' 10.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute2,The following statement contains a magic number: points[3] = new XYZ( 0.0' 10.0' 0.0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute,The following statement contains a magic number: XYZ v = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,Execute,The following statement contains a magic number: XYZ v = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdEditFloor,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdEditFloor.cs,SetFloorLevelAndOffset,The following statement contains a magic number: p1.Set( 2 );
Magic Number,BuildingCoder,CmdGetMaterials,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdGetMaterials.cs,GetMaterial,The following statement contains a magic number: mat.Color = new Color(255' 0' 0);
Magic Number,BuildingCoder,CmdNewDimensionLabel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewDimensionLabel.cs,Execute,The following statement contains a magic number: double length = 1.23;
Magic Number,BuildingCoder,CmdNewDimensionLabel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewDimensionLabel.cs,Execute,The following statement contains a magic number: start = creApp.NewXYZ( 0' 0.2 * length' 0 );
Magic Number,BuildingCoder,CmdNewDimensionLabel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewDimensionLabel.cs,Execute,The following statement contains a magic number: end = creApp.NewXYZ( length' 0.2 * length' 0 );
Magic Number,BuildingCoder,CmdNewLightingFixture,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLightingFixture.cs,Execute,The following statement contains a magic number: XYZ p = app.Create.NewXYZ( -43' 28' 0 );
Magic Number,BuildingCoder,CmdNewLightingFixture,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLightingFixture.cs,Execute,The following statement contains a magic number: XYZ p = app.Create.NewXYZ( -43' 28' 0 );
Magic Number,BuildingCoder,CmdNewLineLoad,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLineLoad.cs,Execute,The following statement contains a magic number: XYZ forceA = new XYZ( 0' 0' 5 );
Magic Number,BuildingCoder,CmdNewLineLoad,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLineLoad.cs,Execute,The following statement contains a magic number: XYZ forceB = new XYZ( 0' 0' 10 );
Magic Number,BuildingCoder,CmdNewLineLoad,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewLineLoad.cs,Execute,The following statement contains a magic number: XYZ p2 = new XYZ( 3' 0' 0 );
Magic Number,BuildingCoder,CmdNewRailing,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewRailing.cs,Execute,The following statement contains a magic number: XYZ p1 = new XYZ( 17' 0' 0 );
Magic Number,BuildingCoder,CmdNewRailing,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewRailing.cs,Execute,The following statement contains a magic number: XYZ p2 = new XYZ( 33' 0' 0 );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,ViewApiCreateViewSample,The following statement contains a magic number: XYZ eyePosition = new XYZ( 10' 10' 10 );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,ViewApiCreateViewSample,The following statement contains a magic number: XYZ eyePosition = new XYZ( 10' 10' 10 );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,ViewApiCreateViewSample,The following statement contains a magic number: XYZ eyePosition = new XYZ( 10' 10' 10 );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,FindTopMostReference,The following statement contains a magic number: UV midparam = p + 0.5 * ( q - p );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: ElementId instanceId = new ElementId( 230298 );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: XYZ lCurvePnt = lCurve.Curve.Evaluate(              0.5 * i' true );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: XYZ bendPnt = lCurvePnt.Add(              Create.NewXYZ( 0' 1' 4 ) );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: XYZ endPnt = lCurvePnt.Add(              Create.NewXYZ( 0' 2' 4 ) );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: XYZ endPnt = lCurvePnt.Add(              Create.NewXYZ( 0' 2' 4 ) );
Magic Number,BuildingCoder,CmdNewSpotElevation,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSpotElevation.cs,NewSpotElevation,The following statement contains a magic number: i < 3
Magic Number,BuildingCoder,CmdNewSprinkler,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSprinkler.cs,MedianPoint,The following statement contains a magic number: p += triangle.get_Vertex( 2 );
Magic Number,BuildingCoder,CmdNewSprinkler,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSprinkler.cs,MedianPoint,The following statement contains a magic number: p *= 0.3333333333333333;
Magic Number,BuildingCoder,CmdNewSprinkler,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSprinkler.cs,TriangleArea,The following statement contains a magic number: XYZ c = triangle.get_Vertex( 2 );
Magic Number,BuildingCoder,CmdNewSprinkler,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSprinkler.cs,TriangleArea,The following statement contains a magic number: double area = 0.5 * l.Length * h;
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: path.Append( Line.CreateBound( XYZ.Zero'           new XYZ( 0' 5' 0 ) ) );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ p2 = new XYZ( 10' 0' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ p3 = new XYZ( 10' 15' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ p3 = new XYZ( 10' 15' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ p4 = new XYZ( 0' 15' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a1 = new XYZ( 1' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a2 = new XYZ( 3' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a2 = new XYZ( 3' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a3 = new XYZ( 3' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a3 = new XYZ( 3' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ a4 = new XYZ( 1' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b1 = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b1 = new XYZ( 5' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b2 = new XYZ( 7' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b2 = new XYZ( 7' 5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b3 = new XYZ( 7' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b3 = new XYZ( 7' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b4 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateSweepWithMultipleLoops,The following statement contains a magic number: XYZ b4 = new XYZ( 5' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p00 = creapp.NewXYZ( 0' 7.5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p01 = creapp.NewXYZ( 0' 15' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p02 = creapp.NewXYZ( -1' 10' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p10 = creapp.NewXYZ( 7.5' 0' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p11 = creapp.NewXYZ( 15' 0' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ p12 = creapp.NewXYZ( 10' -1' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ pnt10 = new XYZ( 5' 0' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlend,The following statement contains a magic number: XYZ pnt11 = new XYZ( 0' 20' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlendArc,The following statement contains a magic number: XYZ p5 = 5 * XYZ.BasisY;
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlendArc,The following statement contains a magic number: XYZ pmid = new XYZ( 2.5' 2.5' 0 );
Magic Number,BuildingCoder,CmdNewSweptBlend,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewSweptBlend.cs,CreateNewSweptBlendArc,The following statement contains a magic number: XYZ pmid = new XYZ( 2.5' 2.5' 0 );
Magic Number,BuildingCoder,CmdNewWallLayer,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdNewWallLayer.cs,Execute,The following statement contains a magic number: double width = 0.1;
Magic Number,BuildingCoder,CmdPickPoint3d,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPickPoint3d.cs,PickPointsForArea,The following statement contains a magic number: area = Math.Round( area' 2 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt1 = new XYZ( 0' -5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt2 = new XYZ( 0' 5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt3 = new XYZ( 8' 5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt3 = new XYZ( 8' 5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt4 = new XYZ( 8' -5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: XYZ pt4 = new XYZ( 8' -5' 0 );
Magic Number,BuildingCoder,CmdPlanTopology,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPlanTopology.cs,CreateRoom,The following statement contains a magic number: UV tagPoint = new UV( 4' 0 );
Magic Number,BuildingCoder,Press,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPressKeys.cs,OneKey,The following statement contains a magic number: uint keyDownCode = ( uint )          WH_KEYBOARD_LPARAM.KEYDOWN          | ( scanCode << 16 );
Magic Number,BuildingCoder,Press,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPressKeys.cs,OneKey,The following statement contains a magic number: uint keyUpCode = ( uint )          WH_KEYBOARD_LPARAM.KEYUP          | ( scanCode << 16 );
Magic Number,BuildingCoder,CmdPressKeys,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPressKeys.cs,Execute,The following statement contains a magic number: Line geomLine = Line.CreateBound( XYZ.Zero' new XYZ( 2' 0' 0 ) );
Magic Number,BuildingCoder,CmdPreviewImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPreviewImage.cs,Execute,The following statement contains a magic number: Size imgSize = new Size( 200' 200 );
Magic Number,BuildingCoder,CmdPreviewImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPreviewImage.cs,Execute,The following statement contains a magic number: Size imgSize = new Size( 200' 200 );
Magic Number,BuildingCoder,CmdPreviewImage,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPreviewImage.cs,Execute,The following statement contains a magic number: encoder.QualityLevel = 25;
Magic Number,BuildingCoder,CmdPurgeTextNoteTypes,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdPurgeTextNoteTypes.cs,Execute,The following statement contains a magic number: int nLoop = 100;
Magic Number,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,Test1,The following statement contains a magic number: XYZ p = connector.CoordinateSystem.OfPoint(          new XYZ( connector.Width / 2'            connector.Height / 2' 0 ) );
Magic Number,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,Test1,The following statement contains a magic number: XYZ p = connector.CoordinateSystem.OfPoint(          new XYZ( connector.Width / 2'            connector.Height / 2' 0 ) );
Magic Number,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,Test2,The following statement contains a magic number: XYZ p = connector.CoordinateSystem.OfPoint(          new XYZ( connector.Height / 2'            connector.Width / 2' 0 ) );
Magic Number,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,Test2,The following statement contains a magic number: XYZ p = connector.CoordinateSystem.OfPoint(          new XYZ( connector.Height / 2'            connector.Width / 2' 0 ) );
Magic Number,BuildingCoder,CmdRectDuctCorners,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRectDuctCorners.cs,FaceContainsConnector,The following statement contains a magic number: return null != result          && Math.Abs( result.Distance ) < 1e-9;
Magic Number,BuildingCoder,CmdRemoveImportedJpgs,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdRemoveImportedJpgs.cs,ElementNameEndsWithJpg,The following statement contains a magic number: return 3 < s.Length && s.EndsWith( ".jpg" );
Magic Number,BuildingCoder,CmdSetGridEndpoint,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetGridEndpoint.cs,AlignOffAxisGrid,The following statement contains a magic number: double max_distance = 0.0001;
Magic Number,BuildingCoder,CmdSetGridEndpoint,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetGridEndpoint.cs,Execute,The following statement contains a magic number: XYZ newStart = start + 10 * XYZ.BasisY;
Magic Number,BuildingCoder,CmdSetGridEndpoint,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetGridEndpoint.cs,Execute,The following statement contains a magic number: XYZ newEnd = end - 10 * XYZ.BasisY;
Magic Number,BuildingCoder,CmdSetTagType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTagType.cs,Execute,The following statement contains a magic number: double length = 5 * MeterToFeet;
Magic Number,BuildingCoder,CmdSetTagType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTagType.cs,Execute,The following statement contains a magic number: XYZ [] pts = new XYZ[2];
Magic Number,BuildingCoder,CmdSetTagType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTagType.cs,Execute,The following statement contains a magic number: double tagOffset = 3 * wallThickness;
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch1,The following statement contains a magic number: Math.Round( r1' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch1,The following statement contains a magic number: Math.Round( r1' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch1,The following statement contains a magic number: Math.Round( r2' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch1,The following statement contains a magic number: Math.Round( r2' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,The following statement contains a magic number: Math.Round( r1' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,The following statement contains a magic number: Math.Round( r1' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,The following statement contains a magic number: Math.Round( r2' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetTangentLock,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetTangentLock.cs,SetTangentLockInProfileSketch2,The following statement contains a magic number: Math.Round( r2' 6 ) == Math.Round( a.Radius' 6 )
Magic Number,BuildingCoder,CmdSetWallType,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSetWallType.cs,Execute,The following statement contains a magic number: ElementId wall_id = new ElementId( 25122 );
Magic Number,BuildingCoder,CmdSheetToModel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,QTO_2_PlaceHoldersFromDWFMarkups,The following statement contains a magic number: XYZ VC = ( plan.CropBox.Min + plan.CropBox.Max ) / 2;
Magic Number,BuildingCoder,CmdSheetToModel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,QTO_2_PlaceHoldersFromDWFMarkups,The following statement contains a magic number: med = ( min + max ) / 2;
Magic Number,BuildingCoder,CmdSheetToModel,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,QTO_2_PlaceHoldersFromDWFMarkups,The following statement contains a magic number: XYZ med = c.Evaluate( 0.5' true );
Magic Number,BuildingCoder,CmdMiroTest2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,Execute,The following statement contains a magic number: XYZ wcsCenterMaster = 0.5 * bbm.Min.Add( bbm.Max );
Magic Number,BuildingCoder,CmdMiroTest2,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSheetToModel.cs,Execute,The following statement contains a magic number: XYZ wcsCenterSlave = 0.5 * bbs.Min.Add( bbs.Max );
Magic Number,BuildingCoder,CmdSlabBoundaryArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundaryArea.cs,GetSignedPolygonArea,The following statement contains a magic number: sum += p[n - 1].U * ( p[0].V - p[n - 2].V );
Magic Number,BuildingCoder,CmdSlabBoundaryArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlabBoundaryArea.cs,GetSignedPolygonArea,The following statement contains a magic number: return 0.5 * sum;
Magic Number,BuildingCoder,CmdCreateSlopedSlab,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSlopedSlab.cs,Execute,The following statement contains a magic number: double width = 19.685039400;
Magic Number,BuildingCoder,CmdCreateSlopedSlab,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSlopedSlab.cs,Execute,The following statement contains a magic number: double length = 59.055118200;
Magic Number,BuildingCoder,CmdCreateSlopedSlab,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSlopedSlab.cs,Execute,The following statement contains a magic number: double height = 9.84251968503937;
Magic Number,BuildingCoder,CmdCreateSlopedSlab,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSlopedSlab.cs,Execute,The following statement contains a magic number: Floor floor = doc.Create.NewSlab(            profile' level' line' 0.5' true );
Magic Number,BuildingCoder,CmdChangeFloorSlope,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCreateSlopedSlab.cs,Execute,The following statement contains a magic number: ml.get_Parameter(              BuiltInParameter.ROOF_SLOPE )                .Set( 1.2 );
Magic Number,BuildingCoder,CmdSlopedWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: List<Curve> profile = new List<Curve>( 4 );
Magic Number,BuildingCoder,CmdSlopedWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: double length = 10;
Magic Number,BuildingCoder,CmdSlopedWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: double heightStart = 5;
Magic Number,BuildingCoder,CmdSlopedWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: double heightEnd = 8;
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ[] pts = new XYZ[] {            new XYZ(5.675844469' 8.769334161' -5.537348007)'            new XYZ(5.665137820' 8.771332255' 2.956630685)'            new XYZ(7.672569880' 8.396698044' 2.959412671)'          };
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,Execute,The following statement contains a magic number: XYZ t2 = pts[1] - pts[2];
Magic Number,BuildingCoder,TestWall,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSlopedWall.cs,IsVertical,The following statement contains a magic number: return 1e-9 > Math.Abs(          v1.X * v2.X + v1.Y * v2.Y + v1.Z * v2.Z );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt1 = Util.MmToFoot( new XYZ( 0' 0' 1000 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt2 = Util.MmToFoot( new XYZ( 1000' 0' 1000 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt2 = Util.MmToFoot( new XYZ( 1000' 0' 1000 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt3 = Util.MmToFoot( new XYZ( 2000' 0' 2500 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt3 = Util.MmToFoot( new XYZ( 2000' 0' 2500 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt4 = Util.MmToFoot( new XYZ( 3000' 0' 2500 ) );
Magic Number,BuildingCoder,BeamCreator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSteelStairBeams.cs,Run,The following statement contains a magic number: XYZ pt4 = Util.MmToFoot( new XYZ( 3000' 0' 2500 ) );
Magic Number,BuildingCoder,CmdSwitchDoc,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdSwitchDoc.cs,ToggleViews,The following statement contains a magic number: doc2.ActiveView.get_Parameter(            BuiltInParameter.VIEW_SCALE_PULLDOWN_METRIC )              .Set( 20 );
Magic Number,BuildingCoder,CmdUnrotateNorth,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdUnrotateNorth.cs,GetSunDirection,The following statement contains a magic number: double actualAzimuth = 2 * Math.PI - azimuth + trueNorthAngle;
Magic Number,BuildingCoder,CmdUpdateReferencingSheet,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdUpdateReferencingSheet.cs,UpdateReferencingSheet,The following statement contains a magic number: discipline.Set( 1 == disciplineNo ? 2 : 1 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: View frontView = doc.GetElement( new ElementId( 180041 ) ) as View;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: View leftView = doc.GetElement( new ElementId( 180032 ) ) as View;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: AssemblyInstance assemblyInst = doc.GetElement( new ElementId( 179915 ) ) as AssemblyInstance;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: ViewSheet vSheet = doc.GetElement( new ElementId( 180049 ) ) as ViewSheet;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.set_MinEnabled( 2' true );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.Min = new XYZ( -2000' -2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.Min = new XYZ( -2000' -2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.set_MaxEnabled( 2' true );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.Max = new XYZ( 2000' 2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxFront.Max = new XYZ( 2000' 2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.set_MinEnabled( 2' true );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.Min = new XYZ( -2000' -2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.Min = new XYZ( -2000' -2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.set_MaxEnabled( 2' true );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.Max = new XYZ( 2000' 2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: newBoxLeft.Max = new XYZ( 2000' 2000' 0 );
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: double width = 840 * 0.0032808399;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: double width = 840 * 0.0032808399;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: double height = 594 * 0.0032808399;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: double height = 594 * 0.0032808399;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: XYZ sheetMidpoint = ( vSheet.Origin + XYZ.BasisX * width + XYZ.BasisY * height ) / 2.0;
Magic Number,BuildingCoder,CmdAlignTwoViews,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdViewsShowingElements.cs,Execute,The following statement contains a magic number: translation = XYZ.BasisX * (            -( ( outline1.MinimumPoint.X - outline1.MinimumPoint.X )            / 2 + ( outline2.MinimumPoint.X - outline2.MinimumPoint.X ) + 1 ) );
Magic Number,BuildingCoder,CmdWallOpeningProfiles,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpeningProfiles.cs,testTwo,The following statement contains a magic number: View existingView = doc.GetElement(            new ElementId( 312 ) ) as View;
Magic Number,BuildingCoder,CmdWallOpeningProfiles,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpeningProfiles.cs,testTwo,The following statement contains a magic number: newView.IsolateElementTemporary( new ElementId( 317443 ) );
Magic Number,BuildingCoder,CmdWallOpenings,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpenings.cs,IsEven,The following statement contains a magic number: return 0 == i % 2;
Magic Number,BuildingCoder,CmdWallOpenings,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallOpenings.cs,GetWallOpenings,The following statement contains a magic number: var wallOpenings = new List<WallOpening2d>(          n / 2 );
Magic Number,BuildingCoder,CmdWallProfileArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfileArea.cs,GetPolygonPlane,The following statement contains a magic number: bool rc = ( 2 < n );
Magic Number,BuildingCoder,CmdWallProfileArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfileArea.cs,GetPolygonPlane,The following statement contains a magic number: XYZ c = polygon[2];
Magic Number,BuildingCoder,CmdWallProfileArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfileArea.cs,GetPolygonPlane,The following statement contains a magic number: 3 == n
Magic Number,BuildingCoder,CmdWallProfileArea,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfileArea.cs,GetPolygonPlane,The following statement contains a magic number: area = 0.5 * length;
Magic Number,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,The following statement contains a magic number: halfThickness = 0.5 * wall.WallType.Width;
Magic Number,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,The following statement contains a magic number: p = lcstart - 2 * v;
Magic Number,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,The following statement contains a magic number: q = lcend + 2 * v;
Magic Number,BuildingCoder,CmdWallLayers,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallLayers.cs,Execute,The following statement contains a magic number: Debug.Print(              "{0} with thickness {1}"              + " has {2} layer{3}{4}"'              desc'              Util.MmString( 2 * halfThickness )'              n' Util.PluralSuffix( n )'              Util.DotOrColon( n ) );
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute2,The following statement contains a magic number: Transform offset = Transform.CreateTranslation(            5 * normal );
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute2,The following statement contains a magic number: Color colorRed = new Color( 255' 0' 0 );
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute3,The following statement contains a magic number: double d = 5;
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute3,The following statement contains a magic number: Color colorRed = new Color( 255' 0' 0 );
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute,The following statement contains a magic number: int use_execute_nr = 3;
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute,The following statement contains a magic number: switch( use_execute_nr )        {          case 1: return Execute1( cd' ref msg' els );          case 2: return Execute2( cd' ref msg' els );          case 3: return Execute3( cd' ref msg' els );        }
Magic Number,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute,The following statement contains a magic number: switch( use_execute_nr )        {          case 1: return Execute1( cd' ref msg' els );          case 2: return Execute2( cd' ref msg' els );          case 3: return Execute3( cd' ref msg' els );        }
Magic Number,BuildingCoder,CmdWallTopFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallTopFaces.cs,IsTopFace,The following statement contains a magic number: UV midpoint = p + 0.5 * ( q - p );
Magic Number,BuildingCoder,CmdWallTopFaces,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallTopFaces.cs,Execute,The following statement contains a magic number: XyzEqualityComparer comparer          = new XyzEqualityComparer( 1e-6 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point( 13' 13 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point( 13' 13 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size( 35' 13 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size( 35' 13 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 13F );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.AutoScaleDimensions = new System.Drawing.SizeF( 6F' 13F );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 221' 183 );
Magic Number,BuildingCoder,CmdWindowHandleForm,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWindowHandleForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size( 221' 183 );
Magic Number,BuildingCoder,CmdCropToRoom,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCropToRoom.cs,Execute,The following statement contains a magic number: double d = 0.05 * ( xMax - xMin );
Magic Number,BuildingCoder,CmdCropToRoom,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdCropToRoom.cs,Execute,The following statement contains a magic number: d = 0.05 * ( yMax - yMin );
Magic Number,BuildingCoder,Creator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Creator.cs,GetCurveNormal,The following statement contains a magic number: 2 == n
Magic Number,BuildingCoder,Creator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Creator.cs,DrawFaceTriangleNormals,The following statement contains a magic number: XYZ p = ( t.get_Vertex( 0 )            + t.get_Vertex( 1 )            + t.get_Vertex( 2 ) ) / 3;
Magic Number,BuildingCoder,Creator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Creator.cs,DrawFaceTriangleNormals,The following statement contains a magic number: XYZ p = ( t.get_Vertex( 0 )            + t.get_Vertex( 1 )            + t.get_Vertex( 2 ) ) / 3;
Magic Number,BuildingCoder,Creator,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Creator.cs,DrawFaceTriangleNormals,The following statement contains a magic number: XYZ w = t.get_Vertex( 2 )            - t.get_Vertex( 0 );
Magic Number,BuildingCoder,JtPairPicker<T>,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtPairPicker.cs,Pick,The following statement contains a magic number: 2 > n
Magic Number,BuildingCoder,JtPairPicker<T>,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtPairPicker.cs,Pick,The following statement contains a magic number: 2 == n
Magic Number,BuildingCoder,JtPairPicker<T>,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtPairPicker.cs,Pick,The following statement contains a magic number: 2 == _a.Count
Magic Number,BuildingCoder,JtPairPicker<T>,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtPairPicker.cs,Pick,The following statement contains a magic number: 2 != _a.Count
Magic Number,BuildingCoder,TimeRegistry,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtTimer.cs,GetPercent,The following statement contains a magic number: return 0 == totalTime            ? 0            : Math.Round( value * 100 / totalTime' 2 );
Magic Number,BuildingCoder,TimeRegistry,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtTimer.cs,GetPercent,The following statement contains a magic number: return 0 == totalTime            ? 0            : Math.Round( value * 100 / totalTime' 2 );
Magic Number,BuildingCoder,TimeRegistry,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\JtTimer.cs,WriteResults,The following statement contains a magic number: lines.Add( string.Format( "{0'10:0.00}%{1'10:0.00}{2'8}   {3}"'              GetPercent( e.Time' totalTime )'              Math.Round( e.Time' 2 )'              e.Calls'              pair.Key ) );
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsProjectUnitTypeDouble,The following statement contains a magic number: switch (dut)        {          #region Length            case DisplayUnitType.DUT_METERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_CENTIMETERS:            return imperialValue * METERS_IN_FEET * 100;          case DisplayUnitType.DUT_DECIMAL_FEET:            return imperialValue;          case DisplayUnitType.DUT_DECIMAL_INCHES:            return imperialValue * 12;          case DisplayUnitType.DUT_FEET_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_FRACTIONAL_INCHES:            NotSupported(dut);            break;          case DisplayUnitType.DUT_METERS_CENTIMETERS:            return imperialValue * METERS_IN_FEET; //feet          case DisplayUnitType.DUT_MILLIMETERS:            return imperialValue * METERS_IN_FEET * 1000;            #endregion // Length            #region Area            case DisplayUnitType.DUT_SQUARE_FEET:            return imperialValue;          case DisplayUnitType.DUT_ACRES:            return imperialValue * 1 / 43560.039;          case DisplayUnitType.DUT_HECTARES:            return imperialValue * 1 / 107639.104;          case DisplayUnitType.DUT_SQUARE_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 2);          case DisplayUnitType.DUT_SQUARE_INCHES:            return imperialValue * Math.Pow(12' 2);          case DisplayUnitType.DUT_SQUARE_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 2);          case DisplayUnitType.DUT_SQUARE_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 2);            #endregion // Area            #region Volume          case DisplayUnitType.DUT_CUBIC_FEET:            return imperialValue;          case DisplayUnitType.DUT_CUBIC_CENTIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 100' 3);          case DisplayUnitType.DUT_CUBIC_INCHES:            return imperialValue * Math.Pow(12' 3);          case DisplayUnitType.DUT_CUBIC_METERS:            return imperialValue * Math.Pow(METERS_IN_FEET' 3);          case DisplayUnitType.DUT_CUBIC_MILLIMETERS:            return imperialValue * Math.Pow(METERS_IN_FEET * 1000' 3);          case DisplayUnitType.DUT_CUBIC_YARDS:            return imperialValue * 1 / Math.Pow(3' 3);          case DisplayUnitType.DUT_GALLONS_US:            return imperialValue * 7.5;          case DisplayUnitType.DUT_LITERS:            return imperialValue * 28.31684;            #endregion // Volume            default:            NotSupported(dut);            break;        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsMetersValue,The following statement contains a magic number: switch (ut)        {          case UnitType.UT_Length:            return imperialValue * METERS_IN_FEET;            case UnitType.UT_Area:            return imperialValue * Math.Pow(              METERS_IN_FEET' 2);            case UnitType.UT_Volume:            return imperialValue * Math.Pow(              METERS_IN_FEET' 3);        }
Magic Number,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsMetersValue,The following statement contains a magic number: switch (ut)        {          case UnitType.UT_Length:            return imperialValue * METERS_IN_FEET;            case UnitType.UT_Area:            return imperialValue * Math.Pow(              METERS_IN_FEET' 2);            case UnitType.UT_Volume:            return imperialValue * Math.Pow(              METERS_IN_FEET' 3);        }
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,GetArbitraryAxes,The following statement contains a magic number: double limit = 1.0 / 64;
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,Midpoint,The following statement contains a magic number: return 0.5 * (p + q);
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CalculateMatrixForGlobalToLocalCoordinateSystem,The following statement contains a magic number: return new double[ 2' 2 ] {          { a11i' a12i }'          { a21i' a22i }};
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CalculateMatrixForGlobalToLocalCoordinateSystem,The following statement contains a magic number: return new double[ 2' 2 ] {          { a11i' a12i }'          { a21i' a22i }};
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateArc2dFromRadiusStartAndEndPoint,The following statement contains a magic number: XYZ midPointChord = 0.5 * (ps + pe);
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateArc2dFromRadiusStartAndEndPoint,The following statement contains a magic number: double d = 0.5 * v.GetLength();
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateArc2dFromRadiusStartAndEndPoint,The following statement contains a magic number: XYZ midPointOffset = Transform          .CreateRotation( XYZ.BasisZ' 0.5 * Math.PI )          .OfVector( v.Normalize().Multiply( s ) );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ToColorParameterValue,The following statement contains a magic number: int c = red + (green << 8) + (blue << 16);
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ToColorParameterValue,The following statement contains a magic number: int c = red + (green << 8) + (blue << 16);
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ToColorParameterValue,The following statement contains a magic number: int c2 = red + 256 * green + 65536 * blue;
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ToColorParameterValue,The following statement contains a magic number: int c2 = red + 256 * green + 65536 * blue;
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateSphereAt,The following statement contains a magic number: return GeometryCreationUtilities          .CreateRevolvedGeometry( frame' loops'            0' 2 * Math.PI );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateCylinder,The following statement contains a magic number: Solid cone = GeometryCreationUtilities          .CreateRevolvedGeometry( frame'            new CurveLoop[] { curveLoop }'            0' 2 * Math.PI );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateCone,The following statement contains a magic number: Solid cone = GeometryCreationUtilities          .CreateRevolvedGeometry( frame'            new CurveLoop[] { curveLoop }'            0' 2 * Math.PI );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile00 = new XYZ( -d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile00 = new XYZ( -d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile00 = new XYZ( -d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile01 = new XYZ( -d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile01 = new XYZ( -d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile01 = new XYZ( -d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile11 = new XYZ( d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile11 = new XYZ( d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile11 = new XYZ( d1 / 2' d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile10 = new XYZ( d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile10 = new XYZ( d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,CreateRectangularPrism,The following statement contains a magic number: XYZ profile10 = new XYZ( d1 / 2' -d2 / 2' -d3 / 2 );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ConvexHull,The following statement contains a magic number: walkingPoint = points.MinBy( p =>          {            double angle = (p - wp).AngleOnPlaneTo( rv' XYZ.BasisZ );            if( angle < 1e-10 )              angle = 2 * Math.PI;            return angle;          } );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,ConvexHull,The following statement contains a magic number: walkingPoint = points.MinBy( p =>          {            double angle = (p - wp).AngleOnPlaneTo( rv' XYZ.BasisZ );            if( angle < 1e-10 )              angle = 2 * Math.PI;            return angle;          } );
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,AngleString,The following statement contains a magic number: return RealString( angle * 180 / Math.PI )          + " degrees";
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,UnitSymbolTypeString,The following statement contains a magic number: s = s.Substring( 4 )          .Replace( "_SUP_"' "^" )          .ToLower();
Magic Number,BuildingCoder,Util,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,GetConnectorAt,The following statement contains a magic number: bool hasTwoConnectors = 2 == cm.Connectors.Size;
Magic Number,BuildingCoder,JtBuiltInCategoryExtensionMethods,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,Description,The following statement contains a magic number: s = s.Substring( 4 );
Magic Number,BuildingCoder,CompatibilityMethods,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\Util.cs,Duplicate2,The following statement contains a magic number: value = met.Invoke( obj'              new object[] { 2 } ) as ElementId;
Missing Default,BuildingCoder,CmdFamilyParamValue,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdFamilyParamValue.cs,FamilyParamValueString,The following switch statement is missing a default case: switch( fp.StorageType )        {          case StorageType.Double:            value = Util.RealString(              (double) t.AsDouble( fp ) )              + " (double)";            break;            case StorageType.ElementId:            ElementId id = t.AsElementId( fp );            Element e = doc.GetElement( id );            value = id.IntegerValue.ToString() + " ("              + Util.ElementDescription( e ) + ")";            break;            case StorageType.Integer:            value = t.AsInteger( fp ).ToString()              + " (int)";            break;            case StorageType.String:            value = "'" + t.AsString( fp )              + "' (string)";            break;        }
Missing Default,BuildingCoder,CmdWallProfile,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\CmdWallProfile.cs,Execute,The following switch statement is missing a default case: switch( use_execute_nr )        {          case 1: return Execute1( cd' ref msg' els );          case 2: return Execute2( cd' ref msg' els );          case 3: return Execute3( cd' ref msg' els );        }
Missing Default,BuildingCoder,ParameterUnitConverter,D:\research\architectureSmells\repos\jeremytammik_the_building_coder_samples\BuildingCoder\BuildingCoder\ParameterUnitConverter.cs,AsMetersValue,The following switch statement is missing a default case: switch (ut)        {          case UnitType.UT_Length:            return imperialValue * METERS_IN_FEET;            case UnitType.UT_Area:            return imperialValue * Math.Pow(              METERS_IN_FEET' 2);            case UnitType.UT_Volume:            return imperialValue * Math.Pow(              METERS_IN_FEET' 3);        }
