Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,SendRequest,Cyclomatic complexity of the method is 12
Long Parameter List,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,SendRequest,The method has 5 parameters.
Long Statement,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,SendRequest,The length of the statement  "		if ((webResponse.StatusCode == HttpStatusCode.OK || webResponse.StatusCode == HttpStatusCode.Created) && callback != null) { " is 124.
Long Statement,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,MessagePollProcesser,The length of the statement  "	//you could create a representation for every message type that can be returned' but it might be easier to use a dynamic " is 120.
Long Statement,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The length of the statement  "						var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3]))); " is 146.
Long Statement,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The length of the statement  "						var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3]))); " is 146.
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: _pollTimer = new Timer (new TimerCallback (o =>  {  	SendRequest ("GET"' _sessionId + "/messaging/messages"' null' MessagePollProcesser' null);  })' null' 1000' 1000);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: _pollTimer = new Timer (new TimerCallback (o =>  {  	SendRequest ("GET"' _sessionId + "/messaging/messages"' null' MessagePollProcesser' null);  })' null' 1000' 1000);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: SendRequest ("PUT"' _sessionId + "/messaging/subscriptions/alerts/alert-catalog"' new AlertCatalogRequest {  	alertSetCategories = new[] {  		2'  		3'  		4'  		5  	}  }' null' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: SendRequest ("PUT"' _sessionId + "/messaging/subscriptions/alerts/alert-catalog"' new AlertCatalogRequest {  	alertSetCategories = new[] {  		2'  		3'  		4'  		5  	}  }' null' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: SendRequest ("PUT"' _sessionId + "/messaging/subscriptions/alerts/alert-catalog"' new AlertCatalogRequest {  	alertSetCategories = new[] {  		2'  		3'  		4'  		5  	}  }' null' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,StartIcws,The following statement contains a magic number: SendRequest ("PUT"' _sessionId + "/messaging/subscriptions/alerts/alert-catalog"' new AlertCatalogRequest {  	alertSetCategories = new[] {  		2'  		3'  		4'  		5  	}  }' null' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var rule in alertDefinition.alertRules) {  	if (rule.alertRuleId != ruleId) {  		continue;  	}  	foreach (var action in rule.alertActions) {  		if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  			var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  			var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  			var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  			if (statVm != null) {  				_syncContext.Post (o =>  {  					var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  					var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  					statVm.BackgroundColor = backgroundColor;  					statVm.ForegroundColor = foregroundColor;  				}' null);  			}  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var rule in alertDefinition.alertRules) {  	if (rule.alertRuleId != ruleId) {  		continue;  	}  	foreach (var action in rule.alertActions) {  		if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  			var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  			var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  			var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  			if (statVm != null) {  				_syncContext.Post (o =>  {  					var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  					var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  					statVm.BackgroundColor = backgroundColor;  					statVm.ForegroundColor = foregroundColor;  				}' null);  			}  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var rule in alertDefinition.alertRules) {  	if (rule.alertRuleId != ruleId) {  		continue;  	}  	foreach (var action in rule.alertActions) {  		if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  			var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  			var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  			var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  			if (statVm != null) {  				_syncContext.Post (o =>  {  					var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  					var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  					statVm.BackgroundColor = backgroundColor;  					statVm.ForegroundColor = foregroundColor;  				}' null);  			}  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var rule in alertDefinition.alertRules) {  	if (rule.alertRuleId != ruleId) {  		continue;  	}  	foreach (var action in rule.alertActions) {  		if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  			var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  			var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  			var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  			if (statVm != null) {  				_syncContext.Post (o =>  {  					var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  					var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  					statVm.BackgroundColor = backgroundColor;  					statVm.ForegroundColor = foregroundColor;  				}' null);  			}  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var action in rule.alertActions) {  	if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  		var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  		var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  		var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  		if (statVm != null) {  			_syncContext.Post (o =>  {  				var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  				var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  				statVm.BackgroundColor = backgroundColor;  				statVm.ForegroundColor = foregroundColor;  			}' null);  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var action in rule.alertActions) {  	if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  		var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  		var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  		var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  		if (statVm != null) {  			_syncContext.Post (o =>  {  				var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  				var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  				statVm.BackgroundColor = backgroundColor;  				statVm.ForegroundColor = foregroundColor;  			}' null);  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var action in rule.alertActions) {  	if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  		var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  		var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  		var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  		if (statVm != null) {  			_syncContext.Post (o =>  {  				var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  				var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  				statVm.BackgroundColor = backgroundColor;  				statVm.ForegroundColor = foregroundColor;  			}' null);  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: foreach (var action in rule.alertActions) {  	if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  		var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  		var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  		var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  		if (statVm != null) {  			_syncContext.Post (o =>  {  				var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  				var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  				statVm.BackgroundColor = backgroundColor;  				statVm.ForegroundColor = foregroundColor;  			}' null);  		}  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  	var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  	var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  	var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  	if (statVm != null) {  		_syncContext.Post (o =>  {  			var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  			var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  			statVm.BackgroundColor = backgroundColor;  			statVm.ForegroundColor = foregroundColor;  		}' null);  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  	var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  	var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  	var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  	if (statVm != null) {  		_syncContext.Post (o =>  {  			var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  			var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  			statVm.BackgroundColor = backgroundColor;  			statVm.ForegroundColor = foregroundColor;  		}' null);  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  	var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  	var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  	var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  	if (statVm != null) {  		_syncContext.Post (o =>  {  			var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  			var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  			statVm.BackgroundColor = backgroundColor;  			statVm.ForegroundColor = foregroundColor;  		}' null);  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (action.targetId.ToString () == "ININ.Supervisor.FontAlertAction") {  	var background = action.namedValues ["ININ.Supervisor.FontAlertAction.BackgroundColor"].ToString ().Split (':');  	var foreground = action.namedValues ["ININ.Supervisor.FontAlertAction.TextColor"].ToString ().Split (':');  	var statVm = _statistics.FirstOrDefault (s => s.Key == statId.ToString ());  	if (statVm != null) {  		_syncContext.Post (o =>  {  			var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  			var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  			statVm.BackgroundColor = backgroundColor;  			statVm.ForegroundColor = foregroundColor;  		}' null);  	}  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (statVm != null) {  	_syncContext.Post (o =>  {  		var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  		var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  		statVm.BackgroundColor = backgroundColor;  		statVm.ForegroundColor = foregroundColor;  	}' null);  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (statVm != null) {  	_syncContext.Post (o =>  {  		var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  		var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  		statVm.BackgroundColor = backgroundColor;  		statVm.ForegroundColor = foregroundColor;  	}' null);  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (statVm != null) {  	_syncContext.Post (o =>  {  		var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  		var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  		statVm.BackgroundColor = backgroundColor;  		statVm.ForegroundColor = foregroundColor;  	}' null);  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: if (statVm != null) {  	_syncContext.Post (o =>  {  		var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  		var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  		statVm.BackgroundColor = backgroundColor;  		statVm.ForegroundColor = foregroundColor;  	}' null);  }  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: _syncContext.Post (o =>  {  	var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  	var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  	statVm.BackgroundColor = backgroundColor;  	statVm.ForegroundColor = foregroundColor;  }' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: _syncContext.Post (o =>  {  	var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  	var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  	statVm.BackgroundColor = backgroundColor;  	statVm.ForegroundColor = foregroundColor;  }' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: _syncContext.Post (o =>  {  	var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  	var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  	statVm.BackgroundColor = backgroundColor;  	statVm.ForegroundColor = foregroundColor;  }' null);  
Magic Number,WpfStatistics,ViewModel,C:\repos\InteractiveIntelligence_ICWS-Statistics-Examples\csharp\ViewModel.cs,ProcessFontAlertAction,The following statement contains a magic number: _syncContext.Post (o =>  {  	var backgroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (background [1])' Byte.Parse (background [2])' Byte.Parse (background [3])));  	var foregroundColor = new SolidColorBrush (Color.FromRgb (Byte.Parse (foreground [1])' Byte.Parse (foreground [2])' Byte.Parse (foreground [3])));  	statVm.BackgroundColor = backgroundColor;  	statVm.ForegroundColor = foregroundColor;  }' null);  
