Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		DequeueAndSendEmails ();  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  	try {  		Thread.Sleep (60000);  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		DequeueAndSendEmails ();  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  	try {  		Thread.Sleep (60000);  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: while (true) {  	try {  		DequeueAndSendEmails ();  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  	try {  		Thread.Sleep (60000);  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: try {  	DequeueAndSendEmails ();  }  catch (Exception ex) {  	if (failureCount++ < 100) {  		ExceptionHelper.Log (ex' string.Empty);  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: if (failureCount++ < 100) {  	ExceptionHelper.Log (ex' string.Empty);  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: try {  	Thread.Sleep (60000);  }  catch (Exception ex) {  	if (failureCount++ < 100) {  		ExceptionHelper.Log (ex' string.Empty);  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: try {  	Thread.Sleep (60000);  }  catch (Exception ex) {  	if (failureCount++ < 100) {  		ExceptionHelper.Log (ex' string.Empty);  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: Thread.Sleep (60000);  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,Run,The following statement contains a magic number: if (failureCount++ < 100) {  	ExceptionHelper.Log (ex' string.Empty);  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,DequeueAndSendEmails,The following statement contains a magic number: foreach (var message in messages) {  	bool requeueMessage = true;  	try {  		if (message.EmailMessage.SendDate <= DateTime.UtcNow) {  			EmailController.SendEmail (message.EmailMessage);  			message.Delete ();  			requeueMessage = false;  		}  	}  	catch (Exception ex) {  		if (failureCount++ < 100) {  			ExceptionHelper.Log (ex' string.Empty);  		}  	}  	finally {  		if (requeueMessage) {  			message.Requeue ();  		}  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,DequeueAndSendEmails,The following statement contains a magic number: try {  	if (message.EmailMessage.SendDate <= DateTime.UtcNow) {  		EmailController.SendEmail (message.EmailMessage);  		message.Delete ();  		requeueMessage = false;  	}  }  catch (Exception ex) {  	if (failureCount++ < 100) {  		ExceptionHelper.Log (ex' string.Empty);  	}  }  finally {  	if (requeueMessage) {  		message.Requeue ();  	}  }  
Magic Number,Interview.EmailService,WorkerRole,C:\repos\paf31_initialround\InitialRound.Email\WorkerRole.cs,DequeueAndSendEmails,The following statement contains a magic number: if (failureCount++ < 100) {  	ExceptionHelper.Log (ex' string.Empty);  }  
