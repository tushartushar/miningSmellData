Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,DatabaseScripter,Program,C:\repos\7digital_DatabaseMigraine\src\DatabaseScripter\Program.cs,,The length of the parameter suffixToDirectoryNameCorrespondence is 35.
Long Statement,DatabaseScripter,Program,C:\repos\7digital_DatabaseMigraine\src\DatabaseScripter\Program.cs,Main,The length of the statement  "				Console.WriteLine("Please supply a path as an argument or run this program in the same location where the sql files are."); " is 123.
Magic Number,DatabaseScripter,Program,C:\repos\7digital_DatabaseMigraine\src\DatabaseScripter\Program.cs,Main,The following statement contains a magic number: try  			{  				foreach (var sqlFile in sqlFiles)  				{  					string targetFilePath = FindDestination(sqlFile);    					if (Directory.Exists(targetFilePath) || File.Exists(targetFilePath))  					{  						Console.Error.WriteLine("Warning' could not move because target file already exists: " + targetFilePath);  					} else {  						Move(sqlFile' targetFilePath);  					}  					RestoreDefaultEncodingThatIsGrepable(new FileInfo(targetFilePath));  				}  			}  			catch (Exception e)  			{  				Console.Error.WriteLine(e);  				Environment.Exit(2);  			}
Magic Number,DatabaseScripter,Program,C:\repos\7digital_DatabaseMigraine\src\DatabaseScripter\Program.cs,IsGit,The following statement contains a magic number: while (true)  			{  				const string dotGitPathName = ".git";    				//Console.WriteLine("Looking for path in " + currentPath);  				string dotGitPath = Path.Combine(currentPath' dotGitPathName);  				if (Directory.Exists(dotGitPath)) {  					return true;  				}    				var directories = currentPath.Split(new[] { Path.DirectorySeparatorChar });  				var dotdotcount = directories.Count(dir => dir == "..");  				if (dotdotcount > (directories.Length / 2))  				{  					return false;  				}    				currentPath = Path.Combine(currentPath' "..");  			}
