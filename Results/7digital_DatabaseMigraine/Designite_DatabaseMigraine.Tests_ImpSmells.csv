Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,BeConsistentWrtCaseOfId,Cyclomatic complexity of the method is 12
Long Identifier,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,,The length of the parameter _migrationsInStagingForReferenceEnvironment is 43.
Long Identifier,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,,The length of the parameter _migrationsForReferenceEnvironment is 34.
Long Identifier,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,,The length of the parameter _additionalDbsInSameReferenceEnvironmentHaveSameAmountOfMigrationsApplied is 73.
Long Identifier,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,TestMigration,The length of the parameter changesBetweenMigrationAppliedVersusMerged is 42.
Long Identifier,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,,The length of the parameter _migrationStringContainingPolicies is 34.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,SetupConnections,The length of the statement  "					"Please specify in the app.config file '{0}' setting for the connection string to connect to the reference database(s) in server '{1}'"' " is 136.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,SetupConnections,The length of the statement  "				Assert.Fail("No tables found in database {0} of server {1}' are you sure you have the proper permissions?{2}(connection string is {3})"' " is 136.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,SetupConnections,The length of the statement  "				new MigrationManager().GetNonRetiredMigrationsRunInDb(_scriptsPath' _referenceServer' DifferentDbNameInReferenceEnvironment).ToArray(); " is 135.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,SetupConnections,The length of the statement  "				new MigrationManager().GetMigrationsRunInDb(_scriptsPath' _referenceServer' DifferentDbNameInReferenceEnvironment).ToArray(); " is 125.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,CheckAdditionalDbsInSameReferenceEnvironmentHaveSameAmountOfMigrationsApplied,The length of the statement  "						new MigrationManager().GetMigrationsRunInDb(_scriptsPath' _referenceServer' db.Name).Select(m => m.FileNameWithoutExtension)); " is 126.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,CheckAdditionalDbsInSameReferenceEnvironmentHaveSameAmountOfMigrationsApplied,The length of the statement  "						" (if you want to stop doing this manually' use disposable DBs in the tests that depend on this DB' so we can get rid of it):" + Environment.NewLine " is 148.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,CompareScripts,The length of the statement  "					Assert.Fail("CheckAdditionalDbsInSameReferenceEnvironmentHaveSameAmountOfMigrationsApplied function should set additionalDbsInSameReferenceEnvironmentHaveSameAmountOfMigrationsApplied value"); " is 192.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,CompareScriptsContent,The length of the statement  "			var disposableDbCreated = _disposableDbManager.CreateCompleteDisposableDbWithMigrations(_migrationsInStagingForReferenceEnvironment.Select(m => m.FileNameWithoutExtension)); " is 173.
Long Statement,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,GenericDiscard,The length of the statement  "			return DbScriptFolderManager.ReservedPrefixes.Any(reservedPrefix => dbElement.Name.ToLower().StartsWith(reservedPrefix)) || " is 123.
Long Statement,DatabaseMigraine.Tests,DatabaseCreationTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseCreationTests.cs,SetupConnections,The length of the statement  "			Assert.That(_dbCreationPath' Is.Not.Empty' "Please specify a DbCreationPath appsetting in your config file that is not empty"); " is 127.
Long Statement,DatabaseMigraine.Tests,DisposableDbSetUp,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DisposableDbSetUp.cs,CreateDisposableDb,The length of the statement  "			var restOfConnString = ConfigurationManager.AppSettings["DisposableDbConnString"] + ";Application Name=" + ApplicationNameForConnectionString + ";"; " is 148.
Long Statement,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,TestMigration,The length of the statement  "			var randomDirName = "mig" + MigrationManager.GetMigrationId(Path.GetFileNameWithoutExtension(migration.FullName)) + "-" + " is 121.
Long Statement,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,TryMergingAndCompare,The length of the statement  "				changes = DbComparer.CompareDatabases(_disposableDbServer.Databases[dbPlusMigration]' _disposableDbServer.Databases[dbWithMigrationMerged]' " is 139.
Long Statement,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,ExplainFailure,The length of the statement  "				"The migration {0} failed the sanity check of merging its effects in SQL files and having no differences over a DB with the migration applied on top of it." + " is 158.
Long Statement,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,CheckStuckMigrations,The length of the statement  "						maxPeriod.Days' Environment.NewLine + string.Join("'" + Environment.NewLine' stuckMigrations.Select(m => m.FileNameWithoutExtension).ToArray()))); " is 146.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableNamesDontHaveDeprecatedPrefix,The length of the statement  "				Assert.That(StartsWithPrefix(table.Name)' Is.False' "Table name shouldn't start with a deprecated prefix: " + table.Name); " is 122.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableFirstColumnIsTableName,The length of the statement  "						String.Format("First column {0} of table {1} should be same name as table but in singular"' table.Columns[0].Name' table.Name)); " is 128.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableFirstColumnIsTableName,The length of the statement  "			//    offendingToString += String.Format(Environment.NewLine + "- Table {0} column {1}"' pair.Value.Name' pair.Key.Name); " is 121.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableFirstColumnIsTableName,The length of the statement  "			//Assert.That(offending.Count' Is.EqualTo(0)' "Following columns should have same name as their table because it's the first column" + " is 134.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,ColumnsEndingWithIdShouldBeForeignOrPrimaryKey,The length of the statement  "								String.Format("Column {0} of table {1} should be foreign or primary key because it ends with 'Id'"' column.Name' table.Name)); " is 126.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,ColumnsEndingWithIdShouldBeForeignOrPrimaryKey,The length of the statement  "			//    offendingToString += String.Format(Environment.NewLine + "- Table {0} column {1}"' pair.Value.Name' pair.Key.Name); " is 121.
Long Statement,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,ColumnsBeingForeignOrPrimaryKeyShouldEndWithId,The length of the statement  "								String.Format("Column {0} of table {1} should end with 'Id' because it is a foreign or primary key"' column.Name' table.Name)); " is 127.
Empty Catch Block,DatabaseMigraine.Tests,DatabaseComparisonTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseComparisonTests.cs,CompareAdditionalDbs,The method has an empty catch block.
Magic Number,DatabaseMigraine.Tests,DatabaseCreationTests,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\DatabaseCreationTests.cs,SetUpDisposableServer,The following statement contains a magic number: Retry.RetryXTimes(3' RefreshServer' DisposableDbServer);
Magic Number,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,TestMigration,The following statement contains a magic number: var randomDirName = "mig" + MigrationManager.GetMigrationId(Path.GetFileNameWithoutExtension(migration.FullName)) + "-" +  				new Random().Next(10000);
Magic Number,DatabaseMigraine.Tests,MigrationCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\MigrationCop.cs,CheckStuckMigrations,The following statement contains a magic number: TimeSpan maxPeriod = TimeSpan.FromDays(15);
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableFirstColumnIsTableName,The following statement contains a magic number: tableName = table.Name.Substring(3' table.Name.Length - 3).ToLower();
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,TableFirstColumnIsTableName,The following statement contains a magic number: tableName = table.Name.Substring(3' table.Name.Length - 3).ToLower();
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,FindOutSmellyManyToManyTables,The following statement contains a magic number: idColumnNames.Count != 3
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,FindOutSmellyManyToManyTables,The following statement contains a magic number: Assert.Fail(  						String.Format("The table {0} seems to be a many-to-many relationship that has an unneeded column called {1}."'  							table.Name' orderedIdColumnNames.ElementAt(2) + "ID") +  						" Many-to-many relationships are tables that normally just have 2 joint-ForeignKeys that act as a Primary Key." +  						" There is no need to add an extra ID column on top of them.");
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,FindOutSmellyManyToManyTables,The following statement contains a magic number: orderedIdColumnNames.ElementAt(0) + orderedIdColumnNames.ElementAt(1) == orderedIdColumnNames.ElementAt(2) ||  				    orderedIdColumnNames.ElementAt(1) + orderedIdColumnNames.ElementAt(0) == orderedIdColumnNames.ElementAt(2)
Magic Number,DatabaseMigraine.Tests,TableCop,D:\research\architectureSmells\repos\7digital_DatabaseMigraine\src\DatabaseMigraine.Tests\TableCop.cs,FindOutSmellyManyToManyTables,The following statement contains a magic number: orderedIdColumnNames.ElementAt(0) + orderedIdColumnNames.ElementAt(1) == orderedIdColumnNames.ElementAt(2) ||  				    orderedIdColumnNames.ElementAt(1) + orderedIdColumnNames.ElementAt(0) == orderedIdColumnNames.ElementAt(2)
