Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DatabaseMigraine,DatabaseChangeSet,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DatabaseChangeSet.cs,GetFirstDifference,Cyclomatic complexity of the method is 8
Complex Method,DatabaseMigraine,DatabaseChangeSet,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DatabaseChangeSet.cs,ToString,Cyclomatic complexity of the method is 8
Complex Method,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,Cyclomatic complexity of the method is 8
Complex Method,DatabaseMigraine,DbParams,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbParams.cs,DbParams,Cyclomatic complexity of the method is 14
Long Parameter List,DatabaseMigraine,DbScriptFolderManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbScriptFolderManager.cs,RunScripts,The method has 5 parameters. Parameters: disposableDbServer' dbScriptsPath' dbname' originalDbName' scriptFileNameWhiteList
Long Parameter List,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,RunScripts,The method has 5 parameters. Parameters: disposableDbServer' dbScriptsPath' dbname' originalDbName' scriptFileNameWhiteList
Long Identifier,DatabaseMigraine,DbScriptFolderManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbScriptFolderManager.cs,PreFormatScripts,The length of the parameter contentThatShouldBeTherePreviously is 34.
Long Identifier,DatabaseMigraine,DisposableDbManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DisposableDbManager.cs,CreateDisposableDb,The length of the parameter includeProgrammabilityAndViews is 30.
Long Identifier,DatabaseMigraine.DatabaseElements,Base,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DatabaseElements\Base.cs,,The length of the parameter ParentToChildrenSeparatorInFullName is 35.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GenerateMigration,The length of the parameter scriptFileNameWithoutExtension is 30.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GetInsertStatementForMigration,The length of the parameter scriptFileNameWithoutExtension is 30.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,FileNameToTransactionName,The length of the parameter scriptFileNameWithoutExtension is 30.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GenerateMigrationFor,The length of the parameter scriptFileNameWithoutExtension is 30.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GetInsertStatementForMigration,The length of the parameter migrationFileNameWithoutExtension is 33.
Long Identifier,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GetMigrationId,The length of the parameter scriptFileNameWithoutExtension is 30.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				TableChanges = CompareDatabases<TableElement'TableElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison)' " is 133.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				FunctionChanges = CompareDatabases<FunctionElement' FunctionElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison)' " is 143.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				ViewChanges = CompareDatabases<ViewElement' ViewElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison)' " is 131.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				StoredProcedureChanges = CompareDatabases<StoredProcedureElement' StoredProcedureElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison)' " is 164.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				TriggerChanges = CompareDatabases<TableTriggerElement' TableTriggerElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison)' " is 150.
Long Statement,DatabaseMigraine,DbComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbComparer.cs,CompareDatabases,The length of the statement  "				ForeignKeyChanges = CompareDatabases<ForeignKeyElement' ForeignKeyElementFactory>(baseDatabaseBefore' databaseAfter' null' sanitizeBeforeComparison) " is 148.
Long Statement,DatabaseMigraine,DbScriptFolderManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbScriptFolderManager.cs,CheckEncodingConvention,The length of the statement  "					String.Format("The file {0} has the encoding {1} which is not easily grep-able' please use the DatabaseScripter on the folder to fix this"' " is 139.
Long Statement,DatabaseMigraine,DbScriptFolderManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DbScriptFolderManager.cs,CheckScriptNameConventions,The length of the statement  "					"No script should start with the '{0}' prefix' please use DatabaseScripter to transform into Migrator structure: {1}"' dboPrefix' elementName)); " is 144.
Long Statement,DatabaseMigraine,DisposableDbManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DisposableDbManager.cs,RunMigrations,The length of the statement  "				throw new Exception(String.Format("There was some kind of problem and {0} migrations were applied instead of {1}. First migration requested was {2}."' " is 150.
Long Statement,DatabaseMigraine,DisposableDbManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DisposableDbManager.cs,KillDb,The length of the statement  "				disposableDbServer.ConnectionContext.ExecuteNonQuery(String.Format("ALTER DATABASE {0} SET RESTRICTED_USER WITH ROLLBACK IMMEDIATE"' dbName)); " is 142.
Long Statement,DatabaseMigraine,SqlExecutor,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\SqlExecutor.cs,ExecuteNonQuery,The length of the statement  "				throw new InvalidArgumentException("Don't use the optional second argument if you don't need to (instead of using 'master')"); " is 126.
Long Statement,DatabaseMigraine,SqlExecutor,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\SqlExecutor.cs,ExecuteQuery,The length of the statement  "				throw new InvalidArgumentException("Don't use the optional second argument if you don't need to (instead of using 'master')"); " is 126.
Long Statement,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,CheckForRiskyBatchStatementGO,The length of the statement  "					"The following scripts contain the batch statement 'GO' which is risky for migrations because they are contained in transactions and thus can lock system tables:"' " is 163.
Long Statement,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,GenerateMigrationsContentsToDisk,The length of the statement  "					Console.WriteLine("Skipping migration {0} because it (or an equivalent one) has already run in this environment"' migrationName); " is 129.
Long Statement,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,CheckIfDatabaseChangeLogTableExists,The length of the statement  "				string msg = String.Format("Table {0} not found in database {1}' please run this script on it:"' DatabaseChangeLogTableName' database.Name); " is 140.
Long Statement,DatabaseMigraine.Managers,MigrationManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\MigrationManager.cs,MigrationAlreadyRun,The length of the statement  "			string sqlHashChecker = String.Format("SELECT 'x' FROM {0} WHERE Hash = '{1}'"' DatabaseChangeLogTableName' hash.Replace("'"' "''")); " is 133.
Long Statement,DatabaseMigraine.Managers,StoredProcedureManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\StoredProcedureManager.cs,ReplaceCreateWithAlter,The length of the statement  "			var scriptContentsWithAlter = Regex.Replace(scriptContents' @"CREATE\s+PROCEDURE"' "ALTER PROCEDURE"' RegexOptions.IgnoreCase); " is 127.
Long Statement,DatabaseMigraine.Managers,StoredProcedureManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\StoredProcedureManager.cs,ReplaceCreateWithAlter,The length of the statement  "			scriptContentsWithAlter = Regex.Replace(scriptContentsWithAlter' @"CREATE\s+PROC"' "ALTER PROC"' RegexOptions.IgnoreCase); " is 122.
Long Statement,DatabaseMigraine.Managers,TableManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\TableManager.cs,CheckForeignKeyInclusionViolation,The length of the statement  "					String.Format("The following scripts contain Foreign Keys addition' did you run the DatabaseScripter on them to split them out in a different folder?:")' " is 153.
Long Statement,DatabaseMigraine.Managers,ViewManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Managers\ViewManager.cs,CheckContentViolationRules,The length of the statement  "						"You don't need to set IgnoreViewPerformanceCheck setting to true' as your DB schema for {0} respects this rule already."' originalDbName)); " is 140.
Empty Catch Block,DatabaseMigraine,Settings,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Settings.cs,IsBoolSettingEnabled,The method has an empty catch block.
Empty Catch Block,DatabaseMigraine,Settings,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\Settings.cs,IsBoolSettingEnabled,The method has an empty catch block.
Magic Number,DatabaseMigraine,DisposableDbManager,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\DisposableDbManager.cs,FindDatabaseScriptsPath,The following statement contains a magic number: while (true)  			{  				Console.WriteLine("Looking for path in " + currentPath);  				string dbScriptsPath = Path.Combine(currentPath' dbNameInVcs);  				if (Directory.Exists(dbScriptsPath))  					return new DirectoryInfo(dbScriptsPath);    				dbScriptsPath = Path.Combine(currentPath' "db");  				if (Directory.Exists(dbScriptsPath))  				{  					Console.WriteLine("Looking for path in " + Path.Combine(dbScriptsPath' dbNameInVcs));  					if (Directory.Exists(Path.Combine(dbScriptsPath' dbNameInVcs)))  					{  						return new DirectoryInfo(Path.Combine(dbScriptsPath' dbNameInVcs));  					}    					dbScriptsPath = Path.Combine(Path.Combine(dbScriptsPath' "shared")' dbNameInVcs);  					Console.WriteLine("Looking for path in " + dbScriptsPath);  					if (Directory.Exists(dbScriptsPath))  					{  						return new DirectoryInfo(dbScriptsPath);  					}  				}    				var directories = currentPath.Split(new[] { Path.DirectorySeparatorChar });  				var dotdotcount = directories.Count(dir => dir == "..");  				if (dotdotcount > (directories.Length / 2))  				{  					throw new Exception(String.Format(  						"No *.sql files found' did you forget to populate your git submodule? (via `git submodule update --init`)" +  						" Current directory is {0}' current path is {1} and dbScriptsPath is {2}"'  						Directory.GetCurrentDirectory()' currentPath' dbScriptsPath));  				}    				currentPath = Path.Combine(currentPath' "..");  			}
Magic Number,DatabaseMigraine,ScriptComparer,C:\repos\7digital_DatabaseMigraine\src\DatabaseMigraine\ScriptComparer.cs,SanitizeSqlServerRhetoric,The following statement contains a magic number: foreach (Match match in new Regex (@"\[[^\.\s]+\]").Matches(scriptContents))  			{  				scriptContents = scriptContents.Replace(match.Value' match.Value.Substring(1' match.Value.Length - 2));  			}
