Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,CachedImage,Image,C:\repos\floydpink_CachedImage\source\Image.cs,ImageUrlPropertyChanged,The method has an empty catch block.
Magic Number,CachedImage,FileCache,C:\repos\floydpink_CachedImage\source\FileCache.cs,HitAsync,The following statement contains a magic number: request.Timeout = 30;
Magic Number,CachedImage,FileCache,C:\repos\floydpink_CachedImage\source\FileCache.cs,HitAsync,The following statement contains a magic number: try              {                  var response = await request.GetResponseAsync();                  var responseStream = response.GetResponseStream();                  if (responseStream == null)                      return null;                  if (!IsWritingFile.ContainsKey(fileName))                  {                      IsWritingFile[fileName] = true;                      fileStream = new FileStream(localFile' FileMode.Create' FileAccess.Write);                  }                    using (responseStream)                  {                      var bytebuffer = new byte[100];                      int bytesRead;                      do                      {                          bytesRead = await responseStream.ReadAsync(bytebuffer' 0' 100);                          if (fileStream != null)                              await fileStream.WriteAsync(bytebuffer' 0' bytesRead);                          await memoryStream.WriteAsync(bytebuffer' 0' bytesRead);                      } while (bytesRead > 0);                      if (fileStream != null)                      {                          await fileStream.FlushAsync();                          fileStream.Dispose();                          IsWritingFile.Remove(fileName);                      }                  }                  memoryStream.Seek(0' SeekOrigin.Begin);                  return memoryStream;              }              catch (WebException)              {                  return null;              }
Magic Number,CachedImage,FileCache,C:\repos\floydpink_CachedImage\source\FileCache.cs,HitAsync,The following statement contains a magic number: try              {                  var response = await request.GetResponseAsync();                  var responseStream = response.GetResponseStream();                  if (responseStream == null)                      return null;                  if (!IsWritingFile.ContainsKey(fileName))                  {                      IsWritingFile[fileName] = true;                      fileStream = new FileStream(localFile' FileMode.Create' FileAccess.Write);                  }                    using (responseStream)                  {                      var bytebuffer = new byte[100];                      int bytesRead;                      do                      {                          bytesRead = await responseStream.ReadAsync(bytebuffer' 0' 100);                          if (fileStream != null)                              await fileStream.WriteAsync(bytebuffer' 0' bytesRead);                          await memoryStream.WriteAsync(bytebuffer' 0' bytesRead);                      } while (bytesRead > 0);                      if (fileStream != null)                      {                          await fileStream.FlushAsync();                          fileStream.Dispose();                          IsWritingFile.Remove(fileName);                      }                  }                  memoryStream.Seek(0' SeekOrigin.Begin);                  return memoryStream;              }              catch (WebException)              {                  return null;              }
