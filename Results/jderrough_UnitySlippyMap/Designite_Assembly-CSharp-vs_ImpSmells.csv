Implementation smell,Namespace,Class,File,Method,Description
Long Method,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The method has 145 lines of code.
Long Method,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The method has 124 lines of code.
Long Method,UnitySlippyMap.Map,TileBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileBehaviour.cs,CreateTileTemplate,The method has 116 lines of code.
Complex Method,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,QuadKeyToTileXY,Cyclomatic complexity of the method is 15
Complex Method,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,Cyclomatic complexity of the method is 30
Complex Method,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,Cyclomatic complexity of the method is 38
Complex Method,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetNeighbourTile,Cyclomatic complexity of the method is 22
Complex Method,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetNeighbourTile,Cyclomatic complexity of the method is 22
Complex Method,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,Cyclomatic complexity of the method is 11
Complex Method,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetNeighbourTile,Cyclomatic complexity of the method is 22
Complex Method,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetNeighbourTile,Cyclomatic complexity of the method is 22
Complex Method,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,Cyclomatic complexity of the method is 26
Complex Method,UnitySlippyMap.Map,TileBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileBehaviour.cs,CreateTileTemplate,Cyclomatic complexity of the method is 27
Complex Method,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,Cyclomatic complexity of the method is 9
Long Parameter List,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,LatLongToPixelXY,The method has 5 parameters.
Long Parameter List,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToLatLong,The method has 5 parameters.
Long Parameter List,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetCenterTile,The method has 6 parameters.
Long Parameter List,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetNeighbourTile,The method has 11 parameters.
Long Parameter List,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetCenterTile,The method has 6 parameters.
Long Parameter List,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetNeighbourTile,The method has 11 parameters.
Long Parameter List,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,The method has 7 parameters.
Long Parameter List,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GetCenterTile,The method has 6 parameters.
Long Parameter List,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GetNeighbourTile,The method has 11 parameters.
Long Parameter List,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetCenterTile,The method has 6 parameters.
Long Parameter List,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetNeighbourTile,The method has 11 parameters.
Long Parameter List,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetCenterTile,The method has 6 parameters.
Long Parameter List,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetNeighbourTile,The method has 11 parameters.
Long Statement,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The length of the statement  "	p [1] = (int)((1.0 - Math.Log (Math.Tan (lat * Math.PI / 180.0) + 1.0 / Math.Cos (lat * Math.PI / 180.0)) / Math.PI) / 2.0 * (1 << zoomLevel)); " is 143.
Long Statement,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The length of the statement  "			UnityEngine.Debug.LogError (e.Message + ": profile.Ts.Ticks: " + profile.Ts.Ticks + ": profile.Parent.Ts.Ticks: " + profile.Parent.Ts.Ticks); " is 141.
Long Statement,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The length of the statement  "	text = String.Format ("{0}[{1}% | {2} calls] {3}: {4:00}:{5:00}:{6:00}.{7:00}\n"' indentation' percentage' profile.Count' profile.Name' profile.Ts.Hours' profile.Ts.Minutes' profile.Ts.Seconds' profile.Ts.Milliseconds / 10); " is 224.
Long Statement,UnityThreading,DispatcherBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Dispatcher.cs,AddTask,The length of the statement  "		if (TaskSortingSystem == UnityThreading.TaskSortingSystem.ReorderWhenAdded || TaskSortingSystem == UnityThreading.TaskSortingSystem.ReorderWhenExecuted) " is 152.
Long Statement,UnityThreading,DispatcherBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Dispatcher.cs,AddTasks,The length of the statement  "		if (TaskSortingSystem == UnityThreading.TaskSortingSystem.ReorderWhenAdded || TaskSortingSystem == UnityThreading.TaskSortingSystem.ReorderWhenExecuted) " is 152.
Long Statement,UnityThreading,Dispatcher,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Dispatcher.cs,CheckAccessLimitation,The length of the statement  "		throw new InvalidOperationException ("Dispatching a Task with the Dispatcher associated to the current thread is prohibited. You can run these Tasks without the need of a Dispatcher."); " is 185.
Long Statement,UnityThreading,TaskDistributor,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\TaskDistributer.cs,CheckAccessLimitation,The length of the statement  "	if (ThreadBase.CurrentThread != null && ThreadBase.CurrentThread is TaskWorker && ((TaskWorker)ThreadBase.CurrentThread).TaskDistributor == this) { " is 147.
Long Statement,UnityThreading,TaskDistributor,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\TaskDistributer.cs,CheckAccessLimitation,The length of the statement  "		throw new InvalidOperationException ("Access to TaskDistributor prohibited when called from inside a TaskDistributor thread. Dont dispatch new Tasks through the same TaskDistributor. If you want to distribute new tasks create a new TaskDistributor and use the new created instance. Remember to dispose the new instance to prevent thread spamming."); " is 349.
Long Statement,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The length of the statement  "                    Debug.Log("DEBUG: zooming: touch count: " + validTouchCount + "' factor: " + zoomFactor + "' zooming stopped: " + zoomingStopped + "' new finger setup: " + newFingerSetup);" is 172.
Long Statement,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The length of the statement  "			bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3])); " is 127.
Long Statement,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetX = Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [0] - centerTileMeters [0]) * Map.RoundedScaleMultiplier; " is 129.
Long Statement,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetZ = -Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [1] - centerTileMeters [1]) * Map.RoundedScaleMultiplier; " is 130.
Long Statement,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,RequestTile,The length of the statement  "	DataTable dt = db.ExecuteQuery ("SELECT tile_data FROM tiles WHERE zoom_level=" + roundedZoom + " AND tile_column=" + tileX + " AND tile_row=" + tileY); " is 152.
Long Statement,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetX = Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [0] - centerTileMeters [0]) * Map.RoundedScaleMultiplier; " is 129.
Long Statement,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetZ = -Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [1] - centerTileMeters [1]) * Map.RoundedScaleMultiplier; " is 130.
Long Statement,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetTileURL,The length of the statement  "	return String.Format (Path.Combine (BaseURL' URLParametersFormat).Replace ("\\"' "/") + TileImageExtension' roundedZoom' tileX' tileY); " is 135.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CheckTileInExistence,The length of the statement  "	return CheckTileInExistence (roundedZoom' currentRoundedZoom' currentTileX' currentTileY) && CheckTileInExistence (roundedZoom' currentRoundedZoom' currentTileX + 1' currentTileY) && CheckTileInExistence (roundedZoom' currentRoundedZoom' currentTileX' currentTileY + 1) && CheckTileInExistence (roundedZoom' currentRoundedZoom' currentTileX + 1' currentTileY + 1); " is 364.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CleanUpTiles,The length of the statement  "			if (!inFrustum || (roundedZoomDif > 0 && CheckTileOutExistence (roundedZoom' tileRoundedZoom' tileX' tileY)) || (roundedZoomDif < 0 && CheckTileInExistence (roundedZoom' tileRoundedZoom' tileX' tileY))) { " is 204.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,The length of the statement  "			if (GetNeighbourTile (tileX' tileY' offsetX' offsetZ' tileCountOnX' tileCountOnY' NeighbourTileDirection.South' out nTileX' out nTileY' out nOffsetX' out nOffsetZ)) " is 164.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,The length of the statement  "			if (GetNeighbourTile (tileX' tileY' offsetX' offsetZ' tileCountOnX' tileCountOnY' NeighbourTileDirection.North' out nTileX' out nTileY' out nOffsetX' out nOffsetZ)) " is 164.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,The length of the statement  "			if (GetNeighbourTile (tileX' tileY' offsetX' offsetZ' tileCountOnX' tileCountOnY' NeighbourTileDirection.East' out nTileX' out nTileY' out nOffsetX' out nOffsetZ)) " is 163.
Long Statement,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,GrowTiles,The length of the statement  "			if (GetNeighbourTile (tileX' tileY' offsetX' offsetZ' tileCountOnX' tileCountOnY' NeighbourTileDirection.West' out nTileX' out nTileY' out nOffsetX' out nOffsetZ)) " is 163.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "				url = (proxyURL.StartsWith ("http://") ? "" : "http://") + proxyURL + (proxyURL.EndsWith ("?") ? "" : "?") + "url=" + WWW.EscapeURL (url); " is 138.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "								Debug.LogError ("ERROR: VirtualEarthTileLayer.Update: loader [" + loader.url + "] error: " + loader.error);// + "(" + loader.text + ")");" is 137.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "						XmlSerializer xs = new XmlSerializer (typeof(UnitySlippyMap.VirtualEarth.Metadata)' "http://schemas.microsoft.com/search/local/ws/rest/v1"); " is 140.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "						baseURL = (metadata.ResourceSets [0].Resources [0] as UnitySlippyMap.VirtualEarth.ImageryMetadata).ImageUrl.Replace ("{culture}"' CultureInfo.CurrentCulture.ToString ()); " is 170.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "														Debug.LogError ("ERROR: VirtualEarthTileLayer.Update: metadata deserialization exception:\n" + e.Source + " : " + e.InnerException + "\n" + e.Message + "\n" + e.StackTrace);" is 173.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The length of the statement  "														Debug.Log ("DEBUG: VirtualEarthTileLayer.Update: ImageUrl: " + (metadata.ResourceSets [0].Resources [0] as UnitySlippyMap.VirtualEarth.ImageryMetadata).ImageUrl);" is 162.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetX = Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [0] - centerTileMeters [0]) * Map.RoundedScaleMultiplier; " is 129.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetZ = -Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [1] - centerTileMeters [1]) * Map.RoundedScaleMultiplier; " is 130.
Long Statement,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetTileURL,The length of the statement  "		url = (proxyURL.StartsWith ("http://") ? "" : "http://") + proxyURL + (proxyURL.EndsWith ("?") ? "" : "?") + "key=" + key + "&url=" + WWW.EscapeURL (url); " is 154.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,Update,The length of the statement  "								Debug.LogError ("ERROR: WMSTileLayer.Update: loader [" + loader.url + "] error: " + loader.error + "(" + loader.text + ")");" is 124.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,Update,The length of the statement  "														Debug.LogError ("ERROR: WMSTileLayer.Update: GetCapabilities deserialization exception:\n" + e.Source + " : " + e.InnerException + "\n" + e.Message + "\n" + e.StackTrace);" is 171.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,Update,The length of the statement  "								"\t\t\tContactAddress:\n\t\t\t\tAddressType: {5}\n\t\t\t\tAddress: {6}\n\t\t\t\tCity: {7}\n\t\t\t\tStateOrProvince: {8}\n\t\t\t\tPostCode: {9}\n\t\t\t\tCountry: {10}\n" +" is 170.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetX = Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [0] - centerTileMeters [0]) * Map.RoundedScaleMultiplier; " is 129.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetCenterTile,The length of the statement  "	offsetZ = -Map.RoundedHalfMapScale / 2.0f - (float)(Map.CenterEPSG900913 [1] - centerTileMeters [1]) * Map.RoundedScaleMultiplier; " is 130.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetTileURL,The length of the statement  "	return baseURL + (baseURL.EndsWith ("?") ? "" : "?") + "SERVICE=WMS&REQUEST=GetMap&VERSION=1.1.1&LAYERS=" + layers + "&STYLES=&SRS=" + srsName + "&BBOX=" + min [0] + "'" + min [1] + "'" + max [0] + "'" + max [1] + "&WIDTH=" + Map.TileResolution + "&HEIGHT=" + Map.TileResolution + "&FORMAT=" + format; " is 301.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,CheckLayers,The length of the statement  "	if (capabilities == null || capabilities.Capability == null || capabilities.Capability.Layer == null || capabilities.Capability.Layer.Layers == null) " is 149.
Long Statement,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,CheckSRS,The length of the statement  "	if (capabilities == null || capabilities.Capability == null || capabilities.Capability.Layer == null || capabilities.Capability.Layer.SRS == null) " is 146.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,ComputeCenterEPSG900913,The length of the statement  "	Vector3 displacement = new Vector3 ((float)(centerEPSG900913 [0] - pos [0]) * roundedScaleMultiplier' 0.0f' (float)(centerEPSG900913 [1] - pos [1]) * roundedScaleMultiplier); " is 174.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,ComputeCenterEPSG900913,The length of the statement  "	this.gameObject.transform.position = new Vector3 (rootPosition.x + displacement.x' rootPosition.y + displacement.y' rootPosition.z + displacement.z); " is 149.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,OnGUI,The length of the statement  "	if (Event.current.type != EventType.Repaint && Event.current.type != EventType.MouseDown && Event.current.type != EventType.MouseDrag && Event.current.type != EventType.MouseMove && Event.current.type != EventType.MouseUp) " is 222.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "			if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) { " is 237.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "				if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude) " is 136.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "				//Debug.Log("DEBUG: Map.Update: new location: " + Input.location.lastData.longitude + " " + Input.location.lastData.latitude + ":  " + Input.location.status);					 " is 158.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "				Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status); " is 214.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "			#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "			if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) { " is 237.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "				Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status); " is 214.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "		#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "			#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The length of the statement  "			#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,CenterOnLocation,The length of the statement  "	#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,SetLocationMarker,The length of the statement  "		#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9 " is 130.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,CreateLayer,The length of the statement  "	//Debug.Log("DEBUG: layer root: " + layerRootTransform.position + " this position: " + this.gameObject.transform.position); " is 123.
Long Statement,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Zoom,The length of the statement  "	// FIXME: the camera jumps on the first zoom when tilted' because the cam altitude and zoom value are unsynced by the rotation " is 126.
Long Statement,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The length of the statement  "									    Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: loading cached tile failed' trying to download it: " + entry.url);" is 120.
Long Statement,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The length of the statement  "					                     Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: downloading tile failed' trying to download it again: " + entry.url);" is 123.
Long Statement,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The length of the statement  "								Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]");" is 128.
Long Statement,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,Update,The length of the statement  "	            Debug.Log("DEBUG: TileDownload.Update: tilesLoading.Count (" + tilesLoading.Count + ") > MaxSimultaneousDownloads (" + MaxSimultaneousDownloads + ")");" is 151.
Long Statement,UnitySlippyMap.Markers,MarkerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Markers\MarkerBehaviour.cs,Reposition,The length of the statement  "	this.gameObject.transform.position = new Vector3 (offsetEPSG900913 [0] == 0.0 ? 0.0f : (float)offsetEPSG900913 [0] * Map.ScaleMultiplier' this.gameObject.transform.position.y' offsetEPSG900913 [1] == 0.0 ? 0.0f : (float)offsetEPSG900913 [1] * Map.ScaleMultiplier); " is 264.
Complex Conditional,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CleanUpTiles,The conditional expression  "!inFrustum || (roundedZoomDif > 0 && CheckTileOutExistence (roundedZoom' tileRoundedZoom' tileX' tileY)) || (roundedZoomDif < 0 && CheckTileInExistence (roundedZoom' tileRoundedZoom' tileX' tileY))"  is complex.
Complex Conditional,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The conditional expression  "(hostnameChanged || keyChanged || metadataRequestURIChanged) && loader == null"  is complex.
Complex Conditional,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The conditional expression  "metadataRequestURI != null && metadataRequestURI != String.Empty && key != null && key != String.Empty"  is complex.
Complex Conditional,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,CheckLayers,The conditional expression  "capabilities == null || capabilities.Capability == null || capabilities.Capability.Layer == null || capabilities.Capability.Layer.Layers == null"  is complex.
Complex Conditional,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,CheckSRS,The conditional expression  "capabilities == null || capabilities.Capability == null || capabilities.Capability.Layer == null || capabilities.Capability.Layer.SRS == null"  is complex.
Complex Conditional,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,OnGUI,The conditional expression  "Event.current.type != EventType.Repaint && Event.current.type != EventType.MouseDown && Event.current.type != EventType.MouseDrag && Event.current.type != EventType.MouseMove && Event.current.type != EventType.MouseUp"  is complex.
Complex Conditional,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The conditional expression  "UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f"  is complex.
Complex Conditional,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The conditional expression  "UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f"  is complex.
Complex Conditional,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The conditional expression  "layer.gameObject.activeSelf == true   #endif  && layer.enabled == true && CurrentZoom >= layer.MinZoom && CurrentZoom <= layer.MaxZoom"  is complex.
Empty Catch Block,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Update,The method has an empty catch block.
Empty Catch Block,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,Update,The method has an empty catch block.
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The following statement contains a magic number: p [0] = (int)((lon + 180.0) / 360.0 * (1 << zoomLevel));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The following statement contains a magic number: p [0] = (int)((lon + 180.0) / 360.0 * (1 << zoomLevel));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The following statement contains a magic number: p [1] = (int)((1.0 - Math.Log (Math.Tan (lat * Math.PI / 180.0) + 1.0 / Math.Cos (lat * Math.PI / 180.0)) / Math.PI) / 2.0 * (1 << zoomLevel));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The following statement contains a magic number: p [1] = (int)((1.0 - Math.Log (Math.Tan (lat * Math.PI / 180.0) + 1.0 / Math.Cos (lat * Math.PI / 180.0)) / Math.PI) / 2.0 * (1 << zoomLevel));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,WGS84ToTile,The following statement contains a magic number: p [1] = (int)((1.0 - Math.Log (Math.Tan (lat * Math.PI / 180.0) + 1.0 / Math.Cos (lat * Math.PI / 180.0)) / Math.PI) / 2.0 * (1 << zoomLevel));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,TileToWGS84,The following statement contains a magic number: p [0] = ((tile_x / Math.Pow (2.0' zoomLevel) * 360.0) - 180.0);  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,TileToWGS84,The following statement contains a magic number: p [0] = ((tile_x / Math.Pow (2.0' zoomLevel) * 360.0) - 180.0);  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,TileToWGS84,The following statement contains a magic number: p [0] = ((tile_x / Math.Pow (2.0' zoomLevel) * 360.0) - 180.0);  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,TileToWGS84,The following statement contains a magic number: p [1] = (180.0 / Math.PI * Math.Atan (Math.Sinh (n)));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,MetersPerPixel,The following statement contains a magic number: return (float)(realLengthInMeters / Math.Pow (2.0' zoomLevel + 8));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,MetersPerPixel,The following statement contains a magic number: return (float)(realLengthInMeters / Math.Pow (2.0' zoomLevel + 8));  
Magic Number,UnitySlippyMap.Helpers,GeoHelpers,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\GeoHelpers.cs,MapScaleToOsmZoomLevel,The following statement contains a magic number: return (float)Math.Log (zoomLevelExp' 2.0);  
Magic Number,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The following statement contains a magic number: if (profile.Parent != null) {  	try {  		if (profile.Parent.Ts.Ticks != 0)  			percentage = (int)Math.Round ((double)profile.Ts.Ticks / (double)profile.Parent.Ts.Ticks * 100.0);  		else  			percentage = 0;  	} catch (OverflowException e) {  		UnityEngine.Debug.LogError (e.Message + ": profile.Ts.Ticks: " + profile.Ts.Ticks + ": profile.Parent.Ts.Ticks: " + profile.Parent.Ts.Ticks);  	}  }  
Magic Number,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The following statement contains a magic number: try {  	if (profile.Parent.Ts.Ticks != 0)  		percentage = (int)Math.Round ((double)profile.Ts.Ticks / (double)profile.Parent.Ts.Ticks * 100.0);  	else  		percentage = 0;  } catch (OverflowException e) {  	UnityEngine.Debug.LogError (e.Message + ": profile.Ts.Ticks: " + profile.Ts.Ticks + ": profile.Parent.Ts.Ticks: " + profile.Parent.Ts.Ticks);  }  
Magic Number,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The following statement contains a magic number: if (profile.Parent.Ts.Ticks != 0)  	percentage = (int)Math.Round ((double)profile.Ts.Ticks / (double)profile.Parent.Ts.Ticks * 100.0);  else  	percentage = 0;  
Magic Number,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The following statement contains a magic number: percentage = (int)Math.Round ((double)profile.Ts.Ticks / (double)profile.Parent.Ts.Ticks * 100.0);  
Magic Number,UnitySlippyMap,Profiler,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\Profiler.cs,Dump,The following statement contains a magic number: text = String.Format ("{0}[{1}% | {2} calls] {3}: {4:00}:{5:00}:{6:00}.{7:00}\n"' indentation' percentage' profile.Count' profile.Name' profile.Ts.Hours' profile.Ts.Minutes' profile.Ts.Seconds' profile.Ts.Milliseconds / 10);  
Magic Number,UnityThreading,DispatcherBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Dispatcher.cs,SplitTasks,The following statement contains a magic number: if (divisor == 0)  	divisor = 2;  
Magic Number,UnityThreading,DispatcherBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Dispatcher.cs,SplitTasks,The following statement contains a magic number: divisor = 2;  
Magic Number,UnityThreading,TaskDistributor,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\TaskDistributer.cs,TaskDistributor,The following statement contains a magic number: if (workerThreadCount <= 0) {  	#if !NO_UNITY  	workerThreadCount = UnityEngine.SystemInfo.processorCount * 3;  	#else  	                workerThreadCount = Environment.ProcessorCount * 3; #endif  }  
Magic Number,UnityThreading,TaskDistributor,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\TaskDistributer.cs,TaskDistributor,The following statement contains a magic number: workerThreadCount = UnityEngine.SystemInfo.processorCount * 3;  
Magic Number,UnityThreading,ThreadBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Thread.cs,AbortWaitForSeconds,The following statement contains a magic number: if (thread != null) {  	thread.Join ((int)(seconds * 1000));  	if (thread.IsAlive)  		thread.Abort ();  }  
Magic Number,UnityThreading,ThreadBase,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\UnityThreading\Thread.cs,AbortWaitForSeconds,The following statement contains a magic number: thread.Join ((int)(seconds * 1000));  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,MapSize,The following statement contains a magic number: return (uint)256 << levelOfDetail;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,GroundResolution,The following statement contains a magic number: return Math.Cos (latitude * Math.PI / 180) * 2 * Math.PI * EarthRadius / MapSize (levelOfDetail);  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,GroundResolution,The following statement contains a magic number: return Math.Cos (latitude * Math.PI / 180) * 2 * Math.PI * EarthRadius / MapSize (levelOfDetail);  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,MapScale,The following statement contains a magic number: return GroundResolution (latitude' levelOfDetail) * screenDpi / 0.0254;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,LatLongToPixelXY,The following statement contains a magic number: pixelX = (int)Clip (x * mapSize + 0.5' 0' mapSize - 1);  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,LatLongToPixelXY,The following statement contains a magic number: pixelY = (int)Clip (y * mapSize + 0.5' 0' mapSize - 1);  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan (Math.Exp (-y * 2 * Math.PI)) / Math.PI;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan (Math.Exp (-y * 2 * Math.PI)) / Math.PI;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToLatLong,The following statement contains a magic number: latitude = 90 - 360 * Math.Atan (Math.Exp (-y * 2 * Math.PI)) / Math.PI;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToLatLong,The following statement contains a magic number: longitude = 360 * x;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToTileXY,The following statement contains a magic number: tileX = pixelX / 256;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,PixelXYToTileXY,The following statement contains a magic number: tileY = pixelY / 256;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,TileXYToPixelXY,The following statement contains a magic number: pixelX = tileX * 256;  
Magic Number,Microsoft.MapPoint,TileSystem,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Helpers\VirtualEarth\TileSystem.cs,TileXYToPixelXY,The following statement contains a magic number: pixelY = tileY * 256;  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (panning) {  	// disable the centerWGS84 update with the last location  	map.UpdatesCenterWithLocation = false;  	// apply the movements  	Ray ray = map.CurrentCamera.ScreenPointToRay (screenPosition);  	RaycastHit hitInfo;  	if (Physics.Raycast (ray' out hitInfo)) {  		Vector3 displacement = Vector3.zero;  		if (lastHitPosition != Vector3.zero) {  			displacement = hitInfo.point - lastHitPosition;  		}  		lastHitPosition = new Vector3 (hitInfo.point.x' hitInfo.point.y' hitInfo.point.z);  		if (displacement != Vector3.zero) {  			// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  			double[] displacementMeters = new double[2] {  				displacement.x / map.RoundedScaleMultiplier'  				displacement.z / map.RoundedScaleMultiplier  			};  			double[] centerMeters = new double[2] {  				map.CenterEPSG900913 [0]'  				map.CenterEPSG900913 [1]  			};  			centerMeters [0] -= displacementMeters [0];  			centerMeters [1] -= displacementMeters [1];  			map.CenterEPSG900913 = centerMeters;  			#if DEBUG_LOG  			    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  		}  		map.HasMoved = true;  	}  } else if (panningStopped) {  	// reset the last hit position  	lastHitPosition = Vector3.zero;  	// trigger a tile update  	map.IsDirty = true;  }  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (panning) {  	// disable the centerWGS84 update with the last location  	map.UpdatesCenterWithLocation = false;  	// apply the movements  	Ray ray = map.CurrentCamera.ScreenPointToRay (screenPosition);  	RaycastHit hitInfo;  	if (Physics.Raycast (ray' out hitInfo)) {  		Vector3 displacement = Vector3.zero;  		if (lastHitPosition != Vector3.zero) {  			displacement = hitInfo.point - lastHitPosition;  		}  		lastHitPosition = new Vector3 (hitInfo.point.x' hitInfo.point.y' hitInfo.point.z);  		if (displacement != Vector3.zero) {  			// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  			double[] displacementMeters = new double[2] {  				displacement.x / map.RoundedScaleMultiplier'  				displacement.z / map.RoundedScaleMultiplier  			};  			double[] centerMeters = new double[2] {  				map.CenterEPSG900913 [0]'  				map.CenterEPSG900913 [1]  			};  			centerMeters [0] -= displacementMeters [0];  			centerMeters [1] -= displacementMeters [1];  			map.CenterEPSG900913 = centerMeters;  			#if DEBUG_LOG  			    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  		}  		map.HasMoved = true;  	}  } else if (panningStopped) {  	// reset the last hit position  	lastHitPosition = Vector3.zero;  	// trigger a tile update  	map.IsDirty = true;  }  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (Physics.Raycast (ray' out hitInfo)) {  	Vector3 displacement = Vector3.zero;  	if (lastHitPosition != Vector3.zero) {  		displacement = hitInfo.point - lastHitPosition;  	}  	lastHitPosition = new Vector3 (hitInfo.point.x' hitInfo.point.y' hitInfo.point.z);  	if (displacement != Vector3.zero) {  		// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  		double[] displacementMeters = new double[2] {  			displacement.x / map.RoundedScaleMultiplier'  			displacement.z / map.RoundedScaleMultiplier  		};  		double[] centerMeters = new double[2] {  			map.CenterEPSG900913 [0]'  			map.CenterEPSG900913 [1]  		};  		centerMeters [0] -= displacementMeters [0];  		centerMeters [1] -= displacementMeters [1];  		map.CenterEPSG900913 = centerMeters;  		#if DEBUG_LOG  		    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  	}  	map.HasMoved = true;  }  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (Physics.Raycast (ray' out hitInfo)) {  	Vector3 displacement = Vector3.zero;  	if (lastHitPosition != Vector3.zero) {  		displacement = hitInfo.point - lastHitPosition;  	}  	lastHitPosition = new Vector3 (hitInfo.point.x' hitInfo.point.y' hitInfo.point.z);  	if (displacement != Vector3.zero) {  		// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  		double[] displacementMeters = new double[2] {  			displacement.x / map.RoundedScaleMultiplier'  			displacement.z / map.RoundedScaleMultiplier  		};  		double[] centerMeters = new double[2] {  			map.CenterEPSG900913 [0]'  			map.CenterEPSG900913 [1]  		};  		centerMeters [0] -= displacementMeters [0];  		centerMeters [1] -= displacementMeters [1];  		map.CenterEPSG900913 = centerMeters;  		#if DEBUG_LOG  		    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  	}  	map.HasMoved = true;  }  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (displacement != Vector3.zero) {  	// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  	double[] displacementMeters = new double[2] {  		displacement.x / map.RoundedScaleMultiplier'  		displacement.z / map.RoundedScaleMultiplier  	};  	double[] centerMeters = new double[2] {  		map.CenterEPSG900913 [0]'  		map.CenterEPSG900913 [1]  	};  	centerMeters [0] -= displacementMeters [0];  	centerMeters [1] -= displacementMeters [1];  	map.CenterEPSG900913 = centerMeters;  	#if DEBUG_LOG  	    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  }  
Magic Number,UnitySlippyMap.Input,MapInput,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Input\Input.cs,BasicTouchAndKeyboard,The following statement contains a magic number: if (displacement != Vector3.zero) {  	// update the centerWGS84 property to the new centerWGS84 wgs84 coordinates of the map  	double[] displacementMeters = new double[2] {  		displacement.x / map.RoundedScaleMultiplier'  		displacement.z / map.RoundedScaleMultiplier  	};  	double[] centerMeters = new double[2] {  		map.CenterEPSG900913 [0]'  		map.CenterEPSG900913 [1]  	};  	centerMeters [0] -= displacementMeters [0];  	centerMeters [1] -= displacementMeters [1];  	map.CenterEPSG900913 = centerMeters;  	#if DEBUG_LOG  	    					Debug.Log("DEBUG: Map.Update: new centerWGS84 wgs84: " + centerWGS84[0] + "' " + centerWGS84[1]); 						#endif  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: switch (version) {  case "1.0.0":  	metadataRowNameLookedFor = "bounds";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  	}  	metadataRowNameLookedFor = "center";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		center = new Vector3 (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2]));  	}  	metadataRowNameLookedFor = "minzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		minZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "maxzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		maxZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "name";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		_name = row ["value"] as string;  	}  	metadataRowNameLookedFor = "description";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		description = row ["value"] as string;  	}  	metadataRowNameLookedFor = "attribution";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		attribution = row ["value"] as string;  	}  	metadataRowNameLookedFor = "template";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		template = row ["value"] as string;  	}  	break;  default:  	throw new SqliteException ("unsupported SQLite version: " + version);  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: switch (version) {  case "1.0.0":  	metadataRowNameLookedFor = "bounds";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  	}  	metadataRowNameLookedFor = "center";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		center = new Vector3 (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2]));  	}  	metadataRowNameLookedFor = "minzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		minZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "maxzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		maxZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "name";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		_name = row ["value"] as string;  	}  	metadataRowNameLookedFor = "description";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		description = row ["value"] as string;  	}  	metadataRowNameLookedFor = "attribution";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		attribution = row ["value"] as string;  	}  	metadataRowNameLookedFor = "template";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		template = row ["value"] as string;  	}  	break;  default:  	throw new SqliteException ("unsupported SQLite version: " + version);  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: switch (version) {  case "1.0.0":  	metadataRowNameLookedFor = "bounds";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  	}  	metadataRowNameLookedFor = "center";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		string[] tokens = (row ["value"] as string).Split (new Char[] {  			'''  		});  		center = new Vector3 (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2]));  	}  	metadataRowNameLookedFor = "minzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		minZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "maxzoom";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		maxZoom = Single.Parse (row ["value"] as string);  	}  	metadataRowNameLookedFor = "name";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		_name = row ["value"] as string;  	}  	metadataRowNameLookedFor = "description";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		description = row ["value"] as string;  	}  	metadataRowNameLookedFor = "attribution";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		attribution = row ["value"] as string;  	}  	metadataRowNameLookedFor = "template";  	row = dt.Rows.Find (metadataMatchPredicate);  	if (row != null) {  		template = row ["value"] as string;  	}  	break;  default:  	throw new SqliteException ("unsupported SQLite version: " + version);  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: if (row != null) {  	string[] tokens = (row ["value"] as string).Split (new Char[] {  		'''  	});  	bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: if (row != null) {  	string[] tokens = (row ["value"] as string).Split (new Char[] {  		'''  	});  	bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: bounds = new Rect (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2])' Single.Parse (tokens [3]));  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: if (row != null) {  	string[] tokens = (row ["value"] as string).Split (new Char[] {  		'''  	});  	center = new Vector3 (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2]));  }  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,Open,The following statement contains a magic number: center = new Vector3 (Single.Parse (tokens [0])' Single.Parse (tokens [1])' Single.Parse (tokens [2]));  
Magic Number,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetTileCountPerAxis,The following statement contains a magic number: tileCountOnX = tileCountOnY = (int)Mathf.Pow (2' Map.RoundedZoom);  
Magic Number,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,Awake,The following statement contains a magic number: maxZoom = 18;  
Magic Number,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetTileCountPerAxis,The following statement contains a magic number: tileCountOnX = tileCountOnY = (int)Mathf.Pow (2' Map.RoundedZoom);  
Magic Number,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CheckTileOutExistence,The following statement contains a magic number: return CheckTileOutExistence (roundedZoom' tileRoundedZoom - 1' tileX / 2' tileY / 2);  
Magic Number,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CheckTileOutExistence,The following statement contains a magic number: return CheckTileOutExistence (roundedZoom' tileRoundedZoom - 1' tileX / 2' tileY / 2);  
Magic Number,UnitySlippyMap.Layers,TileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\TileLayerBehaviour.cs,CleanUpTiles,The following statement contains a magic number: foreach (KeyValuePair<string' TileBehaviour> pair in tiles) {  	TileBehaviour tile = pair.Value;  	string tileKey = pair.Key;  	string[] tileAddressTokens = tileKey.Split ('_');  	int tileRoundedZoom = Int32.Parse (tileAddressTokens [0]);  	int tileX = Int32.Parse (tileAddressTokens [1]);  	int tileY = Int32.Parse (tileAddressTokens [2]);  	int roundedZoomDif = tileRoundedZoom - roundedZoom;  	bool inFrustum = GeometryUtility.TestPlanesAABB (frustum' tile.collider.bounds);  	if (!inFrustum || roundedZoomDif != 0) {  		CancelTileRequest (tileX' tileY' tileRoundedZoom);  		if (!inFrustum || (roundedZoomDif > 0 && CheckTileOutExistence (roundedZoom' tileRoundedZoom' tileX' tileY)) || (roundedZoomDif < 0 && CheckTileInExistence (roundedZoom' tileRoundedZoom' tileX' tileY))) {  			tilesToRemove.Add (tileKey);  		}  	}  }  
Magic Number,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,Awake,The following statement contains a magic number: maxZoom = 23;  
Magic Number,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetTileCountPerAxis,The following statement contains a magic number: tileCountOnX = tileCountOnY = (int)Mathf.Pow (2' Map.RoundedZoom);  
Magic Number,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetTileCountPerAxis,The following statement contains a magic number: tileCountOnX = tileCountOnY = (int)Mathf.Pow (2' Map.RoundedZoom);  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,UpdateInternals,The following statement contains a magic number: halfMapScale = GeoHelpers.OsmZoomLevelToMapScale (currentZoom' 0.0f' tileResolution' 72) / scaleDivider;  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,UpdateInternals,The following statement contains a magic number: roundedHalfMapScale = GeoHelpers.OsmZoomLevelToMapScale (roundedZoom' 0.0f' tileResolution' 72) / scaleDivider;  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (usesLocation && UnityEngine.Input.location.status == LocationServiceStatus.Running) {  	if (updatesCenterWithLocation) {  		if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  			if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude)  				CenterWGS84 = new double[2] {  					UnityEngine.Input.location.lastData.longitude'  					UnityEngine.Input.location.lastData.latitude  				};  			//Debug.Log("DEBUG: Map.Update: new location: " + Input.location.lastData.longitude + " " + Input.location.lastData.latitude + ":  " + Input.location.status);					  		} else {  			Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  		}  	}  	if (locationMarker != null) {  		#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9  						if (locationMarker.gameObject.active == false) 					locationMarker.gameObject.SetActiveRecursively(true); #else  		if (locationMarker.gameObject.activeSelf == false)  			locationMarker.gameObject.SetActive (true);  		#endif  		if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  			locationMarker.CoordinatesWGS84 = new double[2] {  				UnityEngine.Input.location.lastData.longitude'  				UnityEngine.Input.location.lastData.latitude  			};  		} else {  			//#if DEBUG_LOG  			Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  			//#endif  		}  	}  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (usesLocation && UnityEngine.Input.location.status == LocationServiceStatus.Running) {  	if (updatesCenterWithLocation) {  		if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  			if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude)  				CenterWGS84 = new double[2] {  					UnityEngine.Input.location.lastData.longitude'  					UnityEngine.Input.location.lastData.latitude  				};  			//Debug.Log("DEBUG: Map.Update: new location: " + Input.location.lastData.longitude + " " + Input.location.lastData.latitude + ":  " + Input.location.status);					  		} else {  			Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  		}  	}  	if (locationMarker != null) {  		#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9  						if (locationMarker.gameObject.active == false) 					locationMarker.gameObject.SetActiveRecursively(true); #else  		if (locationMarker.gameObject.activeSelf == false)  			locationMarker.gameObject.SetActive (true);  		#endif  		if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  			locationMarker.CoordinatesWGS84 = new double[2] {  				UnityEngine.Input.location.lastData.longitude'  				UnityEngine.Input.location.lastData.latitude  			};  		} else {  			//#if DEBUG_LOG  			Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  			//#endif  		}  	}  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (updatesCenterWithLocation) {  	if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  		if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude)  			CenterWGS84 = new double[2] {  				UnityEngine.Input.location.lastData.longitude'  				UnityEngine.Input.location.lastData.latitude  			};  		//Debug.Log("DEBUG: Map.Update: new location: " + Input.location.lastData.longitude + " " + Input.location.lastData.latitude + ":  " + Input.location.status);					  	} else {  		Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  	}  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  	if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude)  		CenterWGS84 = new double[2] {  			UnityEngine.Input.location.lastData.longitude'  			UnityEngine.Input.location.lastData.latitude  		};  	//Debug.Log("DEBUG: Map.Update: new location: " + Input.location.lastData.longitude + " " + Input.location.lastData.latitude + ":  " + Input.location.status);					  } else {  	Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (CenterWGS84 [0] != UnityEngine.Input.location.lastData.longitude || CenterWGS84 [1] != UnityEngine.Input.location.lastData.latitude)  	CenterWGS84 = new double[2] {  		UnityEngine.Input.location.lastData.longitude'  		UnityEngine.Input.location.lastData.latitude  	};  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: CenterWGS84 = new double[2] {  	UnityEngine.Input.location.lastData.longitude'  	UnityEngine.Input.location.lastData.latitude  };  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (locationMarker != null) {  	#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9  					if (locationMarker.gameObject.active == false) 					locationMarker.gameObject.SetActiveRecursively(true); #else  	if (locationMarker.gameObject.activeSelf == false)  		locationMarker.gameObject.SetActive (true);  	#endif  	if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  		locationMarker.CoordinatesWGS84 = new double[2] {  			UnityEngine.Input.location.lastData.longitude'  			UnityEngine.Input.location.lastData.latitude  		};  	} else {  		//#if DEBUG_LOG  		Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  		//#endif  	}  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: if (UnityEngine.Input.location.lastData.longitude <= 180.0f && UnityEngine.Input.location.lastData.longitude >= -180.0f && UnityEngine.Input.location.lastData.latitude <= 90.0f && UnityEngine.Input.location.lastData.latitude >= -90.0f) {  	locationMarker.CoordinatesWGS84 = new double[2] {  		UnityEngine.Input.location.lastData.longitude'  		UnityEngine.Input.location.lastData.latitude  	};  } else {  	//#if DEBUG_LOG  	Debug.LogWarning ("WARNING: Map.Update: bogus location (bailing): " + UnityEngine.Input.location.lastData.longitude + " " + UnityEngine.Input.location.lastData.latitude + ":  " + UnityEngine.Input.location.status);  	//#endif  }  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following statement contains a magic number: locationMarker.CoordinatesWGS84 = new double[2] {  	UnityEngine.Input.location.lastData.longitude'  	UnityEngine.Input.location.lastData.latitude  };  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,SetLocationMarker,The following statement contains a magic number: if (usesLocation && UnityEngine.Input.location.status == LocationServiceStatus.Running)  	marker.CoordinatesWGS84 = new double[2] {  		UnityEngine.Input.location.lastData.longitude'  		UnityEngine.Input.location.lastData.latitude  	};  else  	#if UNITY_3_0 || UNITY_3_1 || UNITY_3_2 || UNITY_3_3 || UNITY_3_4 || UNITY_3_5 || UNITY_3_6 || UNITY_3_7 || UNITY_3_8 || UNITY_3_9  					markerObject.SetActiveRecursively(false); #else  	markerObject.SetActive (false);  
Magic Number,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,SetLocationMarker,The following statement contains a magic number: marker.CoordinatesWGS84 = new double[2] {  	UnityEngine.Input.location.lastData.longitude'  	UnityEngine.Input.location.lastData.latitude  };  
Magic Number,UnitySlippyMap.Map,TileBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileBehaviour.cs,CreateTileTemplate,The following statement contains a magic number: mesh.triangles = new int[] {  	0'  	1'  	2'  	0'  	2'  	3  };  
Magic Number,UnitySlippyMap.Map,TileBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileBehaviour.cs,CreateTileTemplate,The following statement contains a magic number: mesh.triangles = new int[] {  	0'  	1'  	2'  	0'  	2'  	3  };  
Magic Number,UnitySlippyMap.Map,TileBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileBehaviour.cs,CreateTileTemplate,The following statement contains a magic number: mesh.triangles = new int[] {  	0'  	1'  	2'  	0'  	2'  	3  };  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: if (e.WasKilled == false) {  	if (entry.error && entry.cached) {  		if (entry.cached) {  			#if DEBUG_LOG  								    Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: loading cached tile failed' trying to download it: " + entry.url); 	#endif  			// try downloading the tile again  			entry.cached = false;  			cacheSize -= entry.size;  			tiles.Remove (entry);  		} else {  			#if DEBUG_LOG  				                     Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: downloading tile failed' trying to download it again: " + entry.url); 	#endif  		}  		Get (entry.url' entry.tile);  		return;  	}  	tileURLLookedFor = entry.url;  	TileEntry existingEntry = tiles.Find (tileURLMatchPredicate);  	if (existingEntry != null) {  		tiles.Remove (existingEntry);  		cacheSize -= existingEntry.size;  	}  	entry.timestamp = (DateTime.Now.ToLocalTime () - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  	tiles.Add (entry);  	cacheSize += entry.size;  	// if the cache is full' erase the oldest entry  	// FIXME: find a better way to handle the cache (cf. iPhone Maps app)  	// FIXME: one aspect might be to erase tiles in batch' 10 or 20 at a time' a significant number anyway  	if (cacheSize > MaxCacheSize) {  		// beware the year 3000 bug :)  		double oldestTimestamp = (new DateTime (3000' 1' 1) - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  		TileEntry entryToErase = null;  		foreach (TileEntry tile in tiles) {  			if (tile.timestamp < oldestTimestamp && tile != entry) {  				oldestTimestamp = tile.timestamp;  				entryToErase = tile;  			}  		}  		if (entryToErase == null) {  			#if DEBUG_LOG  									Debug.LogWarning("WARNING: TileDownloader.JobTerminationEvent: no cache entry to erase (should not happen)"); 	#endif  			return;  		}  		DeleteCachedTile (entryToErase);  		#if DEBUG_LOG  							Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]"); 	#endif  	}  }  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: if (e.WasKilled == false) {  	if (entry.error && entry.cached) {  		if (entry.cached) {  			#if DEBUG_LOG  								    Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: loading cached tile failed' trying to download it: " + entry.url); 	#endif  			// try downloading the tile again  			entry.cached = false;  			cacheSize -= entry.size;  			tiles.Remove (entry);  		} else {  			#if DEBUG_LOG  				                     Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: downloading tile failed' trying to download it again: " + entry.url); 	#endif  		}  		Get (entry.url' entry.tile);  		return;  	}  	tileURLLookedFor = entry.url;  	TileEntry existingEntry = tiles.Find (tileURLMatchPredicate);  	if (existingEntry != null) {  		tiles.Remove (existingEntry);  		cacheSize -= existingEntry.size;  	}  	entry.timestamp = (DateTime.Now.ToLocalTime () - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  	tiles.Add (entry);  	cacheSize += entry.size;  	// if the cache is full' erase the oldest entry  	// FIXME: find a better way to handle the cache (cf. iPhone Maps app)  	// FIXME: one aspect might be to erase tiles in batch' 10 or 20 at a time' a significant number anyway  	if (cacheSize > MaxCacheSize) {  		// beware the year 3000 bug :)  		double oldestTimestamp = (new DateTime (3000' 1' 1) - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  		TileEntry entryToErase = null;  		foreach (TileEntry tile in tiles) {  			if (tile.timestamp < oldestTimestamp && tile != entry) {  				oldestTimestamp = tile.timestamp;  				entryToErase = tile;  			}  		}  		if (entryToErase == null) {  			#if DEBUG_LOG  									Debug.LogWarning("WARNING: TileDownloader.JobTerminationEvent: no cache entry to erase (should not happen)"); 	#endif  			return;  		}  		DeleteCachedTile (entryToErase);  		#if DEBUG_LOG  							Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]"); 	#endif  	}  }  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: if (e.WasKilled == false) {  	if (entry.error && entry.cached) {  		if (entry.cached) {  			#if DEBUG_LOG  								    Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: loading cached tile failed' trying to download it: " + entry.url); 	#endif  			// try downloading the tile again  			entry.cached = false;  			cacheSize -= entry.size;  			tiles.Remove (entry);  		} else {  			#if DEBUG_LOG  				                     Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: downloading tile failed' trying to download it again: " + entry.url); 	#endif  		}  		Get (entry.url' entry.tile);  		return;  	}  	tileURLLookedFor = entry.url;  	TileEntry existingEntry = tiles.Find (tileURLMatchPredicate);  	if (existingEntry != null) {  		tiles.Remove (existingEntry);  		cacheSize -= existingEntry.size;  	}  	entry.timestamp = (DateTime.Now.ToLocalTime () - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  	tiles.Add (entry);  	cacheSize += entry.size;  	// if the cache is full' erase the oldest entry  	// FIXME: find a better way to handle the cache (cf. iPhone Maps app)  	// FIXME: one aspect might be to erase tiles in batch' 10 or 20 at a time' a significant number anyway  	if (cacheSize > MaxCacheSize) {  		// beware the year 3000 bug :)  		double oldestTimestamp = (new DateTime (3000' 1' 1) - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  		TileEntry entryToErase = null;  		foreach (TileEntry tile in tiles) {  			if (tile.timestamp < oldestTimestamp && tile != entry) {  				oldestTimestamp = tile.timestamp;  				entryToErase = tile;  			}  		}  		if (entryToErase == null) {  			#if DEBUG_LOG  									Debug.LogWarning("WARNING: TileDownloader.JobTerminationEvent: no cache entry to erase (should not happen)"); 	#endif  			return;  		}  		DeleteCachedTile (entryToErase);  		#if DEBUG_LOG  							Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]"); 	#endif  	}  }  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: entry.timestamp = (DateTime.Now.ToLocalTime () - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: if (cacheSize > MaxCacheSize) {  	// beware the year 3000 bug :)  	double oldestTimestamp = (new DateTime (3000' 1' 1) - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  	TileEntry entryToErase = null;  	foreach (TileEntry tile in tiles) {  		if (tile.timestamp < oldestTimestamp && tile != entry) {  			oldestTimestamp = tile.timestamp;  			entryToErase = tile;  		}  	}  	if (entryToErase == null) {  		#if DEBUG_LOG  								Debug.LogWarning("WARNING: TileDownloader.JobTerminationEvent: no cache entry to erase (should not happen)"); 	#endif  		return;  	}  	DeleteCachedTile (entryToErase);  	#if DEBUG_LOG  						Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]"); 	#endif  }  
Magic Number,UnitySlippyMap.Map,TileDownloaderBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\TileDownloaderBehaviour.cs,JobTerminationEvent,The following statement contains a magic number: if (cacheSize > MaxCacheSize) {  	// beware the year 3000 bug :)  	double oldestTimestamp = (new DateTime (3000' 1' 1) - new DateTime (1970' 1' 1).ToLocalTime ()).TotalSeconds;  	TileEntry entryToErase = null;  	foreach (TileEntry tile in tiles) {  		if (tile.timestamp < oldestTimestamp && tile != entry) {  			oldestTimestamp = tile.timestamp;  			entryToErase = tile;  		}  	}  	if (entryToErase == null) {  		#if DEBUG_LOG  								Debug.LogWarning("WARNING: TileDownloader.JobTerminationEvent: no cache entry to erase (should not happen)"); 	#endif  		return;  	}  	DeleteCachedTile (entryToErase);  	#if DEBUG_LOG  						Debug.Log("DEBUG: TileDownloader.JobTerminationEvent: erased from cache: " + entryToErase.url + " [" + entryToErase.guid + "]"); 	#endif  }  
Missing Default,UnitySlippyMap.Layers,MBTilesLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\MBTilesLayerBehaviour.cs,GetNeighbourTile,The following switch statement is missing a default case: switch (dir) {  case NeighbourTileDirection.South:  	if (tileY > 0) {  		nTileX = tileX;  		nTileY = tileY - 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ - Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.North:  	if ((tileY + 1) < tileCountOnY) {  		nTileX = tileX;  		nTileY = tileY + 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ + Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.East:  	nTileX = tileX + 1;  	nTileY = tileY;  	nOffsetX = offsetX + Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  case NeighbourTileDirection.West:  	nTileX = tileX - 1;  	nTileY = tileY;  	nOffsetX = offsetX - Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  }  
Missing Default,UnitySlippyMap.Layers,OSMTileLayer,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\OSMTileLayerBehaviour.cs,GetNeighbourTile,The following switch statement is missing a default case: switch (dir) {  case NeighbourTileDirection.South:  	if ((tileY + 1) < tileCountOnY) {  		nTileX = tileX;  		nTileY = tileY + 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ - Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.North:  	if (tileY > 0) {  		nTileX = tileX;  		nTileY = tileY - 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ + Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.East:  	nTileX = tileX + 1;  	nTileY = tileY;  	nOffsetX = offsetX + Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  case NeighbourTileDirection.West:  	nTileX = tileX - 1;  	nTileY = tileY;  	nOffsetX = offsetX - Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  }  
Missing Default,UnitySlippyMap.Layers,VirtualEarthTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\VirtualEarthTileLayerBehaviour.cs,GetNeighbourTile,The following switch statement is missing a default case: switch (dir) {  case NeighbourTileDirection.South:  	if ((tileY + 1) < tileCountOnY) {  		nTileX = tileX;  		nTileY = tileY + 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ - Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.North:  	if (tileY > 0) {  		nTileX = tileX;  		nTileY = tileY - 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ + Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.East:  	nTileX = tileX + 1;  	nTileY = tileY;  	nOffsetX = offsetX + Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  case NeighbourTileDirection.West:  	nTileX = tileX - 1;  	nTileY = tileY;  	nOffsetX = offsetX - Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  }  
Missing Default,UnitySlippyMap.Layers,WMSTileLayerBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Layers\WMSTileLayerBehaviour.cs,GetNeighbourTile,The following switch statement is missing a default case: switch (dir) {  case NeighbourTileDirection.South:  	if ((tileY + 1) < tileCountOnY) {  		nTileX = tileX;  		nTileY = tileY + 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ - Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.North:  	if (tileY > 0) {  		nTileX = tileX;  		nTileY = tileY - 1;  		nOffsetX = offsetX;  		nOffsetZ = offsetZ + Map.RoundedHalfMapScale;  		ret = true;  	}  	break;  case NeighbourTileDirection.East:  	nTileX = tileX + 1;  	nTileY = tileY;  	nOffsetX = offsetX + Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  case NeighbourTileDirection.West:  	nTileX = tileX - 1;  	nTileY = tileY;  	nOffsetX = offsetX - Map.RoundedHalfMapScale;  	nOffsetZ = offsetZ;  	ret = true;  	break;  }  
Missing Default,UnitySlippyMap.Map,MapBehaviour,F:\newReposMay17\jderrough_UnitySlippyMap\Assets\UnitySlippyMap\Map\MapBehaviour.cs,Update,The following switch statement is missing a default case: switch (Screen.orientation) {  case ScreenOrientation.LandscapeLeft:  	heading = UnityEngine.Input.compass.trueHeading;  	break;  case ScreenOrientation.Portrait:  	// FIXME: not tested' likely wrong' legacy code  	heading = -UnityEngine.Input.compass.trueHeading;  	break;  }  
