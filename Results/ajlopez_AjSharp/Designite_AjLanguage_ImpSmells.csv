Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AjLanguage.Expressions,InvokeExpressionExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\InvokeExpressionExpression.cs,Evaluate,Cyclomatic complexity of the method is 8
Complex Method,AjLanguage.Expressions,IncrementExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\IncrementExpression.cs,Apply,Cyclomatic complexity of the method is 16
Complex Method,AjLanguage.Expressions,ArithmeticBinaryExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\ArithmeticBinaryExpression.cs,ArithmeticBinaryExpression,Cyclomatic complexity of the method is 20
Complex Method,AjLanguage.Expressions,ArithmeticBinaryExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\ArithmeticBinaryExpression.cs,Apply,Cyclomatic complexity of the method is 8
Complex Method,AjLanguage.Expressions,ArithmeticUnaryExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\ArithmeticUnaryExpression.cs,ArithmeticUnaryExpression,Cyclomatic complexity of the method is 8
Complex Method,AjLanguage.Expressions,CompareExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\CompareExpression.cs,CompareExpression,Cyclomatic complexity of the method is 20
Complex Method,AjLanguage.Expressions,DotExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\DotExpression.cs,Evaluate,Cyclomatic complexity of the method is 9
Complex Method,AjLanguage.Language,Function,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Language\Function.cs,Invoke,Cyclomatic complexity of the method is 10
Long Parameter List,AjLanguage.Commands,DefineFunctionCommand,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Commands\DefineFunctionCommand.cs,DefineFunctionCommand,The method has 5 parameters.
Long Parameter List,AjLanguage.Language,Function,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Language\Function.cs,Function,The method has 5 parameters.
Long Statement,AjLanguage,BindingEnvironment,C:\repos\ajlopez_AjSharp\Src\AjLanguage\BindingEnvironment.cs,SetValue,The length of the statement  "	if (this.parent != null && !this.values.ContainsKey (name) && (this.parent is ObjectEnvironment || this.parent is LocalBindingEnvironment) && this.parent.ContainsName (name)) { " is 176.
Long Statement,AjLanguage,BindingEnvironment,C:\repos\ajlopez_AjSharp\Src\AjLanguage\BindingEnvironment.cs,SetValue,The length of the statement  "	if (this.globals != null && !this.values.ContainsKey (name) && this.globals.Contains (name) && Machine.Current != null) { " is 121.
Long Statement,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetValue,The length of the statement  "	type.InvokeMember (name' System.Reflection.BindingFlags.SetProperty | System.Reflection.BindingFlags.SetField | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance' null' obj' new object[] { " is 305.
Long Statement,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetValue,The length of the statement  "	return type.InvokeMember (name' System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.GetField | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.InvokeMethod | System.Reflection.BindingFlags.Instance' null' obj' null); " is 350.
Long Statement,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetNativeValue,The length of the statement  "	return type.InvokeMember (name' System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.GetField | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.InvokeMethod | System.Reflection.BindingFlags.Instance' null' obj' parameters); " is 356.
Long Statement,AjLanguage,TypeUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\TypeUtilities.cs,InvokeTypeMember,The length of the statement  "	return type.InvokeMember (name' System.Reflection.BindingFlags.FlattenHierarchy | System.Reflection.BindingFlags.GetProperty | System.Reflection.BindingFlags.GetField | System.Reflection.BindingFlags.IgnoreCase | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.InvokeMethod | System.Reflection.BindingFlags.Static' null' null' parameters); " is 405.
Long Statement,AjLanguage.Commands,DefineFunctionCommand,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Commands\DefineFunctionCommand.cs,Execute,The length of the statement  "	Machine.Current.Environment.SetValue (this.name' new Function (this.parameterNames' this.body' null' this.isdefault' this.hasvariableparameters)); " is 146.
Complex Conditional,AjLanguage,BindingEnvironment,C:\repos\ajlopez_AjSharp\Src\AjLanguage\BindingEnvironment.cs,SetValue,The conditional expression  "this.parent != null && !this.values.ContainsKey (name) && (this.parent is ObjectEnvironment || this.parent is LocalBindingEnvironment) && this.parent.ContainsName (name)"  is complex.
Complex Conditional,AjLanguage,BindingEnvironment,C:\repos\ajlopez_AjSharp\Src\AjLanguage\BindingEnvironment.cs,SetValue,The conditional expression  "this.globals != null && !this.values.ContainsKey (name) && this.globals.Contains (name) && Machine.Current != null"  is complex.
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	array.SetValue (value' (int)indexes [0]);  	return;  case 2:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]);  	return;  case 3:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  	return;  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	array.SetValue (value' (int)indexes [0]);  	return;  case 2:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]);  	return;  case 3:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  	return;  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	array.SetValue (value' (int)indexes [0]);  	return;  case 2:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]);  	return;  case 3:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  	return;  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetIndexedValue,The following statement contains a magic number: array.SetValue (value' (int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	return array.GetValue ((int)indexes [0]);  case 2:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]);  case 3:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	return array.GetValue ((int)indexes [0]);  case 2:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]);  case 3:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetIndexedValue,The following statement contains a magic number: switch (indexes.Length) {  case 1:  	return array.GetValue ((int)indexes [0]);  case 2:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]);  case 3:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  }  
Magic Number,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetIndexedValue,The following statement contains a magic number: return array.GetValue ((int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  
Magic Number,AjLanguage,StringUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\StringUtilities.cs,SplitText,The following statement contains a magic number: for (Match match = rex.Match (text); match.Success; match = match.NextMatch ()) {  	parts.Add (text.Substring (lastindex' match.Index - lastindex));  	parts.Add (match.ToString ().Substring (2' match.Length - 3));  	lastindex = match.Index + match.Length;  }  
Magic Number,AjLanguage,StringUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\StringUtilities.cs,SplitText,The following statement contains a magic number: for (Match match = rex.Match (text); match.Success; match = match.NextMatch ()) {  	parts.Add (text.Substring (lastindex' match.Index - lastindex));  	parts.Add (match.ToString ().Substring (2' match.Length - 3));  	lastindex = match.Index + match.Length;  }  
Magic Number,AjLanguage,StringUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\StringUtilities.cs,SplitText,The following statement contains a magic number: parts.Add (match.ToString ().Substring (2' match.Length - 3));  
Magic Number,AjLanguage,StringUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\StringUtilities.cs,SplitText,The following statement contains a magic number: parts.Add (match.ToString ().Substring (2' match.Length - 3));  
Missing Default,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,SetIndexedValue,The following switch statement is missing a default case: switch (indexes.Length) {  case 1:  	array.SetValue (value' (int)indexes [0]);  	return;  case 2:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]);  	return;  case 3:  	array.SetValue (value' (int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  	return;  }  
Missing Default,AjLanguage,ObjectUtilities,C:\repos\ajlopez_AjSharp\Src\AjLanguage\ObjectUtilities.cs,GetIndexedValue,The following switch statement is missing a default case: switch (indexes.Length) {  case 1:  	return array.GetValue ((int)indexes [0]);  case 2:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]);  case 3:  	return array.GetValue ((int)indexes [0]' (int)indexes [1]' (int)indexes [2]);  }  
Missing Default,AjLanguage.Expressions,IncrementExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\IncrementExpression.cs,Apply,The following switch statement is missing a default case: switch (this.oper) {  case IncrementOperator.PostIncrement:  case IncrementOperator.PreIncrement:  	newvalue = Operators.AddObject (value' 1);  	break;  case IncrementOperator.PostDecrement:  case IncrementOperator.PreDecrement:  	newvalue = Operators.SubtractObject (value' 1);  	break;  }  
Missing Default,AjLanguage.Expressions,IncrementExpression,C:\repos\ajlopez_AjSharp\Src\AjLanguage\Expressions\IncrementExpression.cs,Apply,The following switch statement is missing a default case: switch (this.oper) {  case IncrementOperator.PreIncrement:  case IncrementOperator.PreDecrement:  	retvalue = newvalue;  	break;  case IncrementOperator.PostIncrement:  case IncrementOperator.PostDecrement:  	retvalue = value;  	break;  }  
