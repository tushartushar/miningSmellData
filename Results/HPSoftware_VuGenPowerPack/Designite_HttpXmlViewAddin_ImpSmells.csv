Implementation smell,Namespace,Class,File,Method,Description
Long Statement,HttpXmlViewAddin,XmlEditorNodeTypeCondition,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\Conditions.cs,IsValid,The length of the statement  "        if (targetNode.NodeType == XmlNodeType.Element && targetNode.ChildNodes.Count == 1 && targetNode.FirstChild.NodeType == XmlNodeType.Text) " is 137.
Long Statement,HttpXmlViewAddin,LrXmlStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,Run,The length of the statement  "        Log.VuGen.Error(string.Format("Error occurred when adding the {2} step. (Type: '{0}'' Exception: '{1}')"' Owner.GetType()' ex' Name)); " is 134.
Long Statement,HttpXmlViewAddin,CreateLrXmlFindStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,FillParameters,The length of the statement  "      signature.Parameters.Add(new FunctionCallParameter(string.Format("FastQuery={0}"' _xpath)' ParameterType.ArgtypeString)); " is 121.
Long Statement,HttpXmlViewAddin,CreateLrXmlExctarctStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,FillParameters,The length of the statement  "      signature.Parameters.Add(new FunctionCallParameter(String.Format("XMLFragmentParam=ParamXml_{0}"' _elementName)' ParameterType.ArgtypeString)); " is 143.
Long Statement,HttpXmlViewAddin,CreateLrXmlGetValuesStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,FillParameters,The length of the statement  "      signature.Parameters.Add(new FunctionCallParameter(string.Format("FastQuery={0}"' _xpath)' ParameterType.ArgtypeString)); " is 121.
Long Statement,HttpXmlViewAddin,CreateLrXmlGetValuesStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,FillParameters,The length of the statement  "      signature.Parameters.Add(new FunctionCallParameter(String.Format("ValueParam=ParamValue_{0}"' _elementName)' ParameterType.ArgtypeString)); " is 139.
Magic Number,HttpXmlViewAddin,LrXmlStepCommand,C:\repos\HPSoftware_VuGenPowerPack\HttpXmlView\CreateLrXmlCommands.cs,Run,The following statement contains a magic number: try        {          XmlEditor editor = Owner as XmlEditor;          if (editor == null)            return;            _xpath = editor.SingleDirectionData.SelectedXPath.XPath;          _elementName = ExtractElementName(editor.SingleDirectionData.SelectedText);          _value = ExtractElementValue(editor.SingleDirectionData.SelectedText);            var selectableEditor = Owner as ISelectableEditor;          if (selectableEditor.Selected == null)            return;            var stepService = ServiceManager.Instance.GetService<IStepService>();          if (stepService == null)            return;            var currentStep = stepService.CurrentStep;            var parserStatus = stepService.GetParserStatus(currentStep.FunctionCall.Location.FilePath);          if (parserStatus == false)          {            MessageService.ShowMessage("Cannot add step");            return;          }            var functionCall = new FunctionCall();          var signature = new FunctionCallSignature { Name = this.Name };            string currentParameterName = GetCurrentStepResponseParameter();          if (!string.IsNullOrEmpty(currentParameterName))          {            signature.Parameters.Add(new FunctionCallParameter(String.Format("XML={0}"' currentParameterName)'                                                    ParameterType.ArgtypeString));            }            FillParameters(signature);            functionCall.Signature = signature;          functionCall.Location = new FunctionCallLocation(currentStep.FunctionCall.Location.FilePath' null' null);              IStepModel stepModel = stepService.GenerateStep(functionCall);          stepModel.ShowArguments(asyncResult =>          {            var result = (ShowArgumentsResult)asyncResult.AsyncState;            if (result.IsModified)            {              //set the last parameter to False' so it will not move cursor to the newly added step              stepService.AddStep(ref stepModel' currentStep'                                  Relative' false);                if (string.IsNullOrEmpty(currentParameterName))              {                FunctionCallParameter userParameter = stepModel.FunctionCall.Signature.Parameters.Find(p =>                {                  return p.Value.StartsWith("XML="' StringComparison.InvariantCultureIgnoreCase);                });                if (userParameter != null)                {                  SetCurrentStepResponseParameter(stepModel.ScriptItem.Script as IVuGenScript' userParameter.Value.Remove(0' 4));                }              }                stepService.CurrentStep = currentStep;            }          });        }        catch (Exception ex)        {          Log.VuGen.Error(string.Format("Error occurred when adding the {2} step. (Type: '{0}'' Exception: '{1}')"' Owner.GetType()' ex' Name));        }
