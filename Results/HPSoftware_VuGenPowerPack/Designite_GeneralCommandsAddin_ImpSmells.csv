Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GeneralCommandsAddin,ExportToZipCommand,C:\repos\HPSoftware_VuGenPowerPack\GeneralCommandsAddin\AlternativeZipCommands.cs,Run,The length of the statement  "        UttDialogMessageService.Instance.ShowWarning("Export to Zip operation is available for the currently loaded script only"); " is 122.
Long Statement,GeneralCommandsAddin.Dialogs,VuGenZipExportDialog,C:\repos\HPSoftware_VuGenPowerPack\GeneralCommandsAddin\Dialogs\VuGenZipExportDialog.cs,FilteExcludedFiles,The length of the statement  "      //TODO : This is a very bad candidate for method extension' we should consider other solutions' eg adding virtual properties in BaseProtocol. " is 141.
Long Statement,GeneralCommandsAddin.Dialogs,ZipScriptCustomControl,C:\repos\HPSoftware_VuGenPowerPack\GeneralCommandsAddin\Dialogs\ZipScriptCustomControl.xaml.cs,InitializeComponent,The length of the statement  "            System.Uri resourceLocater = new System.Uri("/GeneralCommandsAddin;component/dialogs/zipscriptcustomcontrol.xaml"' System.UriKind.Relative); " is 140.
Magic Number,GeneralCommandsAddin.Dialogs,ZipScriptCustomControl,C:\repos\HPSoftware_VuGenPowerPack\GeneralCommandsAddin\Dialogs\ZipScriptCustomControl.xaml.cs,Connect,The following statement contains a magic number: switch (connectionId)              {              case 1:              this.RuntimeFiles = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.AllFiles = ((System.Windows.Controls.RadioButton)(target));              return;              }
Missing Default,GeneralCommandsAddin.Dialogs,ZipScriptCustomControl,C:\repos\HPSoftware_VuGenPowerPack\GeneralCommandsAddin\Dialogs\ZipScriptCustomControl.xaml.cs,Connect,The following switch statement is missing a default case: switch (connectionId)              {              case 1:              this.RuntimeFiles = ((System.Windows.Controls.RadioButton)(target));              return;              case 2:              this.AllFiles = ((System.Windows.Controls.RadioButton)(target));              return;              }
